require.config({"config": {
        "jsbuild":{"knockoutjs/knockout.js":"/*!\r\n * Knockout JavaScript library v3.4.2\r\n * (c) The Knockout.js team - http://knockoutjs.com/\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n */\r\n\r\n(function(){\r\nvar DEBUG=true;\r\n(function(undefined){\r\n    // (0, eval)('this') is a robust way of getting a reference to the global object\r\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\r\n    var window = this || (0, eval)('this'),\r\n        document = window['document'],\r\n        navigator = window['navigator'],\r\n        jQueryInstance = window[\"jQuery\"],\r\n        JSON = window[\"JSON\"];\r\n(function(factory) {\r\n    // Support three module loading scenarios\r\n    if (typeof define === 'function' && define['amd']) {\r\n        // [1] AMD anonymous module\r\n        define(['exports', 'require'], factory);\r\n    } else if (typeof exports === 'object' && typeof module === 'object') {\r\n        // [2] CommonJS/Node.js\r\n        factory(module['exports'] || exports);  // module.exports is for Node.js\r\n    } else {\r\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\r\n        factory(window['ko'] = {});\r\n    }\r\n}(function(koExports, amdRequire){\r\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\r\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\r\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\r\n// Google Closure Compiler helpers (used only to make the minified file smaller)\r\nko.exportSymbol = function(koPath, object) {\r\n    var tokens = koPath.split(\".\");\r\n\r\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\r\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\r\n    var target = ko;\r\n\r\n    for (var i = 0; i < tokens.length - 1; i++)\r\n        target = target[tokens[i]];\r\n    target[tokens[tokens.length - 1]] = object;\r\n};\r\nko.exportProperty = function(owner, publicName, object) {\r\n    owner[publicName] = object;\r\n};\r\nko.version = \"3.4.2\";\r\n\r\nko.exportSymbol('version', ko.version);\r\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\r\nko.options = {\r\n    'deferUpdates': false,\r\n    'useOnlyNativeEvents': false\r\n};\r\n\r\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\r\nko.utils = (function () {\r\n    function objectForEach(obj, action) {\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                action(prop, obj[prop]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function extend(target, source) {\r\n        if (source) {\r\n            for(var prop in source) {\r\n                if(source.hasOwnProperty(prop)) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function setPrototypeOf(obj, proto) {\r\n        obj.__proto__ = proto;\r\n        return obj;\r\n    }\r\n\r\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\r\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\r\n\r\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\r\n    var knownEvents = {}, knownEventTypesByEventName = {};\r\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\r\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\r\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\r\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\r\n        if (knownEventsForType.length) {\r\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\r\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\r\n        }\r\n    });\r\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\r\n\r\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\r\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\r\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\r\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\r\n    var ieVersion = document && (function() {\r\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\r\n\r\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\r\n        while (\r\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\r\n            iElems[0]\r\n        ) {}\r\n        return version > 4 ? version : undefined;\r\n    }());\r\n    var isIe6 = ieVersion === 6,\r\n        isIe7 = ieVersion === 7;\r\n\r\n    function isClickOnCheckableElement(element, eventType) {\r\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\r\n        if (eventType.toLowerCase() != \"click\") return false;\r\n        var inputType = element.type;\r\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\r\n    }\r\n\r\n    // For details on the pattern for changing node classes\r\n    // see: https://github.com/knockout/knockout/issues/1597\r\n    var cssClassNameRegex = /\\S+/g;\r\n\r\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\r\n        var addOrRemoveFn;\r\n        if (classNames) {\r\n            if (typeof node.classList === 'object') {\r\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\r\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                    addOrRemoveFn.call(node.classList, className);\r\n                });\r\n            } else if (typeof node.className['baseVal'] === 'string') {\r\n                // SVG tag .classNames is an SVGAnimatedString instance\r\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n            } else {\r\n                // node.className ought to be a string.\r\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n            }\r\n        }\r\n    }\r\n\r\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\r\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\r\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n        });\r\n        obj[prop] = currentClassNames.join(\" \");\r\n    }\r\n\r\n    return {\r\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\r\n\r\n        arrayForEach: function (array, action) {\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                action(array[i], i);\r\n        },\r\n\r\n        arrayIndexOf: function (array, item) {\r\n            if (typeof Array.prototype.indexOf == \"function\")\r\n                return Array.prototype.indexOf.call(array, item);\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (array[i] === item)\r\n                    return i;\r\n            return -1;\r\n        },\r\n\r\n        arrayFirst: function (array, predicate, predicateOwner) {\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (predicate.call(predicateOwner, array[i], i))\r\n                    return array[i];\r\n            return null;\r\n        },\r\n\r\n        arrayRemoveItem: function (array, itemToRemove) {\r\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\r\n            if (index > 0) {\r\n                array.splice(index, 1);\r\n            }\r\n            else if (index === 0) {\r\n                array.shift();\r\n            }\r\n        },\r\n\r\n        arrayGetDistinctValues: function (array) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++) {\r\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\r\n                    result.push(array[i]);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        arrayMap: function (array, mapping) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                result.push(mapping(array[i], i));\r\n            return result;\r\n        },\r\n\r\n        arrayFilter: function (array, predicate) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (predicate(array[i], i))\r\n                    result.push(array[i]);\r\n            return result;\r\n        },\r\n\r\n        arrayPushAll: function (array, valuesToPush) {\r\n            if (valuesToPush instanceof Array)\r\n                array.push.apply(array, valuesToPush);\r\n            else\r\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\r\n                    array.push(valuesToPush[i]);\r\n            return array;\r\n        },\r\n\r\n        addOrRemoveItem: function(array, value, included) {\r\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\r\n            if (existingEntryIndex < 0) {\r\n                if (included)\r\n                    array.push(value);\r\n            } else {\r\n                if (!included)\r\n                    array.splice(existingEntryIndex, 1);\r\n            }\r\n        },\r\n\r\n        canSetPrototype: canSetPrototype,\r\n\r\n        extend: extend,\r\n\r\n        setPrototypeOf: setPrototypeOf,\r\n\r\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\r\n\r\n        objectForEach: objectForEach,\r\n\r\n        objectMap: function(source, mapping) {\r\n            if (!source)\r\n                return source;\r\n            var target = {};\r\n            for (var prop in source) {\r\n                if (source.hasOwnProperty(prop)) {\r\n                    target[prop] = mapping(source[prop], prop, source);\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n\r\n        emptyDomNode: function (domNode) {\r\n            while (domNode.firstChild) {\r\n                ko.removeNode(domNode.firstChild);\r\n            }\r\n        },\r\n\r\n        moveCleanedNodesToContainerElement: function(nodes) {\r\n            // Ensure it's a real array, as we're about to reparent the nodes and\r\n            // we don't want the underlying collection to change while we're doing that.\r\n            var nodesArray = ko.utils.makeArray(nodes);\r\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\r\n\r\n            var container = templateDocument.createElement('div');\r\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\r\n                container.appendChild(ko.cleanNode(nodesArray[i]));\r\n            }\r\n            return container;\r\n        },\r\n\r\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\r\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\r\n                var clonedNode = nodesArray[i].cloneNode(true);\r\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\r\n            }\r\n            return newNodesArray;\r\n        },\r\n\r\n        setDomNodeChildren: function (domNode, childNodes) {\r\n            ko.utils.emptyDomNode(domNode);\r\n            if (childNodes) {\r\n                for (var i = 0, j = childNodes.length; i < j; i++)\r\n                    domNode.appendChild(childNodes[i]);\r\n            }\r\n        },\r\n\r\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\r\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n            if (nodesToReplaceArray.length > 0) {\r\n                var insertionPoint = nodesToReplaceArray[0];\r\n                var parent = insertionPoint.parentNode;\r\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\r\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\r\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n                    ko.removeNode(nodesToReplaceArray[i]);\r\n                }\r\n            }\r\n        },\r\n\r\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\r\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n            //\r\n            // Rules:\r\n            //   [A] Any leading nodes that have been removed should be ignored\r\n            //       These most likely correspond to memoization nodes that were already removed during binding\r\n            //       See https://github.com/knockout/knockout/pull/440\r\n            //   [B] Any trailing nodes that have been remove should be ignored\r\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\r\n            //       See https://github.com/knockout/knockout/pull/1903\r\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n            //       and include any nodes that have been inserted among the previous collection\r\n\r\n            if (continuousNodeArray.length) {\r\n                // The parent node can be a virtual element; so get the real parent node\r\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n                // Rule [A]\r\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\r\n                    continuousNodeArray.splice(0, 1);\r\n\r\n                // Rule [B]\r\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\r\n                    continuousNodeArray.length--;\r\n\r\n                // Rule [C]\r\n                if (continuousNodeArray.length > 1) {\r\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n                    // Replace with the actual new continuous node set\r\n                    continuousNodeArray.length = 0;\r\n                    while (current !== last) {\r\n                        continuousNodeArray.push(current);\r\n                        current = current.nextSibling;\r\n                    }\r\n                    continuousNodeArray.push(last);\r\n                }\r\n            }\r\n            return continuousNodeArray;\r\n        },\r\n\r\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\r\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\r\n            if (ieVersion < 7)\r\n                optionNode.setAttribute(\"selected\", isSelected);\r\n            else\r\n                optionNode.selected = isSelected;\r\n        },\r\n\r\n        stringTrim: function (string) {\r\n            return string === null || string === undefined ? '' :\r\n                string.trim ?\r\n                    string.trim() :\r\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n        },\r\n\r\n        stringStartsWith: function (string, startsWith) {\r\n            string = string || \"\";\r\n            if (startsWith.length > string.length)\r\n                return false;\r\n            return string.substring(0, startsWith.length) === startsWith;\r\n        },\r\n\r\n        domNodeIsContainedBy: function (node, containedByNode) {\r\n            if (node === containedByNode)\r\n                return true;\r\n            if (node.nodeType === 11)\r\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\r\n            if (containedByNode.contains)\r\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\r\n            if (containedByNode.compareDocumentPosition)\r\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\r\n            while (node && node != containedByNode) {\r\n                node = node.parentNode;\r\n            }\r\n            return !!node;\r\n        },\r\n\r\n        domNodeIsAttachedToDocument: function (node) {\r\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\r\n        },\r\n\r\n        anyDomNodeIsAttachedToDocument: function(nodes) {\r\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\r\n        },\r\n\r\n        tagNameLower: function(element) {\r\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\n            return element && element.tagName && element.tagName.toLowerCase();\r\n        },\r\n\r\n        catchFunctionErrors: function (delegate) {\r\n            return ko['onError'] ? function () {\r\n                try {\r\n                    return delegate.apply(this, arguments);\r\n                } catch (e) {\r\n                    ko['onError'] && ko['onError'](e);\r\n                    throw e;\r\n                }\r\n            } : delegate;\r\n        },\r\n\r\n        setTimeout: function (handler, timeout) {\r\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\r\n        },\r\n\r\n        deferError: function (error) {\r\n            setTimeout(function () {\r\n                ko['onError'] && ko['onError'](error);\r\n                throw error;\r\n            }, 0);\r\n        },\r\n\r\n        registerEventHandler: function (element, eventType, handler) {\r\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\r\n\r\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\r\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\r\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\r\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\r\n                element.addEventListener(eventType, wrappedHandler, false);\r\n            else if (typeof element.attachEvent != \"undefined\") {\r\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\r\n                    attachEventName = \"on\" + eventType;\r\n                element.attachEvent(attachEventName, attachEventHandler);\r\n\r\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\r\n                // so to avoid leaks, we have to remove them manually. See bug #856\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                    element.detachEvent(attachEventName, attachEventHandler);\r\n                });\r\n            } else\r\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\r\n        },\r\n\r\n        triggerEvent: function (element, eventType) {\r\n            if (!(element && element.nodeType))\r\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\r\n\r\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\r\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\r\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\r\n            // In both cases, we'll use the click method instead.\r\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\r\n\r\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\r\n                jQueryInstance(element)['trigger'](eventType);\r\n            } else if (typeof document.createEvent == \"function\") {\r\n                if (typeof element.dispatchEvent == \"function\") {\r\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\r\n                    var event = document.createEvent(eventCategory);\r\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n                    element.dispatchEvent(event);\r\n                }\r\n                else\r\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\r\n            } else if (useClickWorkaround && element.click) {\r\n                element.click();\r\n            } else if (typeof element.fireEvent != \"undefined\") {\r\n                element.fireEvent(\"on\" + eventType);\r\n            } else {\r\n                throw new Error(\"Browser doesn't support triggering events\");\r\n            }\r\n        },\r\n\r\n        unwrapObservable: function (value) {\r\n            return ko.isObservable(value) ? value() : value;\r\n        },\r\n\r\n        peekObservable: function (value) {\r\n            return ko.isObservable(value) ? value.peek() : value;\r\n        },\r\n\r\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\r\n\r\n        setTextContent: function(element, textContent) {\r\n            var value = ko.utils.unwrapObservable(textContent);\r\n            if ((value === null) || (value === undefined))\r\n                value = \"\";\r\n\r\n            // We need there to be exactly one child: a text node.\r\n            // If there are no children, more than one, or if it's not a text node,\r\n            // we'll clear everything and create a single text node.\r\n            var innerTextNode = ko.virtualElements.firstChild(element);\r\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\r\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n            } else {\r\n                innerTextNode.data = value;\r\n            }\r\n\r\n            ko.utils.forceRefresh(element);\r\n        },\r\n\r\n        setElementName: function(element, name) {\r\n            element.name = name;\r\n        },\r\n\r\n        forceRefresh: function(node) {\r\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\r\n            if (ieVersion >= 9) {\r\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\r\n                var elem = node.nodeType == 1 ? node : node.parentNode;\r\n                if (elem.style)\r\n                    elem.style.zoom = elem.style.zoom;\r\n            }\r\n        },\r\n\r\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\r\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\r\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\r\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\r\n            if (ieVersion) {\r\n                var originalWidth = selectElement.style.width;\r\n                selectElement.style.width = 0;\r\n                selectElement.style.width = originalWidth;\r\n            }\r\n        },\r\n\r\n        range: function (min, max) {\r\n            min = ko.utils.unwrapObservable(min);\r\n            max = ko.utils.unwrapObservable(max);\r\n            var result = [];\r\n            for (var i = min; i <= max; i++)\r\n                result.push(i);\r\n            return result;\r\n        },\r\n\r\n        makeArray: function(arrayLikeObject) {\r\n            var result = [];\r\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n                result.push(arrayLikeObject[i]);\r\n            };\r\n            return result;\r\n        },\r\n\r\n        createSymbolOrString: function(identifier) {\r\n            return canUseSymbols ? Symbol(identifier) : identifier;\r\n        },\r\n\r\n        isIe6 : isIe6,\r\n        isIe7 : isIe7,\r\n        ieVersion : ieVersion,\r\n\r\n        getFormFields: function(form, fieldName) {\r\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\r\n            var isMatchingField = (typeof fieldName == 'string')\r\n                ? function(field) { return field.name === fieldName }\r\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\r\n            var matches = [];\r\n            for (var i = fields.length - 1; i >= 0; i--) {\r\n                if (isMatchingField(fields[i]))\r\n                    matches.push(fields[i]);\r\n            };\r\n            return matches;\r\n        },\r\n\r\n        parseJson: function (jsonString) {\r\n            if (typeof jsonString == \"string\") {\r\n                jsonString = ko.utils.stringTrim(jsonString);\r\n                if (jsonString) {\r\n                    if (JSON && JSON.parse) // Use native parsing where available\r\n                        return JSON.parse(jsonString);\r\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\r\n            if (!JSON || !JSON.stringify)\r\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\r\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\r\n        },\r\n\r\n        postJson: function (urlOrForm, data, options) {\r\n            options = options || {};\r\n            var params = options['params'] || {};\r\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\r\n            var url = urlOrForm;\r\n\r\n            // If we were given a form, use its 'action' URL and pick out any requested field values\r\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\r\n                var originalForm = urlOrForm;\r\n                url = originalForm.action;\r\n                for (var i = includeFields.length - 1; i >= 0; i--) {\r\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\r\n                    for (var j = fields.length - 1; j >= 0; j--)\r\n                        params[fields[j].name] = fields[j].value;\r\n                }\r\n            }\r\n\r\n            data = ko.utils.unwrapObservable(data);\r\n            var form = document.createElement(\"form\");\r\n            form.style.display = \"none\";\r\n            form.action = url;\r\n            form.method = \"post\";\r\n            for (var key in data) {\r\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"hidden\";\r\n                input.name = key;\r\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\r\n                form.appendChild(input);\r\n            }\r\n            objectForEach(params, function(key, value) {\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"hidden\";\r\n                input.name = key;\r\n                input.value = value;\r\n                form.appendChild(input);\r\n            });\r\n            document.body.appendChild(form);\r\n            options['submitter'] ? options['submitter'](form) : form.submit();\r\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\r\n        }\r\n    }\r\n}());\r\n\r\nko.exportSymbol('utils', ko.utils);\r\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\r\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\r\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\r\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\r\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\r\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\r\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\r\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\r\nko.exportSymbol('utils.extend', ko.utils.extend);\r\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\r\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\r\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\r\nko.exportSymbol('utils.postJson', ko.utils.postJson);\r\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\r\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\r\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\r\nko.exportSymbol('utils.range', ko.utils.range);\r\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\r\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\r\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\r\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\r\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\r\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\r\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\r\n\r\nif (!Function.prototype['bind']) {\r\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\r\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\r\n    Function.prototype['bind'] = function (object) {\r\n        var originalFunction = this;\r\n        if (arguments.length === 1) {\r\n            return function () {\r\n                return originalFunction.apply(object, arguments);\r\n            };\r\n        } else {\r\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\r\n            return function () {\r\n                var args = partialArgs.slice(0);\r\n                args.push.apply(args, arguments);\r\n                return originalFunction.apply(object, args);\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\nko.utils.domData = new (function () {\r\n    var uniqueId = 0;\r\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\r\n    var dataStore = {};\r\n\r\n    function getAll(node, createIfNotFound) {\r\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\r\n        if (!hasExistingDataStore) {\r\n            if (!createIfNotFound)\r\n                return undefined;\r\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\r\n            dataStore[dataStoreKey] = {};\r\n        }\r\n        return dataStore[dataStoreKey];\r\n    }\r\n\r\n    return {\r\n        get: function (node, key) {\r\n            var allDataForNode = getAll(node, false);\r\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\r\n        },\r\n        set: function (node, key, value) {\r\n            if (value === undefined) {\r\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\r\n                if (getAll(node, false) === undefined)\r\n                    return;\r\n            }\r\n            var allDataForNode = getAll(node, true);\r\n            allDataForNode[key] = value;\r\n        },\r\n        clear: function (node) {\r\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n            if (dataStoreKey) {\r\n                delete dataStore[dataStoreKey];\r\n                node[dataStoreKeyExpandoPropertyName] = null;\r\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n            }\r\n            return false;\r\n        },\r\n\r\n        nextKey: function () {\r\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('utils.domData', ko.utils.domData);\r\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\r\n\r\nko.utils.domNodeDisposal = new (function () {\r\n    var domDataKey = ko.utils.domData.nextKey();\r\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\r\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\r\n\r\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\r\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\r\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\r\n            allDisposeCallbacks = [];\r\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\r\n        }\r\n        return allDisposeCallbacks;\r\n    }\r\n    function destroyCallbacksCollection(node) {\r\n        ko.utils.domData.set(node, domDataKey, undefined);\r\n    }\r\n\r\n    function cleanSingleNode(node) {\r\n        // Run all the dispose callbacks\r\n        var callbacks = getDisposeCallbacksCollection(node, false);\r\n        if (callbacks) {\r\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\r\n            for (var i = 0; i < callbacks.length; i++)\r\n                callbacks[i](node);\r\n        }\r\n\r\n        // Erase the DOM data\r\n        ko.utils.domData.clear(node);\r\n\r\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\r\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\r\n\r\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\r\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\r\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\r\n            cleanImmediateCommentTypeChildren(node);\r\n    }\r\n\r\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\r\n        var child, nextChild = nodeWithChildren.firstChild;\r\n        while (child = nextChild) {\r\n            nextChild = child.nextSibling;\r\n            if (child.nodeType === 8)\r\n                cleanSingleNode(child);\r\n        }\r\n    }\r\n\r\n    return {\r\n        addDisposeCallback : function(node, callback) {\r\n            if (typeof callback != \"function\")\r\n                throw new Error(\"Callback must be a function\");\r\n            getDisposeCallbacksCollection(node, true).push(callback);\r\n        },\r\n\r\n        removeDisposeCallback : function(node, callback) {\r\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\r\n            if (callbacksCollection) {\r\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\r\n                if (callbacksCollection.length == 0)\r\n                    destroyCallbacksCollection(node);\r\n            }\r\n        },\r\n\r\n        cleanNode : function(node) {\r\n            // First clean this node, where applicable\r\n            if (cleanableNodeTypes[node.nodeType]) {\r\n                cleanSingleNode(node);\r\n\r\n                // ... then its descendants, where applicable\r\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                    // Clone the descendants list in case it changes during iteration\r\n                    var descendants = [];\r\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\r\n                    for (var i = 0, j = descendants.length; i < j; i++)\r\n                        cleanSingleNode(descendants[i]);\r\n                }\r\n            }\r\n            return node;\r\n        },\r\n\r\n        removeNode : function(node) {\r\n            ko.cleanNode(node);\r\n            if (node.parentNode)\r\n                node.parentNode.removeChild(node);\r\n        },\r\n\r\n        \"cleanExternalData\" : function (node) {\r\n            // Special support for jQuery here because it's so commonly used.\r\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\r\n            // so notify it to tear down any resources associated with the node & descendants here.\r\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\r\n                jQueryInstance['cleanData']([node]);\r\n        }\r\n    };\r\n})();\r\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\r\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\r\nko.exportSymbol('cleanNode', ko.cleanNode);\r\nko.exportSymbol('removeNode', ko.removeNode);\r\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\r\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\r\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\r\n(function () {\r\n    var none = [0, \"\", \"\"],\r\n        table = [1, \"<table>\", \"</table>\"],\r\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\r\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\r\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\r\n        lookup = {\r\n            'thead': table,\r\n            'tbody': table,\r\n            'tfoot': table,\r\n            'tr': tbody,\r\n            'td': tr,\r\n            'th': tr,\r\n            'option': select,\r\n            'optgroup': select\r\n        },\r\n\r\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\r\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\r\n\r\n    function getWrap(tags) {\r\n        var m = tags.match(/^<([a-z]+)[ >]/);\r\n        return (m && lookup[m[1]]) || none;\r\n    }\r\n\r\n    function simpleHtmlParse(html, documentContext) {\r\n        documentContext || (documentContext = document);\r\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\r\n\r\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\r\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\r\n\r\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\r\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\r\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\r\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\r\n\r\n        // Trim whitespace, otherwise indexOf won't work as expected\r\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\r\n            wrap = getWrap(tags),\r\n            depth = wrap[0];\r\n\r\n        // Go to html and back, then peel off extra wrappers\r\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\r\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\r\n        if (typeof windowContext['innerShiv'] == \"function\") {\r\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\r\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\r\n            // somehow shims the native APIs so it just works anyway)\r\n            div.appendChild(windowContext['innerShiv'](markup));\r\n        } else {\r\n            if (mayRequireCreateElementHack) {\r\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\r\n                // only works if we assign innerHTML on an element associated with that document.\r\n                documentContext.appendChild(div);\r\n            }\r\n\r\n            div.innerHTML = markup;\r\n\r\n            if (mayRequireCreateElementHack) {\r\n                div.parentNode.removeChild(div);\r\n            }\r\n        }\r\n\r\n        // Move to the right depth\r\n        while (depth--)\r\n            div = div.lastChild;\r\n\r\n        return ko.utils.makeArray(div.lastChild.childNodes);\r\n    }\r\n\r\n    function jQueryHtmlParse(html, documentContext) {\r\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\r\n        if (jQueryInstance['parseHTML']) {\r\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\r\n        } else {\r\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\r\n            var elems = jQueryInstance['clean']([html], documentContext);\r\n\r\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\r\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\r\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\r\n            if (elems && elems[0]) {\r\n                // Find the top-most parent element that's a direct child of a document fragment\r\n                var elem = elems[0];\r\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\r\n                    elem = elem.parentNode;\r\n                // ... then detach it\r\n                if (elem.parentNode)\r\n                    elem.parentNode.removeChild(elem);\r\n            }\r\n\r\n            return elems;\r\n        }\r\n    }\r\n\r\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\r\n        return jQueryInstance ?\r\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\r\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\r\n    };\r\n\r\n    ko.utils.setHtml = function(node, html) {\r\n        ko.utils.emptyDomNode(node);\r\n\r\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if ((html !== null) && (html !== undefined)) {\r\n            if (typeof html != 'string')\r\n                html = html.toString();\r\n\r\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\r\n            // for example <tr> elements which are not normally allowed to exist on their own.\r\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\r\n            if (jQueryInstance) {\r\n                jQueryInstance(node)['html'](html);\r\n            } else {\r\n                // ... otherwise, use KO's own parsing logic.\r\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\r\n                for (var i = 0; i < parsedNodes.length; i++)\r\n                    node.appendChild(parsedNodes[i]);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\r\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\r\n\r\nko.memoization = (function () {\r\n    var memos = {};\r\n\r\n    function randomMax8HexChars() {\r\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\r\n    }\r\n    function generateRandomId() {\r\n        return randomMax8HexChars() + randomMax8HexChars();\r\n    }\r\n    function findMemoNodes(rootNode, appendToArray) {\r\n        if (!rootNode)\r\n            return;\r\n        if (rootNode.nodeType == 8) {\r\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\r\n            if (memoId != null)\r\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\r\n        } else if (rootNode.nodeType == 1) {\r\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\r\n                findMemoNodes(childNodes[i], appendToArray);\r\n        }\r\n    }\r\n\r\n    return {\r\n        memoize: function (callback) {\r\n            if (typeof callback != \"function\")\r\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\r\n            var memoId = generateRandomId();\r\n            memos[memoId] = callback;\r\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\r\n        },\r\n\r\n        unmemoize: function (memoId, callbackParams) {\r\n            var callback = memos[memoId];\r\n            if (callback === undefined)\r\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\r\n            try {\r\n                callback.apply(null, callbackParams || []);\r\n                return true;\r\n            }\r\n            finally { delete memos[memoId]; }\r\n        },\r\n\r\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\r\n            var memos = [];\r\n            findMemoNodes(domNode, memos);\r\n            for (var i = 0, j = memos.length; i < j; i++) {\r\n                var node = memos[i].domNode;\r\n                var combinedParams = [node];\r\n                if (extraCallbackParamsArray)\r\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\r\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\r\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\r\n                if (node.parentNode)\r\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\r\n            }\r\n        },\r\n\r\n        parseMemoText: function (memoText) {\r\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\r\n            return match ? match[1] : null;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('memoization', ko.memoization);\r\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\r\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\r\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\r\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\r\nko.tasks = (function () {\r\n    var scheduler,\r\n        taskQueue = [],\r\n        taskQueueLength = 0,\r\n        nextHandle = 1,\r\n        nextIndexToProcess = 0;\r\n\r\n    if (window['MutationObserver']) {\r\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\r\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\r\n        scheduler = (function (callback) {\r\n            var div = document.createElement(\"div\");\r\n            new MutationObserver(callback).observe(div, {attributes: true});\r\n            return function () { div.classList.toggle(\"foo\"); };\r\n        })(scheduledProcess);\r\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\r\n        // IE 6-10\r\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\r\n        scheduler = function (callback) {\r\n            var script = document.createElement(\"script\");\r\n            script.onreadystatechange = function () {\r\n                script.onreadystatechange = null;\r\n                document.documentElement.removeChild(script);\r\n                script = null;\r\n                callback();\r\n            };\r\n            document.documentElement.appendChild(script);\r\n        };\r\n    } else {\r\n        scheduler = function (callback) {\r\n            setTimeout(callback, 0);\r\n        };\r\n    }\r\n\r\n    function processTasks() {\r\n        if (taskQueueLength) {\r\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\r\n            // limited to prevent unchecked recursion.\r\n            var mark = taskQueueLength, countMarks = 0;\r\n\r\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\r\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\r\n                if (task = taskQueue[nextIndexToProcess++]) {\r\n                    if (nextIndexToProcess > mark) {\r\n                        if (++countMarks >= 5000) {\r\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\r\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\r\n                            break;\r\n                        }\r\n                        mark = taskQueueLength;\r\n                    }\r\n                    try {\r\n                        task();\r\n                    } catch (ex) {\r\n                        ko.utils.deferError(ex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function scheduledProcess() {\r\n        processTasks();\r\n\r\n        // Reset the queue\r\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n    }\r\n\r\n    function scheduleTaskProcessing() {\r\n        ko.tasks['scheduler'](scheduledProcess);\r\n    }\r\n\r\n    var tasks = {\r\n        'scheduler': scheduler,     // Allow overriding the scheduler\r\n\r\n        schedule: function (func) {\r\n            if (!taskQueueLength) {\r\n                scheduleTaskProcessing();\r\n            }\r\n\r\n            taskQueue[taskQueueLength++] = func;\r\n            return nextHandle++;\r\n        },\r\n\r\n        cancel: function (handle) {\r\n            var index = handle - (nextHandle - taskQueueLength);\r\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\r\n                taskQueue[index] = null;\r\n            }\r\n        },\r\n\r\n        // For testing only: reset the queue and return the previous queue length\r\n        'resetForTesting': function () {\r\n            var length = taskQueueLength - nextIndexToProcess;\r\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n            return length;\r\n        },\r\n\r\n        runEarly: processTasks\r\n    };\r\n\r\n    return tasks;\r\n})();\r\n\r\nko.exportSymbol('tasks', ko.tasks);\r\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\r\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\r\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\r\nko.extenders = {\r\n    'throttle': function(target, timeout) {\r\n        // Throttling means two things:\r\n\r\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n        target['throttleEvaluation'] = timeout;\r\n\r\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n        //     so the target cannot change value synchronously or faster than a certain rate\r\n        var writeTimeoutInstance = null;\r\n        return ko.dependentObservable({\r\n            'read': target,\r\n            'write': function(value) {\r\n                clearTimeout(writeTimeoutInstance);\r\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\r\n                    target(value);\r\n                }, timeout);\r\n            }\r\n        });\r\n    },\r\n\r\n    'rateLimit': function(target, options) {\r\n        var timeout, method, limitFunction;\r\n\r\n        if (typeof options == 'number') {\r\n            timeout = options;\r\n        } else {\r\n            timeout = options['timeout'];\r\n            method = options['method'];\r\n        }\r\n\r\n        // rateLimit supersedes deferred updates\r\n        target._deferUpdates = false;\r\n\r\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\r\n        target.limit(function(callback) {\r\n            return limitFunction(callback, timeout);\r\n        });\r\n    },\r\n\r\n    'deferred': function(target, options) {\r\n        if (options !== true) {\r\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\r\n        }\r\n\r\n        if (!target._deferUpdates) {\r\n            target._deferUpdates = true;\r\n            target.limit(function (callback) {\r\n                var handle,\r\n                    ignoreUpdates = false;\r\n                return function () {\r\n                    if (!ignoreUpdates) {\r\n                        ko.tasks.cancel(handle);\r\n                        handle = ko.tasks.schedule(callback);\r\n\r\n                        try {\r\n                            ignoreUpdates = true;\r\n                            target['notifySubscribers'](undefined, 'dirty');\r\n                        } finally {\r\n                            ignoreUpdates = false;\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        }\r\n    },\r\n\r\n    'notify': function(target, notifyWhen) {\r\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\r\n            null :  // null equalityComparer means to always notify\r\n            valuesArePrimitiveAndEqual;\r\n    }\r\n};\r\n\r\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\r\nfunction valuesArePrimitiveAndEqual(a, b) {\r\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\r\n    return oldValueIsPrimitive ? (a === b) : false;\r\n}\r\n\r\nfunction throttle(callback, timeout) {\r\n    var timeoutInstance;\r\n    return function () {\r\n        if (!timeoutInstance) {\r\n            timeoutInstance = ko.utils.setTimeout(function () {\r\n                timeoutInstance = undefined;\r\n                callback();\r\n            }, timeout);\r\n        }\r\n    };\r\n}\r\n\r\nfunction debounce(callback, timeout) {\r\n    var timeoutInstance;\r\n    return function () {\r\n        clearTimeout(timeoutInstance);\r\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\r\n    };\r\n}\r\n\r\nfunction applyExtenders(requestedExtenders) {\r\n    var target = this;\r\n    if (requestedExtenders) {\r\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\r\n            var extenderHandler = ko.extenders[key];\r\n            if (typeof extenderHandler == 'function') {\r\n                target = extenderHandler(target, value) || target;\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n\r\nko.exportSymbol('extenders', ko.extenders);\r\n\r\nko.subscription = function (target, callback, disposeCallback) {\r\n    this._target = target;\r\n    this.callback = callback;\r\n    this.disposeCallback = disposeCallback;\r\n    this.isDisposed = false;\r\n    ko.exportProperty(this, 'dispose', this.dispose);\r\n};\r\nko.subscription.prototype.dispose = function () {\r\n    this.isDisposed = true;\r\n    this.disposeCallback();\r\n};\r\n\r\nko.subscribable = function () {\r\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\r\n    ko_subscribable_fn.init(this);\r\n}\r\n\r\nvar defaultEvent = \"change\";\r\n\r\n// Moved out of \"limit\" to avoid the extra closure\r\nfunction limitNotifySubscribers(value, event) {\r\n    if (!event || event === defaultEvent) {\r\n        this._limitChange(value);\r\n    } else if (event === 'beforeChange') {\r\n        this._limitBeforeChange(value);\r\n    } else {\r\n        this._origNotifySubscribers(value, event);\r\n    }\r\n}\r\n\r\nvar ko_subscribable_fn = {\r\n    init: function(instance) {\r\n        instance._subscriptions = { \"change\": [] };\r\n        instance._versionNumber = 1;\r\n    },\r\n\r\n    subscribe: function (callback, callbackTarget, event) {\r\n        var self = this;\r\n\r\n        event = event || defaultEvent;\r\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\r\n\r\n        var subscription = new ko.subscription(self, boundCallback, function () {\r\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\r\n            if (self.afterSubscriptionRemove)\r\n                self.afterSubscriptionRemove(event);\r\n        });\r\n\r\n        if (self.beforeSubscriptionAdd)\r\n            self.beforeSubscriptionAdd(event);\r\n\r\n        if (!self._subscriptions[event])\r\n            self._subscriptions[event] = [];\r\n        self._subscriptions[event].push(subscription);\r\n\r\n        return subscription;\r\n    },\r\n\r\n    \"notifySubscribers\": function (valueToNotify, event) {\r\n        event = event || defaultEvent;\r\n        if (event === defaultEvent) {\r\n            this.updateVersion();\r\n        }\r\n        if (this.hasSubscriptionsForEvent(event)) {\r\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\r\n            try {\r\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\r\n                    // In case a subscription was disposed during the arrayForEach cycle, check\r\n                    // for isDisposed on each subscription before invoking its callback\r\n                    if (!subscription.isDisposed)\r\n                        subscription.callback(valueToNotify);\r\n                }\r\n            } finally {\r\n                ko.dependencyDetection.end(); // End suppressing dependency detection\r\n            }\r\n        }\r\n    },\r\n\r\n    getVersion: function () {\r\n        return this._versionNumber;\r\n    },\r\n\r\n    hasChanged: function (versionToCheck) {\r\n        return this.getVersion() !== versionToCheck;\r\n    },\r\n\r\n    updateVersion: function () {\r\n        ++this._versionNumber;\r\n    },\r\n\r\n    limit: function(limitFunction) {\r\n        var self = this, selfIsObservable = ko.isObservable(self),\r\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\r\n\r\n        if (!self._origNotifySubscribers) {\r\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\r\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\r\n        }\r\n\r\n        var finish = limitFunction(function() {\r\n            self._notificationIsPending = false;\r\n\r\n            // If an observable provided a reference to itself, access it to get the latest value.\r\n            // This allows computed observables to delay calculating their value until needed.\r\n            if (selfIsObservable && pendingValue === self) {\r\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\r\n            }\r\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\r\n\r\n            notifyNextChange = ignoreBeforeChange = false;\r\n\r\n            if (shouldNotify) {\r\n                self._origNotifySubscribers(previousValue = pendingValue);\r\n            }\r\n        });\r\n\r\n        self._limitChange = function(value) {\r\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\r\n            self._notificationIsPending = ignoreBeforeChange = true;\r\n            pendingValue = value;\r\n            finish();\r\n        };\r\n        self._limitBeforeChange = function(value) {\r\n            if (!ignoreBeforeChange) {\r\n                previousValue = value;\r\n                self._origNotifySubscribers(value, beforeChange);\r\n            }\r\n        };\r\n        self._notifyNextChangeIfValueIsDifferent = function() {\r\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\r\n                notifyNextChange = true;\r\n            }\r\n        };\r\n    },\r\n\r\n    hasSubscriptionsForEvent: function(event) {\r\n        return this._subscriptions[event] && this._subscriptions[event].length;\r\n    },\r\n\r\n    getSubscriptionsCount: function (event) {\r\n        if (event) {\r\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\r\n        } else {\r\n            var total = 0;\r\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\r\n                if (eventName !== 'dirty')\r\n                    total += subscriptions.length;\r\n            });\r\n            return total;\r\n        }\r\n    },\r\n\r\n    isDifferent: function(oldValue, newValue) {\r\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\r\n    },\r\n\r\n    extend: applyExtenders\r\n};\r\n\r\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\r\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\r\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\r\n\r\n// For browsers that support proto assignment, we overwrite the prototype of each\r\n// observable instance. Since observables are functions, we need Function.prototype\r\n// to still be in the prototype chain.\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\r\n}\r\n\r\nko.subscribable['fn'] = ko_subscribable_fn;\r\n\r\n\r\nko.isSubscribable = function (instance) {\r\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\r\n};\r\n\r\nko.exportSymbol('subscribable', ko.subscribable);\r\nko.exportSymbol('isSubscribable', ko.isSubscribable);\r\n\r\nko.computedContext = ko.dependencyDetection = (function () {\r\n    var outerFrames = [],\r\n        currentFrame,\r\n        lastId = 0;\r\n\r\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\r\n    // Theoretically, you could eventually overflow the number storage size, resulting\r\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\r\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\r\n    // take over 285 years to reach that number.\r\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\r\n    function getId() {\r\n        return ++lastId;\r\n    }\r\n\r\n    function begin(options) {\r\n        outerFrames.push(currentFrame);\r\n        currentFrame = options;\r\n    }\r\n\r\n    function end() {\r\n        currentFrame = outerFrames.pop();\r\n    }\r\n\r\n    return {\r\n        begin: begin,\r\n\r\n        end: end,\r\n\r\n        registerDependency: function (subscribable) {\r\n            if (currentFrame) {\r\n                if (!ko.isSubscribable(subscribable))\r\n                    throw new Error(\"Only subscribable things can act as dependencies\");\r\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\r\n            }\r\n        },\r\n\r\n        ignore: function (callback, callbackTarget, callbackArgs) {\r\n            try {\r\n                begin();\r\n                return callback.apply(callbackTarget, callbackArgs || []);\r\n            } finally {\r\n                end();\r\n            }\r\n        },\r\n\r\n        getDependenciesCount: function () {\r\n            if (currentFrame)\r\n                return currentFrame.computed.getDependenciesCount();\r\n        },\r\n\r\n        isInitial: function() {\r\n            if (currentFrame)\r\n                return currentFrame.isInitial;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('computedContext', ko.computedContext);\r\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\r\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\r\n\r\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\r\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\r\n\r\nko.observable = function (initialValue) {\r\n    function observable() {\r\n        if (arguments.length > 0) {\r\n            // Write\r\n\r\n            // Ignore writes if the value hasn't changed\r\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\r\n                observable.valueWillMutate();\r\n                observable[observableLatestValue] = arguments[0];\r\n                observable.valueHasMutated();\r\n            }\r\n            return this; // Permits chained assignments\r\n        }\r\n        else {\r\n            // Read\r\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n            return observable[observableLatestValue];\r\n        }\r\n    }\r\n\r\n    observable[observableLatestValue] = initialValue;\r\n\r\n    // Inherit from 'subscribable'\r\n    if (!ko.utils.canSetPrototype) {\r\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n        ko.utils.extend(observable, ko.subscribable['fn']);\r\n    }\r\n    ko.subscribable['fn'].init(observable);\r\n\r\n    // Inherit from 'observable'\r\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\r\n\r\n    if (ko.options['deferUpdates']) {\r\n        ko.extenders['deferred'](observable, true);\r\n    }\r\n\r\n    return observable;\r\n}\r\n\r\n// Define prototype for observables\r\nvar observableFn = {\r\n    'equalityComparer': valuesArePrimitiveAndEqual,\r\n    peek: function() { return this[observableLatestValue]; },\r\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\r\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\r\n};\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observable constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\r\n}\r\n\r\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\r\nobservableFn[protoProperty] = ko.observable;\r\n\r\nko.hasPrototype = function(instance, prototype) {\r\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\r\n    if (instance[protoProperty] === prototype) return true;\r\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\r\n};\r\n\r\nko.isObservable = function (instance) {\r\n    return ko.hasPrototype(instance, ko.observable);\r\n}\r\nko.isWriteableObservable = function (instance) {\r\n    // Observable\r\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\r\n        return true;\r\n    // Writeable dependent observable\r\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\r\n        return true;\r\n    // Anything else\r\n    return false;\r\n}\r\n\r\nko.exportSymbol('observable', ko.observable);\r\nko.exportSymbol('isObservable', ko.isObservable);\r\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\r\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\r\nko.exportSymbol('observable.fn', observableFn);\r\nko.exportProperty(observableFn, 'peek', observableFn.peek);\r\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\r\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\r\nko.observableArray = function (initialValues) {\r\n    initialValues = initialValues || [];\r\n\r\n    if (typeof initialValues != 'object' || !('length' in initialValues))\r\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\r\n\r\n    var result = ko.observable(initialValues);\r\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\r\n    return result.extend({'trackArrayChanges':true});\r\n};\r\n\r\nko.observableArray['fn'] = {\r\n    'remove': function (valueOrPredicate) {\r\n        var underlyingArray = this.peek();\r\n        var removedValues = [];\r\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n        for (var i = 0; i < underlyingArray.length; i++) {\r\n            var value = underlyingArray[i];\r\n            if (predicate(value)) {\r\n                if (removedValues.length === 0) {\r\n                    this.valueWillMutate();\r\n                }\r\n                removedValues.push(value);\r\n                underlyingArray.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (removedValues.length) {\r\n            this.valueHasMutated();\r\n        }\r\n        return removedValues;\r\n    },\r\n\r\n    'removeAll': function (arrayOfValues) {\r\n        // If you passed zero args, we remove everything\r\n        if (arrayOfValues === undefined) {\r\n            var underlyingArray = this.peek();\r\n            var allValues = underlyingArray.slice(0);\r\n            this.valueWillMutate();\r\n            underlyingArray.splice(0, underlyingArray.length);\r\n            this.valueHasMutated();\r\n            return allValues;\r\n        }\r\n        // If you passed an arg, we interpret it as an array of entries to remove\r\n        if (!arrayOfValues)\r\n            return [];\r\n        return this['remove'](function (value) {\r\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n        });\r\n    },\r\n\r\n    'destroy': function (valueOrPredicate) {\r\n        var underlyingArray = this.peek();\r\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n        this.valueWillMutate();\r\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\r\n            var value = underlyingArray[i];\r\n            if (predicate(value))\r\n                underlyingArray[i][\"_destroy\"] = true;\r\n        }\r\n        this.valueHasMutated();\r\n    },\r\n\r\n    'destroyAll': function (arrayOfValues) {\r\n        // If you passed zero args, we destroy everything\r\n        if (arrayOfValues === undefined)\r\n            return this['destroy'](function() { return true });\r\n\r\n        // If you passed an arg, we interpret it as an array of entries to destroy\r\n        if (!arrayOfValues)\r\n            return [];\r\n        return this['destroy'](function (value) {\r\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n        });\r\n    },\r\n\r\n    'indexOf': function (item) {\r\n        var underlyingArray = this();\r\n        return ko.utils.arrayIndexOf(underlyingArray, item);\r\n    },\r\n\r\n    'replace': function(oldItem, newItem) {\r\n        var index = this['indexOf'](oldItem);\r\n        if (index >= 0) {\r\n            this.valueWillMutate();\r\n            this.peek()[index] = newItem;\r\n            this.valueHasMutated();\r\n        }\r\n    }\r\n};\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observableArray constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\r\n}\r\n\r\n// Populate ko.observableArray.fn with read/write functions from native arrays\r\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\r\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\r\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\r\n    ko.observableArray['fn'][methodName] = function () {\r\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\r\n        // (for consistency with mutating regular observables)\r\n        var underlyingArray = this.peek();\r\n        this.valueWillMutate();\r\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\r\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\r\n        this.valueHasMutated();\r\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\r\n        return methodCallResult === underlyingArray ? this : methodCallResult;\r\n    };\r\n});\r\n\r\n// Populate ko.observableArray.fn with read-only functions from native arrays\r\nko.utils.arrayForEach([\"slice\"], function (methodName) {\r\n    ko.observableArray['fn'][methodName] = function () {\r\n        var underlyingArray = this();\r\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\r\n    };\r\n});\r\n\r\nko.exportSymbol('observableArray', ko.observableArray);\r\nvar arrayChangeEventName = 'arrayChange';\r\nko.extenders['trackArrayChanges'] = function(target, options) {\r\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\r\n    target.compareArrayOptions = {};\r\n    if (options && typeof options == \"object\") {\r\n        ko.utils.extend(target.compareArrayOptions, options);\r\n    }\r\n    target.compareArrayOptions['sparse'] = true;\r\n\r\n    // Only modify the target observable once\r\n    if (target.cacheDiffForKnownOperation) {\r\n        return;\r\n    }\r\n    var trackingChanges = false,\r\n        cachedDiff = null,\r\n        arrayChangeSubscription,\r\n        pendingNotifications = 0,\r\n        underlyingNotifySubscribersFunction,\r\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\r\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\r\n\r\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\r\n    target.beforeSubscriptionAdd = function (event) {\r\n        if (underlyingBeforeSubscriptionAddFunction)\r\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\r\n        if (event === arrayChangeEventName) {\r\n            trackChanges();\r\n        }\r\n    };\r\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\r\n    target.afterSubscriptionRemove = function (event) {\r\n        if (underlyingAfterSubscriptionRemoveFunction)\r\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\r\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n            if (underlyingNotifySubscribersFunction) {\r\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\r\n                underlyingNotifySubscribersFunction = undefined;\r\n            }\r\n            arrayChangeSubscription.dispose();\r\n            trackingChanges = false;\r\n        }\r\n    };\r\n\r\n    function trackChanges() {\r\n        // Calling 'trackChanges' multiple times is the same as calling it once\r\n        if (trackingChanges) {\r\n            return;\r\n        }\r\n\r\n        trackingChanges = true;\r\n\r\n        // Intercept \"notifySubscribers\" to track how many times it was called.\r\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\r\n        target['notifySubscribers'] = function(valueToNotify, event) {\r\n            if (!event || event === defaultEvent) {\r\n                ++pendingNotifications;\r\n            }\r\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\r\n        };\r\n\r\n        // Each time the array changes value, capture a clone so that on the next\r\n        // change it's possible to produce a diff\r\n        var previousContents = [].concat(target.peek() || []);\r\n        cachedDiff = null;\r\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\r\n            // Make a copy of the current contents and ensure it's an array\r\n            currentContents = [].concat(currentContents || []);\r\n\r\n            // Compute the diff and issue notifications, but only if someone is listening\r\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                var changes = getChanges(previousContents, currentContents);\r\n            }\r\n\r\n            // Eliminate references to the old, removed items, so they can be GCed\r\n            previousContents = currentContents;\r\n            cachedDiff = null;\r\n            pendingNotifications = 0;\r\n\r\n            if (changes && changes.length) {\r\n                target['notifySubscribers'](changes, arrayChangeEventName);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getChanges(previousContents, currentContents) {\r\n        // We try to re-use cached diffs.\r\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\r\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\r\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\r\n        if (!cachedDiff || pendingNotifications > 1) {\r\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\r\n        }\r\n\r\n        return cachedDiff;\r\n    }\r\n\r\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\r\n        // Only run if we're currently tracking changes for this observable array\r\n        // and there aren't any pending deferred notifications.\r\n        if (!trackingChanges || pendingNotifications) {\r\n            return;\r\n        }\r\n        var diff = [],\r\n            arrayLength = rawArray.length,\r\n            argsLength = args.length,\r\n            offset = 0;\r\n\r\n        function pushDiff(status, value, index) {\r\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\r\n        }\r\n        switch (operationName) {\r\n            case 'push':\r\n                offset = arrayLength;\r\n            case 'unshift':\r\n                for (var index = 0; index < argsLength; index++) {\r\n                    pushDiff('added', args[index], offset + index);\r\n                }\r\n                break;\r\n\r\n            case 'pop':\r\n                offset = arrayLength - 1;\r\n            case 'shift':\r\n                if (arrayLength) {\r\n                    pushDiff('deleted', rawArray[offset], offset);\r\n                }\r\n                break;\r\n\r\n            case 'splice':\r\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\r\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\r\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\r\n                    endAddIndex = startIndex + argsLength - 2,\r\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\r\n                    additions = [], deletions = [];\r\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\r\n                    if (index < endDeleteIndex)\r\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\r\n                    if (index < endAddIndex)\r\n                        additions.push(pushDiff('added', args[argsIndex], index));\r\n                }\r\n                ko.utils.findMovesInArrayComparison(deletions, additions);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n        cachedDiff = diff;\r\n    };\r\n};\r\nvar computedState = ko.utils.createSymbolOrString('_state');\r\n\r\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\r\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\r\n        // Single-parameter syntax - everything is on this \"options\" param\r\n        options = evaluatorFunctionOrOptions;\r\n    } else {\r\n        // Multi-parameter syntax - construct the options according to the params passed\r\n        options = options || {};\r\n        if (evaluatorFunctionOrOptions) {\r\n            options[\"read\"] = evaluatorFunctionOrOptions;\r\n        }\r\n    }\r\n    if (typeof options[\"read\"] != \"function\")\r\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\r\n\r\n    var writeFunction = options[\"write\"];\r\n    var state = {\r\n        latestValue: undefined,\r\n        isStale: true,\r\n        isDirty: true,\r\n        isBeingEvaluated: false,\r\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\r\n        isDisposed: false,\r\n        pure: false,\r\n        isSleeping: false,\r\n        readFunction: options[\"read\"],\r\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\r\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\r\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\r\n        domNodeDisposalCallback: null,\r\n        dependencyTracking: {},\r\n        dependenciesCount: 0,\r\n        evaluationTimeoutInstance: null\r\n    };\r\n\r\n    function computedObservable() {\r\n        if (arguments.length > 0) {\r\n            if (typeof writeFunction === \"function\") {\r\n                // Writing a value\r\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\r\n            } else {\r\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\n            }\r\n            return this; // Permits chained assignments\r\n        } else {\r\n            // Reading the value\r\n            ko.dependencyDetection.registerDependency(computedObservable);\r\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\r\n                computedObservable.evaluateImmediate();\r\n            }\r\n            return state.latestValue;\r\n        }\r\n    }\r\n\r\n    computedObservable[computedState] = state;\r\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\r\n\r\n    // Inherit from 'subscribable'\r\n    if (!ko.utils.canSetPrototype) {\r\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\r\n    }\r\n    ko.subscribable['fn'].init(computedObservable);\r\n\r\n    // Inherit from 'computed'\r\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\r\n\r\n    if (options['pure']) {\r\n        state.pure = true;\r\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\r\n        ko.utils.extend(computedObservable, pureComputedOverrides);\r\n    } else if (options['deferEvaluation']) {\r\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\r\n    }\r\n\r\n    if (ko.options['deferUpdates']) {\r\n        ko.extenders['deferred'](computedObservable, true);\r\n    }\r\n\r\n    if (DEBUG) {\r\n        // #1731 - Aid debugging by exposing the computed's options\r\n        computedObservable[\"_options\"] = options;\r\n    }\r\n\r\n    if (state.disposeWhenNodeIsRemoved) {\r\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\r\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\r\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\r\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\r\n\r\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\r\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\r\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\r\n        // be documented or used by application code, as it's likely to change in a future version of KO.\r\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\r\n            state.disposeWhenNodeIsRemoved = null;\r\n        }\r\n    }\r\n\r\n    // Evaluate, unless sleeping or deferEvaluation is true\r\n    if (!state.isSleeping && !options['deferEvaluation']) {\r\n        computedObservable.evaluateImmediate();\r\n    }\r\n\r\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\r\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\r\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\r\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\r\n            computedObservable.dispose();\r\n        });\r\n    }\r\n\r\n    return computedObservable;\r\n};\r\n\r\n// Utility function that disposes a given dependencyTracking entry\r\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\r\n    if (entryToDispose !== null && entryToDispose.dispose) {\r\n        entryToDispose.dispose();\r\n    }\r\n}\r\n\r\n// This function gets called each time a dependency is detected while evaluating a computed.\r\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\r\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\r\n    var computedObservable = this.computedObservable,\r\n        state = computedObservable[computedState];\r\n    if (!state.isDisposed) {\r\n        if (this.disposalCount && this.disposalCandidates[id]) {\r\n            // Don't want to dispose this subscription, as it's still being used\r\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\r\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\r\n            --this.disposalCount;\r\n        } else if (!state.dependencyTracking[id]) {\r\n            // Brand new subscription - add it\r\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\r\n        }\r\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\r\n        if (subscribable._notificationIsPending) {\r\n            subscribable._notifyNextChangeIfValueIsDifferent();\r\n        }\r\n    }\r\n}\r\n\r\nvar computedFn = {\r\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\r\n    getDependenciesCount: function () {\r\n        return this[computedState].dependenciesCount;\r\n    },\r\n    addDependencyTracking: function (id, target, trackingObj) {\r\n        if (this[computedState].pure && target === this) {\r\n            throw Error(\"A 'pure' computed must not be called recursively\");\r\n        }\r\n\r\n        this[computedState].dependencyTracking[id] = trackingObj;\r\n        trackingObj._order = this[computedState].dependenciesCount++;\r\n        trackingObj._version = target.getVersion();\r\n    },\r\n    haveDependenciesChanged: function () {\r\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\r\n        for (id in dependencyTracking) {\r\n            if (dependencyTracking.hasOwnProperty(id)) {\r\n                dependency = dependencyTracking[id];\r\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    markDirty: function () {\r\n        // Process \"dirty\" events if we can handle delayed notifications\r\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\r\n            this._evalDelayed(false /*isChange*/);\r\n        }\r\n    },\r\n    isActive: function () {\r\n        var state = this[computedState];\r\n        return state.isDirty || state.dependenciesCount > 0;\r\n    },\r\n    respondToChange: function () {\r\n        // Ignore \"change\" events if we've already scheduled a delayed notification\r\n        if (!this._notificationIsPending) {\r\n            this.evaluatePossiblyAsync();\r\n        } else if (this[computedState].isDirty) {\r\n            this[computedState].isStale = true;\r\n        }\r\n    },\r\n    subscribeToDependency: function (target) {\r\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\r\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\r\n                changeSub = target.subscribe(this.respondToChange, this);\r\n            return {\r\n                _target: target,\r\n                dispose: function () {\r\n                    dirtySub.dispose();\r\n                    changeSub.dispose();\r\n                }\r\n            };\r\n        } else {\r\n            return target.subscribe(this.evaluatePossiblyAsync, this);\r\n        }\r\n    },\r\n    evaluatePossiblyAsync: function () {\r\n        var computedObservable = this,\r\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\r\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\r\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\r\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\r\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n            }, throttleEvaluationTimeout);\r\n        } else if (computedObservable._evalDelayed) {\r\n            computedObservable._evalDelayed(true /*isChange*/);\r\n        } else {\r\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n        }\r\n    },\r\n    evaluateImmediate: function (notifyChange) {\r\n        var computedObservable = this,\r\n            state = computedObservable[computedState],\r\n            disposeWhen = state.disposeWhen,\r\n            changed = false;\r\n\r\n        if (state.isBeingEvaluated) {\r\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\r\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\r\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\r\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\r\n            return;\r\n        }\r\n\r\n        // Do not evaluate (and possibly capture new dependencies) if disposed\r\n        if (state.isDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\r\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\r\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\r\n                computedObservable.dispose();\r\n                return;\r\n            }\r\n        } else {\r\n            // It just did return false, so we can stop suppressing now\r\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\r\n        }\r\n\r\n        state.isBeingEvaluated = true;\r\n        try {\r\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\r\n        } finally {\r\n            state.isBeingEvaluated = false;\r\n        }\r\n\r\n        if (!state.dependenciesCount) {\r\n            computedObservable.dispose();\r\n        }\r\n\r\n        return changed;\r\n    },\r\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\r\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\r\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\r\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\r\n\r\n        var computedObservable = this,\r\n            state = computedObservable[computedState],\r\n            changed = false;\r\n\r\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\r\n        // Then, during evaluation, we cross off any that are in fact still being used.\r\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\r\n            dependencyDetectionContext = {\r\n                computedObservable: computedObservable,\r\n                disposalCandidates: state.dependencyTracking,\r\n                disposalCount: state.dependenciesCount\r\n            };\r\n\r\n        ko.dependencyDetection.begin({\r\n            callbackTarget: dependencyDetectionContext,\r\n            callback: computedBeginDependencyDetectionCallback,\r\n            computed: computedObservable,\r\n            isInitial: isInitial\r\n        });\r\n\r\n        state.dependencyTracking = {};\r\n        state.dependenciesCount = 0;\r\n\r\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\r\n\r\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\r\n            if (!state.isSleeping) {\r\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\r\n            }\r\n\r\n            state.latestValue = newValue;\r\n            if (DEBUG) computedObservable._latestValue = newValue;\r\n\r\n            if (state.isSleeping) {\r\n                computedObservable.updateVersion();\r\n            } else if (notifyChange) {\r\n                computedObservable[\"notifySubscribers\"](state.latestValue);\r\n            }\r\n\r\n            changed = true;\r\n        }\r\n\r\n        if (isInitial) {\r\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n        }\r\n\r\n        return changed;\r\n    },\r\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\r\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\r\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\r\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\r\n        // overhead of computed evaluation (on V8 at least).\r\n\r\n        try {\r\n            var readFunction = state.readFunction;\r\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\r\n        } finally {\r\n            ko.dependencyDetection.end();\r\n\r\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\r\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\r\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\r\n            }\r\n\r\n            state.isStale = state.isDirty = false;\r\n        }\r\n    },\r\n    peek: function (evaluate) {\r\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\r\n        // Pass in true to evaluate if needed.\r\n        var state = this[computedState];\r\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\r\n            this.evaluateImmediate();\r\n        }\r\n        return state.latestValue;\r\n    },\r\n    limit: function (limitFunction) {\r\n        // Override the limit function with one that delays evaluation as well\r\n        ko.subscribable['fn'].limit.call(this, limitFunction);\r\n        this._evalIfChanged = function () {\r\n            if (this[computedState].isStale) {\r\n                this.evaluateImmediate();\r\n            } else {\r\n                this[computedState].isDirty = false;\r\n            }\r\n            return this[computedState].latestValue;\r\n        };\r\n        this._evalDelayed = function (isChange) {\r\n            this._limitBeforeChange(this[computedState].latestValue);\r\n\r\n            // Mark as dirty\r\n            this[computedState].isDirty = true;\r\n            if (isChange) {\r\n                this[computedState].isStale = true;\r\n            }\r\n\r\n            // Pass the observable to the \"limit\" code, which will evaluate it when\r\n            // it's time to do the notification.\r\n            this._limitChange(this);\r\n        };\r\n    },\r\n    dispose: function () {\r\n        var state = this[computedState];\r\n        if (!state.isSleeping && state.dependencyTracking) {\r\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                if (dependency.dispose)\r\n                    dependency.dispose();\r\n            });\r\n        }\r\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\r\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\r\n        }\r\n        state.dependencyTracking = null;\r\n        state.dependenciesCount = 0;\r\n        state.isDisposed = true;\r\n        state.isStale = false;\r\n        state.isDirty = false;\r\n        state.isSleeping = false;\r\n        state.disposeWhenNodeIsRemoved = null;\r\n    }\r\n};\r\n\r\nvar pureComputedOverrides = {\r\n    beforeSubscriptionAdd: function (event) {\r\n        // If asleep, wake up the computed by subscribing to any dependencies.\r\n        var computedObservable = this,\r\n            state = computedObservable[computedState];\r\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\r\n            state.isSleeping = false;\r\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\r\n                state.dependencyTracking = null;\r\n                state.dependenciesCount = 0;\r\n                if (computedObservable.evaluateImmediate()) {\r\n                    computedObservable.updateVersion();\r\n                }\r\n            } else {\r\n                // First put the dependencies in order\r\n                var dependeciesOrder = [];\r\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                    dependeciesOrder[dependency._order] = id;\r\n                });\r\n                // Next, subscribe to each one\r\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\r\n                    var dependency = state.dependencyTracking[id],\r\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\r\n                    subscription._order = order;\r\n                    subscription._version = dependency._version;\r\n                    state.dependencyTracking[id] = subscription;\r\n                });\r\n            }\r\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\r\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n            }\r\n        }\r\n    },\r\n    afterSubscriptionRemove: function (event) {\r\n        var state = this[computedState];\r\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\r\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                if (dependency.dispose) {\r\n                    state.dependencyTracking[id] = {\r\n                        _target: dependency._target,\r\n                        _order: dependency._order,\r\n                        _version: dependency._version\r\n                    };\r\n                    dependency.dispose();\r\n                }\r\n            });\r\n            state.isSleeping = true;\r\n            this[\"notifySubscribers\"](undefined, \"asleep\");\r\n        }\r\n    },\r\n    getVersion: function () {\r\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\r\n        // simply return the version number. Instead, we check if any of the dependencies have\r\n        // changed and conditionally re-evaluate the computed observable.\r\n        var state = this[computedState];\r\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\r\n            this.evaluateImmediate();\r\n        }\r\n        return ko.subscribable['fn'].getVersion.call(this);\r\n    }\r\n};\r\n\r\nvar deferEvaluationOverrides = {\r\n    beforeSubscriptionAdd: function (event) {\r\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\r\n        if (event == 'change' || event == 'beforeChange') {\r\n            this.peek();\r\n        }\r\n    }\r\n};\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.computed constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\r\n}\r\n\r\n// Set the proto chain values for ko.hasPrototype\r\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\r\nko.computed[protoProp] = ko.observable;\r\ncomputedFn[protoProp] = ko.computed;\r\n\r\nko.isComputed = function (instance) {\r\n    return ko.hasPrototype(instance, ko.computed);\r\n};\r\n\r\nko.isPureComputed = function (instance) {\r\n    return ko.hasPrototype(instance, ko.computed)\r\n        && instance[computedState] && instance[computedState].pure;\r\n};\r\n\r\nko.exportSymbol('computed', ko.computed);\r\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\r\nko.exportSymbol('isComputed', ko.isComputed);\r\nko.exportSymbol('isPureComputed', ko.isPureComputed);\r\nko.exportSymbol('computed.fn', computedFn);\r\nko.exportProperty(computedFn, 'peek', computedFn.peek);\r\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\r\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\r\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\r\n\r\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\r\n    if (typeof evaluatorFunctionOrOptions === 'function') {\r\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\r\n    } else {\r\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\r\n        evaluatorFunctionOrOptions['pure'] = true;\r\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\r\n    }\r\n}\r\nko.exportSymbol('pureComputed', ko.pureComputed);\r\n\r\n(function() {\r\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\r\n\r\n    ko.toJS = function(rootObject) {\r\n        if (arguments.length == 0)\r\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\r\n\r\n        // We just unwrap everything at every level in the object graph\r\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\r\n            // Loop because an observable's value might in turn be another observable wrapper\r\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\r\n                valueToMap = valueToMap();\r\n            return valueToMap;\r\n        });\r\n    };\r\n\r\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\r\n        var plainJavaScriptObject = ko.toJS(rootObject);\r\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\r\n    };\r\n\r\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\r\n        visitedObjects = visitedObjects || new objectLookup();\r\n\r\n        rootObject = mapInputCallback(rootObject);\r\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\r\n        if (!canHaveProperties)\r\n            return rootObject;\r\n\r\n        var outputProperties = rootObject instanceof Array ? [] : {};\r\n        visitedObjects.save(rootObject, outputProperties);\r\n\r\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\r\n            var propertyValue = mapInputCallback(rootObject[indexer]);\r\n\r\n            switch (typeof propertyValue) {\r\n                case \"boolean\":\r\n                case \"number\":\r\n                case \"string\":\r\n                case \"function\":\r\n                    outputProperties[indexer] = propertyValue;\r\n                    break;\r\n                case \"object\":\r\n                case \"undefined\":\r\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\r\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\r\n                        ? previouslyMappedValue\r\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return outputProperties;\r\n    }\r\n\r\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n        if (rootObject instanceof Array) {\r\n            for (var i = 0; i < rootObject.length; i++)\r\n                visitorCallback(i);\r\n\r\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\r\n            if (typeof rootObject['toJSON'] == 'function')\r\n                visitorCallback('toJSON');\r\n        } else {\r\n            for (var propertyName in rootObject) {\r\n                visitorCallback(propertyName);\r\n            }\r\n        }\r\n    };\r\n\r\n    function objectLookup() {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n\r\n    objectLookup.prototype = {\r\n        constructor: objectLookup,\r\n        save: function(key, value) {\r\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n            if (existingIndex >= 0)\r\n                this.values[existingIndex] = value;\r\n            else {\r\n                this.keys.push(key);\r\n                this.values.push(value);\r\n            }\r\n        },\r\n        get: function(key) {\r\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('toJS', ko.toJS);\r\nko.exportSymbol('toJSON', ko.toJSON);\r\n(function () {\r\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\r\n\r\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\r\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\r\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\r\n    ko.selectExtensions = {\r\n        readValue : function(element) {\r\n            switch (ko.utils.tagNameLower(element)) {\r\n                case 'option':\r\n                    if (element[hasDomDataExpandoProperty] === true)\r\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\r\n                    return ko.utils.ieVersion <= 7\r\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\r\n                        : element.value;\r\n                case 'select':\r\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\r\n                default:\r\n                    return element.value;\r\n            }\r\n        },\r\n\r\n        writeValue: function(element, value, allowUnset) {\r\n            switch (ko.utils.tagNameLower(element)) {\r\n                case 'option':\r\n                    switch(typeof value) {\r\n                        case \"string\":\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\r\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\r\n                                delete element[hasDomDataExpandoProperty];\r\n                            }\r\n                            element.value = value;\r\n                            break;\r\n                        default:\r\n                            // Store arbitrary object using DomData\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\r\n                            element[hasDomDataExpandoProperty] = true;\r\n\r\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\r\n                            element.value = typeof value === \"number\" ? value : \"\";\r\n                            break;\r\n                    }\r\n                    break;\r\n                case 'select':\r\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\r\n                        value = undefined;\r\n                    var selection = -1;\r\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\r\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\r\n                        // Include special check to handle selecting a caption with a blank string value\r\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\r\n                            selection = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\r\n                        element.selectedIndex = selection;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if ((value === null) || (value === undefined))\r\n                        value = \"\";\r\n                    element.value = value;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('selectExtensions', ko.selectExtensions);\r\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\r\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\r\nko.expressionRewriting = (function () {\r\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\r\n\r\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\r\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\r\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\r\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\r\n\r\n    function getWriteableValue(expression) {\r\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\r\n            return false;\r\n        var match = expression.match(javaScriptAssignmentTarget);\r\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\r\n    }\r\n\r\n    // The following regular expressions will be used to split an object-literal string into tokens\r\n\r\n        // These two match strings, either with double quotes or single quotes\r\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\r\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\r\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\r\n        // as a regular expression (this is handled by the parsing loop below).\r\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\r\n        // These characters have special meaning to the parser and must not appear in the middle of a\r\n        // token, except as part of a string.\r\n        specials = ',\"\\'{}()/:[\\\\]',\r\n        // Match text (at least two characters) that does not contain any of the above special characters,\r\n        // although some of the special characters are allowed to start it (all but the colon and comma).\r\n        // The text can contain spaces, but leading or trailing spaces are skipped.\r\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\r\n        // Match any non-space character not matched already. This will match colons and commas, since they're\r\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\r\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\r\n        oneNotSpace = '[^\\\\s]',\r\n\r\n        // Create the actual regular expression by or-ing the above strings. The order is important.\r\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\r\n\r\n        // Match end of previous token to determine whether a slash is a division or regex.\r\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\r\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\r\n\r\n    function parseObjectLiteral(objectLiteralString) {\r\n        // Trim leading and trailing spaces from the string\r\n        var str = ko.utils.stringTrim(objectLiteralString);\r\n\r\n        // Trim braces '{' surrounding the whole object literal\r\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\r\n\r\n        // Split into tokens\r\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\r\n\r\n        if (toks) {\r\n            // Append a comma so that we don't need a separate code block to deal with the last item\r\n            toks.push(',');\r\n\r\n            for (var i = 0, tok; tok = toks[i]; ++i) {\r\n                var c = tok.charCodeAt(0);\r\n                // A comma signals the end of a key/value pair if depth is zero\r\n                if (c === 44) { // \",\"\r\n                    if (depth <= 0) {\r\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\r\n                        key = depth = 0;\r\n                        values = [];\r\n                        continue;\r\n                    }\r\n                // Simply skip the colon that separates the name and value\r\n                } else if (c === 58) { // \":\"\r\n                    if (!depth && !key && values.length === 1) {\r\n                        key = values.pop();\r\n                        continue;\r\n                    }\r\n                // A set of slashes is initially matched as a regular expression, but could be division\r\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\r\n                    // Look at the end of the previous token to determine if the slash is actually division\r\n                    var match = toks[i-1].match(divisionLookBehind);\r\n                    if (match && !keywordRegexLookBehind[match[0]]) {\r\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\r\n                        str = str.substr(str.indexOf(tok) + 1);\r\n                        toks = str.match(bindingToken);\r\n                        toks.push(',');\r\n                        i = -1;\r\n                        // Continue with just the slash\r\n                        tok = '/';\r\n                    }\r\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\r\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\r\n                    ++depth;\r\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\r\n                    --depth;\r\n                // The key will be the first token; if it's a string, trim the quotes\r\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\r\n                    tok = tok.slice(1, -1);\r\n                }\r\n                values.push(tok);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\r\n    var twoWayBindings = {};\r\n\r\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\r\n        bindingOptions = bindingOptions || {};\r\n\r\n        function processKeyValue(key, val) {\r\n            var writableVal;\r\n            function callPreprocessHook(obj) {\r\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\r\n            }\r\n            if (!bindingParams) {\r\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\r\n                    return;\r\n\r\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\r\n                    // For two-way bindings, provide a write method in case the value\r\n                    // isn't a writable observable.\r\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\r\n                }\r\n            }\r\n            // Values are wrapped in a function so that each value can be accessed independently\r\n            if (makeValueAccessors) {\r\n                val = 'function(){return ' + val + ' }';\r\n            }\r\n            resultStrings.push(\"'\" + key + \"':\" + val);\r\n        }\r\n\r\n        var resultStrings = [],\r\n            propertyAccessorResultStrings = [],\r\n            makeValueAccessors = bindingOptions['valueAccessors'],\r\n            bindingParams = bindingOptions['bindingParams'],\r\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\r\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\r\n\r\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\r\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\r\n        });\r\n\r\n        if (propertyAccessorResultStrings.length)\r\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\r\n\r\n        return resultStrings.join(\",\");\r\n    }\r\n\r\n    return {\r\n        bindingRewriteValidators: [],\r\n\r\n        twoWayBindings: twoWayBindings,\r\n\r\n        parseObjectLiteral: parseObjectLiteral,\r\n\r\n        preProcessBindings: preProcessBindings,\r\n\r\n        keyValueArrayContainsKey: function(keyValueArray, key) {\r\n            for (var i = 0; i < keyValueArray.length; i++)\r\n                if (keyValueArray[i]['key'] == key)\r\n                    return true;\r\n            return false;\r\n        },\r\n\r\n        // Internal, private KO utility for updating model properties from within bindings\r\n        // property:            If the property being updated is (or might be) an observable, pass it here\r\n        //                      If it turns out to be a writable observable, it will be written to directly\r\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\r\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\r\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\r\n        // value:               The value to be written\r\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\r\n        //                      it is !== existing value on that writable observable\r\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\r\n            if (!property || !ko.isObservable(property)) {\r\n                var propWriters = allBindings.get('_ko_property_writers');\r\n                if (propWriters && propWriters[key])\r\n                    propWriters[key](value);\r\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\r\n                property(value);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\r\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\r\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\r\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\r\n\r\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\r\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\r\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\r\n// as an internal implementation detail in the short term.\r\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\r\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\r\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\r\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\r\n\r\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\r\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\r\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\r\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\r\n(function() {\r\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\r\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\r\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\r\n    // of that virtual hierarchy\r\n    //\r\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\r\n    // without having to scatter special cases all over the binding and templating code.\r\n\r\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\r\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\r\n    // So, use node.text where available, and node.nodeValue elsewhere\r\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\r\n\r\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\r\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\r\n\r\n    function isStartComment(node) {\r\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n    }\r\n\r\n    function isEndComment(node) {\r\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n    }\r\n\r\n    function getVirtualChildren(startComment, allowUnbalanced) {\r\n        var currentNode = startComment;\r\n        var depth = 1;\r\n        var children = [];\r\n        while (currentNode = currentNode.nextSibling) {\r\n            if (isEndComment(currentNode)) {\r\n                depth--;\r\n                if (depth === 0)\r\n                    return children;\r\n            }\r\n\r\n            children.push(currentNode);\r\n\r\n            if (isStartComment(currentNode))\r\n                depth++;\r\n        }\r\n        if (!allowUnbalanced)\r\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\r\n        return null;\r\n    }\r\n\r\n    function getMatchingEndComment(startComment, allowUnbalanced) {\r\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\r\n        if (allVirtualChildren) {\r\n            if (allVirtualChildren.length > 0)\r\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\r\n            return startComment.nextSibling;\r\n        } else\r\n            return null; // Must have no matching end comment, and allowUnbalanced is true\r\n    }\r\n\r\n    function getUnbalancedChildTags(node) {\r\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\r\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\r\n        var childNode = node.firstChild, captureRemaining = null;\r\n        if (childNode) {\r\n            do {\r\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\r\n                    captureRemaining.push(childNode);\r\n                else if (isStartComment(childNode)) {\r\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\r\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\r\n                        childNode = matchingEndComment;\r\n                    else\r\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\r\n                } else if (isEndComment(childNode)) {\r\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\r\n                }\r\n            } while (childNode = childNode.nextSibling);\r\n        }\r\n        return captureRemaining;\r\n    }\r\n\r\n    ko.virtualElements = {\r\n        allowedBindings: {},\r\n\r\n        childNodes: function(node) {\r\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\r\n        },\r\n\r\n        emptyNode: function(node) {\r\n            if (!isStartComment(node))\r\n                ko.utils.emptyDomNode(node);\r\n            else {\r\n                var virtualChildren = ko.virtualElements.childNodes(node);\r\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\r\n                    ko.removeNode(virtualChildren[i]);\r\n            }\r\n        },\r\n\r\n        setDomNodeChildren: function(node, childNodes) {\r\n            if (!isStartComment(node))\r\n                ko.utils.setDomNodeChildren(node, childNodes);\r\n            else {\r\n                ko.virtualElements.emptyNode(node);\r\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\r\n                for (var i = 0, j = childNodes.length; i < j; i++)\r\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\r\n            }\r\n        },\r\n\r\n        prepend: function(containerNode, nodeToPrepend) {\r\n            if (!isStartComment(containerNode)) {\r\n                if (containerNode.firstChild)\r\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\r\n                else\r\n                    containerNode.appendChild(nodeToPrepend);\r\n            } else {\r\n                // Start comments must always have a parent and at least one following sibling (the end comment)\r\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\r\n            }\r\n        },\r\n\r\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\r\n            if (!insertAfterNode) {\r\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\r\n            } else if (!isStartComment(containerNode)) {\r\n                // Insert after insertion point\r\n                if (insertAfterNode.nextSibling)\r\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n                else\r\n                    containerNode.appendChild(nodeToInsert);\r\n            } else {\r\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\r\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n            }\r\n        },\r\n\r\n        firstChild: function(node) {\r\n            if (!isStartComment(node))\r\n                return node.firstChild;\r\n            if (!node.nextSibling || isEndComment(node.nextSibling))\r\n                return null;\r\n            return node.nextSibling;\r\n        },\r\n\r\n        nextSibling: function(node) {\r\n            if (isStartComment(node))\r\n                node = getMatchingEndComment(node);\r\n            if (node.nextSibling && isEndComment(node.nextSibling))\r\n                return null;\r\n            return node.nextSibling;\r\n        },\r\n\r\n        hasBindingValue: isStartComment,\r\n\r\n        virtualNodeBindingValue: function(node) {\r\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\r\n            return regexMatch ? regexMatch[1] : null;\r\n        },\r\n\r\n        normaliseVirtualElementDomStructure: function(elementVerified) {\r\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\r\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\r\n            // that are direct descendants of <ul> into the preceding <li>)\r\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\r\n                return;\r\n\r\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\r\n            // must be intended to appear *after* that child, so move them there.\r\n            var childNode = elementVerified.firstChild;\r\n            if (childNode) {\r\n                do {\r\n                    if (childNode.nodeType === 1) {\r\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\r\n                        if (unbalancedTags) {\r\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\r\n                            var nodeToInsertBefore = childNode.nextSibling;\r\n                            for (var i = 0; i < unbalancedTags.length; i++) {\r\n                                if (nodeToInsertBefore)\r\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\r\n                                else\r\n                                    elementVerified.appendChild(unbalancedTags[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                } while (childNode = childNode.nextSibling);\r\n            }\r\n        }\r\n    };\r\n})();\r\nko.exportSymbol('virtualElements', ko.virtualElements);\r\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\r\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\r\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\r\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\r\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\r\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\r\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\r\n(function() {\r\n    var defaultBindingAttributeName = \"data-bind\";\r\n\r\n    ko.bindingProvider = function() {\r\n        this.bindingCache = {};\r\n    };\r\n\r\n    ko.utils.extend(ko.bindingProvider.prototype, {\r\n        'nodeHasBindings': function(node) {\r\n            switch (node.nodeType) {\r\n                case 1: // Element\r\n                    return node.getAttribute(defaultBindingAttributeName) != null\r\n                        || ko.components['getComponentNameForNode'](node);\r\n                case 8: // Comment node\r\n                    return ko.virtualElements.hasBindingValue(node);\r\n                default: return false;\r\n            }\r\n        },\r\n\r\n        'getBindings': function(node, bindingContext) {\r\n            var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\r\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\r\n        },\r\n\r\n        'getBindingAccessors': function(node, bindingContext) {\r\n            var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\r\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\r\n        },\r\n\r\n        // The following function is only used internally by this default provider.\r\n        // It's not part of the interface definition for a general binding provider.\r\n        'getBindingsString': function(node, bindingContext) {\r\n            switch (node.nodeType) {\r\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\r\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\r\n                default: return null;\r\n            }\r\n        },\r\n\r\n        // The following function is only used internally by this default provider.\r\n        // It's not part of the interface definition for a general binding provider.\r\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\r\n            try {\r\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\r\n                return bindingFunction(bindingContext, node);\r\n            } catch (ex) {\r\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\r\n                throw ex;\r\n            }\r\n        }\r\n    });\r\n\r\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\r\n\r\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\r\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\r\n        return cache[cacheKey]\r\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\r\n    }\r\n\r\n    function createBindingsStringEvaluator(bindingsString, options) {\r\n        // Build the source for a function that evaluates \"expression\"\r\n        // For each scope variable, add an extra level of \"with\" nesting\r\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\r\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\r\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\r\n        return new Function(\"$context\", \"$element\", functionBody);\r\n    }\r\n})();\r\n\r\nko.exportSymbol('bindingProvider', ko.bindingProvider);\r\n(function () {\r\n    ko.bindingHandlers = {};\r\n\r\n    // The following element types will not be recursed into during binding.\r\n    var bindingDoesNotRecurseIntoElementTypes = {\r\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n        // because it's unexpected and a potential XSS issue.\r\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\r\n        // and because such elements' contents are always intended to be bound in a different context\r\n        // from where they appear in the document.\r\n        'script': true,\r\n        'textarea': true,\r\n        'template': true\r\n    };\r\n\r\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\r\n    ko['getBindingHandler'] = function(bindingKey) {\r\n        return ko.bindingHandlers[bindingKey];\r\n    };\r\n\r\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\r\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\r\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\r\n\r\n        // The binding context object includes static properties for the current, parent, and root view models.\r\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n        // any child contexts, must be updated when the view model is changed.\r\n        function updateContext() {\r\n            // Most of the time, the context will directly get a view model object, but if a function is given,\r\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\r\n            // an observable, the dependency is tracked, and those observables can later cause the binding\r\n            // context to be updated.\r\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\r\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\r\n\r\n            if (parentContext) {\r\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\r\n                // parent context is updated, this context will also be updated.\r\n                if (parentContext._subscribable)\r\n                    parentContext._subscribable();\r\n\r\n                // Copy $root and any custom properties from the parent context\r\n                ko.utils.extend(self, parentContext);\r\n\r\n                // Because the above copy overwrites our own properties, we need to reset them.\r\n                self._subscribable = subscribable;\r\n            } else {\r\n                self['$parents'] = [];\r\n                self['$root'] = dataItem;\r\n\r\n                // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                // See https://github.com/SteveSanderson/knockout/issues/490\r\n                self['ko'] = ko;\r\n            }\r\n            self['$rawData'] = dataItemOrObservable;\r\n            self['$data'] = dataItem;\r\n            if (dataItemAlias)\r\n                self[dataItemAlias] = dataItem;\r\n\r\n            // The extendCallback function is provided when creating a child context or extending a context.\r\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n            // function could also add dependencies to this binding context.\r\n            if (extendCallback)\r\n                extendCallback(self, parentContext, dataItem);\r\n\r\n            return self['$data'];\r\n        }\r\n        function disposeWhen() {\r\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\r\n        }\r\n\r\n        var self = this,\r\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\r\n            nodes,\r\n            subscribable;\r\n\r\n        if (options && options['exportDependencies']) {\r\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\r\n            // the binding context when they change.\r\n            updateContext();\r\n        } else {\r\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\r\n\r\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n            // the context object.\r\n            if (subscribable.isActive()) {\r\n                self._subscribable = subscribable;\r\n\r\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n                subscribable['equalityComparer'] = null;\r\n\r\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\r\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\r\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\r\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\r\n\r\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\r\n                nodes = [];\r\n                subscribable._addNode = function(node) {\r\n                    nodes.push(node);\r\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\r\n                        ko.utils.arrayRemoveItem(nodes, node);\r\n                        if (!nodes.length) {\r\n                            subscribable.dispose();\r\n                            self._subscribable = subscribable = undefined;\r\n                        }\r\n                    });\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n    // any observables, the new child context will automatically get a dependency on the parent context.\r\n    // But this does not mean that the $data value of the child context will also get updated. If the child\r\n    // view model also depends on the parent view model, you must provide a function that returns the correct\r\n    // view model on each update.\r\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\r\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\r\n            // Extend the context hierarchy by setting the appropriate pointers\r\n            self['$parentContext'] = parentContext;\r\n            self['$parent'] = parentContext['$data'];\r\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\r\n            self['$parents'].unshift(self['$parent']);\r\n            if (extendCallback)\r\n                extendCallback(self);\r\n        }, options);\r\n    };\r\n\r\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n    // when an observable view model is updated.\r\n    ko.bindingContext.prototype['extend'] = function(properties) {\r\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\r\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\r\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\r\n            // This \"child\" context doesn't directly track a parent observable view model,\r\n            // so we need to manually set the $rawData value to match the parent.\r\n            self['$rawData'] = parentContext['$rawData'];\r\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\r\n        });\r\n    };\r\n\r\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\r\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\r\n    };\r\n\r\n    // Returns the valueAccesor function for a binding value\r\n    function makeValueAccessor(value) {\r\n        return function() {\r\n            return value;\r\n        };\r\n    }\r\n\r\n    // Returns the value of a valueAccessor function\r\n    function evaluateValueAccessor(valueAccessor) {\r\n        return valueAccessor();\r\n    }\r\n\r\n    // Given a function that returns bindings, create and return a new object that contains\r\n    // binding value-accessors functions. Each accessor function calls the original function\r\n    // so that it always gets the latest value and all dependencies are captured. This is used\r\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\r\n    function makeAccessorsFromFunction(callback) {\r\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\r\n            return function() {\r\n                return callback()[key];\r\n            };\r\n        });\r\n    }\r\n\r\n    // Given a bindings function or object, create and return a new object that contains\r\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\r\n    function makeBindingAccessors(bindings, context, node) {\r\n        if (typeof bindings === 'function') {\r\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\r\n        } else {\r\n            return ko.utils.objectMap(bindings, makeValueAccessor);\r\n        }\r\n    }\r\n\r\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\r\n    // It must be called with 'this' set to the provider instance.\r\n    function getBindingsAndMakeAccessors(node, context) {\r\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\r\n    }\r\n\r\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\r\n        var validator = ko.virtualElements.allowedBindings[bindingName];\r\n        if (!validator)\r\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\r\n    }\r\n\r\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\r\n        var currentChild,\r\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\r\n            provider = ko.bindingProvider['instance'],\r\n            preprocessNode = provider['preprocessNode'];\r\n\r\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n        // trigger insertion of <template> contents at that point in the document.\r\n        if (preprocessNode) {\r\n            while (currentChild = nextInQueue) {\r\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                preprocessNode.call(provider, currentChild);\r\n            }\r\n            // Reset nextInQueue for the next loop\r\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n        }\r\n\r\n        while (currentChild = nextInQueue) {\r\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\r\n        }\r\n    }\r\n\r\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\r\n        var shouldBindDescendants = true;\r\n\r\n        // Perf optimisation: Apply bindings only if...\r\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\r\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\r\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\r\n        var isElement = (nodeVerified.nodeType === 1);\r\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\r\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\r\n\r\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\r\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\r\n        if (shouldApplyBindings)\r\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\r\n\r\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\r\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\r\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\r\n            //    hence bindingContextsMayDifferFromDomParentElement is false\r\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\r\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\r\n            //    hence bindingContextsMayDifferFromDomParentElement is true\r\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\r\n        }\r\n    }\r\n\r\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\r\n\r\n\r\n    function topologicalSortBindings(bindings) {\r\n        // Depth-first sort\r\n        var result = [],                // The list of key/handler pairs that we will return\r\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\r\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\r\n            if (!bindingsConsidered[bindingKey]) {\r\n                var binding = ko['getBindingHandler'](bindingKey);\r\n                if (binding) {\r\n                    // First add dependencies (if any) of the current binding\r\n                    if (binding['after']) {\r\n                        cyclicDependencyStack.push(bindingKey);\r\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\r\n                            if (bindings[bindingDependencyKey]) {\r\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\r\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                                } else {\r\n                                    pushBinding(bindingDependencyKey);\r\n                                }\r\n                            }\r\n                        });\r\n                        cyclicDependencyStack.length--;\r\n                    }\r\n                    // Next add the current binding\r\n                    result.push({ key: bindingKey, handler: binding });\r\n                }\r\n                bindingsConsidered[bindingKey] = true;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\r\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\r\n        if (!sourceBindings) {\r\n            if (alreadyBound) {\r\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n            }\r\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\r\n        }\r\n\r\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\r\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\r\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\r\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\r\n            ko.storedBindingContextForNode(node, bindingContext);\r\n\r\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n        var bindings;\r\n        if (sourceBindings && typeof sourceBindings !== 'function') {\r\n            bindings = sourceBindings;\r\n        } else {\r\n            var provider = ko.bindingProvider['instance'],\r\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\r\n\r\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n            // the binding context is updated or if the binding provider accesses observables.\r\n            var bindingsUpdater = ko.dependentObservable(\r\n                function() {\r\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\r\n                    // Register a dependency on the binding context to support observable view models.\r\n                    if (bindings && bindingContext._subscribable)\r\n                        bindingContext._subscribable();\r\n                    return bindings;\r\n                },\r\n                null, { disposeWhenNodeIsRemoved: node }\r\n            );\r\n\r\n            if (!bindings || !bindingsUpdater.isActive())\r\n                bindingsUpdater = null;\r\n        }\r\n\r\n        var bindingHandlerThatControlsDescendantBindings;\r\n        if (bindings) {\r\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n            // the latest binding value and registers a dependency on the binding updater.\r\n            var getValueAccessor = bindingsUpdater\r\n                ? function(bindingKey) {\r\n                    return function() {\r\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\r\n                    };\r\n                } : function(bindingKey) {\r\n                    return bindings[bindingKey];\r\n                };\r\n\r\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\r\n            function allBindings() {\r\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\r\n            }\r\n            // The following is the 3.x allBindings API\r\n            allBindings['get'] = function(key) {\r\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\r\n            };\r\n            allBindings['has'] = function(key) {\r\n                return key in bindings;\r\n            };\r\n\r\n            // First put the bindings into the right order\r\n            var orderedBindings = topologicalSortBindings(bindings);\r\n\r\n            // Go through the sorted bindings, calling init and update for each\r\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\r\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n                // so bindingKeyAndHandler.handler will always be nonnull.\r\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\r\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\r\n                    bindingKey = bindingKeyAndHandler.key;\r\n\r\n                if (node.nodeType === 8) {\r\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\r\n                }\r\n\r\n                try {\r\n                    // Run init, ignoring any dependencies\r\n                    if (typeof handlerInitFn == \"function\") {\r\n                        ko.dependencyDetection.ignore(function() {\r\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\r\n\r\n                            // If this binding handler claims to control descendant bindings, make a note of this\r\n                            if (initResult && initResult['controlsDescendantBindings']) {\r\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\r\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // Run update in its own computed wrapper\r\n                    if (typeof handlerUpdateFn == \"function\") {\r\n                        ko.dependentObservable(\r\n                            function() {\r\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\r\n                            },\r\n                            null,\r\n                            { disposeWhenNodeIsRemoved: node }\r\n                        );\r\n                    }\r\n                } catch (ex) {\r\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\r\n                    throw ex;\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\r\n        };\r\n    };\r\n\r\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\r\n    ko.storedBindingContextForNode = function (node, bindingContext) {\r\n        if (arguments.length == 2) {\r\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\r\n            if (bindingContext._subscribable)\r\n                bindingContext._subscribable._addNode(node);\r\n        } else {\r\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\r\n        }\r\n    }\r\n\r\n    function getBindingContext(viewModelOrBindingContext) {\r\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\r\n            ? viewModelOrBindingContext\r\n            : new ko.bindingContext(viewModelOrBindingContext);\r\n    }\r\n\r\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\r\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\r\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\r\n    };\r\n\r\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n        var context = getBindingContext(viewModelOrBindingContext);\r\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\r\n    };\r\n\r\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\r\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\r\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\r\n    };\r\n\r\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\r\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\r\n        if (!jQueryInstance && window['jQuery']) {\r\n            jQueryInstance = window['jQuery'];\r\n        }\r\n\r\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\r\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\r\n\r\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\r\n    };\r\n\r\n    // Retrieving binding context from arbitrary nodes\r\n    ko.contextFor = function(node) {\r\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\n        switch (node.nodeType) {\r\n            case 1:\r\n            case 8:\r\n                var context = ko.storedBindingContextForNode(node);\r\n                if (context) return context;\r\n                if (node.parentNode) return ko.contextFor(node.parentNode);\r\n                break;\r\n        }\r\n        return undefined;\r\n    };\r\n    ko.dataFor = function(node) {\r\n        var context = ko.contextFor(node);\r\n        return context ? context['$data'] : undefined;\r\n    };\r\n\r\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\r\n    ko.exportSymbol('applyBindings', ko.applyBindings);\r\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\r\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\r\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\r\n    ko.exportSymbol('contextFor', ko.contextFor);\r\n    ko.exportSymbol('dataFor', ko.dataFor);\r\n})();\r\n(function(undefined) {\r\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\r\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\r\n\r\n    ko.components = {\r\n        get: function(componentName, callback) {\r\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\r\n            if (cachedDefinition) {\r\n                // It's already loaded and cached. Reuse the same definition object.\r\n                // Note that for API consistency, even cache hits complete asynchronously by default.\r\n                // You can bypass this by putting synchronous:true on your component config.\r\n                if (cachedDefinition.isSynchronousComponent) {\r\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\r\n                        callback(cachedDefinition.definition);\r\n                    });\r\n                } else {\r\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\r\n                }\r\n            } else {\r\n                // Join the loading process that is already underway, or start a new one.\r\n                loadComponentAndNotify(componentName, callback);\r\n            }\r\n        },\r\n\r\n        clearCachedDefinition: function(componentName) {\r\n            delete loadedDefinitionsCache[componentName];\r\n        },\r\n\r\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\r\n    };\r\n\r\n    function getObjectOwnProperty(obj, propName) {\r\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\r\n    }\r\n\r\n    function loadComponentAndNotify(componentName, callback) {\r\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\r\n            completedAsync;\r\n        if (!subscribable) {\r\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\r\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\r\n            subscribable.subscribe(callback);\r\n\r\n            beginLoadingComponent(componentName, function(definition, config) {\r\n                var isSynchronousComponent = !!(config && config['synchronous']);\r\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\r\n                delete loadingSubscribablesCache[componentName];\r\n\r\n                // For API consistency, all loads complete asynchronously. However we want to avoid\r\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\r\n                // async).\r\n                //\r\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\r\n                // flag on your component configuration when you register it.\r\n                if (completedAsync || isSynchronousComponent) {\r\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\r\n                    // See comment in loaderRegistryBehaviors.js for reasoning\r\n                    subscribable['notifySubscribers'](definition);\r\n                } else {\r\n                    ko.tasks.schedule(function() {\r\n                        subscribable['notifySubscribers'](definition);\r\n                    });\r\n                }\r\n            });\r\n            completedAsync = true;\r\n        } else {\r\n            subscribable.subscribe(callback);\r\n        }\r\n    }\r\n\r\n    function beginLoadingComponent(componentName, callback) {\r\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\r\n            if (config) {\r\n                // We have a config, so now load its definition\r\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\r\n                    callback(definition, config);\r\n                });\r\n            } else {\r\n                // The component has no config - it's unknown to all the loaders.\r\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\r\n                // process and this callback would not run. For this callback to run, all loaders must\r\n                // have confirmed they don't know about this component.\r\n                callback(null, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\r\n        // On the first call in the stack, start with the full set of loaders\r\n        if (!candidateLoaders) {\r\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\r\n        }\r\n\r\n        // Try the next candidate\r\n        var currentCandidateLoader = candidateLoaders.shift();\r\n        if (currentCandidateLoader) {\r\n            var methodInstance = currentCandidateLoader[methodName];\r\n            if (methodInstance) {\r\n                var wasAborted = false,\r\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\r\n                        if (wasAborted) {\r\n                            callback(null);\r\n                        } else if (result !== null) {\r\n                            // This candidate returned a value. Use it.\r\n                            callback(result);\r\n                        } else {\r\n                            // Try the next candidate\r\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                        }\r\n                    }));\r\n\r\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\r\n                // that we'll extend the API to support synchronous return values in the future. It won't be\r\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\r\n                if (synchronousReturnValue !== undefined) {\r\n                    wasAborted = true;\r\n\r\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\r\n                    // KO's specs running tidily, since we can observe the loading got aborted without\r\n                    // having exceptions cluttering up the console too.\r\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\r\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\r\n                    }\r\n                }\r\n            } else {\r\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\r\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n            }\r\n        } else {\r\n            // No candidates returned a value\r\n            callback(null);\r\n        }\r\n    }\r\n\r\n    // Reference the loaders via string name so it's possible for developers\r\n    // to replace the whole array by assigning to ko.components.loaders\r\n    ko.components['loaders'] = [];\r\n\r\n    ko.exportSymbol('components', ko.components);\r\n    ko.exportSymbol('components.get', ko.components.get);\r\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\r\n})();\r\n(function(undefined) {\r\n\r\n    // The default loader is responsible for two things:\r\n    // 1. Maintaining the default in-memory registry of component configuration objects\r\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\r\n    // 2. Answering requests for components by fetching configuration objects\r\n    //    from that default in-memory registry and resolving them into standard\r\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\r\n    // Custom loaders may override either of these facilities, i.e.,\r\n    // 1. To supply configuration objects from some other source (e.g., conventions)\r\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\r\n\r\n    var defaultConfigRegistry = {};\r\n\r\n    ko.components.register = function(componentName, config) {\r\n        if (!config) {\r\n            throw new Error('Invalid configuration for ' + componentName);\r\n        }\r\n\r\n        if (ko.components.isRegistered(componentName)) {\r\n            throw new Error('Component ' + componentName + ' is already registered');\r\n        }\r\n\r\n        defaultConfigRegistry[componentName] = config;\r\n    };\r\n\r\n    ko.components.isRegistered = function(componentName) {\r\n        return defaultConfigRegistry.hasOwnProperty(componentName);\r\n    };\r\n\r\n    ko.components.unregister = function(componentName) {\r\n        delete defaultConfigRegistry[componentName];\r\n        ko.components.clearCachedDefinition(componentName);\r\n    };\r\n\r\n    ko.components.defaultLoader = {\r\n        'getConfig': function(componentName, callback) {\r\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\r\n                ? defaultConfigRegistry[componentName]\r\n                : null;\r\n            callback(result);\r\n        },\r\n\r\n        'loadComponent': function(componentName, config, callback) {\r\n            var errorCallback = makeErrorCallback(componentName);\r\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\r\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\r\n            });\r\n        },\r\n\r\n        'loadTemplate': function(componentName, templateConfig, callback) {\r\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\r\n        },\r\n\r\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\r\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\r\n        }\r\n    };\r\n\r\n    var createViewModelKey = 'createViewModel';\r\n\r\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\r\n    // into the standard component definition format:\r\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\r\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\r\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\r\n    // so this is implemented manually below.\r\n    function resolveConfig(componentName, errorCallback, config, callback) {\r\n        var result = {},\r\n            makeCallBackWhenZero = 2,\r\n            tryIssueCallback = function() {\r\n                if (--makeCallBackWhenZero === 0) {\r\n                    callback(result);\r\n                }\r\n            },\r\n            templateConfig = config['template'],\r\n            viewModelConfig = config['viewModel'];\r\n\r\n        if (templateConfig) {\r\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\r\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\r\n                    result['template'] = resolvedTemplate;\r\n                    tryIssueCallback();\r\n                });\r\n            });\r\n        } else {\r\n            tryIssueCallback();\r\n        }\r\n\r\n        if (viewModelConfig) {\r\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\r\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\r\n                    result[createViewModelKey] = resolvedViewModel;\r\n                    tryIssueCallback();\r\n                });\r\n            });\r\n        } else {\r\n            tryIssueCallback();\r\n        }\r\n    }\r\n\r\n    function resolveTemplate(errorCallback, templateConfig, callback) {\r\n        if (typeof templateConfig === 'string') {\r\n            // Markup - parse it\r\n            callback(ko.utils.parseHtmlFragment(templateConfig));\r\n        } else if (templateConfig instanceof Array) {\r\n            // Assume already an array of DOM nodes - pass through unchanged\r\n            callback(templateConfig);\r\n        } else if (isDocumentFragment(templateConfig)) {\r\n            // Document fragment - use its child nodes\r\n            callback(ko.utils.makeArray(templateConfig.childNodes));\r\n        } else if (templateConfig['element']) {\r\n            var element = templateConfig['element'];\r\n            if (isDomElement(element)) {\r\n                // Element instance - copy its child nodes\r\n                callback(cloneNodesFromTemplateSourceElement(element));\r\n            } else if (typeof element === 'string') {\r\n                // Element ID - find it, then copy its child nodes\r\n                var elemInstance = document.getElementById(element);\r\n                if (elemInstance) {\r\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\r\n                } else {\r\n                    errorCallback('Cannot find element with ID ' + element);\r\n                }\r\n            } else {\r\n                errorCallback('Unknown element type: ' + element);\r\n            }\r\n        } else {\r\n            errorCallback('Unknown template value: ' + templateConfig);\r\n        }\r\n    }\r\n\r\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\r\n        if (typeof viewModelConfig === 'function') {\r\n            // Constructor - convert to standard factory function format\r\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\r\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\r\n            // be used in factory functions, not viewmodel constructors.\r\n            callback(function (params /*, componentInfo */) {\r\n                return new viewModelConfig(params);\r\n            });\r\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\r\n            // Already a factory function - use it as-is\r\n            callback(viewModelConfig[createViewModelKey]);\r\n        } else if ('instance' in viewModelConfig) {\r\n            // Fixed object instance - promote to createViewModel format for API consistency\r\n            var fixedInstance = viewModelConfig['instance'];\r\n            callback(function (params, componentInfo) {\r\n                return fixedInstance;\r\n            });\r\n        } else if ('viewModel' in viewModelConfig) {\r\n            // Resolved AMD module whose value is of the form { viewModel: ... }\r\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\r\n        } else {\r\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\r\n        }\r\n    }\r\n\r\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\r\n        switch (ko.utils.tagNameLower(elemInstance)) {\r\n            case 'script':\r\n                return ko.utils.parseHtmlFragment(elemInstance.text);\r\n            case 'textarea':\r\n                return ko.utils.parseHtmlFragment(elemInstance.value);\r\n            case 'template':\r\n                // For browsers with proper <template> element support (i.e., where the .content property\r\n                // gives a document fragment), use that document fragment.\r\n                if (isDocumentFragment(elemInstance.content)) {\r\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\r\n                }\r\n        }\r\n\r\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\r\n        // understand <template> and just treat it as a regular container\r\n        return ko.utils.cloneNodes(elemInstance.childNodes);\r\n    }\r\n\r\n    function isDomElement(obj) {\r\n        if (window['HTMLElement']) {\r\n            return obj instanceof HTMLElement;\r\n        } else {\r\n            return obj && obj.tagName && obj.nodeType === 1;\r\n        }\r\n    }\r\n\r\n    function isDocumentFragment(obj) {\r\n        if (window['DocumentFragment']) {\r\n            return obj instanceof DocumentFragment;\r\n        } else {\r\n            return obj && obj.nodeType === 11;\r\n        }\r\n    }\r\n\r\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\r\n        if (typeof config['require'] === 'string') {\r\n            // The config is the value of an AMD module\r\n            if (amdRequire || window['require']) {\r\n                (amdRequire || window['require'])([config['require']], callback);\r\n            } else {\r\n                errorCallback('Uses require, but no AMD loader is present');\r\n            }\r\n        } else {\r\n            callback(config);\r\n        }\r\n    }\r\n\r\n    function makeErrorCallback(componentName) {\r\n        return function (message) {\r\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\r\n        };\r\n    }\r\n\r\n    ko.exportSymbol('components.register', ko.components.register);\r\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\r\n    ko.exportSymbol('components.unregister', ko.components.unregister);\r\n\r\n    // Expose the default loader so that developers can directly ask it for configuration\r\n    // or to resolve configuration\r\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\r\n\r\n    // By default, the default loader is the only registered component loader\r\n    ko.components['loaders'].push(ko.components.defaultLoader);\r\n\r\n    // Privately expose the underlying config registry for use in old-IE shim\r\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\r\n})();\r\n(function (undefined) {\r\n    // Overridable API for determining which component name applies to a given node. By overriding this,\r\n    // you can for example map specific tagNames to components that are not preregistered.\r\n    ko.components['getComponentNameForNode'] = function(node) {\r\n        var tagNameLower = ko.utils.tagNameLower(node);\r\n        if (ko.components.isRegistered(tagNameLower)) {\r\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\r\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\r\n                return tagNameLower;\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\r\n        // Determine if it's really a custom element matching a component\r\n        if (node.nodeType === 1) {\r\n            var componentName = ko.components['getComponentNameForNode'](node);\r\n            if (componentName) {\r\n                // It does represent a component, so add a component binding for it\r\n                allBindings = allBindings || {};\r\n\r\n                if (allBindings['component']) {\r\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\r\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\r\n                }\r\n\r\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\r\n\r\n                allBindings['component'] = valueAccessors\r\n                    ? function() { return componentBindingValue; }\r\n                    : componentBindingValue;\r\n            }\r\n        }\r\n\r\n        return allBindings;\r\n    }\r\n\r\n    var nativeBindingProviderInstance = new ko.bindingProvider();\r\n\r\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\r\n        var paramsAttribute = elem.getAttribute('params');\r\n\r\n        if (paramsAttribute) {\r\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\r\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\r\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\r\n                }),\r\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\r\n                    var paramValue = paramValueComputed.peek();\r\n                    // Does the evaluation of the parameter value unwrap any observables?\r\n                    if (!paramValueComputed.isActive()) {\r\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\r\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\r\n                        return paramValue;\r\n                    } else {\r\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\r\n                        // level of observability, and any inner (resulting model value) level of observability.\r\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\r\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\r\n                        return ko.computed({\r\n                            'read': function() {\r\n                                return ko.utils.unwrapObservable(paramValueComputed());\r\n                            },\r\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\r\n                                paramValueComputed()(value);\r\n                            },\r\n                            disposeWhenNodeIsRemoved: elem\r\n                        });\r\n                    }\r\n                });\r\n\r\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\r\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\r\n            // (model value) observability, or in case the model value observable has subobservables.\r\n            if (!result.hasOwnProperty('$raw')) {\r\n                result['$raw'] = rawParamComputedValues;\r\n            }\r\n\r\n            return result;\r\n        } else {\r\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\r\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\r\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\r\n            return { '$raw': {} };\r\n        }\r\n    }\r\n\r\n    // --------------------------------------------------------------------------------\r\n    // Compatibility code for older (pre-HTML5) IE browsers\r\n\r\n    if (ko.utils.ieVersion < 9) {\r\n        // Whenever you preregister a component, enable it as a custom element in the current document\r\n        ko.components['register'] = (function(originalFunction) {\r\n            return function(componentName) {\r\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\r\n                return originalFunction.apply(this, arguments);\r\n            }\r\n        })(ko.components['register']);\r\n\r\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\r\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\r\n        document.createDocumentFragment = (function(originalFunction) {\r\n            return function() {\r\n                var newDocFrag = originalFunction(),\r\n                    allComponents = ko.components._allRegisteredComponents;\r\n                for (var componentName in allComponents) {\r\n                    if (allComponents.hasOwnProperty(componentName)) {\r\n                        newDocFrag.createElement(componentName);\r\n                    }\r\n                }\r\n                return newDocFrag;\r\n            };\r\n        })(document.createDocumentFragment);\r\n    }\r\n})();(function(undefined) {\r\n\r\n    var componentLoadingOperationUniqueId = 0;\r\n\r\n    ko.bindingHandlers['component'] = {\r\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\r\n            var currentViewModel,\r\n                currentLoadingOperationId,\r\n                disposeAssociatedComponentViewModel = function () {\r\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\r\n                    if (typeof currentViewModelDispose === 'function') {\r\n                        currentViewModelDispose.call(currentViewModel);\r\n                    }\r\n                    currentViewModel = null;\r\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\r\n                    currentLoadingOperationId = null;\r\n                },\r\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\r\n\r\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\r\n\r\n            ko.computed(function () {\r\n                var value = ko.utils.unwrapObservable(valueAccessor()),\r\n                    componentName, componentParams;\r\n\r\n                if (typeof value === 'string') {\r\n                    componentName = value;\r\n                } else {\r\n                    componentName = ko.utils.unwrapObservable(value['name']);\r\n                    componentParams = ko.utils.unwrapObservable(value['params']);\r\n                }\r\n\r\n                if (!componentName) {\r\n                    throw new Error('No component name specified');\r\n                }\r\n\r\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\r\n                ko.components.get(componentName, function(componentDefinition) {\r\n                    // If this is not the current load operation for this element, ignore it.\r\n                    if (currentLoadingOperationId !== loadingOperationId) {\r\n                        return;\r\n                    }\r\n\r\n                    // Clean up previous state\r\n                    disposeAssociatedComponentViewModel();\r\n\r\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\r\n                    if (!componentDefinition) {\r\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\r\n                    }\r\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\r\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\r\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\r\n                            ctx['$component'] = componentViewModel;\r\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\r\n                        });\r\n                    currentViewModel = componentViewModel;\r\n                    ko.applyBindingsToDescendants(childBindingContext, element);\r\n                });\r\n            }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings['component'] = true;\r\n\r\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\r\n        var template = componentDefinition['template'];\r\n        if (!template) {\r\n            throw new Error('Component \\'' + componentName + '\\' has no template');\r\n        }\r\n\r\n        var clonedNodesArray = ko.utils.cloneNodes(template);\r\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\r\n    }\r\n\r\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\r\n        var componentViewModelFactory = componentDefinition['createViewModel'];\r\n        return componentViewModelFactory\r\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\r\n            : componentParams; // Template-only component\r\n    }\r\n\r\n})();\r\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\r\nko.bindingHandlers['attr'] = {\r\n    'update': function(element, valueAccessor, allBindings) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\r\n            attrValue = ko.utils.unwrapObservable(attrValue);\r\n\r\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\r\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\r\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\r\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\r\n            if (toRemove)\r\n                element.removeAttribute(attrName);\r\n\r\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\r\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\r\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\r\n            // property for IE <= 8.\r\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\r\n                attrName = attrHtmlToJavascriptMap[attrName];\r\n                if (toRemove)\r\n                    element.removeAttribute(attrName);\r\n                else\r\n                    element[attrName] = attrValue;\r\n            } else if (!toRemove) {\r\n                element.setAttribute(attrName, attrValue.toString());\r\n            }\r\n\r\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\r\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\r\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\r\n            // entirely, and there's no strong reason to allow for such casing in HTML.\r\n            if (attrName === \"name\") {\r\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\r\n            }\r\n        });\r\n    }\r\n};\r\n(function() {\r\n\r\nko.bindingHandlers['checked'] = {\r\n    'after': ['value', 'attr'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        var checkedValue = ko.pureComputed(function() {\r\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\r\n            if (allBindings['has']('checkedValue')) {\r\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n            } else if (allBindings['has']('value')) {\r\n                return ko.utils.unwrapObservable(allBindings.get('value'));\r\n            }\r\n\r\n            return element.value;\r\n        });\r\n\r\n        function updateModel() {\r\n            // This updates the model value from the view value.\r\n            // It runs in response to DOM events (click) and changes in checkedValue.\r\n            var isChecked = element.checked,\r\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\r\n\r\n            // When we're first setting up this computed, don't change any model state.\r\n            if (ko.computedContext.isInitial()) {\r\n                return;\r\n            }\r\n\r\n            // We can ignore unchecked radio buttons, because some other radio\r\n            // button will be getting checked, and that one can take care of updating state.\r\n            if (isRadio && !isChecked) {\r\n                return;\r\n            }\r\n\r\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n            if (valueIsArray) {\r\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\r\n                if (oldElemValue !== elemValue) {\r\n                    // When we're responding to the checkedValue changing, and the element is\r\n                    // currently checked, replace the old elem value with the new elem value\r\n                    // in the model array.\r\n                    if (isChecked) {\r\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\r\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\r\n                    }\r\n\r\n                    oldElemValue = elemValue;\r\n                } else {\r\n                    // When we're responding to the user having checked/unchecked a checkbox,\r\n                    // add/remove the element value to the model array.\r\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\r\n                }\r\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\r\n                    modelValue(writableValue);\r\n                }\r\n            } else {\r\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n            }\r\n        };\r\n\r\n        function updateView() {\r\n            // This updates the view value from the model value.\r\n            // It runs in response to changes in the bound (checked) value.\r\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n            if (valueIsArray) {\r\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\r\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n            } else if (isCheckbox) {\r\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\r\n                element.checked = modelValue;\r\n            } else {\r\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\r\n                element.checked = (checkedValue() === modelValue);\r\n            }\r\n        };\r\n\r\n        var isCheckbox = element.type == \"checkbox\",\r\n            isRadio = element.type == \"radio\";\r\n\r\n        // Only bind to check boxes and radio buttons\r\n        if (!isCheckbox && !isRadio) {\r\n            return;\r\n        }\r\n\r\n        var rawValue = valueAccessor(),\r\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\r\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\r\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\r\n            useCheckedValue = isRadio || valueIsArray;\r\n\r\n        // IE 6 won't allow radio buttons to be selected unless they have a name\r\n        if (isRadio && !element.name)\r\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\r\n\r\n        // Set up two computeds to update the binding:\r\n\r\n        // The first responds to changes in the checkedValue value and to element clicks\r\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\r\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\r\n\r\n        // The second responds to changes in the model value (the one associated with the checked binding)\r\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n        rawValue = undefined;\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['checked'] = true;\r\n\r\nko.bindingHandlers['checkedValue'] = {\r\n    'update': function (element, valueAccessor) {\r\n        element.value = ko.utils.unwrapObservable(valueAccessor());\r\n    }\r\n};\r\n\r\n})();var classesWrittenByBindingKey = '__ko__cssValue';\r\nko.bindingHandlers['css'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        if (value !== null && typeof value == \"object\") {\r\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\r\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\r\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\r\n            });\r\n        } else {\r\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\r\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\r\n            element[classesWrittenByBindingKey] = value;\r\n            ko.utils.toggleDomNodeCssClass(element, value, true);\r\n        }\r\n    }\r\n};\r\nko.bindingHandlers['enable'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        if (value && element.disabled)\r\n            element.removeAttribute(\"disabled\");\r\n        else if ((!value) && (!element.disabled))\r\n            element.disabled = true;\r\n    }\r\n};\r\n\r\nko.bindingHandlers['disable'] = {\r\n    'update': function (element, valueAccessor) {\r\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n    }\r\n};\r\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\r\n// e.g. click:handler instead of the usual full-length event:{click:handler}\r\nfunction makeEventHandlerShortcut(eventName) {\r\n    ko.bindingHandlers[eventName] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var newValueAccessor = function () {\r\n                var result = {};\r\n                result[eventName] = valueAccessor();\r\n                return result;\r\n            };\r\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\r\n        }\r\n    }\r\n}\r\n\r\nko.bindingHandlers['event'] = {\r\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        var eventsToHandle = valueAccessor() || {};\r\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\r\n            if (typeof eventName == \"string\") {\r\n                ko.utils.registerEventHandler(element, eventName, function (event) {\r\n                    var handlerReturnValue;\r\n                    var handlerFunction = valueAccessor()[eventName];\r\n                    if (!handlerFunction)\r\n                        return;\r\n\r\n                    try {\r\n                        // Take all the event args, and prefix with the viewmodel\r\n                        var argsForHandler = ko.utils.makeArray(arguments);\r\n                        viewModel = bindingContext['$data'];\r\n                        argsForHandler.unshift(viewModel);\r\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\r\n                    } finally {\r\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                            if (event.preventDefault)\r\n                                event.preventDefault();\r\n                            else\r\n                                event.returnValue = false;\r\n                        }\r\n                    }\r\n\r\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\r\n                    if (!bubble) {\r\n                        event.cancelBubble = true;\r\n                        if (event.stopPropagation)\r\n                            event.stopPropagation();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\r\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\r\nko.bindingHandlers['foreach'] = {\r\n    makeTemplateValueAccessor: function(valueAccessor) {\r\n        return function() {\r\n            var modelValue = valueAccessor(),\r\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n            // If unwrappedValue is the array, pass in the wrapped value on its own\r\n            // The value will be unwrapped and tracked within the template binding\r\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\r\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\r\n\r\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n            ko.utils.unwrapObservable(modelValue);\r\n            return {\r\n                'foreach': unwrappedValue['data'],\r\n                'as': unwrappedValue['as'],\r\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\r\n                'afterAdd': unwrappedValue['afterAdd'],\r\n                'beforeRemove': unwrappedValue['beforeRemove'],\r\n                'afterRender': unwrappedValue['afterRender'],\r\n                'beforeMove': unwrappedValue['beforeMove'],\r\n                'afterMove': unwrappedValue['afterMove'],\r\n                'templateEngine': ko.nativeTemplateEngine.instance\r\n            };\r\n        };\r\n    },\r\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\r\n    },\r\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\r\n    }\r\n};\r\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\r\nko.virtualElements.allowedBindings['foreach'] = true;\r\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\r\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\r\nko.bindingHandlers['hasfocus'] = {\r\n    'init': function(element, valueAccessor, allBindings) {\r\n        var handleElementFocusChange = function(isFocused) {\r\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\r\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\r\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\r\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\r\n            // from calling 'blur()' on the element when it loses focus.\r\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\r\n            element[hasfocusUpdatingProperty] = true;\r\n            var ownerDoc = element.ownerDocument;\r\n            if (\"activeElement\" in ownerDoc) {\r\n                var active;\r\n                try {\r\n                    active = ownerDoc.activeElement;\r\n                } catch(e) {\r\n                    // IE9 throws if you access activeElement during page load (see issue #703)\r\n                    active = ownerDoc.body;\r\n                }\r\n                isFocused = (active === element);\r\n            }\r\n            var modelValue = valueAccessor();\r\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\r\n\r\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\r\n            element[hasfocusLastValue] = isFocused;\r\n            element[hasfocusUpdatingProperty] = false;\r\n        };\r\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\r\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\r\n\r\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\r\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\r\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\r\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\r\n    },\r\n    'update': function(element, valueAccessor) {\r\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\r\n\r\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\r\n            value ? element.focus() : element.blur();\r\n\r\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\r\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\r\n            // element was focused already.\r\n            if (!value && element[hasfocusLastValue]) {\r\n                element.ownerDocument.body.focus();\r\n            }\r\n\r\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\r\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\r\n        }\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\r\n\r\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\r\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\r\nko.bindingHandlers['html'] = {\r\n    'init': function() {\r\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        // setHtml will unwrap the value if needed\r\n        ko.utils.setHtml(element, valueAccessor());\r\n    }\r\n};\r\n// Makes a binding like with or if\r\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\r\n    ko.bindingHandlers[bindingKey] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var didDisplayOnLastUpdate,\r\n                savedNodes;\r\n            ko.computed(function() {\r\n                var rawValue = valueAccessor(),\r\n                    dataValue = ko.utils.unwrapObservable(rawValue),\r\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\r\n                    isFirstRender = !savedNodes,\r\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\r\n\r\n                if (needsRefresh) {\r\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\r\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\r\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\r\n                    }\r\n\r\n                    if (shouldDisplay) {\r\n                        if (!isFirstRender) {\r\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\r\n                        }\r\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\r\n                    } else {\r\n                        ko.virtualElements.emptyNode(element);\r\n                    }\r\n\r\n                    didDisplayOnLastUpdate = shouldDisplay;\r\n                }\r\n            }, null, { disposeWhenNodeIsRemoved: element });\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\r\n    ko.virtualElements.allowedBindings[bindingKey] = true;\r\n}\r\n\r\n// Construct the actual binding handlers\r\nmakeWithIfBinding('if');\r\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\r\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\r\n    function(bindingContext, dataValue) {\r\n        return bindingContext.createStaticChildContext(dataValue);\r\n    }\r\n);\r\nvar captionPlaceholder = {};\r\nko.bindingHandlers['options'] = {\r\n    'init': function(element) {\r\n        if (ko.utils.tagNameLower(element) !== \"select\")\r\n            throw new Error(\"options binding applies only to SELECT elements\");\r\n\r\n        // Remove all existing <option>s.\r\n        while (element.length > 0) {\r\n            element.remove(0);\r\n        }\r\n\r\n        // Ensures that the binding processor doesn't try to bind the options\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor, allBindings) {\r\n        function selectedOptions() {\r\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\r\n        }\r\n\r\n        var selectWasPreviouslyEmpty = element.length == 0,\r\n            multiple = element.multiple,\r\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\r\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\r\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n            arrayToDomNodeChildrenOptions = {},\r\n            captionValue,\r\n            filteredArray,\r\n            previousSelectedValues = [];\r\n\r\n        if (!valueAllowUnset) {\r\n            if (multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\r\n            } else if (element.selectedIndex >= 0) {\r\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\r\n            }\r\n        }\r\n\r\n        if (unwrappedArray) {\r\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                unwrappedArray = [unwrappedArray];\r\n\r\n            // Filter out any entries marked as destroyed\r\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n            });\r\n\r\n            // If caption is included, add it to the array\r\n            if (allBindings['has']('optionsCaption')) {\r\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                // If caption value is null or undefined, don't show a caption\r\n                if (captionValue !== null && captionValue !== undefined) {\r\n                    filteredArray.unshift(captionPlaceholder);\r\n                }\r\n            }\r\n        } else {\r\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\r\n        }\r\n\r\n        function applyToObject(object, predicate, defaultValue) {\r\n            var predicateType = typeof predicate;\r\n            if (predicateType == \"function\")    // Given a function; run it against the data value\r\n                return predicate(object);\r\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\r\n                return object[predicate];\r\n            else                                // Given no optionsText arg; use the data value itself\r\n                return defaultValue;\r\n        }\r\n\r\n        // The following functions can run at two different times:\r\n        // The first is when the whole array is being updated directly from this binding handler.\r\n        // The second is when an observable value for a specific array entry is updated.\r\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\r\n        var itemUpdate = false;\r\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\r\n            if (oldOptions.length) {\r\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\r\n                itemUpdate = true;\r\n            }\r\n            var option = element.ownerDocument.createElement(\"option\");\r\n            if (arrayEntry === captionPlaceholder) {\r\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                ko.selectExtensions.writeValue(option, undefined);\r\n            } else {\r\n                // Apply a value to the option element\r\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\r\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\r\n\r\n                // Apply some text to the option element\r\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\r\n                ko.utils.setTextContent(option, optionText);\r\n            }\r\n            return [option];\r\n        }\r\n\r\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\r\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\r\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\r\n            function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n        function setSelectionCallback(arrayEntry, newOptions) {\r\n            if (itemUpdate && valueAllowUnset) {\r\n                // The model value is authoritative, so make sure its value is the one selected\r\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\r\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n            } else if (previousSelectedValues.length) {\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\r\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\r\n\r\n                // If this option was changed from being selected during a single-item update, notify the change\r\n                if (itemUpdate && !isSelected) {\r\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var callback = setSelectionCallback;\r\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\r\n            callback = function(arrayEntry, newOptions) {\r\n                setSelectionCallback(arrayEntry, newOptions);\r\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\r\n            }\r\n        }\r\n\r\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\r\n\r\n        ko.dependencyDetection.ignore(function () {\r\n            if (valueAllowUnset) {\r\n                // The model value is authoritative, so make sure its value is the one selected\r\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n            } else {\r\n                // Determine if the selection has changed as a result of updating the options list\r\n                var selectionChanged;\r\n                if (multiple) {\r\n                    // For a multiple-select box, compare the new selection count to the previous one\r\n                    // But if nothing was selected before, the selection can't have changed\r\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\r\n                } else {\r\n                    // For a single-select box, compare the current value to the previous value\r\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\r\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n                }\r\n\r\n                // Ensure consistency between model value and selected option.\r\n                // If the dropdown was changed so that selection is no longer the same,\r\n                // notify the value or selectedOptions binding.\r\n                if (selectionChanged) {\r\n                    ko.utils.triggerEvent(element, \"change\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Workaround for IE bug\r\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\r\n\r\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\r\n            element.scrollTop = previousScrollTop;\r\n    }\r\n};\r\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\r\nko.bindingHandlers['selectedOptions'] = {\r\n    'after': ['options', 'foreach'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        ko.utils.registerEventHandler(element, \"change\", function () {\r\n            var value = valueAccessor(), valueToWrite = [];\r\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                if (node.selected)\r\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\r\n            });\r\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\r\n        });\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        if (ko.utils.tagNameLower(element) != \"select\")\r\n            throw new Error(\"values binding applies only to SELECT elements\");\r\n\r\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\r\n            previousScrollTop = element.scrollTop;\r\n\r\n        if (newValue && typeof newValue.length == \"number\") {\r\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\r\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\r\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\r\n                }\r\n            });\r\n        }\r\n\r\n        element.scrollTop = previousScrollTop;\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\r\nko.bindingHandlers['style'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\r\n            styleValue = ko.utils.unwrapObservable(styleValue);\r\n\r\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\r\n                // Empty string removes the value, whereas null/undefined have no effect\r\n                styleValue = \"\";\r\n            }\r\n\r\n            element.style[styleName] = styleValue;\r\n        });\r\n    }\r\n};\r\nko.bindingHandlers['submit'] = {\r\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        if (typeof valueAccessor() != \"function\")\r\n            throw new Error(\"The value for a submit binding must be a function\");\r\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\r\n            var handlerReturnValue;\r\n            var value = valueAccessor();\r\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\r\n            finally {\r\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                    if (event.preventDefault)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nko.bindingHandlers['text'] = {\r\n    'init': function() {\r\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\r\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        ko.utils.setTextContent(element, valueAccessor());\r\n    }\r\n};\r\nko.virtualElements.allowedBindings['text'] = true;\r\n(function () {\r\n\r\nif (window && window.navigator) {\r\n    var parseVersion = function (matches) {\r\n        if (matches) {\r\n            return parseFloat(matches[1]);\r\n        }\r\n    };\r\n\r\n    // Detect various browser versions because some old versions don't fully support the 'input' event\r\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\r\n        userAgent = window.navigator.userAgent,\r\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\r\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\r\n}\r\n\r\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\r\n// But it does fire the 'selectionchange' event on many of those, presumably because the\r\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\r\n// fired at the document level only and doesn't directly indicate which element changed. We\r\n// set up just one event handler for the document and use 'activeElement' to determine which\r\n// element was changed.\r\nif (ko.utils.ieVersion < 10) {\r\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\r\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\r\n    var selectionChangeHandler = function(event) {\r\n        var target = this.activeElement,\r\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\r\n        if (handler) {\r\n            handler(event);\r\n        }\r\n    };\r\n    var registerForSelectionChangeEvent = function (element, handler) {\r\n        var ownerDoc = element.ownerDocument;\r\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\r\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\r\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\r\n        }\r\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\r\n    };\r\n}\r\n\r\nko.bindingHandlers['textInput'] = {\r\n    'init': function (element, valueAccessor, allBindings) {\r\n\r\n        var previousElementValue = element.value,\r\n            timeoutHandle,\r\n            elementValueBeforeEvent;\r\n\r\n        var updateModel = function (event) {\r\n            clearTimeout(timeoutHandle);\r\n            elementValueBeforeEvent = timeoutHandle = undefined;\r\n\r\n            var elementValue = element.value;\r\n            if (previousElementValue !== elementValue) {\r\n                // Provide a way for tests to know exactly which event was processed\r\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\r\n                previousElementValue = elementValue;\r\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\r\n            }\r\n        };\r\n\r\n        var deferUpdateModel = function (event) {\r\n            if (!timeoutHandle) {\r\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\r\n                // event firing and the updateModel function running. This allows us to ignore model\r\n                // updates that are from the previous state of the element, usually due to techniques\r\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\r\n                elementValueBeforeEvent = element.value;\r\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\r\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\r\n            }\r\n        };\r\n\r\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\r\n        // so we'll make sure all updates are asynchronous\r\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\r\n\r\n        var updateView = function () {\r\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n            if (modelValue === null || modelValue === undefined) {\r\n                modelValue = '';\r\n            }\r\n\r\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\r\n                ko.utils.setTimeout(updateView, 4);\r\n                return;\r\n            }\r\n\r\n            // Update the element only if the element and model are different. On some browsers, updating the value\r\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\r\n            if (element.value !== modelValue) {\r\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\r\n                element.value = modelValue;\r\n            }\r\n        };\r\n\r\n        var onEvent = function (event, handler) {\r\n            ko.utils.registerEventHandler(element, event, handler);\r\n        };\r\n\r\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\r\n            // Provide a way for tests to specify exactly which events are bound\r\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\r\n                if (eventName.slice(0,5) == 'after') {\r\n                    onEvent(eventName.slice(5), deferUpdateModel);\r\n                } else {\r\n                    onEvent(eventName, updateModel);\r\n                }\r\n            });\r\n        } else {\r\n            if (ko.utils.ieVersion < 10) {\r\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\r\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\r\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\r\n                // when using autocomplete, we'll use 'propertychange' for it also.\r\n                onEvent('propertychange', function(event) {\r\n                    if (event.propertyName === 'value') {\r\n                        ieUpdateModel(event);\r\n                    }\r\n                });\r\n\r\n                if (ko.utils.ieVersion == 8) {\r\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\r\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\r\n                    // events too.\r\n                    onEvent('keyup', updateModel);      // A single keystoke\r\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\r\n                }\r\n                if (ko.utils.ieVersion >= 8) {\r\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\r\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\r\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\r\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\r\n                    // These are also needed in IE8 because of the bug described above.\r\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\r\n                    onEvent('dragend', deferUpdateModel);\r\n                }\r\n            } else {\r\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\r\n                // through the user interface.\r\n                onEvent('input', updateModel);\r\n\r\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\r\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\r\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                    onEvent('paste', deferUpdateModel);\r\n                    onEvent('cut', deferUpdateModel);\r\n                } else if (operaVersion < 11) {\r\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\r\n                    // We can try to catch some of those using 'keydown'.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                } else if (firefoxVersion < 4.0) {\r\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\r\n                    onEvent('DOMAutoComplete', updateModel);\r\n\r\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\r\n                    onEvent('dragdrop', updateModel);       // <3.5\r\n                    onEvent('drop', updateModel);           // 3.5\r\n                }\r\n            }\r\n        }\r\n\r\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\r\n        onEvent('change', updateModel);\r\n\r\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['textInput'] = true;\r\n\r\n// textinput is an alias for textInput\r\nko.bindingHandlers['textinput'] = {\r\n    // preprocess is the only way to set up a full alias\r\n    'preprocess': function (value, name, addBinding) {\r\n        addBinding('textInput', value);\r\n    }\r\n};\r\n\r\n})();ko.bindingHandlers['uniqueName'] = {\r\n    'init': function (element, valueAccessor) {\r\n        if (valueAccessor()) {\r\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\r\n            ko.utils.setElementName(element, name);\r\n        }\r\n    }\r\n};\r\nko.bindingHandlers['uniqueName'].currentIndex = 0;\r\nko.bindingHandlers['value'] = {\r\n    'after': ['options', 'foreach'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\r\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\r\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\r\n            return;\r\n        }\r\n\r\n        // Always catch \"change\" event; possibly other events too if asked\r\n        var eventsToCatch = [\"change\"];\r\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\r\n        var propertyChangedFired = false;\r\n        var elementValueBeforeEvent = null;\r\n\r\n        if (requestedEventsToCatch) {\r\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\r\n                requestedEventsToCatch = [requestedEventsToCatch];\r\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\r\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\r\n        }\r\n\r\n        var valueUpdateHandler = function() {\r\n            elementValueBeforeEvent = null;\r\n            propertyChangedFired = false;\r\n            var modelValue = valueAccessor();\r\n            var elementValue = ko.selectExtensions.readValue(element);\r\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\r\n        }\r\n\r\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\r\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\r\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\r\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\r\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\r\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\r\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\r\n            ko.utils.registerEventHandler(element, \"blur\", function() {\r\n                if (propertyChangedFired) {\r\n                    valueUpdateHandler();\r\n                }\r\n            });\r\n        }\r\n\r\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\r\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\r\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\r\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\r\n            var handler = valueUpdateHandler;\r\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\r\n                handler = function() {\r\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\r\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\r\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\r\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\r\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\r\n                    // techniques like rateLimit can trigger model changes at critical moments that will\r\n                    // override the user's inputs, causing keystrokes to be lost.\r\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\r\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\r\n                };\r\n                eventName = eventName.substring(\"after\".length);\r\n            }\r\n            ko.utils.registerEventHandler(element, eventName, handler);\r\n        });\r\n\r\n        var updateFromModel = function () {\r\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n            var elementValue = ko.selectExtensions.readValue(element);\r\n\r\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\r\n                ko.utils.setTimeout(updateFromModel, 0);\r\n                return;\r\n            }\r\n\r\n            var valueHasChanged = (newValue !== elementValue);\r\n\r\n            if (valueHasChanged) {\r\n                if (ko.utils.tagNameLower(element) === \"select\") {\r\n                    var allowUnset = allBindings.get('valueAllowUnset');\r\n                    var applyValueAction = function () {\r\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\r\n                    };\r\n                    applyValueAction();\r\n\r\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\r\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\r\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                    } else {\r\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\r\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\r\n                        // to apply the value as well.\r\n                        ko.utils.setTimeout(applyValueAction, 0);\r\n                    }\r\n                } else {\r\n                    ko.selectExtensions.writeValue(element, newValue);\r\n                }\r\n            }\r\n        };\r\n\r\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n    },\r\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\r\n};\r\nko.expressionRewriting.twoWayBindings['value'] = true;\r\nko.bindingHandlers['visible'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        var isCurrentlyVisible = !(element.style.display == \"none\");\r\n        if (value && !isCurrentlyVisible)\r\n            element.style.display = \"\";\r\n        else if ((!value) && isCurrentlyVisible)\r\n            element.style.display = \"none\";\r\n    }\r\n};\r\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\r\nmakeEventHandlerShortcut('click');\r\n// If you want to make a custom template engine,\r\n//\r\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\r\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\r\n//\r\n//        function (templateSource, bindingContext, options) {\r\n//            // - templateSource.text() is the text of the template you should render\r\n//            // - bindingContext.$data is the data you should pass into the template\r\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\r\n//            //     and bindingContext.$root available in the template too\r\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\r\n//            // - templateDocument is the document object of the template\r\n//            //\r\n//            // Return value: an array of DOM nodes\r\n//        }\r\n//\r\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\r\n//\r\n//        function (script) {\r\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\r\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\r\n//        }\r\n//\r\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\r\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\r\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\r\n\r\nko.templateEngine = function () { };\r\n\r\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n    throw new Error(\"Override renderTemplateSource\");\r\n};\r\n\r\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\r\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\r\n};\r\n\r\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\r\n    // Named template\r\n    if (typeof template == \"string\") {\r\n        templateDocument = templateDocument || document;\r\n        var elem = templateDocument.getElementById(template);\r\n        if (!elem)\r\n            throw new Error(\"Cannot find template with ID \" + template);\r\n        return new ko.templateSources.domElement(elem);\r\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\r\n        // Anonymous template\r\n        return new ko.templateSources.anonymousTemplate(template);\r\n    } else\r\n        throw new Error(\"Unknown template type: \" + template);\r\n};\r\n\r\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\r\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\r\n};\r\n\r\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\r\n    // Skip rewriting if requested\r\n    if (this['allowTemplateRewriting'] === false)\r\n        return true;\r\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\r\n};\r\n\r\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\r\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n    var rewritten = rewriterCallback(templateSource['text']());\r\n    templateSource['text'](rewritten);\r\n    templateSource['data'](\"isRewritten\", true);\r\n};\r\n\r\nko.exportSymbol('templateEngine', ko.templateEngine);\r\n\r\nko.templateRewriting = (function () {\r\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\r\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\r\n\r\n    function validateDataBindValuesForRewriting(keyValueArray) {\r\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\r\n        for (var i = 0; i < keyValueArray.length; i++) {\r\n            var key = keyValueArray[i]['key'];\r\n            if (allValidators.hasOwnProperty(key)) {\r\n                var validator = allValidators[key];\r\n\r\n                if (typeof validator === \"function\") {\r\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\r\n                    if (possibleErrorMessage)\r\n                        throw new Error(possibleErrorMessage);\r\n                } else if (!validator) {\r\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\r\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\r\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\r\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\r\n\r\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\r\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\r\n        // extra indirection.\r\n        var applyBindingsToNextSiblingScript =\r\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\r\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\r\n    }\r\n\r\n    return {\r\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\r\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\r\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\r\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\r\n                }, templateDocument);\r\n        },\r\n\r\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\r\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\r\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\r\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\r\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\r\n            });\r\n        },\r\n\r\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\r\n            return ko.memoization.memoize(function (domNode, bindingContext) {\r\n                var nodeToBind = domNode.nextSibling;\r\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\r\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n// Exported only because it has to be referenced by string lookup from within rewritten template\r\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\r\n(function() {\r\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\r\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\r\n    //\r\n    // Two are provided by default:\r\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\r\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\r\n    //                                           without reading/writing the actual element text content, since it will be overwritten\r\n    //                                           with the rendered template output.\r\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\r\n    // Template sources need to have the following functions:\r\n    //   text() \t\t\t- returns the template text from your storage location\r\n    //   text(value)\t\t- writes the supplied template text to your storage location\r\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\r\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\r\n    //\r\n    // Optionally, template sources can also have the following functions:\r\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\r\n    //   nodes(value)       - writes the given DOM element to your storage location\r\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\r\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\r\n    //\r\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\r\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\r\n\r\n    ko.templateSources = {};\r\n\r\n    // ---- ko.templateSources.domElement -----\r\n\r\n    // template types\r\n    var templateScript = 1,\r\n        templateTextArea = 2,\r\n        templateTemplate = 3,\r\n        templateElement = 4;\r\n\r\n    ko.templateSources.domElement = function(element) {\r\n        this.domElement = element;\r\n\r\n        if (element) {\r\n            var tagNameLower = ko.utils.tagNameLower(element);\r\n            this.templateType =\r\n                tagNameLower === \"script\" ? templateScript :\r\n                tagNameLower === \"textarea\" ? templateTextArea :\r\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\r\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\r\n                templateElement;\r\n        }\r\n    }\r\n\r\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\r\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\r\n                                 : this.templateType === templateTextArea ? \"value\"\r\n                                 : \"innerHTML\";\r\n\r\n        if (arguments.length == 0) {\r\n            return this.domElement[elemContentsProperty];\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            if (elemContentsProperty === \"innerHTML\")\r\n                ko.utils.setHtml(this.domElement, valueToWrite);\r\n            else\r\n                this.domElement[elemContentsProperty] = valueToWrite;\r\n        }\r\n    };\r\n\r\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\r\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\r\n        if (arguments.length === 1) {\r\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\r\n        } else {\r\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\r\n        }\r\n    };\r\n\r\n    var templatesDomDataKey = ko.utils.domData.nextKey();\r\n    function getTemplateDomData(element) {\r\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\r\n    }\r\n    function setTemplateDomData(element, data) {\r\n        ko.utils.domData.set(element, templatesDomDataKey, data);\r\n    }\r\n\r\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\r\n        var element = this.domElement;\r\n        if (arguments.length == 0) {\r\n            var templateData = getTemplateDomData(element),\r\n                containerData = templateData.containerData;\r\n            return containerData || (\r\n                this.templateType === templateTemplate ? element.content :\r\n                this.templateType === templateElement ? element :\r\n                undefined);\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            setTemplateDomData(element, {containerData: valueToWrite});\r\n        }\r\n    };\r\n\r\n    // ---- ko.templateSources.anonymousTemplate -----\r\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\r\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\r\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\r\n\r\n    ko.templateSources.anonymousTemplate = function(element) {\r\n        this.domElement = element;\r\n    }\r\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\r\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\r\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\r\n        if (arguments.length == 0) {\r\n            var templateData = getTemplateDomData(this.domElement);\r\n            if (templateData.textData === undefined && templateData.containerData)\r\n                templateData.textData = templateData.containerData.innerHTML;\r\n            return templateData.textData;\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\r\n        }\r\n    };\r\n\r\n    ko.exportSymbol('templateSources', ko.templateSources);\r\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\r\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\r\n})();\r\n(function () {\r\n    var _templateEngine;\r\n    ko.setTemplateEngine = function (templateEngine) {\r\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\r\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\r\n        _templateEngine = templateEngine;\r\n    }\r\n\r\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\r\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\r\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\r\n            nextInQueue = ko.virtualElements.nextSibling(node);\r\n            action(node, nextInQueue);\r\n        }\r\n    }\r\n\r\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\r\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\r\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\r\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\r\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\r\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\r\n\r\n        if (continuousNodeArray.length) {\r\n            var firstNode = continuousNodeArray[0],\r\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\r\n                parentNode = firstNode.parentNode,\r\n                provider = ko.bindingProvider['instance'],\r\n                preprocessNode = provider['preprocessNode'];\r\n\r\n            if (preprocessNode) {\r\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\r\n                    var nodePreviousSibling = node.previousSibling;\r\n                    var newNodes = preprocessNode.call(provider, node);\r\n                    if (newNodes) {\r\n                        if (node === firstNode)\r\n                            firstNode = newNodes[0] || nextNodeInRange;\r\n                        if (node === lastNode)\r\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\r\n                    }\r\n                });\r\n\r\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\r\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\r\n                // first node needs to be in the array).\r\n                continuousNodeArray.length = 0;\r\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\r\n                    return;\r\n                }\r\n                if (firstNode === lastNode) {\r\n                    continuousNodeArray.push(firstNode);\r\n                } else {\r\n                    continuousNodeArray.push(firstNode, lastNode);\r\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n                }\r\n            }\r\n\r\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\r\n            // whereas a regular applyBindings won't introduce new memoized nodes\r\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                if (node.nodeType === 1 || node.nodeType === 8)\r\n                    ko.applyBindings(bindingContext, node);\r\n            });\r\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                if (node.nodeType === 1 || node.nodeType === 8)\r\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\r\n            });\r\n\r\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\r\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n        }\r\n    }\r\n\r\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\r\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\r\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\r\n                                        : null;\r\n    }\r\n\r\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\r\n        options = options || {};\r\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\r\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\r\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\r\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\r\n\r\n        // Loosely check result is an array of DOM nodes\r\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\r\n            throw new Error(\"Template engine must return an array of DOM nodes\");\r\n\r\n        var haveAddedNodesToParent = false;\r\n        switch (renderMode) {\r\n            case \"replaceChildren\":\r\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\r\n                haveAddedNodesToParent = true;\r\n                break;\r\n            case \"replaceNode\":\r\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\r\n                haveAddedNodesToParent = true;\r\n                break;\r\n            case \"ignoreTargetNode\": break;\r\n            default:\r\n                throw new Error(\"Unknown renderMode: \" + renderMode);\r\n        }\r\n\r\n        if (haveAddedNodesToParent) {\r\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\r\n            if (options['afterRender'])\r\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\r\n        }\r\n\r\n        return renderedNodesArray;\r\n    }\r\n\r\n    function resolveTemplateName(template, data, context) {\r\n        // The template can be specified as:\r\n        if (ko.isObservable(template)) {\r\n            // 1. An observable, with string value\r\n            return template();\r\n        } else if (typeof template === 'function') {\r\n            // 2. A function of (data, context) returning a string\r\n            return template(data, context);\r\n        } else {\r\n            // 3. A string\r\n            return template;\r\n        }\r\n    }\r\n\r\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\r\n        options = options || {};\r\n        if ((options['templateEngine'] || _templateEngine) == undefined)\r\n            throw new Error(\"Set a template engine before calling renderTemplate\");\r\n        renderMode = renderMode || \"replaceChildren\";\r\n\r\n        if (targetNodeOrNodeArray) {\r\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n\r\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\r\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\r\n\r\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\r\n                function () {\r\n                    // Ensure we've got a proper binding context to work with\r\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\r\n                        ? dataOrBindingContext\r\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\r\n\r\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\r\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\r\n\r\n                    if (renderMode == \"replaceNode\") {\r\n                        targetNodeOrNodeArray = renderedNodesArray;\r\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                    }\r\n                },\r\n                null,\r\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\r\n            );\r\n        } else {\r\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\r\n            return ko.memoization.memoize(function (domNode) {\r\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\r\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\r\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\r\n        var arrayItemContext;\r\n\r\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\r\n        var executeTemplateForArrayItem = function (arrayValue, index) {\r\n            // Support selecting template as a function of the data being rendered\r\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\r\n                context['$index'] = index;\r\n            });\r\n\r\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\r\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\r\n        }\r\n\r\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\r\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\r\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\r\n            if (options['afterRender'])\r\n                options['afterRender'](addedNodesArray, arrayValue);\r\n\r\n            // release the \"cache\" variable, so that it can be collected by\r\n            // the GC when its value isn't used from within the bindings anymore.\r\n            arrayItemContext = null;\r\n        };\r\n\r\n        return ko.dependentObservable(function () {\r\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\r\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                unwrappedArray = [unwrappedArray];\r\n\r\n            // Filter out any entries marked as destroyed\r\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n            });\r\n\r\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\r\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\r\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\r\n\r\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\r\n    };\r\n\r\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\r\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\r\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\r\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\r\n            oldComputed.dispose();\r\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\r\n    }\r\n\r\n    ko.bindingHandlers['template'] = {\r\n        'init': function(element, valueAccessor) {\r\n            // Support anonymous templates\r\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\r\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\r\n                // It's a named template - clear the element\r\n                ko.virtualElements.emptyNode(element);\r\n            } else if ('nodes' in bindingValue) {\r\n                // We've been given an array of DOM nodes. Save them as the template source.\r\n                // There is no known use case for the node array being an observable array (if the output\r\n                // varies, put that behavior *into* your template - that's what templates are for), and\r\n                // the implementation would be a mess, so assert that it's not observable.\r\n                var nodes = bindingValue['nodes'] || [];\r\n                if (ko.isObservable(nodes)) {\r\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\r\n                }\r\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\r\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n            } else {\r\n                // It's an anonymous template - store the element contents, then clear the element\r\n                var templateNodes = ko.virtualElements.childNodes(element),\r\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\r\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n            }\r\n            return { 'controlsDescendantBindings': true };\r\n        },\r\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var value = valueAccessor(),\r\n                options = ko.utils.unwrapObservable(value),\r\n                shouldDisplay = true,\r\n                templateComputed = null,\r\n                templateName;\r\n\r\n            if (typeof options == \"string\") {\r\n                templateName = value;\r\n                options = {};\r\n            } else {\r\n                templateName = options['name'];\r\n\r\n                // Support \"if\"/\"ifnot\" conditions\r\n                if ('if' in options)\r\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\r\n                if (shouldDisplay && 'ifnot' in options)\r\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\r\n            }\r\n\r\n            if ('foreach' in options) {\r\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\r\n                var dataArray = (shouldDisplay && options['foreach']) || [];\r\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\r\n            } else if (!shouldDisplay) {\r\n                ko.virtualElements.emptyNode(element);\r\n            } else {\r\n                // Render once for this single data point (or use the viewModel if no data was provided)\r\n                var innerBindingContext = ('data' in options) ?\r\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\r\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\r\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\r\n            }\r\n\r\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\r\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\r\n        }\r\n    };\r\n\r\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\r\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\r\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\r\n\r\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\r\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\r\n\r\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\r\n            return null; // Named templates can be rewritten, so return \"no error\"\r\n        return \"This template engine does not support anonymous templates nested within its templates\";\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings['template'] = true;\r\n})();\r\n\r\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\r\nko.exportSymbol('renderTemplate', ko.renderTemplate);\r\n// Go through the items that have been added and deleted and try to find matches between them.\r\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\r\n    if (left.length && right.length) {\r\n        var failedCompares, l, r, leftItem, rightItem;\r\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\r\n            for (r = 0; rightItem = right[r]; ++r) {\r\n                if (leftItem['value'] === rightItem['value']) {\r\n                    leftItem['moved'] = rightItem['index'];\r\n                    rightItem['moved'] = leftItem['index'];\r\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\r\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\r\n                    break;\r\n                }\r\n            }\r\n            failedCompares += r;\r\n        }\r\n    }\r\n};\r\n\r\nko.utils.compareArrays = (function () {\r\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\r\n\r\n    // Simple calculation based on Levenshtein distance.\r\n    function compareArrays(oldArray, newArray, options) {\r\n        // For backward compatibility, if the third arg is actually a bool, interpret\r\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\r\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\r\n        oldArray = oldArray || [];\r\n        newArray = newArray || [];\r\n\r\n        if (oldArray.length < newArray.length)\r\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\r\n        else\r\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\r\n    }\r\n\r\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\r\n        var myMin = Math.min,\r\n            myMax = Math.max,\r\n            editDistanceMatrix = [],\r\n            smlIndex, smlIndexMax = smlArray.length,\r\n            bigIndex, bigIndexMax = bigArray.length,\r\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\r\n            maxDistance = smlIndexMax + bigIndexMax + 1,\r\n            thisRow, lastRow,\r\n            bigIndexMaxForRow, bigIndexMinForRow;\r\n\r\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\r\n            lastRow = thisRow;\r\n            editDistanceMatrix.push(thisRow = []);\r\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\r\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\r\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\r\n                if (!bigIndex)\r\n                    thisRow[bigIndex] = smlIndex + 1;\r\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\r\n                    thisRow[bigIndex] = bigIndex + 1;\r\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\r\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\r\n                else {\r\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\r\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\r\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\r\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\r\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\r\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\r\n                notInSml.push(editScript[editScript.length] = {     // added\r\n                    'status': statusNotInSml,\r\n                    'value': bigArray[--bigIndex],\r\n                    'index': bigIndex });\r\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\r\n                notInBig.push(editScript[editScript.length] = {     // deleted\r\n                    'status': statusNotInBig,\r\n                    'value': smlArray[--smlIndex],\r\n                    'index': smlIndex });\r\n            } else {\r\n                --bigIndex;\r\n                --smlIndex;\r\n                if (!options['sparse']) {\r\n                    editScript.push({\r\n                        'status': \"retained\",\r\n                        'value': bigArray[bigIndex] });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\r\n        // smlIndexMax keeps the time complexity of this algorithm linear.\r\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\r\n\r\n        return editScript.reverse();\r\n    }\r\n\r\n    return compareArrays;\r\n})();\r\n\r\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\r\n(function () {\r\n    // Objective:\r\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\r\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\r\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\r\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\r\n    //   previously mapped - retain those nodes, and just insert/delete other ones\r\n\r\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\r\n    // You can use this, for example, to activate bindings on those nodes.\r\n\r\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\r\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\r\n        var mappedNodes = [];\r\n        var dependentObservable = ko.dependentObservable(function() {\r\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\r\n\r\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\r\n            if (mappedNodes.length > 0) {\r\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\r\n                if (callbackAfterAddingNodes)\r\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\r\n            }\r\n\r\n            // Replace the contents of the mappedNodes array, thereby updating the record\r\n            // of which nodes would be deleted if valueToMap was itself later removed\r\n            mappedNodes.length = 0;\r\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\r\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\r\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\r\n    }\r\n\r\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\r\n        deletedItemDummyValue = ko.utils.domData.nextKey();\r\n\r\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\r\n        // Compare the provided array against the previous one\r\n        array = array || [];\r\n        options = options || {};\r\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\r\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\r\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\r\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\r\n\r\n        // Build the new mapping result\r\n        var newMappingResult = [];\r\n        var lastMappingResultIndex = 0;\r\n        var newMappingResultIndex = 0;\r\n\r\n        var nodesToDelete = [];\r\n        var itemsToProcess = [];\r\n        var itemsForBeforeRemoveCallbacks = [];\r\n        var itemsForMoveCallbacks = [];\r\n        var itemsForAfterAddCallbacks = [];\r\n        var mapData;\r\n\r\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\r\n            mapData = lastMappingResult[oldPosition];\r\n            if (newMappingResultIndex !== oldPosition)\r\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\r\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\r\n            mapData.indexObservable(newMappingResultIndex++);\r\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\r\n            newMappingResult.push(mapData);\r\n            itemsToProcess.push(mapData);\r\n        }\r\n\r\n        function callCallback(callback, items) {\r\n            if (callback) {\r\n                for (var i = 0, n = items.length; i < n; i++) {\r\n                    if (items[i]) {\r\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\r\n                            callback(node, i, items[i].arrayEntry);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\r\n            movedIndex = editScriptItem['moved'];\r\n            switch (editScriptItem['status']) {\r\n                case \"deleted\":\r\n                    if (movedIndex === undefined) {\r\n                        mapData = lastMappingResult[lastMappingResultIndex];\r\n\r\n                        // Stop tracking changes to the mapping for these nodes\r\n                        if (mapData.dependentObservable) {\r\n                            mapData.dependentObservable.dispose();\r\n                            mapData.dependentObservable = undefined;\r\n                        }\r\n\r\n                        // Queue these nodes for later removal\r\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\r\n                            if (options['beforeRemove']) {\r\n                                newMappingResult.push(mapData);\r\n                                itemsToProcess.push(mapData);\r\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\r\n                                    mapData = null;\r\n                                } else {\r\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\r\n                                }\r\n                            }\r\n                            if (mapData) {\r\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\r\n                            }\r\n                        }\r\n                    }\r\n                    lastMappingResultIndex++;\r\n                    break;\r\n\r\n                case \"retained\":\r\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\r\n                    break;\r\n\r\n                case \"added\":\r\n                    if (movedIndex !== undefined) {\r\n                        itemMovedOrRetained(i, movedIndex);\r\n                    } else {\r\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\r\n                        newMappingResult.push(mapData);\r\n                        itemsToProcess.push(mapData);\r\n                        if (!isFirstExecution)\r\n                            itemsForAfterAddCallbacks[i] = mapData;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Store a copy of the array items we just considered so we can difference it next time\r\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\r\n\r\n        // Call beforeMove first before any changes have been made to the DOM\r\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\r\n\r\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\r\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\r\n\r\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\r\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\r\n            // Get nodes for newly added items\r\n            if (!mapData.mappedNodes)\r\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\r\n\r\n            // Put nodes in the right place if they aren't there already\r\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\r\n                if (node !== nextNode)\r\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\r\n            }\r\n\r\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\r\n            if (!mapData.initialized && callbackAfterAddingNodes) {\r\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\r\n                mapData.initialized = true;\r\n            }\r\n        }\r\n\r\n        // If there's a beforeRemove callback, call it after reordering.\r\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\r\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\r\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\r\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\r\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\r\n\r\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\r\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\r\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\r\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\r\n            if (itemsForBeforeRemoveCallbacks[i]) {\r\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\r\n            }\r\n        }\r\n\r\n        // Finally call afterMove and afterAdd callbacks\r\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\r\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\r\n    }\r\n})();\r\n\r\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\r\nko.nativeTemplateEngine = function () {\r\n    this['allowTemplateRewriting'] = false;\r\n}\r\n\r\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\r\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\r\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\r\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\r\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\r\n\r\n    if (templateNodes) {\r\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\r\n    } else {\r\n        var templateText = templateSource['text']();\r\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\r\n    }\r\n};\r\n\r\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\r\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\r\n\r\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\r\n(function() {\r\n    ko.jqueryTmplTemplateEngine = function () {\r\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\r\n        // doesn't expose a version number, so we have to infer it.\r\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\r\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\r\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\r\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\r\n                return 0;\r\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\r\n            try {\r\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\r\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\r\n                    return 2; // Final version of jquery.tmpl\r\n                }\r\n            } catch(ex) { /* Apparently not the version we were looking for */ }\r\n\r\n            return 1; // Any older version that we don't support\r\n        })();\r\n\r\n        function ensureHasReferencedJQueryTemplates() {\r\n            if (jQueryTmplVersion < 2)\r\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\r\n        }\r\n\r\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\r\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\r\n        }\r\n\r\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\r\n            templateDocument = templateDocument || document;\r\n            options = options || {};\r\n            ensureHasReferencedJQueryTemplates();\r\n\r\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\r\n            var precompiled = templateSource['data']('precompiled');\r\n            if (!precompiled) {\r\n                var templateText = templateSource['text']() || \"\";\r\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\r\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\r\n\r\n                precompiled = jQueryInstance['template'](null, templateText);\r\n                templateSource['data']('precompiled', precompiled);\r\n            }\r\n\r\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\r\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\r\n\r\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\r\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\r\n\r\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\r\n            return resultNodes;\r\n        };\r\n\r\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\r\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\r\n        };\r\n\r\n        this['addTemplate'] = function(templateName, templateMarkup) {\r\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\r\n        };\r\n\r\n        if (jQueryTmplVersion > 0) {\r\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\r\n                open: \"__.push($1 || '');\"\r\n            };\r\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\r\n                open: \"with($1) {\",\r\n                close: \"} \"\r\n            };\r\n        }\r\n    };\r\n\r\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\r\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\r\n\r\n    // Use this one by default *only if jquery.tmpl is referenced*\r\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\r\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\r\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\r\n\r\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\r\n})();\r\n}));\r\n}());\r\n})();\r\n","knockoutjs/knockout-repeat.js":"// REPEAT binding for Knockout http://knockoutjs.com/\r\n// (c) Michael Best\r\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n// Version 2.1.0\r\n\r\n(function(factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // [1] AMD anonymous module\r\n        define(['knockout'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // [2] commonJS\r\n        factory(require('knockout'));\r\n    } else {\r\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\r\n        factory(window.ko);\r\n    }\r\n})(function(ko) {\r\n\r\nif (!ko.virtualElements)\r\n    throw Error('Repeat requires at least Knockout 2.1');\r\n\r\nvar ko_bindingFlags = ko.bindingFlags || {};\r\nvar ko_unwrap = ko.utils.unwrapObservable;\r\n\r\nvar koProtoName = '__ko_proto__';\r\n\r\nif (ko.version >= \"3.0.0\") {\r\n    // In Knockout 3.0.0, use the node preprocessor to replace a node with a repeat binding with a virtual element\r\n    var provider = ko.bindingProvider.instance, previousPreprocessFn = provider.preprocessNode;\r\n    provider.preprocessNode = function(node) {\r\n        var newNodes, nodeBinding;\r\n        if (!previousPreprocessFn || !(newNodes = previousPreprocessFn.call(this, node))) {\r\n            if (node.nodeType === 1 && (nodeBinding = node.getAttribute('data-bind'))) {\r\n                if (/^\\s*repeat\\s*:/.test(nodeBinding)) {\r\n                    var leadingComment = node.ownerDocument.createComment('ko ' + nodeBinding),\r\n                        trailingComment = node.ownerDocument.createComment('/ko');\r\n                    node.parentNode.insertBefore(leadingComment, node);\r\n                    node.parentNode.insertBefore(trailingComment, node.nextSibling);\r\n                    node.removeAttribute('data-bind');\r\n                    newNodes = [leadingComment, node, trailingComment];\r\n                }\r\n            }\r\n        }\r\n        return newNodes;\r\n    };\r\n}\r\n\r\nko.virtualElements.allowedBindings.repeat = true;\r\nko.bindingHandlers.repeat = {\r\n    flags: ko_bindingFlags.contentBind | ko_bindingFlags.canUseVirtual,\r\n    init: function(element, valueAccessor, allBindingsAccessor, xxx, bindingContext) {\r\n\r\n        // Read and set fixed options--these options cannot be changed\r\n        var repeatParam = ko_unwrap(valueAccessor());\r\n        if (repeatParam && typeof repeatParam == 'object' && !('length' in repeatParam)) {\r\n            var repeatIndex = repeatParam.index,\r\n                repeatData = repeatParam.item,\r\n                repeatStep = repeatParam.step,\r\n                repeatReversed = repeatParam.reverse,\r\n                repeatBind = repeatParam.bind,\r\n                repeatInit = repeatParam.init,\r\n                repeatUpdate = repeatParam.update;\r\n        }\r\n        // Set default values for options that need it\r\n        repeatIndex = repeatIndex || '$index';\r\n        repeatData = repeatData || ko.bindingHandlers.repeat.itemName || '$item';\r\n        repeatStep = repeatStep || 1;\r\n        repeatReversed = repeatReversed || false;\r\n\r\n        var parent = element.parentNode, placeholder;\r\n        if (element.nodeType == 8) {    // virtual element\r\n            // Extract the \"children\" and find the single element node\r\n            var childNodes = ko.utils.arrayFilter(ko.virtualElements.childNodes(element), function(node) { return node.nodeType == 1;});\r\n            if (childNodes.length !== 1) {\r\n                throw Error(\"Repeat binding requires a single element to repeat\");\r\n            }\r\n            ko.virtualElements.emptyNode(element);\r\n\r\n            // The placeholder is the closing comment normally, or the opening comment if reversed\r\n            placeholder = repeatReversed ? element : element.nextSibling;\r\n            // The element to repeat is the contained element\r\n            element = childNodes[0];\r\n        } else {    // regular element\r\n            // First clean the element node and remove node's binding\r\n            var origBindString = element.getAttribute('data-bind');\r\n            ko.cleanNode(element);\r\n            element.removeAttribute('data-bind');\r\n\r\n            // Original element is no longer needed: delete it and create a placeholder comment\r\n            placeholder = element.ownerDocument.createComment('ko_repeatplaceholder ' + origBindString);\r\n            parent.replaceChild(placeholder, element);\r\n        }\r\n\r\n        // extract and remove a data-repeat-bind attribute, if present\r\n        if (!repeatBind) {\r\n            repeatBind = element.getAttribute('data-repeat-bind');\r\n            if (repeatBind) {\r\n                element.removeAttribute('data-repeat-bind');\r\n            }\r\n        }\r\n\r\n        // Make a copy of the element node to be copied for each repetition\r\n        var cleanNode = element.cloneNode(true);\r\n        if (typeof repeatBind == \"string\") {\r\n            cleanNode.setAttribute('data-bind', repeatBind);\r\n            repeatBind = null;\r\n        }\r\n\r\n        // Set up persistent data\r\n        var lastRepeatCount = 0,\r\n            notificationObservable = ko.observable(),\r\n            repeatArray, arrayObservable;\r\n\r\n        if (repeatInit) {\r\n            repeatInit(parent);\r\n        }\r\n\r\n        var subscribable = ko.computed(function() {\r\n            function makeArrayItemAccessor(index) {\r\n                var f = function(newValue) {\r\n                    var item = repeatArray[index];\r\n                    // Reading the value of the item\r\n                    if (!arguments.length) {\r\n                        notificationObservable();   // for dependency tracking\r\n                        return ko_unwrap(item);\r\n                    }\r\n                    // Writing a value to the item\r\n                    if (ko.isObservable(item)) {\r\n                        item(newValue);\r\n                    } else if (arrayObservable && arrayObservable.splice) {\r\n                        arrayObservable.splice(index, 1, newValue);\r\n                    } else {\r\n                        repeatArray[index] = newValue;\r\n                    }\r\n                    return this;\r\n                };\r\n                // Pretend that our accessor function is an observable\r\n                f[koProtoName] = ko.observable;\r\n                return f;\r\n            }\r\n\r\n            function makeBinding(item, index, context) {\r\n                return repeatArray\r\n                    ? function() { return repeatBind.call(bindingContext.$data, item, index, context); }\r\n                    : function() { return repeatBind.call(bindingContext.$data, index, context); }\r\n            }\r\n\r\n            // Read and set up variable options--these options can change and will update the binding\r\n            var paramObservable = valueAccessor(), repeatParam = ko_unwrap(paramObservable), repeatCount = 0;\r\n            if (repeatParam && typeof repeatParam == 'object') {\r\n                if ('length' in repeatParam) {\r\n                    repeatArray = repeatParam;\r\n                    repeatCount = repeatArray.length;\r\n                } else {\r\n                    if ('foreach' in repeatParam) {\r\n                        repeatArray = ko_unwrap(paramObservable = repeatParam.foreach);\r\n                        if (repeatArray && typeof repeatArray == 'object' && 'length' in repeatArray) {\r\n                            repeatCount = repeatArray.length || 0;\r\n                        } else {\r\n                            repeatCount = repeatArray || 0;\r\n                            repeatArray = null;\r\n                        }\r\n                    }\r\n                    // If a count value is provided (>0), always output that number of items\r\n                    if ('count' in repeatParam)\r\n                        repeatCount = ko_unwrap(repeatParam.count) || repeatCount;\r\n                    // If a limit is provided, don't output more than the limit\r\n                    if ('limit' in repeatParam)\r\n                        repeatCount = Math.min(repeatCount, ko_unwrap(repeatParam.limit)) || repeatCount;\r\n                }\r\n                arrayObservable = repeatArray && ko.isObservable(paramObservable) ? paramObservable : null;\r\n            } else {\r\n                repeatCount = repeatParam || 0;\r\n            }\r\n\r\n            // Remove nodes from end if array is shorter\r\n            for (; lastRepeatCount > repeatCount; lastRepeatCount-=repeatStep) {\r\n                ko.removeNode(repeatReversed ? placeholder.nextSibling : placeholder.previousSibling);\r\n            }\r\n\r\n            // Notify existing nodes of change\r\n            notificationObservable.notifySubscribers();\r\n\r\n            // Add nodes to end if array is longer (also initially populates nodes)\r\n            for (; lastRepeatCount < repeatCount; lastRepeatCount+=repeatStep) {\r\n                // Clone node and add to document\r\n                var newNode = cleanNode.cloneNode(true);\r\n                parent.insertBefore(newNode, repeatReversed ? placeholder.nextSibling : placeholder);\r\n                newNode.setAttribute('data-repeat-index', lastRepeatCount);\r\n\r\n                // Apply bindings to inserted node\r\n                if (repeatArray && repeatData == '$data') {\r\n                    var newContext = bindingContext.createChildContext(makeArrayItemAccessor(lastRepeatCount));\r\n                } else {\r\n                    var newContext = bindingContext.extend();\r\n                    if (repeatArray)\r\n                        newContext[repeatData] = makeArrayItemAccessor(lastRepeatCount);\r\n                }\r\n                newContext[repeatIndex] = lastRepeatCount;\r\n                if (repeatBind) {\r\n                    var result = ko.applyBindingsToNode(newNode, makeBinding(newContext[repeatData], lastRepeatCount, newContext), newContext, true),\r\n                        shouldBindDescendants = result && result.shouldBindDescendants;\r\n                }\r\n                if (!repeatBind || (result && shouldBindDescendants !== false)) {\r\n                    ko.applyBindings(newContext, newNode);\r\n                }\r\n            }\r\n            if (repeatUpdate) {\r\n                repeatUpdate(parent);\r\n            }\r\n        }, null, {disposeWhenNodeIsRemoved: placeholder});\r\n\r\n        return { controlsDescendantBindings: true, subscribable: subscribable };\r\n    }\r\n};\r\n});","knockoutjs/knockout-es5.js":"/*!\r\n * Knockout ES5 plugin - https://github.com/SteveSanderson/knockout-es5\r\n * Copyright (c) Steve Sanderson\r\n * MIT license\r\n */\r\n\r\n(function(global, undefined) {\r\n  'use strict';\r\n\r\n  var ko;\r\n\r\n  // Model tracking\r\n  // --------------\r\n  //\r\n  // This is the central feature of Knockout-ES5. We augment model objects by converting properties\r\n  // into ES5 getter/setter pairs that read/write an underlying Knockout observable. This means you can\r\n  // use plain JavaScript syntax to read/write the property while still getting the full benefits of\r\n  // Knockout's automatic dependency detection and notification triggering.\r\n  //\r\n  // For comparison, here's Knockout ES3-compatible syntax:\r\n  //\r\n  //     var firstNameLength = myModel.user().firstName().length; // Read\r\n  //     myModel.user().firstName('Bert'); // Write\r\n  //\r\n  // ... versus Knockout-ES5 syntax:\r\n  //\r\n  //     var firstNameLength = myModel.user.firstName.length; // Read\r\n  //     myModel.user.firstName = 'Bert'; // Write\r\n\r\n  // `ko.track(model)` converts each property on the given model object into a getter/setter pair that\r\n  // wraps a Knockout observable. Optionally specify an array of property names to wrap; otherwise we\r\n  // wrap all properties. If any of the properties are already observables, we replace them with\r\n  // ES5 getter/setter pairs that wrap your original observable instances. In the case of readonly\r\n  // ko.computed properties, we simply do not define a setter (so attempted writes will be ignored,\r\n  // which is how ES5 readonly properties normally behave).\r\n  //\r\n  // By design, this does *not* recursively walk child object properties, because making literally\r\n  // everything everywhere independently observable is usually unhelpful. When you do want to track\r\n  // child object properties independently, define your own class for those child objects and put\r\n  // a separate ko.track call into its constructor --- this gives you far more control.\r\n  /**\r\n   * @param {object} obj\r\n   * @param {object|array.<string>} propertyNamesOrSettings\r\n   * @param {boolean} propertyNamesOrSettings.deep Use deep track.\r\n   * @param {array.<string>} propertyNamesOrSettings.fields Array of property names to wrap.\r\n   * todo: @param {array.<string>} propertyNamesOrSettings.exclude Array of exclude property names to wrap.\r\n   * todo: @param {function(string, *):boolean} propertyNamesOrSettings.filter Function to filter property \r\n   *   names to wrap. A function that takes ... params\r\n   * @return {object}\r\n   */\r\n  function track(obj, propertyNamesOrSettings) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw new Error('When calling ko.track, you must pass an object as the first parameter.');\r\n    }\r\n\r\n    var propertyNames;\r\n\r\n    if ( isPlainObject(propertyNamesOrSettings) ) {\r\n      // defaults\r\n      propertyNamesOrSettings.deep = propertyNamesOrSettings.deep || false;\r\n      propertyNamesOrSettings.fields = propertyNamesOrSettings.fields || Object.getOwnPropertyNames(obj);\r\n      propertyNamesOrSettings.lazy = propertyNamesOrSettings.lazy || false;\r\n\r\n      wrap(obj, propertyNamesOrSettings.fields, propertyNamesOrSettings);\r\n    } else {\r\n      propertyNames = propertyNamesOrSettings || Object.getOwnPropertyNames(obj);\r\n      wrap(obj, propertyNames, {});\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  // fix for ie\r\n  var rFunctionName = /^function\\s*([^\\s(]+)/;\r\n  function getFunctionName( ctor ){\r\n    if (ctor.name) {\r\n      return ctor.name;\r\n    }\r\n    return (ctor.toString().trim().match( rFunctionName ) || [])[1];\r\n  }\r\n\r\n  function canTrack(obj) {\r\n    return obj && typeof obj === 'object' && getFunctionName(obj.constructor) === 'Object';\r\n  }\r\n\r\n  function createPropertyDescriptor(originalValue, prop, map) {\r\n    var isObservable = ko.isObservable(originalValue);\r\n    var isArray = !isObservable && Array.isArray(originalValue);\r\n    var observable = isObservable ? originalValue\r\n        : isArray ? ko.observableArray(originalValue)\r\n        : ko.observable(originalValue);\r\n\r\n    map[prop] = function () { return observable; };\r\n\r\n    // add check in case the object is already an observable array\r\n    if (isArray || (isObservable && 'push' in observable)) {\r\n      notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\r\n    }\r\n\r\n    return {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: observable,\r\n      set: ko.isWriteableObservable(observable) ? observable : undefined\r\n    };\r\n  }\r\n\r\n  function createLazyPropertyDescriptor(originalValue, prop, map) {\r\n    if (ko.isObservable(originalValue)) {\r\n      // no need to be lazy if we already have an observable\r\n      return createPropertyDescriptor(originalValue, prop, map);\r\n    }\r\n\r\n    var observable;\r\n\r\n    function getOrCreateObservable(value, writing) {\r\n      if (observable) {\r\n        return writing ? observable(value) : observable;\r\n      }\r\n\r\n      if (Array.isArray(value)) {\r\n        observable = ko.observableArray(value);\r\n        notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\r\n        return observable;\r\n      }\r\n\r\n      return (observable = ko.observable(value));\r\n    }\r\n\r\n    map[prop] = function () { return getOrCreateObservable(originalValue); };\r\n    return {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: function () { return getOrCreateObservable(originalValue)(); },\r\n      set: function (value) { getOrCreateObservable(value, true); }\r\n    };\r\n  }\r\n\r\n  function wrap(obj, props, options) {\r\n    if (!props.length) {\r\n      return;\r\n    }\r\n\r\n    var allObservablesForObject = getAllObservablesForObject(obj, true);\r\n    var descriptors = {};\r\n\r\n    props.forEach(function (prop) {\r\n      // Skip properties that are already tracked\r\n      if (prop in allObservablesForObject) {\r\n        return;\r\n      }\r\n\r\n      // Skip properties where descriptor can't be redefined\r\n      if (Object.getOwnPropertyDescriptor(obj, prop).configurable === false){\r\n        return;\r\n      }\r\n\r\n      var originalValue = obj[prop];\r\n      descriptors[prop] = (options.lazy ? createLazyPropertyDescriptor : createPropertyDescriptor)\r\n        (originalValue, prop, allObservablesForObject);\r\n\r\n      if (options.deep && canTrack(originalValue)) {\r\n        wrap(originalValue, Object.keys(originalValue), options);\r\n      }\r\n    });\r\n\r\n    Object.defineProperties(obj, descriptors);\r\n  }\r\n\r\n  function isPlainObject( obj ){\r\n    return !!obj && typeof obj === 'object' && obj.constructor === Object;\r\n  }\r\n\r\n  // Lazily created by `getAllObservablesForObject` below. Has to be created lazily because the\r\n  // WeakMap factory isn't available until the module has finished loading (may be async).\r\n  var objectToObservableMap;\r\n\r\n  // Gets or creates the hidden internal key-value collection of observables corresponding to\r\n  // properties on the model object.\r\n  function getAllObservablesForObject(obj, createIfNotDefined) {\r\n    if (!objectToObservableMap) {\r\n      objectToObservableMap = weakMapFactory();\r\n    }\r\n\r\n    var result = objectToObservableMap.get(obj);\r\n    if (!result && createIfNotDefined) {\r\n      result = {};\r\n      objectToObservableMap.set(obj, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // Removes the internal references to observables mapped to the specified properties\r\n  // or the entire object reference if no properties are passed in. This allows the\r\n  // observables to be replaced and tracked again.\r\n  function untrack(obj, propertyNames) {\r\n    if (!objectToObservableMap) {\r\n      return;\r\n    }\r\n\r\n    if (arguments.length === 1) {\r\n      objectToObservableMap['delete'](obj);\r\n    } else {\r\n      var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n      if (allObservablesForObject) {\r\n        propertyNames.forEach(function(propertyName) {\r\n          delete allObservablesForObject[propertyName];\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Computed properties\r\n  // -------------------\r\n  //\r\n  // The preceding code is already sufficient to upgrade ko.computed model properties to ES5\r\n  // getter/setter pairs (or in the case of readonly ko.computed properties, just a getter).\r\n  // These then behave like a regular property with a getter function, except they are smarter:\r\n  // your evaluator is only invoked when one of its dependencies changes. The result is cached\r\n  // and used for all evaluations until the next time a dependency changes).\r\n  //\r\n  // However, instead of forcing developers to declare a ko.computed property explicitly, it's\r\n  // nice to offer a utility function that declares a computed getter directly.\r\n\r\n  // Implements `ko.defineProperty`\r\n  function defineComputedProperty(obj, propertyName, evaluatorOrOptions) {\r\n    var ko = this,\r\n      computedOptions = { owner: obj, deferEvaluation: true };\r\n\r\n    if (typeof evaluatorOrOptions === 'function') {\r\n      computedOptions.read = evaluatorOrOptions;\r\n    } else {\r\n      if ('value' in evaluatorOrOptions) {\r\n        throw new Error('For ko.defineProperty, you must not specify a \"value\" for the property. ' +\r\n                        'You must provide a \"get\" function.');\r\n      }\r\n\r\n      if (typeof evaluatorOrOptions.get !== 'function') {\r\n        throw new Error('For ko.defineProperty, the third parameter must be either an evaluator function, ' +\r\n                        'or an options object containing a function called \"get\".');\r\n      }\r\n\r\n      computedOptions.read = evaluatorOrOptions.get;\r\n      computedOptions.write = evaluatorOrOptions.set;\r\n    }\r\n\r\n    obj[propertyName] = ko.computed(computedOptions);\r\n    track.call(ko, obj, [propertyName]);\r\n    return obj;\r\n  }\r\n\r\n  // Array handling\r\n  // --------------\r\n  //\r\n  // Arrays are special, because unlike other property types, they have standard mutator functions\r\n  // (`push`/`pop`/`splice`/etc.) and it's desirable to trigger a change notification whenever one of\r\n  // those mutator functions is invoked.\r\n  //\r\n  // Traditionally, Knockout handles this by putting special versions of `push`/`pop`/etc. on observable\r\n  // arrays that mutate the underlying array and then trigger a notification. That approach doesn't\r\n  // work for Knockout-ES5 because properties now return the underlying arrays, so the mutator runs\r\n  // in the context of the underlying array, not any particular observable:\r\n  //\r\n  //     // Operates on the underlying array value\r\n  //     myModel.someCollection.push('New value');\r\n  //\r\n  // To solve this, Knockout-ES5 detects array values, and modifies them as follows:\r\n  //  1. Associates a hidden subscribable with each array instance that it encounters\r\n  //  2. Intercepts standard mutators (`push`/`pop`/etc.) and makes them trigger the subscribable\r\n  // Then, for model properties whose values are arrays, the property's underlying observable\r\n  // subscribes to the array subscribable, so it can trigger a change notification after mutation.\r\n\r\n  // Given an observable that underlies a model property, watch for any array value that might\r\n  // be assigned as the property value, and hook into its change events\r\n  function notifyWhenPresentOrFutureArrayValuesMutate(ko, observable) {\r\n    var watchingArraySubscription = null;\r\n    ko.computed(function () {\r\n      // Unsubscribe to any earlier array instance\r\n      if (watchingArraySubscription) {\r\n        watchingArraySubscription.dispose();\r\n        watchingArraySubscription = null;\r\n      }\r\n\r\n      // Subscribe to the new array instance\r\n      var newArrayInstance = observable();\r\n      if (newArrayInstance instanceof Array) {\r\n        watchingArraySubscription = startWatchingArrayInstance(ko, observable, newArrayInstance);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Listens for array mutations, and when they happen, cause the observable to fire notifications.\r\n  // This is used to make model properties of type array fire notifications when the array changes.\r\n  // Returns a subscribable that can later be disposed.\r\n  function startWatchingArrayInstance(ko, observable, arrayInstance) {\r\n    var subscribable = getSubscribableForArray(ko, arrayInstance);\r\n    return subscribable.subscribe(observable);\r\n  }\r\n\r\n  // Lazily created by `getSubscribableForArray` below. Has to be created lazily because the\r\n  // WeakMap factory isn't available until the module has finished loading (may be async).\r\n  var arraySubscribablesMap;\r\n\r\n  // Gets or creates a subscribable that fires after each array mutation\r\n  function getSubscribableForArray(ko, arrayInstance) {\r\n    if (!arraySubscribablesMap) {\r\n      arraySubscribablesMap = weakMapFactory();\r\n    }\r\n\r\n    var subscribable = arraySubscribablesMap.get(arrayInstance);\r\n    if (!subscribable) {\r\n      subscribable = new ko.subscribable();\r\n      arraySubscribablesMap.set(arrayInstance, subscribable);\r\n\r\n      var notificationPauseSignal = {};\r\n      wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal);\r\n      addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal);\r\n    }\r\n\r\n    return subscribable;\r\n  }\r\n\r\n  // After each array mutation, fires a notification on the given subscribable\r\n  function wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal) {\r\n    ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'].forEach(function(fnName) {\r\n      var origMutator = arrayInstance[fnName];\r\n      arrayInstance[fnName] = function() {\r\n        var result = origMutator.apply(this, arguments);\r\n        if (notificationPauseSignal.pause !== true) {\r\n          subscribable.notifySubscribers(this);\r\n        }\r\n        return result;\r\n      };\r\n    });\r\n  }\r\n\r\n  // Adds Knockout's additional array mutation functions to the array\r\n  function addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal) {\r\n    ['remove', 'removeAll', 'destroy', 'destroyAll', 'replace'].forEach(function(fnName) {\r\n      // Make it a non-enumerable property for consistency with standard Array functions\r\n      Object.defineProperty(arrayInstance, fnName, {\r\n        enumerable: false,\r\n        value: function() {\r\n          var result;\r\n\r\n          // These additional array mutators are built using the underlying push/pop/etc.\r\n          // mutators, which are wrapped to trigger notifications. But we don't want to\r\n          // trigger multiple notifications, so pause the push/pop/etc. wrappers and\r\n          // delivery only one notification at the end of the process.\r\n          notificationPauseSignal.pause = true;\r\n          try {\r\n            // Creates a temporary observableArray that can perform the operation.\r\n            result = ko.observableArray.fn[fnName].apply(ko.observableArray(arrayInstance), arguments);\r\n          }\r\n          finally {\r\n            notificationPauseSignal.pause = false;\r\n          }\r\n          subscribable.notifySubscribers(arrayInstance);\r\n          return result;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Static utility functions\r\n  // ------------------------\r\n  //\r\n  // Since Knockout-ES5 sets up properties that return values, not observables, you can't\r\n  // trivially subscribe to the underlying observables (e.g., `someProperty.subscribe(...)`),\r\n  // or tell them that object values have mutated, etc. To handle this, we set up some\r\n  // extra utility functions that can return or work with the underlying observables.\r\n\r\n  // Returns the underlying observable associated with a model property (or `null` if the\r\n  // model or property doesn't exist, or isn't associated with an observable). This means\r\n  // you can subscribe to the property, e.g.:\r\n  //\r\n  //     ko.getObservable(model, 'propertyName')\r\n  //       .subscribe(function(newValue) { ... });\r\n  function getObservable(obj, propertyName) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      return null;\r\n    }\r\n\r\n    var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n    if (allObservablesForObject && propertyName in allObservablesForObject) {\r\n      return allObservablesForObject[propertyName]();\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  // Returns a boolean indicating whether the property on the object has an underlying\r\n  // observables. This does the check in a way not to create an observable if the\r\n  // object was created with lazily created observables\r\n  function isTracked(obj, propertyName) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      return false;\r\n    }\r\n    \r\n    var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n    return !!allObservablesForObject && propertyName in allObservablesForObject;\r\n  }\r\n\r\n  // Causes a property's associated observable to fire a change notification. Useful when\r\n  // the property value is a complex object and you've modified a child property.\r\n  function valueHasMutated(obj, propertyName) {\r\n    var observable = getObservable(obj, propertyName);\r\n\r\n    if (observable) {\r\n      observable.valueHasMutated();\r\n    }\r\n  }\r\n\r\n  // Module initialisation\r\n  // ---------------------\r\n  //\r\n  // When this script is first evaluated, it works out what kind of module loading scenario\r\n  // it is in (Node.js or a browser `<script>` tag), stashes a reference to its dependencies\r\n  // (currently that's just the WeakMap shim), and then finally attaches itself to whichever\r\n  // instance of Knockout.js it can find.\r\n\r\n  // A function that returns a new ES6-compatible WeakMap instance (using ES5 shim if needed).\r\n  // Instantiated by prepareExports, accounting for which module loader is being used.\r\n  var weakMapFactory;\r\n\r\n  // Extends a Knockout instance with Knockout-ES5 functionality\r\n  function attachToKo(ko) {\r\n    ko.track = track;\r\n    ko.untrack = untrack;\r\n    ko.getObservable = getObservable;\r\n    ko.valueHasMutated = valueHasMutated;\r\n    ko.defineProperty = defineComputedProperty;\r\n\r\n    // todo: test it, maybe added it to ko. directly\r\n    ko.es5 = {\r\n      getAllObservablesForObject: getAllObservablesForObject,\r\n      notifyWhenPresentOrFutureArrayValuesMutate: notifyWhenPresentOrFutureArrayValuesMutate,\r\n      isTracked: isTracked\r\n    };\r\n  }\r\n\r\n  // Determines which module loading scenario we're in, grabs dependencies, and attaches to KO\r\n  function prepareExports() {\r\n    if (typeof exports === 'object' && typeof module === 'object') {\r\n      // Node.js case - load KO and WeakMap modules synchronously\r\n      ko = require('knockout');\r\n      var WM = require('../lib/weakmap');\r\n      attachToKo(ko);\r\n      weakMapFactory = function() { return new WM(); };\r\n      module.exports = ko;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n      define(['knockout'], function(koModule) {\r\n        ko = koModule;\r\n        attachToKo(koModule);\r\n        weakMapFactory = function() { return new global.WeakMap(); };\r\n        return koModule;\r\n      });\r\n    } else if ('ko' in global) {\r\n      // Non-module case - attach to the global instance, and assume a global WeakMap constructor\r\n      ko = global.ko;\r\n      attachToKo(global.ko);\r\n      weakMapFactory = function() { return new global.WeakMap(); };\r\n    }\r\n  }\r\n\r\n  prepareExports();\r\n\r\n})(this);","Magento_Persistent/js/view/customer-data-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper'\r\n], function ($, wrapper) {\r\n    'use strict';\r\n\r\n    var mixin = {\r\n\r\n        /**\r\n         * Check if persistent section is expired due to lifetime.\r\n         *\r\n         * @param {Function} originFn - Original method.\r\n         * @return {Array}\r\n         */\r\n        getExpiredSectionNames: function (originFn) {\r\n            var expiredSections = originFn(),\r\n                storage = $.initNamespaceStorage('mage-cache-storage').localStorage,\r\n                currentTimestamp = Math.floor(Date.now() / 1000),\r\n                persistentIndex = expiredSections.indexOf('persistent'),\r\n                persistentLifeTime = 0,\r\n                sectionData;\r\n\r\n            if (window.persistent !== undefined && window.persistent.expirationLifetime !== undefined) {\r\n                persistentLifeTime = window.persistent.expirationLifetime;\r\n            }\r\n\r\n            if (persistentIndex !== -1) {\r\n                sectionData = storage.get('persistent');\r\n\r\n                if (typeof sectionData === 'object' &&\r\n                    sectionData['data_id'] + persistentLifeTime >= currentTimestamp\r\n                ) {\r\n                    expiredSections.splice(persistentIndex, 1);\r\n                }\r\n            }\r\n\r\n            return expiredSections;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Override default customer-data.getExpiredSectionNames().\r\n     */\r\n    return function (target) {\r\n        return wrapper.extend(target, mixin);\r\n    };\r\n});\r\n","Magento_Persistent/js/view/remember-me.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiComponent'\r\n], function (ko, Component) {\r\n    'use strict';\r\n\r\n    var persistenceConfig = window.checkoutConfig.persistenceConfig;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Persistent/remember-me'\r\n        },\r\n        dataScope: 'global',\r\n        isRememberMeCheckboxVisible: ko.observable(persistenceConfig.isRememberMeCheckboxVisible),\r\n        isRememberMeCheckboxChecked: ko.observable(persistenceConfig.isRememberMeCheckboxChecked)\r\n    });\r\n});\r\n","Magento_Persistent/js/view/additional-welcome.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, $t, customerData) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Init.\r\n         */\r\n        init: function () {\r\n            var persistent = customerData.get('persistent');\r\n\r\n            if (persistent().fullname === undefined) {\r\n                customerData.get('persistent').subscribe(this.replacePersistentWelcome);\r\n            } else {\r\n                this.replacePersistentWelcome();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Replace welcome message for customer with persistent cookie.\r\n         */\r\n        replacePersistentWelcome: function () {\r\n            var persistent = customerData.get('persistent'),\r\n                welcomeElems;\r\n\r\n            if (persistent().fullname !== undefined) {\r\n                welcomeElems = $('li.greet.welcome > span.not-logged-in');\r\n\r\n                if (welcomeElems.length) {\r\n                    $(welcomeElems).each(function () {\r\n                        var html = $t('Welcome, %1!').replace('%1', persistent().fullname);\r\n\r\n                        $(this).attr('data-bind', html);\r\n                        $(this).html(html);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @constructor\r\n         */\r\n        'Magento_Persistent/js/view/additional-welcome': function () {\r\n            this.init();\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'region_id': {\r\n                    'required': true\r\n                },\r\n                'region_id_input': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/flatrate',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/tablerate',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message, regionFields;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    regionFields = ['region', 'region_id', 'region_id_input'];\r\n\r\n                    if (\r\n                        $.inArray(field, regionFields) === -1 ||\r\n                        utils.isEmpty(address.region) && utils.isEmpty(address['region_id'])\r\n                    ) {\r\n                        self.validationErrors.push(message);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/freeshipping',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/flatrate',\r\n    '../../model/shipping-rates-validation-rules/flatrate'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    flatrateShippingRatesValidator,\r\n    flatrateShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('flatrate', flatrateShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('flatrate', flatrateShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/tablerate',\r\n    '../../model/shipping-rates-validation-rules/tablerate'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    tablerateShippingRatesValidator,\r\n    tablerateShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('tablerate', tablerateShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('tablerate', tablerateShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/freeshipping',\r\n    '../../model/shipping-rates-validation-rules/freeshipping'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    freeshippingShippingRatesValidator,\r\n    freeshippingShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('freeshipping', freeshippingShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('freeshipping', freeshippingShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","mage/loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.loader', {\r\n        loaderStarted: 0,\r\n        options: {\r\n            icon: '',\r\n            texts: {\r\n                loaderText: $.mage.__('Please wait...'),\r\n                imgAlt: $.mage.__('Loading...')\r\n            },\r\n            template:\r\n                '<div class=\"loading-mask\" data-role=\"loader\">' +\r\n                    '<div class=\"loader\">' +\r\n                        '<img alt=\"<%- data.texts.imgAlt %>\" src=\"<%- data.icon %>\">' +\r\n                        '<p><%- data.texts.loaderText %></p>' +\r\n                    '</div>' +\r\n                '</div>'\r\n\r\n        },\r\n\r\n        /**\r\n         * Loader creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Bind on ajax events\r\n         * @protected\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                'processStop': 'hide',\r\n                'processStart': 'show',\r\n                'show.loader': 'show',\r\n                'hide.loader': 'hide',\r\n                'contentUpdated.loader': '_contentUpdated'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Verify loader present after content updated\r\n         *\r\n         * This will be cleaned up by the task MAGETWO-11070\r\n         *\r\n         * @param {EventObject} e\r\n         * @private\r\n         */\r\n        _contentUpdated: function (e) {\r\n            this.show(e);\r\n        },\r\n\r\n        /**\r\n         * Show loader\r\n         */\r\n        show: function (e, ctx) {\r\n            this._render();\r\n            this.loaderStarted++;\r\n            this.spinner.show();\r\n\r\n            if (ctx) {\r\n                this.spinner\r\n                    .css({\r\n                        width: ctx.outerWidth(),\r\n                        height: ctx.outerHeight(),\r\n                        position: 'absolute'\r\n                    })\r\n                    .position({\r\n                        my: 'top left',\r\n                        at: 'top left',\r\n                        of: ctx\r\n                    });\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Hide loader\r\n         */\r\n        hide: function () {\r\n            if (this.loaderStarted > 0) {\r\n                this.loaderStarted--;\r\n\r\n                if (this.loaderStarted === 0) {\r\n                    this.spinner.hide();\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Render loader\r\n         * @protected\r\n         */\r\n        _render: function () {\r\n            var html;\r\n\r\n            if (!this.spinnerTemplate) {\r\n                this.spinnerTemplate = mageTemplate(this.options.template);\r\n\r\n                html = $(this.spinnerTemplate({\r\n                    data: this.options\r\n                }));\r\n\r\n                html.prependTo(this.element);\r\n\r\n                this.spinner = html;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy loader\r\n         */\r\n        _destroy: function () {\r\n            this.spinner.remove();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This widget takes care of registering the needed loader listeners on the body\r\n     */\r\n    $.widget('mage.loaderAjax', {\r\n        options: {\r\n            defaultContainer: '[data-container=body]',\r\n            loadingClass: 'ajax-loading'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n            // There should only be one instance of this widget, and it should be attached\r\n            // to the body only. Having it on the page twice will trigger multiple processStarts.\r\n            if (window.console && !this.element.is(this.options.defaultContainer) && $.mage.isDevMode(undefined)) {\r\n                console.warn('This widget is intended to be attached to the body, not below.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            $(document).on({\r\n                'ajaxSend': this._onAjaxSend.bind(this),\r\n                'ajaxComplete': this._onAjaxComplete.bind(this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} loaderContext\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _getJqueryObj: function (loaderContext) {\r\n            var ctx;\r\n\r\n            // Check to see if context is jQuery object or not.\r\n            if (loaderContext) {\r\n                if (loaderContext.jquery) {\r\n                    ctx = loaderContext;\r\n                } else {\r\n                    ctx = $(loaderContext);\r\n                }\r\n            } else {\r\n                ctx = $('[data-container=\"body\"]');\r\n            }\r\n\r\n            return ctx;\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @param {Object} jqxhr\r\n         * @param {Object} settings\r\n         * @private\r\n         */\r\n        _onAjaxSend: function (e, jqxhr, settings) {\r\n            var ctx;\r\n\r\n            $(this.options.defaultContainer)\r\n                .addClass(this.options.loadingClass)\r\n                .attr({\r\n                    'aria-busy': true\r\n                });\r\n\r\n            if (settings && settings.showLoader) {\r\n                ctx = this._getJqueryObj(settings.loaderContext);\r\n                ctx.trigger('processStart');\r\n\r\n                // Check to make sure the loader is there on the page if not report it on the console.\r\n                // NOTE that this check should be removed before going live. It is just an aid to help\r\n                // in finding the uses of the loader that maybe broken.\r\n                if (window.console && !ctx.parents('[data-role=\"loader\"]').length) {\r\n                    console.warn('Expected to start loader but did not find one in the dom');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @param {Object} jqxhr\r\n         * @param {Object} settings\r\n         * @private\r\n         */\r\n        _onAjaxComplete: function (e, jqxhr, settings) {\r\n            $(this.options.defaultContainer)\r\n                .removeClass(this.options.loadingClass)\r\n                .attr('aria-busy', false);\r\n\r\n            if (settings && settings.showLoader) {\r\n                this._getJqueryObj(settings.loaderContext).trigger('processStop');\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return {\r\n        loader: $.mage.loader,\r\n        loaderAjax: $.mage.loaderAjax\r\n    };\r\n});\r\n","mage/dropdown.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/dialog',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var timer = null;\r\n\r\n    /**\r\n     * Dropdown Widget - this widget is a wrapper for the jQuery UI Dialog\r\n     */\r\n    $.widget('mage.dropdownDialog', $.ui.dialog, {\r\n        options: {\r\n            triggerEvent: 'click',\r\n            triggerClass: null,\r\n            parentClass: null,\r\n            triggerTarget: null,\r\n            defaultDialogClass: 'mage-dropdown-dialog',\r\n            dialogContentClass: null,\r\n            shadowHinter: null,\r\n            closeOnMouseLeave: true,\r\n            closeOnClickOutside: true,\r\n            minHeight: null,\r\n            minWidth: null,\r\n            width: null,\r\n            modal: false,\r\n            timeout: null,\r\n            autoOpen: false,\r\n            createTitleBar: false,\r\n            autoPosition: false,\r\n            autoSize: false,\r\n            draggable: false,\r\n            resizable: false,\r\n            bodyClass: '',\r\n            buttons: [\r\n                {\r\n                    'class': 'action close',\r\n                    'text': $.mage.__('Close'),\r\n\r\n                    /**\r\n                     * Click action.\r\n                     */\r\n                    'click': function () {\r\n                        $(this).dropdownDialog('close');\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n\r\n        /**\r\n         * extend default functionality to bind the opener for dropdown\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var _self = this;\r\n\r\n            this._super();\r\n            this.uiDialog.addClass(this.options.defaultDialogClass);\r\n\r\n            if (_self.options.triggerTarget) {\r\n                $(_self.options.triggerTarget).on(_self.options.triggerEvent, function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n\r\n                    if (!_self._isOpen) {\r\n                        $('.' + _self.options.defaultDialogClass + ' > .ui-dialog-content').dropdownDialog('close');\r\n                        _self.open();\r\n                    } else {\r\n                        _self.close(event);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (_self.options.shadowHinter) {\r\n                _self.hinter = $('<div class=\"' + _self.options.shadowHinter + '\"/>');\r\n                _self.element.append(_self.hinter);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Extend default functionality to close the dropdown\r\n         * with custom delay on mouse out and also to close when clicking outside\r\n         */\r\n        open: function () {\r\n            var _self = this;\r\n\r\n            this._super();\r\n\r\n            if (_self.options.dialogContentClass) {\r\n                _self.element.addClass(_self.options.dialogContentClass);\r\n            }\r\n\r\n            if (_self.options.closeOnMouseLeave) {\r\n\r\n                this._mouseEnter(_self.uiDialog);\r\n                this._mouseLeave(_self.uiDialog);\r\n\r\n                if (_self.options.triggerTarget) {\r\n                    this._mouseLeave($(_self.options.triggerTarget));\r\n                }\r\n            }\r\n\r\n            if (_self.options.closeOnClickOutside) {\r\n                $('body').on('click.outsideDropdown', function (event) {\r\n                    if (_self._isOpen && !$(event.target).closest('.ui-dialog').length) {\r\n                        if (timer) {\r\n                            clearTimeout(timer);\r\n                        }\r\n                        _self.close(event);\r\n                    }\r\n                });\r\n            }\r\n            // adding the class on the opener and parent element for dropdown\r\n            if (_self.options.triggerClass) {\r\n                $(_self.options.triggerTarget).addClass(_self.options.triggerClass);\r\n            }\r\n\r\n            if (_self.options.parentClass) {\r\n                $(_self.options.appendTo).addClass(_self.options.parentClass);\r\n            }\r\n\r\n            if (_self.options.bodyClass) {\r\n                $('body').addClass(_self.options.bodyClass);\r\n            }\r\n\r\n            if (_self.options.shadowHinter) {\r\n                _self._setShadowHinterPosition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * extend default functionality to reset the timer and remove the active class for opener\r\n         */\r\n        close: function () {\r\n            this._super();\r\n\r\n            if (this.options.dialogContentClass) {\r\n                this.element.removeClass(this.options.dialogContentClass);\r\n            }\r\n\r\n            if (this.options.triggerClass) {\r\n                $(this.options.triggerTarget).removeClass(this.options.triggerClass);\r\n            }\r\n\r\n            if (this.options.parentClass) {\r\n                $(this.options.appendTo).removeClass(this.options.parentClass);\r\n            }\r\n\r\n            if (this.options.bodyClass) {\r\n                $('body').removeClass(this.options.bodyClass);\r\n            }\r\n\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            if (this.options.triggerTarget) {\r\n                $(this.options.triggerTarget).off('mouseleave');\r\n            }\r\n            this.uiDialog.off('mouseenter');\r\n            this.uiDialog.off('mouseleave');\r\n            $('body').off('click.outsideDropdown');\r\n        },\r\n\r\n        /**\r\n         * _setShadowHinterPosition\r\n         * @private\r\n         */\r\n        _setShadowHinterPosition: function () {\r\n            var _self = this,\r\n                offset;\r\n\r\n            offset = _self.options.position.of.offset().left -\r\n                _self.element.offset().left +\r\n                _self.options.position.of.outerWidth() / 2;\r\n            offset = isNaN(offset) ? 0 : Math.floor(offset);\r\n            _self.hinter.css('left', offset);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _position: function () {\r\n            if (this.options.autoPosition) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _createTitlebar: function () {\r\n            if (this.options.createTitleBar) {\r\n                this._super();\r\n            } else {\r\n                // the title bar close button is referenced\r\n                // in _focusTabbable function, so to prevent errors it must be declared\r\n                this.uiDialogTitlebarClose = $('<div>');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _size: function () {\r\n            if (this.options.autoSize) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} handler\r\n         * @private\r\n         */\r\n        _mouseLeave: function (handler) {\r\n            var _self = this;\r\n\r\n            handler.on('mouseleave', function (event) {\r\n                event.stopPropagation();\r\n\r\n                if (_self._isOpen) {\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                    }\r\n                    timer = setTimeout(function (e) {\r\n                        _self.close(e);\r\n                    }, _self.options.timeout);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} handler\r\n         * @private\r\n         */\r\n        _mouseEnter: function (handler) {\r\n            handler.on('mouseenter', function (event) {\r\n                event.stopPropagation();\r\n\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {*} value\r\n         * @private\r\n         */\r\n        _setOption: function (key, value) {\r\n            this._super(key, value);\r\n\r\n            if (key === 'triggerTarget') {\r\n                this.options.triggerTarget = value;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.dropdownDialog;\r\n});\r\n","mage/translate-inline.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/dialog',\r\n    'mage/translate'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.translateInline', $.ui.dialog, {\r\n        options: {\r\n            translateForm: {\r\n                template: '#translate-form-template',\r\n                data: {\r\n                    id: 'translate-inline-form',\r\n                    message: 'Please refresh the page to see your changes after submitting this form.'\r\n                }\r\n            },\r\n            autoOpen: false,\r\n            translateArea: null,\r\n            modal: true,\r\n            dialogClass: 'popup-window',\r\n            width: '75%',\r\n            title: $.mage.__('Translate'),\r\n            height: 470,\r\n            position: {\r\n                my: 'left top',\r\n                at: 'center top',\r\n                of: 'body'\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Submit'),\r\n                'class': 'action-primary',\r\n\r\n                /**\r\n                 * Click\r\n                 */\r\n                click: function () {\r\n                    $(this).translateInline('submit');\r\n                }\r\n            },\r\n            {\r\n                text: $.mage.__('Close'),\r\n                'class': 'action-close',\r\n\r\n                /**\r\n                 * Click.\r\n                 */\r\n                click: function () {\r\n                    $(this).translateInline('close');\r\n                }\r\n            }],\r\n\r\n            /**\r\n             * Open.\r\n             */\r\n            open: function () {\r\n                var topMargin;\r\n\r\n                $(this).closest('.ui-dialog').addClass('ui-dialog-active');\r\n                topMargin = jQuery(this).closest('.ui-dialog').children('.ui-dialog-titlebar').outerHeight() + 45;\r\n                jQuery(this).closest('.ui-dialog').css('margin-top', topMargin);\r\n            },\r\n\r\n            /**\r\n             * Close.\r\n             */\r\n            close: function () {\r\n                $(this).closest('.ui-dialog').removeClass('ui-dialog-active');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Translate Inline creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.tmpl = mageTemplate(this.options.translateForm.template);\r\n            (this.options.translateArea && $(this.options.translateArea).length ?\r\n                $(this.options.translateArea) :\r\n                this.element.closest('body'))\r\n                    .on('edit.editTrigger', $.proxy(this._onEdit, this));\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * @param {*} templateData\r\n         * @return {*|jQuery|HTMLElement}\r\n         * @private\r\n         */\r\n        _prepareContent: function (templateData) {\r\n            var data = $.extend({\r\n                items: templateData,\r\n                escape: $.mage.escapeHTML\r\n            }, this.options.translateForm.data);\r\n\r\n            this.data = data;\r\n\r\n            return $(this.tmpl({\r\n                data: data\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * Render translation form and open dialog\r\n         * @param {Object} e - object\r\n         * @protected\r\n         */\r\n        _onEdit: function (e) {\r\n            this.target = e.target;\r\n            this.element.html(this._prepareContent($(e.target).data('translate')));\r\n            this.open(e);\r\n        },\r\n\r\n        /**\r\n         * Submit.\r\n         */\r\n        submit: function () {\r\n            if (this.formIsSubmitted) {\r\n                return;\r\n            }\r\n            this._formSubmit();\r\n        },\r\n\r\n        /**\r\n         * Send ajax request on form submit\r\n         * @protected\r\n         */\r\n        _formSubmit: function () {\r\n            var parameters;\r\n\r\n            this.formIsSubmitted = true;\r\n            parameters = $.param({\r\n                area: this.options.area\r\n            }) + '&' + $('#' + this.options.translateForm.data.id).serialize();\r\n\r\n            $.ajax({\r\n                url: this.options.ajaxUrl,\r\n                type: 'POST',\r\n                data: parameters,\r\n                loaderContext: this.element,\r\n                showLoader: true\r\n            }).complete($.proxy(this._formSubmitComplete, this));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} response\r\n         * @private\r\n         */\r\n        _formSubmitComplete: function (response) {\r\n            this.close();\r\n            this.formIsSubmitted = false;\r\n            this._updatePlaceholder(response.responseJSON[this.data.items[0].original]);\r\n        },\r\n\r\n        /**\r\n         * @param {*} newValue\r\n         * @private\r\n         */\r\n        _updatePlaceholder: function (newValue) {\r\n            var target = jQuery(this.target);\r\n\r\n            target.data('translate')[0].shown = newValue;\r\n            target.data('translate')[0].translated = newValue;\r\n            target.html(newValue);\r\n        },\r\n\r\n        /**\r\n         * Destroy translateInline\r\n         */\r\n        destroy: function () {\r\n            this.element.off('.editTrigger');\r\n            this._super();\r\n        }\r\n    });\r\n    // @TODO move the \"escapeHTML\" method into the file with global utility functions\r\n    $.extend(true, $, {\r\n        mage: {\r\n            /**\r\n             * @param {String} str\r\n             * @return {Boolean}\r\n             */\r\n            escapeHTML: function (str) {\r\n                return str ?\r\n                    jQuery('<div/>').text(str).html().replace(/\"/g, '&quot;') :\r\n                    false;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.translateInline;\r\n});\r\n","mage/storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery', 'mage/url'], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Perform asynchronous GET request to server.\r\n         * @param {String} url\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        get: function (url, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'GET',\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous POST request to server.\r\n         * @param {String} url\r\n         * @param {String} data\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        post: function (url, data, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'POST',\r\n                data: data,\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous PUT request to server.\r\n         * @param {String} url\r\n         * @param {String} data\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        put: function (url, data, global, contentType, headers) {\r\n            var ajaxSettings = {};\r\n\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n            ajaxSettings.url = urlBuilder.build(url);\r\n            ajaxSettings.type = 'PUT';\r\n            ajaxSettings.data = data;\r\n            ajaxSettings.global = global;\r\n            ajaxSettings.contentType = contentType;\r\n            ajaxSettings.headers = headers;\r\n\r\n            return $.ajax(ajaxSettings);\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous DELETE request to server.\r\n         * @param {String} url\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        delete: function (url, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'DELETE',\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        }\r\n    };\r\n});\r\n","mage/url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable strict */\r\ndefine([], function () {\r\n    var baseUrl = '';\r\n\r\n    return {\r\n        /**\r\n         * @param {String} url\r\n         */\r\n        setBaseUrl: function (url) {\r\n            baseUrl = url;\r\n        },\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {*}\r\n         */\r\n        build: function (path) {\r\n            if (path.indexOf(baseUrl) !== -1) {\r\n                return path;\r\n            }\r\n\r\n            return baseUrl + path;\r\n        }\r\n    };\r\n});\r\n","mage/touch-slider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/slider'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for touch events for regular jQuery UI slider.\r\n     */\r\n    $.widget('mage.touchSlider', $.ui.slider, {\r\n\r\n        /**\r\n         * Creates instance of widget.\r\n         *\r\n         * @override\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                '_mouseDown',\r\n                '_mouseMove',\r\n                '_onTouchEnd'\r\n            );\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Initializes mouse events on element.\r\n         * @override\r\n         */\r\n        _mouseInit: function () {\r\n            var result = this._superApply(arguments);\r\n\r\n            this.element\r\n                .off('mousedown.' + this.widgetName)\r\n                .on('touchstart.' + this.widgetName, this._mouseDown);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Elements' 'mousedown' event handler polyfill.\r\n         * @override\r\n         */\r\n        _mouseDown: function (event) {\r\n            var prevDelegate = this._mouseMoveDelegate,\r\n                result;\r\n\r\n            event = this._touchToMouse(event);\r\n            result = this._super(event);\r\n\r\n            if (prevDelegate === this._mouseMoveDelegate) {\r\n                return result;\r\n            }\r\n\r\n            $(document)\r\n                .off('mousemove.' + this.widgetName)\r\n                .off('mouseup.' + this.widgetName);\r\n\r\n            $(document)\r\n                .on('touchmove.' + this.widgetName, this._mouseMove)\r\n                .on('touchend.' + this.widgetName, this._onTouchEnd)\r\n                .on('tochleave.' + this.widgetName, this._onTouchEnd);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Documents' 'mousemove' event handler polyfill.\r\n         *\r\n         * @override\r\n         * @param {Event} event - Touch event object.\r\n         */\r\n        _mouseMove: function (event) {\r\n            event = this._touchToMouse(event);\r\n\r\n            return this._super(event);\r\n        },\r\n\r\n        /**\r\n         * Documents' 'touchend' event handler.\r\n         */\r\n        _onTouchEnd: function (event) {\r\n            $(document).trigger('mouseup');\r\n\r\n            return this._mouseUp(event);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseUp: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseDestroy: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes touch events from document object.\r\n         */\r\n        _removeTouchHandlers: function () {\r\n            $(document)\r\n                .off('touchmove.' + this.widgetName)\r\n                .off('touchend.' + this.widgetName)\r\n                .off('touchleave.' + this.widgetName);\r\n        },\r\n\r\n        /**\r\n         * Adds properties to the touch event to mimic mouse event.\r\n         *\r\n         * @param {Event} event - Touch event object.\r\n         * @returns {Event}\r\n         */\r\n        _touchToMouse: function (event) {\r\n            var orig = event.originalEvent,\r\n                touch = orig.touches[0];\r\n\r\n            return _.extend(event, {\r\n                which:      1,\r\n                pageX:      touch.pageX,\r\n                pageY:      touch.pageY,\r\n                clientX:    touch.clientX,\r\n                clientY:    touch.clientY,\r\n                screenX:    touch.screenX,\r\n                screenY:    touch.screenY\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.touchSlider;\r\n});\r\n","mage/smart-keyboard-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @return {Object}\r\n     * @constructor\r\n     */\r\n    function KeyboardHandler() {\r\n        var body = $('body'),\r\n            focusState = false,\r\n            tabFocusClass = '_keyfocus',\r\n            productsGrid = '[data-container=\"product-grid\"]',\r\n            catalogProductsGrid = $(productsGrid),\r\n            CODE_TAB = 9;\r\n\r\n        /**\r\n         * Handle logic, when onTabKeyPress fired at first.\r\n         * Then it changes state.\r\n         */\r\n        function onFocusInHandler() {\r\n            focusState = true;\r\n            body.addClass(tabFocusClass)\r\n                .off('focusin.keyboardHandler', onFocusInHandler);\r\n        }\r\n\r\n        /**\r\n         * Handle logic to remove state after onTabKeyPress to normal.\r\n         */\r\n        function onClickHandler() {\r\n            focusState = false;\r\n            body.removeClass(tabFocusClass)\r\n                .off('click', onClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Tab key onKeypress handler. Apply main logic:\r\n         *  - call differ actions onTabKeyPress and onClick\r\n         */\r\n        function smartKeyboardFocus() {\r\n            $(document).on('keydown keypress', function (event) {\r\n                if (event.which === CODE_TAB && !focusState) {\r\n                    body\r\n                        .on('focusin.keyboardHandler', onFocusInHandler)\r\n                        .on('click', onClickHandler);\r\n                }\r\n            });\r\n\r\n            // ARIA support for catalog grid products\r\n            if (catalogProductsGrid.length) {\r\n                body.on('focusin.gridProducts', productsGrid, function () {\r\n                    if (body.hasClass(tabFocusClass)) {\r\n                        $(this).addClass('active');\r\n                    }\r\n                });\r\n                body.on('focusout.gridProducts', productsGrid, function () {\r\n                    $(this).removeClass('active');\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Attach smart focus on specific element.\r\n         * @param {jQuery} element\r\n         */\r\n        function handleFocus(element) {\r\n            element.on('focusin.emulateTabFocus', function () {\r\n                focusState = true;\r\n                body.addClass(tabFocusClass);\r\n                element.off();\r\n            });\r\n\r\n            element.on('focusout.emulateTabFocus', function () {\r\n                focusState = false;\r\n                body.removeClass(tabFocusClass);\r\n                element.off();\r\n            });\r\n        }\r\n\r\n        return {\r\n            apply: smartKeyboardFocus,\r\n            focus: handleFocus\r\n        };\r\n    }\r\n\r\n    return new KeyboardHandler;\r\n});\r\n","mage/tooltip.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/tooltip'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    //Widget Wrapper\r\n    $.widget('mage.tooltip', $.ui.tooltip, {});\r\n\r\n    return $.mage.tooltip;\r\n});\r\n","mage/polyfill.js":"(function (root, doc) {\r\n    'use strict';\r\n\r\n    var Storage;\r\n\r\n    try {\r\n        if (!root.localStorage || !root.sessionStorage) {\r\n            throw new Error();\r\n        }\r\n\r\n        localStorage.setItem('storage_test', 1);\r\n        localStorage.removeItem('storage_test');\r\n    } catch (e) {\r\n        /**\r\n         * Returns a storage object to shim local or sessionStorage\r\n         * @param {String} type - either 'local' or 'session'\r\n         */\r\n        Storage = function (type) {\r\n            var data;\r\n\r\n            /**\r\n             * Creates a cookie\r\n             * @param {String} name\r\n             * @param {String} value\r\n             * @param {Integer} days\r\n             */\r\n            function createCookie(name, value, days) {\r\n                var date, expires;\r\n\r\n                if (days) {\r\n                    date = new Date();\r\n                    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n                    expires = '; expires=' + date.toGMTString();\r\n                } else {\r\n                    expires = '';\r\n                }\r\n                doc.cookie = name + '=' + value + expires + '; path=/';\r\n            }\r\n\r\n            /**\r\n             * Reads value of a cookie\r\n             * @param {String} name\r\n             */\r\n            function readCookie(name) {\r\n                var nameEQ = name + '=',\r\n                    ca = doc.cookie.split(';'),\r\n                    i = 0,\r\n                    c;\r\n\r\n                for (i = 0; i < ca.length; i++) {\r\n                    c = ca[i];\r\n\r\n                    while (c.charAt(0) === ' ') {\r\n                        c = c.substring(1, c.length);\r\n                    }\r\n\r\n                    if (c.indexOf(nameEQ) === 0) {\r\n                        return c.substring(nameEQ.length, c.length);\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            /**\r\n             * Returns cookie name based upon the storage type.\r\n             * If this is session storage, the function returns a unique cookie per tab\r\n             */\r\n            function getCookieName() {\r\n\r\n                if (type !== 'session') {\r\n                    return 'localstorage';\r\n                }\r\n\r\n                if (!root.name) {\r\n                    root.name = new Date().getTime();\r\n                }\r\n\r\n                return 'sessionStorage' + root.name;\r\n            }\r\n\r\n            /**\r\n             * Sets storage cookie to a data object\r\n             * @param {Object} dataObject\r\n             */\r\n            function setData(dataObject) {\r\n                data = encodeURIComponent(JSON.stringify(dataObject));\r\n                createCookie(getCookieName(), data, 365);\r\n            }\r\n\r\n            /**\r\n             * Clears value of cookie data\r\n             */\r\n            function clearData() {\r\n                createCookie(getCookieName(), '', 365);\r\n            }\r\n\r\n            /**\r\n             * @returns value of cookie data\r\n             */\r\n            function getData() {\r\n                var dataResponse = readCookie(getCookieName());\r\n\r\n                return dataResponse ? JSON.parse(decodeURIComponent(dataResponse)) : {};\r\n            }\r\n\r\n            data = getData();\r\n\r\n            return {\r\n                length: 0,\r\n\r\n                /**\r\n                 * Clears data from storage\r\n                 */\r\n                clear: function () {\r\n                    data = {};\r\n                    this.length = 0;\r\n                    clearData();\r\n                },\r\n\r\n                /**\r\n                 * Gets an item from storage\r\n                 * @param {String} key\r\n                 */\r\n                getItem: function (key) {\r\n                    return data[key] === undefined ? null : data[key];\r\n                },\r\n\r\n                /**\r\n                 * Gets an item by index from storage\r\n                 * @param {Integer} i\r\n                 */\r\n                key: function (i) {\r\n                    var ctr = 0,\r\n                        k;\r\n\r\n                    for (k in data) {\r\n\r\n                        if (data.hasOwnProperty(k)) {\r\n\r\n                            // eslint-disable-next-line max-depth\r\n                            if (ctr.toString() === i.toString()) {\r\n                                return k;\r\n                            }\r\n                            ctr++;\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                /**\r\n                 * Removes an item from storage\r\n                 * @param {String} key\r\n                 */\r\n                removeItem: function (key) {\r\n                    delete data[key];\r\n                    this.length--;\r\n                    setData(data);\r\n                },\r\n\r\n                /**\r\n                 * Sets an item from storage\r\n                 * @param {String} key\r\n                 * @param {String} value\r\n                 */\r\n                setItem: function (key, value) {\r\n                    data[key] = value.toString();\r\n                    this.length++;\r\n                    setData(data);\r\n                }\r\n            };\r\n        };\r\n\r\n        root.localStorage.prototype = root.localStorage = new Storage('local');\r\n        root.sessionStorage.prototype = root.sessionStorage = new Storage('session');\r\n    }\r\n})(window, document);\r\n","mage/dataPost.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate, uiConfirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.dataPost', {\r\n        options: {\r\n            formTemplate: '<form action=\"<%- data.action %>\" method=\"post\">' +\r\n            '<% _.each(data.data, function(value, index) { %>' +\r\n            '<input name=\"<%- index %>\" value=\"<%- value %>\">' +\r\n            '<% }) %></form>',\r\n            postTrigger: ['a[data-post]', 'button[data-post]', 'span[data-post]'],\r\n            formKeyInputSelector: 'input[name=\"form_key\"]'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _bind: function () {\r\n            var events = {};\r\n\r\n            $.each(this.options.postTrigger, function (index, value) {\r\n                events['click ' + value] = '_postDataAction';\r\n            });\r\n\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * Handler for click.\r\n         *\r\n         * @param {Object} e\r\n         * @private\r\n         */\r\n        _postDataAction: function (e) {\r\n            var params = $(e.currentTarget).data('post');\r\n\r\n            e.preventDefault();\r\n            this.postData(params);\r\n        },\r\n\r\n        /**\r\n         * Data post action.\r\n         *\r\n         * @param {Object} params\r\n         */\r\n        postData: function (params) {\r\n            var formKey = $(this.options.formKeyInputSelector).val(),\r\n                $form, input;\r\n\r\n            if (formKey) {\r\n                params.data['form_key'] = formKey;\r\n            }\r\n\r\n            $form = $(mageTemplate(this.options.formTemplate, {\r\n                data: params\r\n            }));\r\n\r\n            if (params.files) {\r\n                $form[0].enctype = 'multipart/form-data';\r\n                $.each(params.files, function (key, files) {\r\n                    if (files instanceof FileList) {\r\n                        input = document.createElement('input');\r\n                        input.type = 'file';\r\n                        input.name = key;\r\n                        input.files = files;\r\n                        $form[0].appendChild(input);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (params.data.confirmation) {\r\n                uiConfirm({\r\n                    content: params.data.confirmationMessage,\r\n                    actions: {\r\n                        /** @inheritdoc */\r\n                        confirm: function () {\r\n                            $form.appendTo('body').hide().submit();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                $form.appendTo('body').hide().submit();\r\n            }\r\n        }\r\n    });\r\n\r\n    $(document).dataPost();\r\n\r\n    return $.mage.dataPost;\r\n});\r\n","mage/edit-trigger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    var editTriggerPrototype;\r\n\r\n    $.widget('mage.editTrigger', {\r\n        options: {\r\n            img: '',\r\n            alt: '[TR]',\r\n            template: '#translate-inline-icon',\r\n            zIndex: 2000,\r\n            editSelector: '[data-translate]',\r\n            delay: 2000,\r\n            offsetTop: -3,\r\n            singleElement: true\r\n        },\r\n\r\n        /**\r\n         * editTriger creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.tmpl = mageTemplate(this.options.template);\r\n            this._initTrigger();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _getCss: function () {\r\n            return {\r\n                position: 'absolute',\r\n                cursor: 'pointer',\r\n                display: 'none',\r\n                'z-index': this.options.zIndex\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param {*} appendTo\r\n         * @return {*|jQuery}\r\n         * @private\r\n         */\r\n        _createTrigger: function (appendTo) {\r\n            var tmpl = this.tmpl({\r\n                data: this.options\r\n            });\r\n\r\n            return $(tmpl)\r\n                .css(this._getCss())\r\n                .data('role', 'edit-trigger-element')\r\n                .appendTo(appendTo);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initTrigger: function () {\r\n            this.trigger = this._createTrigger($('body'));\r\n        },\r\n\r\n        /**\r\n         * Bind on mousemove event\r\n         * @protected\r\n         */\r\n        _bind: function () {\r\n            this.trigger.on('click.' + this.widgetName, $.proxy(this._onClick, this));\r\n            this.element.on('mousemove.' + this.widgetName, $.proxy(this._onMouseMove, this));\r\n        },\r\n\r\n        /**\r\n         * Show editTriger\r\n         */\r\n        show: function () {\r\n            if (this.trigger.is(':hidden')) {\r\n                this.trigger.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide editTriger\r\n         */\r\n        hide: function () {\r\n            this.currentTarget = null;\r\n\r\n            if (this.trigger && this.trigger.is(':visible')) {\r\n                this.trigger.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set editTriger position\r\n         * @protected\r\n         */\r\n        _setPosition: function (el) {\r\n            var offset = el.offset();\r\n\r\n            this.trigger.css({\r\n                top: offset.top + el.outerHeight() + this.options.offsetTop,\r\n                left: offset.left\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show/hide trigger on mouse move.\r\n         *\r\n         * @param {jQuery.Event} e\r\n         * @protected\r\n         */\r\n        _onMouseMove: function (e) {\r\n            var target = $(e.target),\r\n                inner = target.find(this.options.editSelector);\r\n\r\n            if ($(e.target).is('button') && inner.length) {\r\n                target = inner;\r\n            } else if (!target.is(this.trigger) && !target.is(this.options.editSelector)) {\r\n                target = target.parents(this.options.editSelector).first();\r\n            }\r\n\r\n            if (target.length) {\r\n                if (!target.is(this.trigger)) {\r\n                    this._setPosition(target);\r\n                    this.currentTarget = target;\r\n                }\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger event \"edit\" on element for translate.\r\n         *\r\n         * @param {jQuery.Event} e\r\n         * @protected\r\n         */\r\n        _onClick: function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            $(this.currentTarget).trigger('edit.' + this.widgetName);\r\n            this.hide(true);\r\n        },\r\n\r\n        /**\r\n         * Destroy editTriger\r\n         */\r\n        destroy: function () {\r\n            this.trigger.remove();\r\n            this.element.off('.' + this.widgetName);\r\n\r\n            return $.Widget.prototype.destroy.call(this);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Extention for widget editTrigger - hide trigger with delay\r\n     */\r\n    editTriggerPrototype = $.mage.editTrigger.prototype;\r\n\r\n    $.widget('mage.editTrigger', $.extend({}, editTriggerPrototype, {\r\n        /**\r\n         * Added clear timeout on trigger show\r\n         */\r\n        show: function () {\r\n            editTriggerPrototype.show.apply(this, arguments);\r\n\r\n            if (this.options.delay) {\r\n                this._clearTimer();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Added setTimeout on trigger hide\r\n         */\r\n        hide: function (immediate) {\r\n            if (!immediate && this.options.delay) {\r\n                if (!this.timer) {\r\n                    this.timer = setTimeout($.proxy(function () {\r\n                        editTriggerPrototype.hide.apply(this, arguments);\r\n                        this._clearTimer();\r\n                    }, this), this.options.delay);\r\n                }\r\n            } else {\r\n                editTriggerPrototype.hide.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear timer\r\n         * @protected\r\n         */\r\n        _clearTimer: function () {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }\r\n        }\r\n    }));\r\n\r\n    return $.mage.editTrigger;\r\n});\r\n","mage/tabs.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'mage/mage',\r\n    'mage/collapsible'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.tabs', {\r\n        options: {\r\n            active: 0,\r\n            disabled: [],\r\n            openOnFocus: true,\r\n            collapsible: false,\r\n            collapsibleElement: '[data-role=collapsible]',\r\n            header: '[data-role=title]',\r\n            content: '[data-role=content]',\r\n            trigger: '[data-role=trigger]',\r\n            closedState: null,\r\n            openedState: null,\r\n            disabledState: null,\r\n            ajaxUrlElement: '[data-ajax=true]',\r\n            ajaxContent: false,\r\n            loadingClass: null,\r\n            saveState: false,\r\n            animate: false,\r\n            icons: {\r\n                activeHeader: null,\r\n                header: null\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (typeof this.options.disabled === 'string') {\r\n                this.options.disabled = this.options.disabled.split(' ').map(function (item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n            }\r\n            this._processPanels();\r\n            this._handleDeepLinking();\r\n            this._processTabIndex();\r\n            this._closeOthers();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            $.each(this.collapsibles, function () {\r\n                $(this).collapsible('destroy');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * If deep linking is used, all sections must be closed but the one that contains the anchor.\r\n         * @private\r\n         */\r\n        _handleDeepLinking: function () {\r\n            var self = this,\r\n                anchor = window.location.hash,\r\n                isValid = $.mage.isValidSelector(anchor),\r\n                anchorId = anchor.replace('#', '');\r\n\r\n            if (anchor && isValid) {\r\n                $.each(self.contents, function (i) {\r\n                    if ($(this).attr('id') === anchorId || $(this).find('#' + anchorId).length) {\r\n                        self.collapsibles.not(self.collapsibles.eq(i)).collapsible('forceDeactivate');\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * When the widget gets instantiated, the first tab that is not disabled receive focusable property\r\n         * All tabs receive tabIndex 0\r\n         * @private\r\n         */\r\n        _processTabIndex: function () {\r\n            var self = this;\r\n\r\n            self.triggers.attr('tabIndex', 0);\r\n            $.each(this.collapsibles, function (i) {\r\n                self.triggers.attr('tabIndex', 0);\r\n                self.triggers.eq(i).attr('tabIndex', 0);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Prepare the elements for instantiating the collapsible widget\r\n         * @private\r\n         */\r\n        _processPanels: function () {\r\n            var isNotNested = this._isNotNested.bind(this);\r\n\r\n            this.contents = this.element\r\n                .find(this.options.content)\r\n                .filter(isNotNested);\r\n\r\n            this.collapsibles =  this.element\r\n                .find(this.options.collapsibleElement)\r\n                .filter(isNotNested);\r\n\r\n            this.collapsibles\r\n                .attr('role', 'presentation')\r\n                .parent()\r\n                .attr('role', 'tablist');\r\n\r\n            this.headers = this.element\r\n                .find(this.options.header)\r\n                .filter(isNotNested);\r\n\r\n            if (this.headers.length === 0) {\r\n                this.headers = this.collapsibles;\r\n            }\r\n            this.triggers = this.element\r\n                .find(this.options.trigger)\r\n                .filter(isNotNested);\r\n\r\n            if (this.triggers.length === 0) {\r\n                this.triggers = this.headers;\r\n            }\r\n            this._callCollapsible();\r\n        },\r\n\r\n        /**\r\n         * Checks if element is not in nested container to keep the correct scope of collapsible\r\n         * @param {Number} index\r\n         * @param {HTMLElement} element\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _isNotNested: function (index, element) {\r\n            var parentContent = $(element).parents(this.options.content);\r\n\r\n            return !parentContent.length || !this.element.find(parentContent).length;\r\n        },\r\n\r\n        /**\r\n         * Setting the disabled and active tabs and calling instantiation of collapsible\r\n         * @private\r\n         */\r\n        _callCollapsible: function () {\r\n            var self = this,\r\n                disabled = false,\r\n                active = false;\r\n\r\n            $.each(this.collapsibles, function (i) {\r\n                disabled = active = false;\r\n\r\n                if ($.inArray(i, self.options.disabled) !== -1) {\r\n                    disabled = true;\r\n                }\r\n\r\n                if (i === self.options.active) {\r\n                    active = true;\r\n                }\r\n                self._instantiateCollapsible(this, i, active, disabled);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Instantiate collapsible.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Number} index\r\n         * @param {*} active\r\n         * @param {*} disabled\r\n         * @private\r\n         */\r\n        _instantiateCollapsible: function (element, index, active, disabled) {\r\n            $(element).collapsible(\r\n                $.extend({}, this.options, {\r\n                    active: active,\r\n                    disabled: disabled,\r\n                    header: this.headers.eq(index),\r\n                    content: this.contents.eq(index),\r\n                    trigger: this.triggers.eq(index)\r\n                })\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Adding callback to close others tabs when one gets opened\r\n         * @private\r\n         */\r\n        _closeOthers: function () {\r\n            var self = this;\r\n\r\n            $.each(this.collapsibles, function () {\r\n                $(this).on('beforeOpen', function () {\r\n                    self.collapsibles.not(this).collapsible('forceDeactivate');\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        activate: function (index) {\r\n            this._toggleActivate('activate', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        deactivate: function (index) {\r\n            this._toggleActivate('deactivate', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleActivate: function (action, index) {\r\n            this.collapsibles.eq(index).collapsible(action);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        disable: function (index) {\r\n            this._toggleEnable('disable', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        enable: function (index) {\r\n            this._toggleEnable('enable', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleEnable: function (action, index) {\r\n            var self = this;\r\n\r\n            if ($.isArray(index)) {\r\n                $.each(index, function () {\r\n                    self.collapsibles.eq(this).collapsible(action);\r\n                });\r\n            } else if (index === undefined) {\r\n                this.collapsibles.collapsible(action);\r\n            } else {\r\n                this.collapsibles.eq(index).collapsible(action);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var self = this,\r\n                keyCode, toFocus, toFocusIndex, enabledTriggers, length, currentIndex, nextToFocus;\r\n\r\n            if (event.altKey || event.ctrlKey) {\r\n                return;\r\n            }\r\n            keyCode = $.ui.keyCode;\r\n            toFocus = false;\r\n            enabledTriggers = [];\r\n\r\n            $.each(this.triggers, function () {\r\n                if (!self.collapsibles.eq(self.triggers.index($(this))).collapsible('option', 'disabled')) {\r\n                    enabledTriggers.push(this);\r\n                }\r\n            });\r\n            length = $(enabledTriggers).length;\r\n            currentIndex = $(enabledTriggers).index(event.target);\r\n\r\n            /**\r\n             * @param {String} direction\r\n             * @return {*}\r\n             */\r\n            nextToFocus = function (direction) {\r\n                if (length > 0) {\r\n                    if (direction === 'right') {\r\n                        toFocusIndex = (currentIndex + 1) % length;\r\n                    } else {\r\n                        toFocusIndex = (currentIndex + length - 1) % length;\r\n                    }\r\n\r\n                    return enabledTriggers[toFocusIndex];\r\n                }\r\n\r\n                return event.target;\r\n            };\r\n\r\n            switch (event.keyCode) {\r\n                case keyCode.RIGHT:\r\n                case keyCode.DOWN:\r\n                    toFocus = nextToFocus('right');\r\n                    break;\r\n\r\n                case keyCode.LEFT:\r\n                case keyCode.UP:\r\n                    toFocus = nextToFocus('left');\r\n                    break;\r\n\r\n                case keyCode.HOME:\r\n                    toFocus = enabledTriggers[0];\r\n                    break;\r\n\r\n                case keyCode.END:\r\n                    toFocus = enabledTriggers[length - 1];\r\n                    break;\r\n            }\r\n\r\n            if (toFocus) {\r\n                toFocusIndex = this.triggers.index(toFocus);\r\n                $(event.target).attr('tabIndex', -1);\r\n                $(toFocus).attr('tabIndex', 0);\r\n                toFocus.focus();\r\n\r\n                if (this.options.openOnFocus) {\r\n                    this.activate(toFocusIndex);\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var events = {\r\n                keydown: '_keydown'\r\n            };\r\n\r\n            this._off(this.triggers);\r\n            this._on(this.triggers, events);\r\n        }\r\n    });\r\n\r\n    return $.mage.tabs;\r\n});\r\n","mage/accordion.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/tabs'\r\n], function ($, tabs) {\r\n    'use strict';\r\n\r\n    $.widget('mage.accordion', tabs, {\r\n        options: {\r\n            active: [0],\r\n            multipleCollapsible: false,\r\n            openOnFocus: false\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _callCollapsible: function () {\r\n            var self = this,\r\n                disabled = false,\r\n                active = false;\r\n\r\n            if (typeof this.options.active === 'string') {\r\n                this.options.active = this.options.active.split(' ').map(function (item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n            }\r\n\r\n            $.each(this.collapsibles, function (i) {\r\n                disabled = active = false;\r\n\r\n                if ($.inArray(i, self.options.disabled) !== -1) {\r\n                    disabled = true;\r\n                }\r\n\r\n                if ($.inArray(i, self.options.active) !== -1) {\r\n                    active = true;\r\n                }\r\n                self._instantiateCollapsible(this, i, active, disabled);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Overwrites default functionality to provide the option to activate/deactivate multiple sections simultaneous\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleActivate: function (action, index) {\r\n            var self = this;\r\n\r\n            if ($.isArray(index && this.options.multipleCollapsible)) {\r\n                $.each(index, function () {\r\n                    self.collapsibles.eq(this).collapsible(action);\r\n                });\r\n            } else if (index === undefined && this.options.multipleCollapsible) {\r\n                this.collapsibles.collapsible(action);\r\n            } else {\r\n                this._super(action, index);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * If the Accordion allows multiple section to be active at the same time, if deep linking is used\r\n         * sections that don't contain the id from anchor shouldn't be closed, otherwise the accordion uses the\r\n         * tabs behavior\r\n         * @private\r\n         */\r\n        _handleDeepLinking: function () {\r\n            if (!this.options.multipleCollapsible) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prevent default behavior that closes the other sections when one gets activated if the Accordion allows\r\n         * multiple sections simultaneous\r\n         * @private\r\n         */\r\n        _closeOthers: function () {\r\n            var self = this;\r\n\r\n            if (!this.options.multipleCollapsible) {\r\n                $.each(this.collapsibles, function () {\r\n                    $(this).on('beforeOpen', function () {\r\n                        self.collapsibles.not(this).collapsible('deactivate');\r\n                    });\r\n                });\r\n            }\r\n            $.each(this.collapsibles, function () {\r\n                $(this).on('beforeOpen', function () {\r\n                    var section = $(this);\r\n\r\n                    section.addClass('allow').prevAll().addClass('allow');\r\n                    section.nextAll().removeClass('allow');\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.accordion;\r\n});\r\n","mage/translate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'mageTranslationDictionary',\r\n    'underscore'\r\n], function ($, mage, dictionary, _) {\r\n    'use strict';\r\n\r\n    $.extend(true, $, {\r\n        mage: {\r\n            translate: (function () {\r\n                /**\r\n                 * Key-value translations storage\r\n                 * @type {Object}\r\n                 * @private\r\n                 */\r\n                var _data = dictionary;\r\n\r\n                return {\r\n                    /**\r\n                     * Add new translation (two string parameters) or several translations (object)\r\n                     */\r\n                    add: function () {\r\n                        if (arguments.length > 1) {\r\n                            _data[arguments[0]] = arguments[1];\r\n                        } else if (typeof arguments[0] === 'object') {\r\n                            $.extend(_data, arguments[0]);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Make a translation with parsing (to handle case when _data represents tuple)\r\n                     * @param {String} text\r\n                     * @return {String}\r\n                     */\r\n                    translate: function (text) {\r\n                        return typeof _data[text] !== 'undefined' ? _data[text] : text;\r\n                    }\r\n                };\r\n            }())\r\n        }\r\n    });\r\n    $.mage.__ = $.proxy($.mage.translate.translate, $.mage.translate);\r\n\r\n    // Provide i18n wrapper to be used in underscore templates for translation\r\n    _.extend(_, {\r\n        /**\r\n         * Make a translation using $.mage.__\r\n         *\r\n         * @param {String} text\r\n         * @return {String}\r\n         */\r\n        i18n: function (text) {\r\n            return $.mage.__(text);\r\n        }\r\n    });\r\n\r\n    return $.mage.__;\r\n});\r\n","mage/fieldset-controls.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * This widget will allow a control with the fieldsetResetControl widget attached to reset a set of input fields.\r\n     * The input fields to reset are defined by the inputSelector selector. The widget will store a clone of the fields\r\n     * on create, and on trigger of fieldsetReset event it resets the defined fields. The event is triggered by the\r\n     * reset control widget.\r\n     *\r\n     * For inputs of type file, the whole dom element is replaced as changing the value is a security violation\r\n     * For inputs of type checkbox or radio, the checked attribute is added or removed as appropriate\r\n     * For all others the jquery .val method is used to update to value to the original.\r\n     */\r\n    $.widget('mage.fieldsetControls', {\r\n        original: undefined,\r\n        options: {\r\n            inputSelector: '[data-reset=\"true\"]'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.original = this.element.find(this.options.inputSelector).clone(true);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                'fieldsetReset': '_onReset'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _onReset: function (e) {\r\n            var items;\r\n\r\n            e.stopPropagation();\r\n            // find all the ones we have to remove\r\n            items = this.element.find(this.options.inputSelector);\r\n            // loop over replacing each one.\r\n            items.each($.proxy(function (index, item) {\r\n                if ($(item).attr('type') == 'file') { //eslint-disable-line eqeqeq\r\n                    // Replace the current one we found with a clone of the original saved earlier\r\n                    $(item).replaceWith($(this.original[index]).clone(true));\r\n                } else if ($(item).attr('type') == 'checkbox' || $(item).attr('type') == 'radio') { //eslint-disable-line\r\n                    // Return to original state.\r\n                    if ($(this.original[index]).attr('checked') === undefined) {\r\n                        $(item).removeAttr('checked');\r\n                    } else {\r\n                        $(item).attr('checked', $(this.original[index]).attr('checked'));\r\n                    }\r\n                } else {\r\n                    // Replace the value with the original\r\n                    $(item).val($(this.original[index]).val());\r\n                }\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    $.widget('mage.fieldsetResetControl', {\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                click: '_onClick'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _onClick: function (e) {\r\n            e.stopPropagation();\r\n            $(this.element).trigger('fieldsetReset');\r\n        }\r\n    });\r\n\r\n    return {\r\n        fieldsetControls: $.mage.fieldsetControls,\r\n        fieldsetResetControl: $.mage.fieldsetResetControl\r\n    };\r\n});\r\n","mage/ie-class-fixer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    if (navigator.userAgent.match(/Trident.*rv[ :]*11\\./)) {\r\n        document.documentElement.classList.add('ie11');\r\n    }\r\n});\r\n","mage/menu.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'matchMedia',\r\n    'jquery-ui-modules/menu',\r\n    'jquery/jquery.mobile.custom',\r\n    'mage/translate'\r\n], function ($, mediaCheck) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Menu Widget - this widget is a wrapper for the jQuery UI Menu\r\n     */\r\n    $.widget('mage.menu', $.ui.menu, {\r\n        options: {\r\n            responsive: false,\r\n            expanded: false,\r\n            showDelay: 42,\r\n            hideDelay: 300,\r\n            delay: 0,\r\n            mediaBreakpoint: '(max-width: 767px)'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            this.delay = this.options.delay;\r\n\r\n            this._super();\r\n            $(window).on('resize', function () {\r\n                self.element.find('.submenu-reverse').removeClass('submenu-reverse');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n\r\n            if (this.options.expanded === true) {\r\n                this.isExpanded();\r\n            }\r\n\r\n            if (this.options.responsive === true) {\r\n                mediaCheck({\r\n                    media: this.options.mediaBreakpoint,\r\n                    entry: $.proxy(function () {\r\n                        this._toggleMobileMode();\r\n                    }, this),\r\n                    exit: $.proxy(function () {\r\n                        this._toggleDesktopMode();\r\n                    }, this)\r\n                });\r\n            }\r\n\r\n            this._assignControls()._listen();\r\n            this._setActiveMenu();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _assignControls: function () {\r\n            this.controls = {\r\n                toggleBtn: $('[data-action=\"toggle-nav\"]'),\r\n                swipeArea: $('.nav-sections')\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _listen: function () {\r\n            var controls = this.controls,\r\n                toggle = this.toggle;\r\n\r\n            controls.toggleBtn.off('click');\r\n            controls.toggleBtn.on('click', toggle.bind(this));\r\n            controls.swipeArea.off('swipeleft');\r\n            controls.swipeArea.on('swipeleft', toggle.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Toggle.\r\n         */\r\n        toggle: function () {\r\n            var html = $('html');\r\n\r\n            if (html.hasClass('nav-open')) {\r\n                html.removeClass('nav-open');\r\n                setTimeout(function () {\r\n                    html.removeClass('nav-before-open');\r\n                }, this.options.hideDelay);\r\n            } else {\r\n                html.addClass('nav-before-open');\r\n                setTimeout(function () {\r\n                    html.addClass('nav-open');\r\n                }, this.options.showDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Tries to figure out the active category for current page and add appropriate classes:\r\n         *  - 'active' class for active category\r\n         *  - 'has-active' class for all parents of active category\r\n         *\r\n         *  First, checks whether current URL is URL of category page,\r\n         *  otherwise tries to retrieve category URL in case of current URL is product view page URL\r\n         *  which has category tree path in it.\r\n         *\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveMenu: function () {\r\n            var currentUrl = window.location.href.split('?')[0];\r\n\r\n            if (!this._setActiveMenuForCategory(currentUrl)) {\r\n                this._setActiveMenuForProduct(currentUrl);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks for category with provided URL and adds 'active' CSS class to it if it was not set before.\r\n         * If menu item has parent categories, sets 'has-active' class to all af them.\r\n         *\r\n         * @param {String} url - possible category URL\r\n         * @returns {Boolean} - true if active category was founded by provided URL, otherwise return false\r\n         * @private\r\n         */\r\n        _setActiveMenuForCategory: function (url) {\r\n            var activeCategoryLink = this.element.find('a[href=\"' + url + '\"]'),\r\n                classes,\r\n                classNav;\r\n\r\n            if (!activeCategoryLink || !activeCategoryLink.hasClass('ui-corner-all')) {\r\n\r\n                //category was not found by provided URL\r\n                return false;\r\n            } else if (!activeCategoryLink.parent().hasClass('active')) {\r\n                activeCategoryLink.parent().addClass('active');\r\n                classes = activeCategoryLink.parent().attr('class');\r\n                classNav = classes.match(/(nav\\-)[0-9]+(\\-[0-9]+)+/gi);\r\n\r\n                if (classNav) {\r\n                    this._setActiveParent(classNav[0]);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Sets 'has-active' CSS class to all parent categories which have part of provided class in childClassName\r\n         *\r\n         * @example\r\n         *  childClassName - 'nav-1-2-3'\r\n         *  CSS class 'has-active' will be added to categories have 'nav-1-2' and 'nav-1' classes\r\n         *\r\n         * @param {String} childClassName - Class name of active category <li> element\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveParent: function (childClassName) {\r\n            var parentElement,\r\n                parentClass = childClassName.substr(0, childClassName.lastIndexOf('-'));\r\n\r\n            if (parentClass.lastIndexOf('-') !== -1) {\r\n                parentElement = this.element.find('.' + parentClass);\r\n\r\n                if (parentElement) {\r\n                    parentElement.addClass('has-active');\r\n                }\r\n                this._setActiveParent(parentClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Tries to retrieve category URL from current URL and mark this category as active\r\n         * @see _setActiveMenuForCategory(url)\r\n         *\r\n         * @example\r\n         *  currentUrl - http://magento.com/category1/category12/product.html,\r\n         *  category URLs has extensions .phtml - http://magento.com/category1.phtml\r\n         *  method sets active category which has URL http://magento.com/category1/category12.phtml\r\n         *\r\n         * @param {String} currentUrl - current page URL without parameters\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveMenuForProduct: function (currentUrl) {\r\n            var categoryUrlExtension,\r\n                lastUrlSection,\r\n                possibleCategoryUrl,\r\n                //retrieve first category URL to know what extension is used for category URLs\r\n                firstCategoryUrl = this.element.find('> li a').attr('href');\r\n\r\n            if (firstCategoryUrl) {\r\n                lastUrlSection = firstCategoryUrl.substr(firstCategoryUrl.lastIndexOf('/'));\r\n                categoryUrlExtension = lastUrlSection.lastIndexOf('.') !== -1 ?\r\n                    lastUrlSection.substr(lastUrlSection.lastIndexOf('.')) : '';\r\n\r\n                possibleCategoryUrl = currentUrl.substr(0, currentUrl.lastIndexOf('/')) + categoryUrlExtension;\r\n                this._setActiveMenuForCategory(possibleCategoryUrl);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add class for expanded option.\r\n         */\r\n        isExpanded: function () {\r\n            var subMenus = this.element.find(this.options.menus),\r\n                expandedMenus = subMenus.find(this.options.menus);\r\n\r\n            expandedMenus.addClass('expanded');\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _activate: function (event) {\r\n            window.location.href = this.active.find('> a').attr('href');\r\n            this.collapseAll(event);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var match, prev, character, skip, regex,\r\n                preventDefault = true;\r\n\r\n            /* eslint-disable max-depth */\r\n            /**\r\n             * @param {String} value\r\n             */\r\n            function escape(value) {\r\n                return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\r\n            }\r\n\r\n            if (this.active.closest(this.options.menus).attr('aria-expanded') != 'true') { //eslint-disable-line eqeqeq\r\n\r\n                switch (event.keyCode) {\r\n                    case $.ui.keyCode.PAGE_UP:\r\n                        this.previousPage(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.PAGE_DOWN:\r\n                        this.nextPage(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.HOME:\r\n                        this._move('first', 'first', event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.END:\r\n                        this._move('last', 'last', event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.UP:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.DOWN:\r\n                        if (this.active && !this.active.is('.ui-state-disabled')) {\r\n                            this.expand(event);\r\n                        }\r\n                        break;\r\n\r\n                    case $.ui.keyCode.LEFT:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.RIGHT:\r\n                        this.next(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ENTER:\r\n                    case $.ui.keyCode.SPACE:\r\n                        this._activate(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ESCAPE:\r\n                        this.collapse(event);\r\n                        break;\r\n                    default:\r\n                        preventDefault = false;\r\n                        prev = this.previousFilter || '';\r\n                        character = String.fromCharCode(event.keyCode);\r\n                        skip = false;\r\n\r\n                        clearTimeout(this.filterTimer);\r\n\r\n                        if (character === prev) {\r\n                            skip = true;\r\n                        } else {\r\n                            character = prev + character;\r\n                        }\r\n\r\n                        regex = new RegExp('^' + escape(character), 'i');\r\n                        match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                            return regex.test($(this).children('a').text());\r\n                        });\r\n                        match = skip && match.index(this.active.next()) !== -1 ?\r\n                            this.active.nextAll('.ui-menu-item') :\r\n                            match;\r\n\r\n                        // If no matches on the current filter, reset to the last character pressed\r\n                        // to move down the menu to the first item that starts with that character\r\n                        if (!match.length) {\r\n                            character = String.fromCharCode(event.keyCode);\r\n                            regex = new RegExp('^' + escape(character), 'i');\r\n                            match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                                return regex.test($(this).children('a').text());\r\n                            });\r\n                        }\r\n\r\n                        if (match.length) {\r\n                            this.focus(event, match);\r\n\r\n                            if (match.length > 1) {\r\n                                this.previousFilter = character;\r\n                                this.filterTimer = this._delay(function () {\r\n                                    delete this.previousFilter;\r\n                                }, 1000);\r\n                            } else {\r\n                                delete this.previousFilter;\r\n                            }\r\n                        } else {\r\n                            delete this.previousFilter;\r\n                        }\r\n                }\r\n            } else {\r\n                switch (event.keyCode) {\r\n                    case $.ui.keyCode.DOWN:\r\n                        this.next(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.UP:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.RIGHT:\r\n                        if (this.active && !this.active.is('.ui-state-disabled')) {\r\n                            this.expand(event);\r\n                        }\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ENTER:\r\n                    case $.ui.keyCode.SPACE:\r\n                        this._activate(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.LEFT:\r\n                    case $.ui.keyCode.ESCAPE:\r\n                        this.collapse(event);\r\n                        break;\r\n                    default:\r\n                        preventDefault = false;\r\n                        prev = this.previousFilter || '';\r\n                        character = String.fromCharCode(event.keyCode);\r\n                        skip = false;\r\n\r\n                        clearTimeout(this.filterTimer);\r\n\r\n                        if (character === prev) {\r\n                            skip = true;\r\n                        } else {\r\n                            character = prev + character;\r\n                        }\r\n\r\n                        regex = new RegExp('^' + escape(character), 'i');\r\n                        match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                            return regex.test($(this).children('a').text());\r\n                        });\r\n                        match = skip && match.index(this.active.next()) !== -1 ?\r\n                            this.active.nextAll('.ui-menu-item') :\r\n                            match;\r\n\r\n                        // If no matches on the current filter, reset to the last character pressed\r\n                        // to move down the menu to the first item that starts with that character\r\n                        if (!match.length) {\r\n                            character = String.fromCharCode(event.keyCode);\r\n                            regex = new RegExp('^' + escape(character), 'i');\r\n                            match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                                return regex.test($(this).children('a').text());\r\n                            });\r\n                        }\r\n\r\n                        if (match.length) {\r\n                            this.focus(event, match);\r\n\r\n                            if (match.length > 1) {\r\n                                this.previousFilter = character;\r\n                                this.filterTimer = this._delay(function () {\r\n                                    delete this.previousFilter;\r\n                                }, 1000);\r\n                            } else {\r\n                                delete this.previousFilter;\r\n                            }\r\n                        } else {\r\n                            delete this.previousFilter;\r\n                        }\r\n                }\r\n            }\r\n\r\n            /* eslint-enable max-depth */\r\n            if (preventDefault) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleMobileMode: function () {\r\n            var subMenus;\r\n\r\n            $(this.element).off('mouseenter mouseleave');\r\n            this._on({\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(a)': function (event) {\r\n                    var target;\r\n\r\n                    event.preventDefault();\r\n                    target = $(event.target).closest('.ui-menu-item');\r\n                    target.get(0).scrollIntoView();\r\n\r\n                    if (!target.hasClass('level-top') || !target.has('.ui-menu').length) {\r\n                        window.location.href = target.find('> a').attr('href');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(.ui-state-active)': function (event) {\r\n                    this.collapseAll(event, true);\r\n                }\r\n            });\r\n\r\n            subMenus = this.element.find('.level-top');\r\n            $.each(subMenus, $.proxy(function (index, item) {\r\n                var category = $(item).find('> a span').not('.ui-menu-icon').text(),\r\n                    categoryUrl = $(item).find('> a').attr('href'),\r\n                    menu = $(item).find('> .ui-menu');\r\n\r\n                this.categoryLink = $('<a>')\r\n                    .attr('href', categoryUrl)\r\n                    .text($.mage.__('All %1').replace('%1', category));\r\n\r\n                this.categoryParent = $('<li>')\r\n                    .addClass('ui-menu-item all-category')\r\n                    .html(this.categoryLink);\r\n\r\n                if (menu.find('.all-category').length === 0) {\r\n                    menu.prepend(this.categoryParent);\r\n                }\r\n\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleDesktopMode: function () {\r\n            var categoryParent, html;\r\n\r\n            $(this.element).off('click mousedown mouseenter mouseleave');\r\n            this._on({\r\n\r\n                /**\r\n                 * Prevent focus from sticking to links inside menu after clicking\r\n                 * them (focus should always stay on UL during navigation).\r\n                 */\r\n                'mousedown .ui-menu-item > a': function (event) {\r\n                    event.preventDefault();\r\n                },\r\n\r\n                /**\r\n                 * Prevent focus from sticking to links inside menu after clicking\r\n                 * them (focus should always stay on UL during navigation).\r\n                 */\r\n                'click .ui-state-disabled > a': function (event) {\r\n                    event.preventDefault();\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuer.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(a)': function (event) {\r\n                    var target = $(event.target).closest('.ui-menu-item');\r\n\r\n                    if (!this.mouseHandled && target.not('.ui-state-disabled').length) {\r\n                        this.select(event);\r\n\r\n                        // Only set the mouseHandled flag if the event will bubble, see #9469.\r\n                        if (!event.isPropagationStopped()) {\r\n                            this.mouseHandled = true;\r\n                        }\r\n\r\n                        // Open submenu on click\r\n                        if (target.has('.ui-menu').length) {\r\n                            this.expand(event);\r\n                        } else if (!this.element.is(':focus') &&\r\n                            $(this.document[0].activeElement).closest('.ui-menu').length\r\n                        ) {\r\n                            // Redirect focus to the menu\r\n                            this.element.trigger('focus', [true]);\r\n\r\n                            // If the active item is on the top level, let it stay active.\r\n                            // Otherwise, blur the active item since it is no longer visible.\r\n                            if (this.active && this.active.parents('.ui-menu').length === 1) { //eslint-disable-line\r\n                                clearTimeout(this.timer);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'mouseenter .ui-menu-item': function (event) {\r\n                    var target = $(event.currentTarget),\r\n                        submenu = this.options.menus,\r\n                        ulElement,\r\n                        ulElementWidth,\r\n                        width,\r\n                        targetPageX,\r\n                        rightBound;\r\n\r\n                    if (target.has(submenu)) {\r\n                        ulElement = target.find(submenu);\r\n                        ulElementWidth = ulElement.outerWidth(true);\r\n                        width = target.outerWidth() * 2;\r\n                        targetPageX = target.offset().left;\r\n                        rightBound = $(window).width();\r\n\r\n                        if (ulElementWidth + width + targetPageX > rightBound) {\r\n                            ulElement.addClass('submenu-reverse');\r\n                        }\r\n\r\n                        if (targetPageX - ulElementWidth < 0) {\r\n                            ulElement.removeClass('submenu-reverse');\r\n                        }\r\n                    }\r\n\r\n                    // Remove ui-state-active class from siblings of the newly focused menu item\r\n                    // to avoid a jump caused by adjacent elements both having a class with a border\r\n                    target.siblings().children('.ui-state-active').removeClass('ui-state-active');\r\n                    this.focus(event, target);\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'mouseleave': function (event) {\r\n                    this.collapseAll(event, true);\r\n                },\r\n\r\n                /**\r\n                 * Mouse leave.\r\n                 */\r\n                'mouseleave .ui-menu': 'collapseAll'\r\n            });\r\n\r\n            categoryParent = this.element.find('.all-category');\r\n            html = $('html');\r\n\r\n            categoryParent.remove();\r\n\r\n            if (html.hasClass('nav-open')) {\r\n                html.removeClass('nav-open');\r\n                setTimeout(function () {\r\n                    html.removeClass('nav-before-open');\r\n                }, this.options.hideDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} handler\r\n         * @param {Number} delay\r\n         * @return {Number}\r\n         * @private\r\n         */\r\n        _delay: function (handler, delay) {\r\n            var instance = this,\r\n\r\n                /**\r\n                 * @return {*}\r\n                 */\r\n                handlerProxy = function () {\r\n                    return (typeof handler === 'string' ? instance[handler] : handler).apply(instance, arguments);\r\n                };\r\n\r\n            return setTimeout(handlerProxy, delay || 0);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        expand: function (event) {\r\n            var newItem = this.active &&\r\n                this.active\r\n                    .children('.ui-menu')\r\n                    .children('.ui-menu-item')\r\n                    .first();\r\n\r\n            if (newItem && newItem.length) {\r\n                if (newItem.closest('.ui-menu').is(':visible') &&\r\n                    newItem.closest('.ui-menu').has('.all-categories')\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                // remove the active state class from the siblings\r\n                this.active.siblings().children('.ui-state-active').removeClass('ui-state-active');\r\n\r\n                this._open(newItem.parent());\r\n\r\n                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT\r\n                this._delay(function () {\r\n                    this.focus(event, newItem);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        select: function (event) {\r\n            var ui;\r\n\r\n            this.active = this.active || $(event.target).closest('.ui-menu-item');\r\n\r\n            if (this.active.is('.all-category')) {\r\n                this.active = $(event.target).closest('.ui-menu-item');\r\n            }\r\n            ui = {\r\n                item: this.active\r\n            };\r\n\r\n            if (!this.active.has('.ui-menu').length) {\r\n                this.collapseAll(event, true);\r\n            }\r\n            this._trigger('select', event, ui);\r\n        }\r\n    });\r\n\r\n    $.widget('mage.navigation', $.mage.menu, {\r\n        options: {\r\n            responsiveAction: 'wrap', //option for responsive handling\r\n            maxItems: null, //option to set max number of menu items\r\n            container: '#menu', //container to check against navigation length\r\n            moreText: $.mage.__('more'),\r\n            breakpoint: 768\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            var that, responsive;\r\n\r\n            this._super();\r\n\r\n            that = this;\r\n            responsive = this.options.responsiveAction;\r\n\r\n            this.element\r\n                .addClass('ui-menu-responsive')\r\n                .attr('responsive', 'main');\r\n\r\n            this.setupMoreMenu();\r\n            this.setMaxItems();\r\n\r\n            //check responsive option\r\n            if (responsive == 'onResize') { //eslint-disable-line eqeqeq\r\n                $(window).on('resize', function () {\r\n                    if ($(window).width() > that.options.breakpoint) {\r\n                        that._responsive();\r\n                        $('[responsive=more]').show();\r\n                    } else {\r\n                        that.element.children().show();\r\n                        $('[responsive=more]').hide();\r\n                    }\r\n                });\r\n            } else if (responsive == 'onReload') { //eslint-disable-line eqeqeq\r\n                this._responsive();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup more menu.\r\n         */\r\n        setupMoreMenu: function () {\r\n            var moreListItems = this.element.children().clone(),\r\n                moreLink = $('<a>' + this.options.moreText + '</a>');\r\n\r\n            moreListItems.hide();\r\n\r\n            moreLink.attr('href', '#');\r\n\r\n            this.moreItemsList = $('<ul>')\r\n                .append(moreListItems);\r\n\r\n            this.moreListContainer = $('<li>')\r\n                .append(moreLink)\r\n                .append(this.moreItemsList);\r\n\r\n            this.responsiveMenu = $('<ul>')\r\n                .addClass('ui-menu-more')\r\n                .attr('responsive', 'more')\r\n                .append(this.moreListContainer)\r\n                .menu({\r\n                    position: {\r\n                        my: 'right top',\r\n                        at: 'right bottom'\r\n                    }\r\n                })\r\n                .insertAfter(this.element);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _responsive: function () {\r\n            var container = $(this.options.container),\r\n                containerSize = container.width(),\r\n                width = 0,\r\n                items = this.element.children('li'),\r\n                more = $('.ui-menu-more > li > ul > li a');\r\n\r\n            items = items.map(function () {\r\n                var item = {};\r\n\r\n                item.item = $(this);\r\n                item.itemSize = $(this).outerWidth();\r\n\r\n                return item;\r\n            });\r\n\r\n            $.each(items, function (index) {\r\n                var itemText = items[index].item\r\n                    .find('a:first')\r\n                    .text();\r\n\r\n                width += parseInt(items[index].itemSize, null); //eslint-disable-line radix\r\n\r\n                if (width < containerSize) {\r\n                    items[index].item.show();\r\n\r\n                    more.each(function () {\r\n                        var text = $(this).text();\r\n\r\n                        if (text === itemText) {\r\n                            $(this).parent().hide();\r\n                        }\r\n                    });\r\n                } else if (width > containerSize) {\r\n                    items[index].item.hide();\r\n\r\n                    more.each(function () {\r\n                        var text = $(this).text();\r\n\r\n                        if (text === itemText) {\r\n                            $(this).parent().show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set max items.\r\n         */\r\n        setMaxItems: function () {\r\n            var items = this.element.children('li'),\r\n                itemsCount = items.length,\r\n                maxItems = this.options.maxItems,\r\n                overflow = itemsCount - maxItems,\r\n                overflowItems = items.slice(overflow);\r\n\r\n            overflowItems.hide();\r\n\r\n            overflowItems.each(function () {\r\n                var itemText = $(this).find('a:first').text();\r\n\r\n                $(this).hide();\r\n\r\n                $('.ui-menu-more > li > ul > li a').each(function () {\r\n                    var text = $(this).text();\r\n\r\n                    if (text === itemText) {\r\n                        $(this).parent().show();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return {\r\n        menu: $.mage.menu,\r\n        navigation: $.mage.navigation\r\n    };\r\n});\r\n","mage/cookies.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'jquery/jquery.cookie'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Helper for cookies manipulation\r\n     * @returns {CookieHelper}\r\n     * @constructor\r\n     */\r\n    var CookieHelper = function () {\r\n\r\n        /**\r\n         * Cookie default values.\r\n         * @type {Object}\r\n         */\r\n        this.defaults = {\r\n            expires: null,\r\n            path: '/',\r\n            domain: null,\r\n            secure: false,\r\n            lifetime: null\r\n        };\r\n\r\n        /**\r\n         * Calculate cookie expiration date based on its lifetime.\r\n         * @param {Object} options - Cookie option values\r\n         * @return {Date|null} Calculated cookie expiration date or null if no lifetime provided.\r\n         * @private\r\n         */\r\n        function lifetimeToExpires(options, defaults) {\r\n            var expires,\r\n                lifetime;\r\n\r\n            lifetime = options.lifetime || defaults.lifetime;\r\n\r\n            if (lifetime && lifetime > 0) {\r\n                expires = options.expires || new Date();\r\n\r\n                return new Date(expires.getTime() + lifetime * 1000);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        /**\r\n         * Set a cookie's value by cookie name based on optional cookie options.\r\n         * @param {String} name - The name of the cookie.\r\n         * @param {String} value - The cookie's value.\r\n         * @param {Object} options - Optional options (e.g. lifetime, expires, path, etc.)\r\n         */\r\n        this.set = function (name, value, options) {\r\n            var expires,\r\n                path,\r\n                domain,\r\n                secure;\r\n\r\n            options = $.extend({}, this.defaults, options || {});\r\n            expires = lifetimeToExpires(options, this.defaults) || options.expires;\r\n            path = options.path;\r\n            domain = options.domain;\r\n            secure = options.secure;\r\n\r\n            document.cookie = name + '=' + encodeURIComponent(value) +\r\n                (expires ? '; expires=' + expires.toUTCString() :  '') +\r\n                (path ? '; path=' + path : '') +\r\n                (domain ? '; domain=' + domain : '') +\r\n                (secure ? '; secure' : '');\r\n        };\r\n\r\n        /**\r\n         * Get a cookie's value by cookie name.\r\n         * @param {String} name  - The name of the cookie.\r\n         * @return {(null|String)}\r\n         */\r\n        this.get = function (name) {\r\n            var arg = name + '=',\r\n                aLength = arg.length,\r\n                cookie = document.cookie,\r\n                cLength = cookie.length,\r\n                i = 0,\r\n                j = 0;\r\n\r\n            while (i < cLength) {\r\n                j = i + aLength;\r\n\r\n                if (cookie.substring(i, j) === arg) {\r\n                    return this.getCookieVal(j);\r\n                }\r\n                i = cookie.indexOf(' ', i) + 1;\r\n\r\n                if (i === 0) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Clear a cookie's value by name.\r\n         * @param {String} name - The name of the cookie being cleared.\r\n         */\r\n        this.clear = function (name) {\r\n            if (this.get(name)) {\r\n                this.set(name, '', {\r\n                    expires: new Date('Jan 01 1970 00:00:01 GMT')\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Return URI decoded cookie component value (e.g. expires, path, etc.) based on a\r\n         * numeric offset in the document's cookie value.\r\n         * @param {Number} offset - Offset into the document's cookie value.\r\n         * @return {String}\r\n         */\r\n        this.getCookieVal = function (offset) {\r\n            var cookie = document.cookie,\r\n                endstr = cookie.indexOf(';', offset);\r\n\r\n            if (endstr === -1) {\r\n                endstr = cookie.length;\r\n            }\r\n\r\n            return decodeURIComponent(cookie.substring(offset, endstr));\r\n        };\r\n\r\n        return this;\r\n    };\r\n\r\n    $.extend(true, $, {\r\n        mage: {\r\n            cookies: new CookieHelper()\r\n        }\r\n    });\r\n\r\n    return function (pageOptions) {\r\n        $.extend($.mage.cookies.defaults, pageOptions);\r\n        $.extend($.cookie.defaults, $.mage.cookies.defaults);\r\n    };\r\n});\r\n","mage/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'moment',\r\n    'mageUtils',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, moment, utils) {\r\n    'use strict';\r\n\r\n    var creditCartTypes, rules, showLabel, originValidateDelegate;\r\n\r\n    $.extend(true, $, {\r\n        // @TODO: Move methods 'isEmpty', 'isEmptyNoTrim', 'parseNumber', 'stripHtml' in file with utility functions\r\n        mage: {\r\n            /**\r\n             * Check if string is empty with trim\r\n             * @param {String} value\r\n             */\r\n            isEmpty: function (value) {\r\n                return value === '' || value === undefined ||\r\n                    value == null || value.length === 0 || /^\\s+$/.test(value);\r\n            },\r\n\r\n            /**\r\n             * Check if string is empty no trim\r\n             * @param {String} value\r\n             */\r\n            isEmptyNoTrim: function (value) {\r\n                return value === '' || value == null || value.length === 0;\r\n            },\r\n\r\n            /**\r\n             * Checks if {value} is between numbers {from} and {to}\r\n             * @param {String} value\r\n             * @param {String} from\r\n             * @param {String} to\r\n             * @returns {Boolean}\r\n             */\r\n            isBetween: function (value, from, to) {\r\n                return ($.mage.isEmpty(from) || value >= $.mage.parseNumber(from)) &&\r\n                    ($.mage.isEmpty(to) || value <= $.mage.parseNumber(to));\r\n            },\r\n\r\n            /**\r\n             * Parse price string\r\n             * @param {String} value\r\n             */\r\n            parseNumber: function (value) {\r\n                var isDot, isComa;\r\n\r\n                if (typeof value !== 'string') {\r\n                    return parseFloat(value);\r\n                }\r\n                isDot = value.indexOf('.');\r\n                isComa = value.indexOf(',');\r\n\r\n                if (isDot !== -1 && isComa !== -1) {\r\n                    if (isComa > isDot) {\r\n                        value = value.replace('.', '').replace(',', '.');\r\n                    } else {\r\n                        value = value.replace(',', '');\r\n                    }\r\n                } else if (isComa !== -1) {\r\n                    value = value.replace(',', '.');\r\n                }\r\n\r\n                return parseFloat(value);\r\n            },\r\n\r\n            /**\r\n             * Removes HTML tags and space characters, numbers and punctuation.\r\n             *\r\n             * @param {String} value - Value being stripped.\r\n             * @return {String}\r\n             */\r\n            stripHtml: function (value) {\r\n                return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                    .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @param {*} method\r\n     * @param {*} message\r\n     * @param {*} dontSkip\r\n     */\r\n    $.validator.addMethod = function (name, method, message, dontSkip) {\r\n        $.validator.methods[name] = method;\r\n        $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\r\n\r\n        if (method.length < 3 || dontSkip) {\r\n            $.validator.addClassRules(name, $.validator.normalizeRule(name));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Javascript object with credit card types\r\n     * 0 - regexp for card number\r\n     * 1 - regexp for cvn\r\n     * 2 - check or not credit card number trough Luhn algorithm by\r\n     */\r\n    creditCartTypes = {\r\n        'SO': [\r\n            new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'),\r\n            new RegExp('^([0-9]{3}|[0-9]{4})?$'),\r\n            true\r\n        ],\r\n        'SM': [\r\n            new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|' +\r\n                '(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|' +\r\n                '(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'),\r\n            true\r\n        ],\r\n        'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MC': [\r\n            new RegExp('^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$'),\r\n            new RegExp('^[0-9]{3}$'),\r\n            true\r\n        ],\r\n        'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],\r\n        'DI': [new RegExp('^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'JCB': [new RegExp('^35(2[8-9]|[3-8])\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'DN': [new RegExp('^(3(0[0-5]|095|6|[8-9]))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'UN': [\r\n            new RegExp('^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$'),\r\n            new RegExp('^[0-9]{3}$'),\r\n            true\r\n        ],\r\n        'MI': [new RegExp('^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MD': [new RegExp('^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$'), new RegExp('^[0-9]{3}$'), true]\r\n    };\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param {String} s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = '0123456789',\r\n            w = '',\r\n            i, j, k, m, c, a, x;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n\r\n            if (v.indexOf(x, 0) !== -1) {\r\n                w += x;\r\n            }\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n\r\n        return c % 10 === 0;\r\n    }\r\n\r\n    /**\r\n     * validate all table required inputs at once, using single hidden input\r\n     * @param {String} value\r\n     * @param {HTMLElement} element\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    function tableSingleValidation(value, element) {\r\n        var empty = $(element).closest('table')\r\n            .find('input.required-option:visible')\r\n            .filter(function (i, el) {\r\n                if ($(el).is('disabled')) {\r\n                    return $.mage.isEmpty(el.value);\r\n                }\r\n            })\r\n            .length;\r\n\r\n        return empty === 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {float} qty\r\n     * @param {float} qtyIncrements\r\n     * @returns {float}\r\n     */\r\n    function resolveModulo(qty, qtyIncrements) {\r\n        while (qtyIncrements < 1) {\r\n            qty *= 10;\r\n            qtyIncrements *= 10;\r\n        }\r\n\r\n        return qty % qtyIncrements;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    rules = {\r\n        'max-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length <= params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        'min-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        'range-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) ||\r\n                    $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params[0] &&\r\n                    value.match(/bw+b/g).length < params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        'letters-with-basic-punc': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z\\-.,()'\\\"\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        'alphanumeric': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        'letters-only': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        'no-whitespace': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        'no-marginal-whitespace': [\r\n            function (value, element) {\r\n                return this.optional(element) || !/^\\s+|\\s+$/i.test(value);\r\n            },\r\n            $.mage.__('No marginal white space please')\r\n        ],\r\n        'zip-range': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        'integer': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        'vinUS': [\r\n            function (v) {\r\n                var i, n, d, f, cd, cdv, LL, VL, FL, rs;\r\n\r\n                /* eslint-disable max-depth */\r\n                if (v.length !== 17) {\r\n                    return false;\r\n                }\r\n\r\n                LL = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L',\r\n                    'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n                VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];\r\n                FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\r\n                rs = 0;\r\n\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = v.slice(i, i + 1);\r\n\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {\r\n                            if (d.toUpperCase() === LL[n]) {\r\n                                d = VL[n];\r\n                                d *= f;\r\n\r\n                                if (isNaN(cdv) && n === 8) {\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n\r\n                /* eslint-enable max-depth */\r\n                cd = rs % 11;\r\n\r\n                if (cd === 10) {\r\n                    cd = 'X';\r\n                }\r\n\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        'dateITA': [\r\n            function (value, element) {\r\n                var check = false,\r\n                    re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\r\n                    adata, gg, mm, aaaa, xdata;\r\n\r\n                if (re.test(value)) {\r\n                    adata = value.split('/');\r\n                    gg = parseInt(adata[0], 10);\r\n                    mm = parseInt(adata[1], 10);\r\n                    aaaa = parseInt(adata[2], 10);\r\n                    xdata = new Date(aaaa, mm - 1, gg);\r\n\r\n                    if (xdata.getFullYear() === aaaa &&\r\n                        xdata.getMonth() === mm - 1 &&\r\n                        xdata.getDate() === gg\r\n                    ) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n\r\n                return this.optional(element) || check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        'dateNL': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            'Vul hier een geldige datum in.'\r\n        ],\r\n        'time': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        'time12h': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\s[AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        'phoneUS': [\r\n            function (phoneNumber, element) {\r\n                phoneNumber = phoneNumber.replace(/\\s+/g, '');\r\n\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'phoneUK': [\r\n            function (phoneNumber, element) {\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'mobileUK': [\r\n            function (phoneNumber, element) {\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        'stripped-min-length': [\r\n            function (value, element, param) {\r\n                return value.length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n\r\n        /* detect chars that would require more than 3 bytes */\r\n        'validate-no-utf8mb4-characters': [\r\n            function (value) {\r\n                var validator = this,\r\n                    message = $.mage.__('Please remove invalid characters: {0}.'),\r\n                    matches = value.match(/(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g),\r\n                    result = matches === null;\r\n\r\n                if (!result) {\r\n                    validator.charErrorMessage = message.replace('{0}', matches.join());\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.charErrorMessage;\r\n            }\r\n        ],\r\n\r\n        /* eslint-disable max-len */\r\n        'email2': [\r\n            function (value, element) {\r\n                return this.optional(element) ||\r\n                    /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        'url2': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n\r\n        /* eslint-enable max-len */\r\n        'credit-card-types': [\r\n            function (value, element, param) {\r\n                var validTypes;\r\n\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, '');\r\n\r\n                validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n\r\n        /* eslint-disable max-len */\r\n        'ipv4': [\r\n            function (value, element) {\r\n                return this.optional(element) ||\r\n                    /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        'ipv6': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n\r\n        /* eslint-enable max-len */\r\n        'pattern': [\r\n            function (value, element, param) {\r\n                return this.optional(element) || new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        'allow-container-className': [\r\n            function (element) {\r\n                if (element.type === 'radio' || element.type === 'checkbox') {\r\n                    return $(element).hasClass('change-container-classname');\r\n                }\r\n            },\r\n            ''\r\n        ],\r\n        'validate-no-html-tags': [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        'validate-select': [\r\n            function (value) {\r\n                return value !== 'none' && value != null && value.length !== 0;\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        'validate-no-empty': [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        'validate-alphanum-with-spaces': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9 ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        'validate-data': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-street': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        'validate-phoneStrict': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-phoneLax': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) ||\r\n                    /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-fax': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        'validate-email': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(v); //eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-emailSender': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[\\S ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-password': [\r\n            function (v) {\r\n                var pass;\r\n\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                //strip leading and trailing spaces\r\n                pass = $.trim(v);\r\n\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-admin-password': [\r\n            function (v) {\r\n                var pass;\r\n\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                pass = $.trim(v);\r\n                // strip leading and trailing spaces\r\n                if (pass.length === 0) {\r\n                    return true;\r\n                }\r\n\r\n                if (!/[a-z]/i.test(v) || !/[0-9]/.test(v)) {\r\n                    return false;\r\n                }\r\n\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        'validate-customer-password': [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    counter = 0,\r\n                    passwordMinLength = $(elm).data('password-min-length'),\r\n                    passwordMinCharacterSets = $(elm).data('password-min-character-sets'),\r\n                    pass = $.trim(v),\r\n                    result = pass.length >= passwordMinLength;\r\n\r\n                if (result === false) {\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength); //eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                if (pass.match(/\\d+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets); //eslint-disable-line max-len\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        'validate-url': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = (v || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        'validate-clean-url': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        'validate-xml-identifier': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        'validate-ssn': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        'validate-zip-us': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        'validate-date-au': [\r\n            function (v) {\r\n                var regex, d;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n\r\n                if ($.mage.isEmpty(v) || !regex.test(v)) {\r\n                    return false;\r\n                }\r\n                d = new Date(v.replace(regex, '$2/$1/$3'));\r\n\r\n                return parseInt(RegExp.$2, 10) === 1 + d.getMonth() &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        'validate-currency-dollar': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        'validate-not-negative-number': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        'validate-zero-or-greater': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        'validate-greater-than-zero': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        'validate-css-length': [\r\n            function (v) {\r\n                if (v !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(v);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        // Additional methods\r\n        'validate-number': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || !isNaN($.mage.parseNumber(v)) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'required-number': [\r\n            function (v) {\r\n                return !!v.length;\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-number-range': [\r\n            function (v, elm, param) {\r\n                var numValue, dataAttrRange, classNameRange, result, range, m, classes, ii;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = $.mage.parseNumber(v);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                classNameRange = /^number-range-(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (typeof range === 'string') {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    } else {\r\n                        result = false;\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(' ');\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n\r\n                        if (m) { //eslint-disable-line max-depth\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        'validate-digits': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || !/[^\\d]/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-forbidden-extensions': [\r\n            function (v, elem) {\r\n                var forbiddenExtensions = $(elem).attr('data-validation-params'),\r\n                    forbiddenExtensionsArray = forbiddenExtensions.split(','),\r\n                    extensionsArray = v.split(','),\r\n                    result = true;\r\n\r\n                this.validateExtensionsMessage = $.mage.__('Forbidden extensions has been used. Avoid usage of ') +\r\n                    forbiddenExtensions;\r\n\r\n                $.each(extensionsArray, function (key, extension) {\r\n                    if (forbiddenExtensionsArray.indexOf(extension) !== -1) {\r\n                        result = false;\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.validateExtensionsMessage;\r\n            }\r\n        ],\r\n        'validate-digits-range': [\r\n            function (v, elm, param) {\r\n                var numValue, dataAttrRange, classNameRange, result, range, m, classes, ii;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = $.mage.parseNumber(v);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/;\r\n                classNameRange = /^digits-range-(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (typeof range === 'string') {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    } else {\r\n                        result = false;\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(' ');\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n\r\n                        if (m) { //eslint-disable-line max-depth\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        'validate-range': [\r\n            function (v, elm) {\r\n                var minValue, maxValue, ranges, reRange, result, values,\r\n                    i, name, validRange, minValidRange, maxValidRange;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](v)) {\r\n                    minValue = maxValue = $.mage.parseNumber(v);\r\n                } else {\r\n                    ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(v);\r\n\r\n                    if (ranges) {\r\n                        minValue = $.mage.parseNumber(ranges[1]);\r\n                        maxValue = $.mage.parseNumber(ranges[2]);\r\n\r\n                        if (minValue > maxValue) { //eslint-disable-line max-depth\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n                reRange = /^range-(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                values = $(elm).prop('class').split(' ');\r\n\r\n                for (i = values.length - 1; i >= 0; i--) {\r\n                    name = values[i];\r\n                    validRange = reRange.exec(name);\r\n\r\n                    if (validRange) {\r\n                        minValidRange = $.mage.parseNumber(validRange[1]);\r\n                        maxValidRange = $.mage.parseNumber(validRange[2]);\r\n                        result = result &&\r\n                            (isNaN(minValidRange) || minValue >= minValidRange) &&\r\n                            (isNaN(maxValidRange) || maxValue <= maxValidRange);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-alpha': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        'validate-code': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z]+[a-zA-Z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-alphanum': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-not-number-first': [\r\n            function (value) {\r\n                return $.mage.isEmptyNoTrim(value) || /^[^0-9-\\.].*$/.test(value.trim());\r\n            },\r\n            $.mage.__('First character must be letter.')\r\n        ],\r\n        'validate-date': [\r\n            function (value, params, additionalParams) {\r\n                var test = moment(value, utils.convertToMomentFormat(additionalParams.dateFormat));\r\n\r\n                return $.mage.isEmptyNoTrim(value) || test.isValid();\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n\r\n        ],\r\n        'validate-date-range': [\r\n            function (v, elm) {\r\n                var m = /\\bdate-range-(\\w+)-(\\w+)\\b/.exec(elm.className),\r\n                    currentYear, normalizedTime, dependentElements;\r\n\r\n                if (!m || m[2] === 'to' || $.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                currentYear = new Date().getFullYear() + '';\r\n\r\n                /**\r\n                 * @param {String} vd\r\n                 * @return {Number}\r\n                 */\r\n                normalizedTime = function (vd) {\r\n                    vd = vd.split(/[.\\/]/);\r\n\r\n                    if (vd[2] && vd[2].length < 4) {\r\n                        vd[2] = currentYear.substr(0, vd[2].length) + vd[2];\r\n                    }\r\n\r\n                    return new Date(vd.join('/')).getTime();\r\n                };\r\n\r\n                dependentElements = $(elm.form).find('.validate-date-range.date-range-' + m[1] + '-to');\r\n\r\n                return !dependentElements.length || $.mage.isEmptyNoTrim(dependentElements[0].value) ||\r\n                    normalizedTime(v) <= normalizedTime(dependentElements[0].value);\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        'validate-cpassword': [\r\n            function () {\r\n                var conf = $('#confirmation').length > 0 ? $('#confirmation') : $($('.validate-cpassword')[0]),\r\n                    pass = false,\r\n                    passwordElements, i, passwordElement;\r\n\r\n                if ($('#password')) {\r\n                    pass = $('#password');\r\n                }\r\n                passwordElements = $('.validate-password');\r\n\r\n                for (i = 0; i < passwordElements.length; i++) {\r\n                    passwordElement = $(passwordElements[i]);\r\n\r\n                    if (passwordElement.closest('form').attr('id') === conf.closest('form').attr('id')) {\r\n                        pass = passwordElement;\r\n                    }\r\n                }\r\n\r\n                if ($('.validate-admin-password').length) {\r\n                    pass = $($('.validate-admin-password')[0]);\r\n                }\r\n\r\n                return pass.val() === conf.val();\r\n            },\r\n            $.mage.__('Please make sure your passwords match.')\r\n        ],\r\n        'validate-identifier': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").') //eslint-disable-line max-len\r\n        ],\r\n        'validate-zip-international': [\r\n\r\n            /*function(v) {\r\n             // @TODO: Cleanup\r\n             return Validation.get('IsEmpty').test(v) ||\r\n             /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n             }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        'validate-one-required': [\r\n            function (v, elm) {\r\n                var p = $(elm).parent(),\r\n                    options = p.find('input');\r\n\r\n                return options.map(function (el) {\r\n                    return $(el).val();\r\n                }).length > 0;\r\n            },\r\n            $.mage.__('Please select one of the options above.')\r\n        ],\r\n        'validate-state': [\r\n            function (v) {\r\n                return v !== 0;\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        'required-file': [\r\n            function (v, elm) {\r\n                var result = !$.mage.isEmptyNoTrim(v),\r\n                    ovId;\r\n\r\n                if (!result) {\r\n                    ovId = $('#' + $(elm).attr('id') + '_value');\r\n\r\n                    if (ovId.length > 0) {\r\n                        result = !$.mage.isEmptyNoTrim(ovId.val());\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('Please select a file.')\r\n        ],\r\n        'validate-ajax-error': [\r\n            function (v, element) {\r\n                element = $(element);\r\n                element.on('change.ajaxError', function () {\r\n                    element.removeClass('validate-ajax-error');\r\n                    element.off('change.ajaxError');\r\n                });\r\n\r\n                return !element.hasClass('validate-ajax-error');\r\n            },\r\n            ''\r\n        ],\r\n        'validate-optional-datetime': [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]'),\r\n                    hasWithValue = false,\r\n                    hasWithNoValue = false,\r\n                    pattern = /day_part$/i,\r\n                    i;\r\n\r\n                for (i = 0; i < dateTimeParts.length; i++) {\r\n                    if (!pattern.test($(dateTimeParts[i]).attr('id'))) {\r\n                        if ($(dateTimeParts[i]).val() === 's') { //eslint-disable-line max-depth\r\n                            hasWithValue = true;\r\n                        } else {\r\n                            hasWithNoValue = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return hasWithValue ^ hasWithNoValue;\r\n            },\r\n            $.mage.__('The field isn\\'t complete.')\r\n        ],\r\n        'validate-required-datetime': [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]'),\r\n                    i;\r\n\r\n                for (i = 0; i < dateTimeParts.length; i++) {\r\n                    if (dateTimeParts[i].value === '') {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'validate-one-required-by-name': [\r\n            function (v, elm, selector) {\r\n                var name = elm.name.replace(/([\\\\\"])/g, '\\\\$1'),\r\n                    container = this.currentForm;\r\n\r\n                selector = selector === true ? 'input[name=\"' + name + '\"]:checked' : selector;\r\n\r\n                return !!container.querySelectorAll(selector).length;\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        'less-than-equals-to': [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.lteToVal = $(params).val();\r\n\r\n                    return parseFloat(value) <= parseFloat($(params).val());\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value less than or equal to %s.');\r\n\r\n                return message.replace('%s', this.lteToVal);\r\n            }\r\n        ],\r\n        'greater-than-equals-to': [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.gteToVal = $(params).val();\r\n\r\n                    return parseFloat(value) >= parseFloat($(params).val());\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value greater than or equal to %s.');\r\n\r\n                return message.replace('%s', this.gteToVal);\r\n            }\r\n        ],\r\n        'validate-emails': [\r\n            function (value) {\r\n                var validRegexp, emails, i;\r\n\r\n                if ($.mage.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                validRegexp = /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i; //eslint-disable-line max-len\r\n                emails = value.split(/[\\s\\n\\,]+/g);\r\n\r\n                for (i = 0; i < emails.length; i++) {\r\n                    if (!validRegexp.test(emails[i].trim())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.') //eslint-disable-line max-len\r\n        ],\r\n\r\n        'validate-cc-type-select': [\r\n\r\n            /**\r\n             * Validate credit card type matches credit card number\r\n             * @param {*} value - select credit card type\r\n             * @param {*} element - element contains the select box for credit card types\r\n             * @param {*} params - selector for credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                if (value && params && creditCartTypes[value]) {\r\n                    return creditCartTypes[value][0].test($(params).val().replace(/\\s+/g, ''));\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Card type does not match credit card number.')\r\n        ],\r\n        'validate-cc-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10.\r\n             *\r\n             * @param {*} value - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-cc-type': [\r\n\r\n            /**\r\n             * Validate credit card number is for the correct credit card type.\r\n             *\r\n             * @param {String} value - credit card number\r\n             * @param {*} element - element contains credit card number\r\n             * @param {*} params - selector for credit card type\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                var ccType;\r\n\r\n                if (value && params) {\r\n                    ccType = $(params).val();\r\n                    value = value.replace(/\\s/g, '').replace(/\\-/g, '');\r\n\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][0].test(value);\r\n                    } else if (creditCartTypes[ccType] && !creditCartTypes[ccType][0]) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Credit card number does not match credit card type.')\r\n        ],\r\n        'validate-cc-exp': [\r\n\r\n            /**\r\n             * Validate credit card expiration date, make sure it's within the year and not before current month.\r\n             *\r\n             * @param {*} value - month\r\n             * @param {*} element - element contains month\r\n             * @param {*} params - year selector\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                var isValid = false,\r\n                    month, year, currentTime, currentMonth, currentYear;\r\n\r\n                if (value && params) {\r\n                    month = value;\r\n                    year = $(params).val();\r\n                    currentTime = new Date();\r\n                    currentMonth = currentTime.getMonth() + 1;\r\n                    currentYear = currentTime.getFullYear();\r\n\r\n                    isValid = !year || year > currentYear || year == currentYear && month >= currentMonth; //eslint-disable-line\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration date.')\r\n        ],\r\n        'validate-cc-cvn': [\r\n\r\n            /**\r\n             * Validate credit card cvn based on credit card type.\r\n             *\r\n             * @param {*} value - credit card cvn\r\n             * @param {*} element - element contains credit card cvn\r\n             * @param {*} params - credit card type selector\r\n             * @return {*}\r\n             */\r\n            function (value, element, params) {\r\n                var ccType;\r\n\r\n                if (value && params) {\r\n                    ccType = $(params).val();\r\n\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][1].test(value);\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-cc-ukss': [\r\n\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled.\r\n             *\r\n             * @param {*} value - input field value\r\n             * @return {*}\r\n             */\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'validate-length': [\r\n            function (v, elm) {\r\n                var reMax = new RegExp(/^maximum-length-[0-9]+$/),\r\n                    reMin = new RegExp(/^minimum-length-[0-9]+$/),\r\n                    validator = this,\r\n                    result = true,\r\n                    length = 0;\r\n\r\n                $.each(elm.className.split(' '), function (index, name) {\r\n                    if (name.match(reMax) && result) {\r\n                        length = name.split('-')[2];\r\n                        result = v.length <= length;\r\n                        validator.validateMessage =\r\n                            $.mage.__('Please enter less or equal than %1 symbols.').replace('%1', length);\r\n                    }\r\n\r\n                    if (name.match(reMin) && result && !$.mage.isEmpty(v)) {\r\n                        length = name.split('-')[2];\r\n                        result = v.length >= length;\r\n                        validator.validateMessage =\r\n                            $.mage.__('Please enter more or equal than %1 symbols.').replace('%1', length);\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.validateMessage;\r\n            }\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            }, $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (v) {\r\n                if (v.length) {\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(v);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (v) {\r\n                var isValid = true,\r\n                    values = v.split(','),\r\n                    i;\r\n\r\n                if ($.mage.isEmpty(v)) {\r\n                    return isValid;\r\n                }\r\n\r\n                for (i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-per-page-value': [\r\n            function (v, elm) {\r\n                var values;\r\n\r\n                if ($.mage.isEmpty(v)) {\r\n                    return false;\r\n                }\r\n                values = $('#' + elm.id + '_values').val().split(',');\r\n\r\n                return values.indexOf(v) !== -1;\r\n            },\r\n            $.mage.__('Please enter a valid value from list')\r\n        ],\r\n        'validate-new-password': [\r\n            function (v) {\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](v)) {\r\n                    return false;\r\n                }\r\n\r\n                if ($.mage.isEmpty(v) && v !== '') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'required-if-not-specified': [\r\n            function (value, element, params) {\r\n                var valid = false,\r\n                    alternate = $(params),\r\n                    alternateValue;\r\n\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        alternateValue = alternate.val();\r\n\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) { //eslint-disable-line\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid) {\r\n                    valid = !this.optional(element);\r\n                }\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-if-all-sku-empty-and-file-not-loaded': [\r\n            function (value, element, params) {\r\n                var valid = false,\r\n                    alternate = $(params.specifiedId),\r\n                    alternateValue;\r\n\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        alternateValue = alternate.val();\r\n\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) { //eslint-disable-line\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid) {\r\n                    valid = !this.optional(element);\r\n                }\r\n\r\n                $('input[' + params.dataSku + '=true]').each(function () {\r\n                    if ($(this).val() !== '') {\r\n                        valid = true;\r\n                    }\r\n                });\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('Please enter valid SKU key.')\r\n        ],\r\n        'required-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true,\r\n                    dependent = $(params),\r\n                    dependentValue;\r\n\r\n                if (dependent.length > 0) {\r\n                    valid = this.check(dependent);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        dependentValue = dependent.val();\r\n                        valid = typeof dependentValue != 'undefined' && dependentValue.length > 0;\r\n                    }\r\n                }\r\n\r\n                if (valid) {\r\n                    valid = !this.optional(element);\r\n                } else {\r\n                    valid = true; // dependent was not valid, so don't even check\r\n                }\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-number-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true,\r\n                    dependent = $(params),\r\n                    depeValue;\r\n\r\n                if (dependent.length) {\r\n                    valid = this.check(dependent);\r\n\r\n                    if (valid) {\r\n                        depeValue = dependent[0].value;\r\n                        valid = !!(depeValue && depeValue.length);\r\n                    }\r\n                }\r\n\r\n                return valid ? !!value.length : true;\r\n            },\r\n            $.mage.__('Please enter a valid number.')\r\n        ],\r\n        'datetime-validation': [\r\n            function (value, element) {\r\n                var isValid = true;\r\n\r\n                if ($(element).val().length === 0) {\r\n                    isValid = false;\r\n                    $(element).addClass('mage-error');\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('This is required field')\r\n        ],\r\n        'required-text-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'required-visual-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'required-dropdown-attribute-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, element, params) {\r\n                var validator = this,\r\n                    result = false,\r\n                    // obtain values for validation\r\n                    qty = $.mage.parseNumber(value),\r\n                    isMinAllowedValid = typeof params.minAllowed === 'undefined' ||\r\n                        qty >= $.mage.parseNumber(params.minAllowed),\r\n                    isMaxAllowedValid = typeof params.maxAllowed === 'undefined' ||\r\n                        qty <= $.mage.parseNumber(params.maxAllowed),\r\n                    isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' ||\r\n                        resolveModulo(qty, $.mage.parseNumber(params.qtyIncrements)) === 0.0;\r\n\r\n                result = qty > 0;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('Please enter a quantity greater than 0.');//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMinAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The fewest you may purchase is %1.').replace('%1', params.minAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMaxAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The maximum you may purchase is %1.').replace('%1', params.maxAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isQtyIncrementsValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('You can buy this product only in quantities of %1 at a time.').replace('%1', params.qtyIncrements);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.itemQtyErrorMessage;\r\n            }\r\n        ],\r\n        'password-not-equal-to-user-name': [\r\n            function (value, element, params) {\r\n                if (typeof params === 'string') {\r\n                    return value.toLowerCase() !== params.toLowerCase();\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('The password can\\'t be the same as the email address. Create a new password and try again.')\r\n        ]\r\n    };\r\n\r\n    $.each(rules, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n    $.validator.addClassRules({\r\n        'required-option': {\r\n            required: true\r\n        },\r\n        'required-options-count': {\r\n            required: true\r\n        },\r\n        'validate-both-passwords': {\r\n            'validate-cpassword': true\r\n        }\r\n    });\r\n    $.validator.messages = $.extend($.validator.messages, {\r\n        required: $.mage.__('This is a required field.'),\r\n        remote: $.mage.__('Please fix this field.'),\r\n        email: $.mage.__('Please enter a valid email address.'),\r\n        url: $.mage.__('Please enter a valid URL.'),\r\n        date: $.mage.__('Please enter a valid date.'),\r\n        dateISO: $.mage.__('Please enter a valid date (ISO).'),\r\n        number: $.mage.__('Please enter a valid number.'),\r\n        digits: $.mage.__('Please enter only digits.'),\r\n        creditcard: $.mage.__('Please enter a valid credit card number.'),\r\n        equalTo: $.mage.__('Please enter the same value again.'),\r\n        maxlength: $.validator.format($.mage.__('Please enter no more than {0} characters.')),\r\n        minlength: $.validator.format($.mage.__('Please enter at least {0} characters.')),\r\n        rangelength: $.validator.format($.mage.__('Please enter a value between {0} and {1} characters long.')),\r\n        range: $.validator.format($.mage.__('Please enter a value between {0} and {1}.')),\r\n        max: $.validator.format($.mage.__('Please enter a value less than or equal to {0}.')),\r\n        min: $.validator.format($.mage.__('Please enter a value greater than or equal to {0}.'))\r\n    });\r\n\r\n    if ($.metadata) {\r\n        // Setting the type as html5 to enable data-validate attribute\r\n        $.metadata.setType('html5');\r\n    }\r\n\r\n    showLabel = $.validator.prototype.showLabel;\r\n    $.extend(true, $.validator.prototype, {\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} message\r\n         */\r\n        showLabel: function (element, message) {\r\n            var label, elem;\r\n\r\n            showLabel.call(this, element, message);\r\n\r\n            // ARIA (adding aria-invalid & aria-describedby)\r\n            label = this.errorsFor(element);\r\n            elem = $(element);\r\n\r\n            if (!label.attr('id')) {\r\n                label.attr('id', this.idOrName(element) + '-error');\r\n            }\r\n            elem.attr('aria-invalid', 'true')\r\n                .attr('aria-describedby', label.attr('id'));\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Validate form field without instantiating validate plug-in.\r\n     *\r\n     * @param {Element|String} element - DOM element or selector\r\n     * @return {Boolean} validation result\r\n     */\r\n    $.validator.validateElement = function (element) {\r\n        var form, validator, valid, classes;\r\n\r\n        element = $(element);\r\n        form = element.get(0).form;\r\n        validator = form ? $(form).data('validator') : null;\r\n\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        }\r\n        valid = true;\r\n        classes = element.prop('class').split(' ');\r\n        $.each(classes, $.proxy(function (i, className) {\r\n            if (this.methods[className] && !this.methods[className](element.val(), element.get(0))) {\r\n                valid = false;\r\n\r\n                return valid;\r\n            }\r\n        }, this));\r\n\r\n        return valid;\r\n    };\r\n\r\n    originValidateDelegate = $.fn.validateDelegate;\r\n\r\n    /**\r\n     * @return {*}\r\n     */\r\n    $.fn.validateDelegate = function () {\r\n        if (!this[0].form) {\r\n            return this;\r\n        }\r\n\r\n        return originValidateDelegate.apply(this, arguments);\r\n    };\r\n\r\n    /**\r\n     * Validate single element.\r\n     *\r\n     * @param {Element} element\r\n     * @param {Object} config\r\n     * @returns {*}\r\n     */\r\n    $.validator.validateSingleElement = function (element, config) {\r\n        var errors = {},\r\n            valid = true,\r\n            validateConfig = {\r\n                errorElement: 'label',\r\n                ignore: '.ignore-validate',\r\n                hideError: false\r\n            },\r\n            form, validator, classes, elementValue;\r\n\r\n        $.extend(validateConfig, config);\r\n        element = $(element).not(validateConfig.ignore);\r\n\r\n        if (!element.length) {\r\n            return true;\r\n        }\r\n\r\n        form = element.get(0).form;\r\n        validator = form ? $(form).data('validator') : null;\r\n\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        }\r\n\r\n        classes = element.prop('class').split(' ');\r\n        validator = element.parent().data('validator') ||\r\n            $.mage.validation(validateConfig, element.parent()).validate;\r\n\r\n        element.removeClass(validator.settings.errorClass);\r\n        validator.toHide = validator.toShow;\r\n        validator.hideErrors();\r\n        validator.toShow = validator.toHide = $([]);\r\n\r\n        $.each(classes, $.proxy(function (i, className) {\r\n            elementValue = element.val();\r\n\r\n            if (element.is(':checkbox') || element.is(':radio')) {\r\n                elementValue = element.is(':checked') || null;\r\n            }\r\n\r\n            if (this.methods[className] && !this.methods[className](elementValue, element.get(0))) {\r\n                valid = false;\r\n                errors[element.get(0).name] = this.messages[className];\r\n                validator.invalid[element.get(0).name] = true;\r\n\r\n                if (!validateConfig.hideError) {\r\n                    validator.showErrors(errors);\r\n                }\r\n\r\n                return valid;\r\n            }\r\n        }, this));\r\n\r\n        return valid;\r\n    };\r\n\r\n    $.widget('mage.validation', {\r\n        options: {\r\n            meta: 'validate',\r\n            onfocusout: false,\r\n            onkeyup: false,\r\n            onclick: false,\r\n            ignoreTitle: true,\r\n            errorClass: 'mage-error',\r\n            errorElement: 'div',\r\n\r\n            /**\r\n             * @param {*} error\r\n             * @param {*} element\r\n             */\r\n            errorPlacement: function (error, element) {\r\n                var errorPlacement = element,\r\n                    fieldWrapper;\r\n\r\n                // logic for date-picker error placement\r\n                if (element.hasClass('_has-datepicker')) {\r\n                    errorPlacement = element.siblings('button');\r\n                }\r\n                // logic for field wrapper\r\n                fieldWrapper = element.closest('.addon');\r\n\r\n                if (fieldWrapper.length) {\r\n                    errorPlacement = fieldWrapper.after(error);\r\n                }\r\n                //logic for checkboxes/radio\r\n                if (element.is(':checkbox') || element.is(':radio')) {\r\n                    errorPlacement = element.parents('.control').children().last();\r\n\r\n                    //fallback if group does not have .control parent\r\n                    if (!errorPlacement.length) {\r\n                        errorPlacement = element.siblings('label').last();\r\n                    }\r\n                }\r\n                //logic for control with tooltip\r\n                if (element.siblings('.tooltip').length) {\r\n                    errorPlacement = element.siblings('.tooltip');\r\n                }\r\n                //logic for select with tooltip in after element\r\n                if (element.next().find('.tooltip').length) {\r\n                    errorPlacement = element.next();\r\n                }\r\n                errorPlacement.after(error);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if form pass validation rules without submit.\r\n         *\r\n         * @return boolean\r\n         */\r\n        isValid: function () {\r\n            return this.element.valid();\r\n        },\r\n\r\n        /**\r\n         * Remove validation error messages\r\n         */\r\n        clearError: function () {\r\n            if (arguments.length) {\r\n                $.each(arguments, $.proxy(function (index, item) {\r\n                    this.validate.prepareElement(item);\r\n                    this.validate.hideErrors();\r\n                }, this));\r\n            } else {\r\n                this.validate.resetForm();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validation creation.\r\n         *\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.validate = this.element.validate(this.options);\r\n\r\n            // ARIA (adding aria-required attribute)\r\n            this.element\r\n                .find('.field.required')\r\n                .find('.control')\r\n                .find('input, select, textarea')\r\n                .attr('aria-required', 'true');\r\n\r\n            this._listenFormValidate();\r\n        },\r\n\r\n        /**\r\n         * Validation listening.\r\n         *\r\n         * @protected\r\n         */\r\n        _listenFormValidate: function () {\r\n            $('form').on('invalid-form.validate', this.listenFormValidateHandler);\r\n        },\r\n\r\n        /**\r\n         * Handle form validation. Focus on first invalid form field.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} validation\r\n         */\r\n        listenFormValidateHandler: function (event, validation) {\r\n            var firstActive = $(validation.errorList[0].element || []),\r\n                lastActive = $(validation.findLastActive() ||\r\n                    validation.errorList.length && validation.errorList[0].element || []),\r\n                windowHeight = $(window).height(),\r\n                parent, successList;\r\n\r\n            if (lastActive.is(':hidden')) {\r\n                parent = lastActive.parent();\r\n                $('html, body').animate({\r\n                    scrollTop: parent.offset().top - windowHeight / 2\r\n                });\r\n            }\r\n\r\n            // ARIA (removing aria attributes if success)\r\n            successList = validation.successList;\r\n\r\n            if (successList.length) {\r\n                $.each(successList, function () {\r\n                    $(this)\r\n                        .removeAttr('aria-describedby')\r\n                        .removeAttr('aria-invalid');\r\n                });\r\n            }\r\n\r\n            if (firstActive.length) {\r\n                $('html, body').stop().animate({\r\n                    scrollTop: firstActive.parent().offset().top - windowHeight / 2\r\n                });\r\n                firstActive.focus();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n});\r\n","mage/layout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\n/* eslint-disable strict */\r\ndefine(['underscore'], function (_) {\r\n    return {\r\n        /**\r\n         * @param {Object} config\r\n         */\r\n        build: function (config) {\r\n            var types = _.map(_.flatten(config), function (item) {\r\n                return item.type;\r\n            });\r\n\r\n            require(types, function () {});\r\n        }\r\n    };\r\n});\r\n","mage/sticky.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.sticky', {\r\n        options: {\r\n            /**\r\n             * Element selector, who's height will be used to restrict the\r\n             * maximum offsetTop position of the stuck element.\r\n             * Default uses document body.\r\n             * @type {String}\r\n             */\r\n            container: '',\r\n\r\n            /**\r\n             * Spacing in pixels above the stuck element\r\n             * @type {Number|Function} Number or Function that will return a Number\r\n             */\r\n            spacingTop: 0,\r\n\r\n            /**\r\n             * Allows postponing sticking, until element will go out of the\r\n             * screen for the number of pixels.\r\n             * @type {Number|Function} Number or Function that will return a Number\r\n             */\r\n            stickAfter: 0,\r\n\r\n            /**\r\n             * CSS class for active sticky state\r\n             * @type {String}\r\n             */\r\n            stickyClass: '_sticky'\r\n        },\r\n\r\n        /**\r\n         * Retrieve option value\r\n         * @param  {String} option\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _getOptionValue: function (option) {\r\n            var value = this.options[option] || 0;\r\n\r\n            if (typeof value === 'function') {\r\n                value = this.options[option]();\r\n            }\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to scroll event\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(window).on({\r\n                'scroll': $.proxy(this._stick, this),\r\n                'resize': $.proxy(this.reset, this)\r\n            });\r\n\r\n            this.element.on('dimensionsChanged', $.proxy(this.reset, this));\r\n\r\n            this.reset();\r\n\r\n            // Application of the workaround for IE11 and Edge\r\n            this.normalizeIE11AndEdgeScroll();\r\n        },\r\n\r\n        /**\r\n         * float Block on windowScroll\r\n         * @private\r\n         */\r\n        _stick: function () {\r\n            var offset,\r\n                isStatic,\r\n                stuck,\r\n                stickAfter;\r\n\r\n            isStatic = this.element.css('position') === 'static';\r\n\r\n            if (!isStatic && this.element.is(':visible')) {\r\n                offset = $(document).scrollTop() -\r\n                    this.parentOffset +\r\n                    this._getOptionValue('spacingTop');\r\n\r\n                offset = Math.max(0, Math.min(offset, this.maxOffset));\r\n\r\n                stuck = this.element.hasClass(this.options.stickyClass);\r\n                stickAfter = this._getOptionValue('stickAfter');\r\n\r\n                if (offset && !stuck && offset < stickAfter) {\r\n                    offset = 0;\r\n                }\r\n\r\n                this.element\r\n                    .toggleClass(this.options.stickyClass, offset > 0)\r\n                    .css('top', offset);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Defines maximum offset value of the element.\r\n         * @private\r\n         */\r\n        _calculateDimens: function () {\r\n            var $parent         = this.element.parent(),\r\n                topMargin       = parseInt(this.element.css('margin-top'), 10),\r\n                parentHeight    = $parent.height() - topMargin,\r\n                height          = this.element.innerHeight(),\r\n                maxScroll       = document.body.offsetHeight - window.innerHeight;\r\n\r\n            if (this.options.container.length > 0) {\r\n                maxScroll = $(this.options.container).height();\r\n            }\r\n\r\n            this.parentOffset   = $parent.offset().top + topMargin;\r\n            this.maxOffset      = maxScroll - this.parentOffset;\r\n\r\n            if (this.maxOffset + height >= parentHeight) {\r\n                this.maxOffset = parentHeight - height;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Facade method that places sticky element where it should be.\r\n         */\r\n        reset: function () {\r\n            this._calculateDimens()\r\n                ._stick();\r\n        },\r\n\r\n        /**\r\n         * Workaround for IE11 and Edge that solves the IE known rendering issue\r\n         * that prevents sticky element from jumpy movement on scrolling the page.\r\n         *\r\n         * Alternatively, undesired jumpy movement can be eliminated by changing the setting in IE:\r\n         * Settings > Internet options > Advanced tab > inside 'Browsing' item > set 'Use smooth scrolling' to False\r\n         */\r\n        normalizeIE11AndEdgeScroll: function () {\r\n            if (navigator.userAgent.match(/Trident.*rv[ :]*11\\.|Edge\\//)) {\r\n                document.body.addEventListener('mousewheel', function () {\r\n                    event.preventDefault();\r\n                    window.scrollTo(0, window.pageYOffset - event.wheelDelta);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.sticky;\r\n});\r\n","mage/trim-input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.trimInput', {\r\n        options: {\r\n            cache: {}\r\n        },\r\n\r\n        /**\r\n         * Widget initialization\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.options.cache.input = $(this.element);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            if (this.options.cache.input.length) {\r\n                this._on(this.options.cache.input, {\r\n                    'change': this._trimInput,\r\n                    'keyup': this._trimInput,\r\n                    'paste': this._trimInput\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trim value\r\n         * @private\r\n         */\r\n        _trimInput: function () {\r\n            // Safari caret position workaround: storing carter position\r\n            var caretStart, caretEnd, input;\r\n\r\n            caretStart = this.options.cache.input.get(0).selectionStart;\r\n            caretEnd = this.options.cache.input.get(0).selectionEnd;\r\n\r\n            input = this._getInputValue().trim();\r\n\r\n            this.options.cache.input.val(input);\r\n\r\n            // Safari caret position workaround: setting caret position to previously stored values\r\n            if (caretStart !== null && caretEnd !== null) {\r\n                this.options.cache.input.get(0).setSelectionRange(caretStart, caretEnd);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get input value\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getInputValue: function () {\r\n            return this.options.cache.input.val();\r\n        }\r\n    });\r\n\r\n    return $.mage.trimInput;\r\n});\r\n","mage/popup-window.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.popupWindow', {\r\n        options: {\r\n            centerBrowser: 0, // center window over browser window? {1 (YES) or 0 (NO)}. overrides top and left\r\n            centerScreen: 0, // center window over entire screen? {1 (YES) or 0 (NO)}. overrides top and left\r\n            height: 500, // sets the height in pixels of the window.\r\n            left: 0, // left position when the window appears.\r\n            location: 0, // determines whether the address bar is displayed {1 (YES) or 0 (NO)}.\r\n            menubar: 0, // determines whether the menu bar is displayed {1 (YES) or 0 (NO)}.\r\n            resizable: 0, // whether the window can be resized {1 (YES) or 0 (NO)}.\r\n            scrollbars: 0, // determines whether scrollbars appear on the window {1 (YES) or 0 (NO)}.\r\n            status: 0, // whether a status line appears at the bottom of the window {1 (YES) or 0 (NO)}.\r\n            width: 500, // sets the width in pixels of the window.\r\n            windowName: null, // name of window set from the name attribute of the element that invokes the click\r\n            windowURL: null, // url used for the popup\r\n            top: 0, // top position when the window appears.\r\n            toolbar: 0 // determines whether a toolbar is displayed {1 (YES) or 0 (NO)}.\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', $.proxy(this._openPopupWindow, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _openPopupWindow: function (event) {\r\n            var element = $(event.target),\r\n                settings = this.options,\r\n                windowFeatures =\r\n                    'height=' + settings.height +\r\n                        ',width=' + settings.width +\r\n                        ',toolbar=' + settings.toolbar +\r\n                        ',scrollbars=' + settings.scrollbars +\r\n                        ',status=' + settings.status +\r\n                        ',resizable=' + settings.resizable +\r\n                        ',location=' + settings.location +\r\n                        ',menuBar=' + settings.menubar,\r\n                centeredX,\r\n                centeredY;\r\n\r\n            settings.windowName = settings.windowName || element.attr('name');\r\n            settings.windowURL = settings.windowURL || element.attr('href');\r\n\r\n            if (settings.centerBrowser) {\r\n                centeredY = window.screenY + (window.outerHeight / 2 - settings.height / 2);\r\n                centeredX = window.screenX + (window.outerWidth / 2 - settings.width / 2);\r\n                windowFeatures += ',left=' + centeredX + ',top=' + centeredY;\r\n            } else if (settings.centerScreen) {\r\n                centeredY = (screen.height - settings.height) / 2;\r\n                centeredX = (screen.width - settings.width) / 2;\r\n                windowFeatures += ',left=' + centeredX + ',top=' + centeredY;\r\n            } else {\r\n                windowFeatures += ',left=' + settings.left + ',top=' + settings.top;\r\n            }\r\n\r\n            window.open(settings.windowURL, settings.windowName, windowFeatures).focus();\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    return $.mage.popupWindow;\r\n});\r\n","mage/calendar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*eslint max-depth: 0*/\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/datepicker',\r\n    'jquery-ui-modules/timepicker'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var calendarBasePrototype,\r\n        datepickerPrototype = $.datepicker.constructor.prototype;\r\n\r\n    $.datepicker.markerClassName = '_has-datepicker';\r\n\r\n    /**\r\n     * Extend JQuery date picker prototype with store local time methods\r\n     */\r\n    $.extend(datepickerPrototype, {\r\n        /**\r\n         * Get date/time according to store settings.\r\n         * We use serverTimezoneOffset (in seconds) instead of serverTimezoneSeconds\r\n         * in order to have ability to know actual store time even if page hadn't been reloaded\r\n         * @returns {Date}\r\n         */\r\n        _getTimezoneDate: function (options) {\r\n            // local time in ms\r\n            var ms = Date.now();\r\n\r\n            options = options || $.calendarConfig || {};\r\n\r\n            // Adjust milliseconds according to store timezone offset,\r\n            // mind the GMT zero offset\r\n            if (typeof options.serverTimezoneOffset !== 'undefined') {\r\n                // Make UTC time and add store timezone offset in seconds\r\n                ms += new Date().getTimezoneOffset() * 60 * 1000 + options.serverTimezoneOffset * 1000;\r\n            } else if (typeof options.serverTimezoneSeconds !== 'undefined') {\r\n                //Set milliseconds according to client local timezone offset\r\n                ms = (options.serverTimezoneSeconds + new Date().getTimezoneOffset() * 60) * 1000;\r\n            }\r\n\r\n            return new Date(ms);\r\n        },\r\n\r\n        /**\r\n         * Set date/time according to store settings.\r\n         * @param {String|Object} target - the target input field or division or span\r\n         */\r\n        _setTimezoneDateDatepicker: function (target) {\r\n            this._setDateDatepicker(target, this._getTimezoneDate());\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Widget calendar\r\n     */\r\n    $.widget('mage.calendar', {\r\n        options: {\r\n            autoComplete: true\r\n        },\r\n\r\n        /**\r\n         * Merge global options with options passed to widget invoke\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this._enableAMPM();\r\n            this.options = $.extend(\r\n                {},\r\n                $.calendarConfig ? $.calendarConfig : {},\r\n                this.options.showsTime ? {\r\n                    showTime: true,\r\n                    showHour: true,\r\n                    showMinute: true\r\n                } : {},\r\n                this.options\r\n            );\r\n            this._initPicker(this.element);\r\n            this._overwriteGenerateHtml();\r\n        },\r\n\r\n        /**\r\n         * Get picker name\r\n         * @protected\r\n         */\r\n        _picker: function () {\r\n            return this.options.showsTime ? 'datetimepicker' : 'datepicker';\r\n        },\r\n\r\n        /**\r\n         * Fix for Timepicker - Set ampm option for Timepicker if timeformat contains string 'tt'\r\n         * @protected\r\n         */\r\n        _enableAMPM: function () {\r\n            if (this.options.timeFormat && this.options.timeFormat.indexOf('tt') >= 0) {\r\n                this.options.ampm = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper for overwrite jQuery UI datepicker function.\r\n         */\r\n        _overwriteGenerateHtml: function () {\r\n            /**\r\n             * Overwrite jQuery UI datepicker function.\r\n             * Reason: magento date could be set before calendar show\r\n             * but local date will be styled as current in original _generateHTML\r\n             *\r\n             * @param {Object} inst - instance datepicker.\r\n             * @return {String} html template\r\n             */\r\n            $.datepicker.constructor.prototype._generateHTML = function (inst) {\r\n                var today = this._getTimezoneDate(),\r\n                    isRTL = this._get(inst, 'isRTL'),\r\n                    showButtonPanel = this._get(inst, 'showButtonPanel'),\r\n                    hideIfNoPrevNext = this._get(inst, 'hideIfNoPrevNext'),\r\n                    navigationAsDateFormat = this._get(inst, 'navigationAsDateFormat'),\r\n                    numMonths = this._getNumberOfMonths(inst),\r\n                    showCurrentAtPos = this._get(inst, 'showCurrentAtPos'),\r\n                    stepMonths = this._get(inst, 'stepMonths'),\r\n                    isMultiMonth = parseInt(numMonths[0], 10) !== 1 || parseInt(numMonths[1], 10) !== 1,\r\n                    currentDate = this._daylightSavingAdjust(!inst.currentDay ? new Date(9999, 9, 9) :\r\n                        new Date(inst.currentYear, inst.currentMonth, inst.currentDay)),\r\n                    minDate = this._getMinMaxDate(inst, 'min'),\r\n                    maxDate = this._getMinMaxDate(inst, 'max'),\r\n                    drawMonth = inst.drawMonth - showCurrentAtPos,\r\n                    drawYear = inst.drawYear,\r\n                    maxDraw,\r\n                    prevText = this._get(inst, 'prevText'),\r\n                    prev,\r\n                    nextText = this._get(inst, 'nextText'),\r\n                    next,\r\n                    currentText = this._get(inst, 'currentText'),\r\n                    gotoDate,\r\n                    controls,\r\n                    buttonPanel,\r\n                    firstDay,\r\n                    showWeek = this._get(inst, 'showWeek'),\r\n                    dayNames = this._get(inst, 'dayNames'),\r\n                    dayNamesMin = this._get(inst, 'dayNamesMin'),\r\n                    monthNames = this._get(inst, 'monthNames'),\r\n                    monthNamesShort =  this._get(inst, 'monthNamesShort'),\r\n                    beforeShowDay = this._get(inst, 'beforeShowDay'),\r\n                    showOtherMonths = this._get(inst, 'showOtherMonths'),\r\n                    selectOtherMonths = this._get(inst, 'selectOtherMonths'),\r\n                    defaultDate = this._getDefaultDate(inst),\r\n                    html = '',\r\n                    row = 0,\r\n                    col = 0,\r\n                    selectedDate,\r\n                    cornerClass = ' ui-corner-all',\r\n                    group = '',\r\n                    calender = '',\r\n                    dow = 0,\r\n                    thead,\r\n                    day,\r\n                    daysInMonth,\r\n                    leadDays,\r\n                    curRows,\r\n                    numRows,\r\n                    printDate,\r\n                    dRow = 0,\r\n                    tbody,\r\n                    daySettings,\r\n                    otherMonth,\r\n                    unselectable;\r\n\r\n                if (drawMonth < 0) {\r\n                    drawMonth += 12;\r\n                    drawYear--;\r\n                }\r\n\r\n                if (maxDate) {\r\n                    maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),\r\n                        maxDate.getMonth() - numMonths[0] * numMonths[1] + 1, maxDate.getDate()));\r\n                    maxDraw = minDate && maxDraw < minDate ? minDate : maxDraw;\r\n\r\n                    while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {\r\n                        drawMonth--;\r\n\r\n                        if (drawMonth < 0) {\r\n                            drawMonth = 11;\r\n                            drawYear--;\r\n\r\n                        }\r\n                    }\r\n                }\r\n                inst.drawMonth = drawMonth;\r\n                inst.drawYear = drawYear;\r\n                prevText = !navigationAsDateFormat ? prevText : this.formatDate(prevText,\r\n                    this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),\r\n                    this._getFormatConfig(inst));\r\n                prev = this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?\r\n                    '<a class=\"ui-datepicker-prev ui-corner-all\" data-handler=\"prev\" data-event=\"click\"' +\r\n                    ' title=\"' + prevText + '\">' +\r\n                    '<span class=\"ui-icon ui-icon-circle-triangle-' + (isRTL ? 'e' : 'w') + '\">' +\r\n                    '' + prevText + '</span></a>'\r\n                    : hideIfNoPrevNext ? ''\r\n                        :   '<a class=\"ui-datepicker-prev ui-corner-all ui-state-disabled\" title=\"' +\r\n                            '' + prevText + '\"><span class=\"ui-icon ui-icon-circle-triangle-' +\r\n                            '' + (isRTL ? 'e' : 'w') + '\">' + prevText + '</span></a>';\r\n                nextText = !navigationAsDateFormat ?\r\n                    nextText\r\n                    :   this.formatDate(nextText,\r\n                        this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),\r\n                        this._getFormatConfig(inst));\r\n                next = this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?\r\n                    '<a class=\"ui-datepicker-next ui-corner-all\" data-handler=\"next\" data-event=\"click\"' +\r\n                    'title=\"' + nextText + '\"><span class=\"ui-icon ui-icon-circle-triangle-' +\r\n                    '' + (isRTL ? 'w' : 'e') + '\">' + nextText + '</span></a>'\r\n                    : hideIfNoPrevNext ? ''\r\n                        :   '<a class=\"ui-datepicker-next ui-corner-all ui-state-disabled\" title=\"' + nextText + '\">' +\r\n                            '<span class=\"ui-icon ui-icon-circle-triangle-' + (isRTL ? 'w' : 'e') + '\">' + nextText +\r\n                            '</span></a>';\r\n                gotoDate = this._get(inst, 'gotoCurrent') && inst.currentDay ? currentDate : today;\r\n                currentText = !navigationAsDateFormat ? currentText :\r\n                    this.formatDate(currentText, gotoDate, this._getFormatConfig(inst));\r\n                controls = !inst.inline ?\r\n                    '<button type=\"button\" class=\"ui-datepicker-close ui-state-default ui-priority-primary ' +\r\n                    'ui-corner-all\" data-handler=\"hide\" data-event=\"click\">' +\r\n                    this._get(inst, 'closeText') + '</button>'\r\n                    : '';\r\n                buttonPanel = showButtonPanel ?\r\n                    '<div class=\"ui-datepicker-buttonpane ui-widget-content\">' + (isRTL ? controls : '') +\r\n                    (this._isInRange(inst, gotoDate) ? '<button type=\"button\" class=\"ui-datepicker-current ' +\r\n                    'ui-state-default ui-priority-secondary ui-corner-all\" data-handler=\"today\" data-event=\"click\"' +\r\n                    '>' + currentText + '</button>' : '') + (isRTL ? '' : controls) + '</div>' : '';\r\n                firstDay = parseInt(this._get(inst, 'firstDay'), 10);\r\n                firstDay = isNaN(firstDay) ? 0 : firstDay;\r\n\r\n                for (row = 0; row < numMonths[0]; row++) {\r\n                    this.maxRows = 4;\r\n\r\n                    for (col = 0; col < numMonths[1]; col++) {\r\n                        selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));\r\n\r\n                        calender = '';\r\n\r\n                        if (isMultiMonth) {\r\n                            calender += '<div class=\"ui-datepicker-group';\r\n\r\n                            if (numMonths[1] > 1) {\r\n                                switch (col) {\r\n                                    case 0: calender += ' ui-datepicker-group-first';\r\n                                        cornerClass = ' ui-corner-' + (isRTL ? 'right' : 'left');\r\n                                        break;\r\n\r\n                                    case numMonths[1] - 1: calender += ' ui-datepicker-group-last';\r\n                                        cornerClass = ' ui-corner-' + (isRTL ? 'left' : 'right');\r\n                                        break;\r\n\r\n                                    default: calender += ' ui-datepicker-group-middle'; cornerClass = '';\r\n                                }\r\n                            }\r\n                            calender += '\">';\r\n                        }\r\n                        calender += '<div class=\"ui-datepicker-header ' +\r\n                            'ui-widget-header ui-helper-clearfix' + cornerClass + '\">' +\r\n                            (/all|left/.test(cornerClass) && parseInt(row, 10) === 0 ? isRTL ? next : prev : '') +\r\n                            (/all|right/.test(cornerClass) && parseInt(row, 10) === 0 ? isRTL ? prev : next : '') +\r\n                            this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,\r\n                            row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers\r\n                            '</div><table class=\"ui-datepicker-calendar\"><thead>' +\r\n                            '<tr>';\r\n                        thead = showWeek ?\r\n                            '<th class=\"ui-datepicker-week-col\">' + this._get(inst, 'weekHeader') + '</th>' : '';\r\n\r\n                        for (dow = 0; dow < 7; dow++) { // days of the week\r\n                            day = (dow + firstDay) % 7;\r\n                            thead += '<th' + ((dow + firstDay + 6) % 7 >= 5 ?\r\n                                ' class=\"ui-datepicker-week-end\"' : '') + '>' +\r\n                                '<span title=\"' + dayNames[day] + '\">' + dayNamesMin[day] + '</span></th>';\r\n                        }\r\n                        calender += thead + '</tr></thead><tbody>';\r\n                        daysInMonth = this._getDaysInMonth(drawYear, drawMonth);\r\n\r\n                        if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {\r\n                            inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);\r\n                        }\r\n                        leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;\r\n                        curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate\r\n                        numRows = isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows;\r\n                        this.maxRows = numRows;\r\n                        printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));\r\n\r\n                        for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows\r\n                            calender += '<tr>';\r\n                            tbody = !showWeek ? '' : '<td class=\"ui-datepicker-week-col\">' +\r\n                            this._get(inst, 'calculateWeek')(printDate) + '</td>';\r\n\r\n                            for (dow = 0; dow < 7; dow++) { // create date picker days\r\n                                daySettings = beforeShowDay ?\r\n                                    beforeShowDay.apply(inst.input ? inst.input[0] : null, [printDate]) : [true, ''];\r\n                                otherMonth = printDate.getMonth() !== drawMonth;\r\n                                unselectable = otherMonth && !selectOtherMonths || !daySettings[0] ||\r\n                                minDate && printDate < minDate || maxDate && printDate > maxDate;\r\n                                tbody += '<td class=\"' +\r\n                                ((dow + firstDay + 6) % 7 >= 5 ? ' ui-datepicker-week-end' : '') + // highlight weekends\r\n                                (otherMonth ? ' ui-datepicker-other-month' : '') + // highlight days from other months\r\n                                (printDate.getTime() === selectedDate.getTime() &&\r\n                                drawMonth === inst.selectedMonth && inst._keyEvent || // user pressed key\r\n                                defaultDate.getTime() === printDate.getTime() &&\r\n                                defaultDate.getTime() === selectedDate.getTime() ?\r\n                                    // or defaultDate is current printedDate and defaultDate is selectedDate\r\n                                ' ' + this._dayOverClass : '') + // highlight selected day\r\n                                (unselectable ? ' ' + this._unselectableClass + ' ui-state-disabled' : '') +\r\n                                (otherMonth && !showOtherMonths ? '' : ' ' + daySettings[1] + // highlight custom dates\r\n                                (printDate.getTime() === currentDate.getTime() ? ' ' + this._currentClass : '') +\r\n                                (printDate.getDate() === today.getDate() && printDate.getMonth() === today.getMonth() &&\r\n                                printDate.getYear() === today.getYear() ? ' ui-datepicker-today' : '')) + '\"' +\r\n                                ((!otherMonth || showOtherMonths) && daySettings[2] ?\r\n                                ' title=\"' + daySettings[2] + '\"' : '') + // cell title\r\n                                (unselectable ? '' : ' data-handler=\"selectDay\" data-event=\"click\" data-month=\"' +\r\n                                '' + printDate.getMonth() + '\" data-year=\"' + printDate.getFullYear() + '\"') + '>' +\r\n                                (otherMonth && !showOtherMonths ? '&#xa0;' : // display for other months\r\n                                    unselectable ? '<span class=\"ui-state-default\">' + printDate.getDate() + '</span>'\r\n                                        : '<a class=\"ui-state-default' +\r\n                                    (printDate.getTime() === today.getTime() ? ' ' : '') +\r\n                                    (printDate.getTime() === currentDate.getTime() ? ' ui-state-active' : '') +\r\n                                    (otherMonth ? ' ui-priority-secondary' : '') +\r\n                                    '\" href=\"#\">' + printDate.getDate() + '</a>') + '</td>';\r\n                                printDate.setDate(printDate.getDate() + 1);\r\n                                printDate = this._daylightSavingAdjust(printDate);\r\n                            }\r\n                            calender += tbody + '</tr>';\r\n                        }\r\n                        drawMonth++;\r\n\r\n                        if (drawMonth > 11) {\r\n                            drawMonth = 0;\r\n                            drawYear++;\r\n                        }\r\n                        calender += '</tbody></table>' + (isMultiMonth ? '</div>' +\r\n                        (numMonths[0] > 0 && col === numMonths[1] - 1 ? '<div class=\"ui-datepicker-row-break\"></div>'\r\n                            : '') : '');\r\n                        group += calender;\r\n                    }\r\n                    html += group;\r\n                }\r\n                html += buttonPanel + ($.ui.ie6 && !inst.inline ?\r\n                    '<iframe src=\"javascript:false;\" class=\"ui-datepicker-cover\" frameborder=\"0\"></iframe>' : '');\r\n                inst._keyEvent = false;\r\n\r\n                return html;\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Set current date if the date is not set\r\n         * @protected\r\n         * @param {Object} element\r\n         */\r\n        _setCurrentDate: function (element) {\r\n            if (!element.val()) {\r\n                element[this._picker()]('setTimezoneDate').val('');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init Datetimepicker\r\n         * @protected\r\n         * @param {Object} element\r\n         */\r\n        _initPicker: function (element) {\r\n            var picker = element[this._picker()](this.options),\r\n                pickerButtonText = picker.next('.ui-datepicker-trigger')\r\n                    .find('img')\r\n                    .attr('title');\r\n\r\n            picker.next('.ui-datepicker-trigger')\r\n                .addClass('v-middle')\r\n                .text('') // Remove jQuery UI datepicker generated image\r\n                .append('<span>' + pickerButtonText + '</span>');\r\n\r\n            $(element).attr('autocomplete', this.options.autoComplete ? 'on' : 'off');\r\n\r\n            this._setCurrentDate(element);\r\n        },\r\n\r\n        /**\r\n         * destroy instance of datetimepicker\r\n         */\r\n        _destroy: function () {\r\n            this.element[this._picker()]('destroy');\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Method is kept for backward compatibility and unit-tests acceptance\r\n         * see \\mage\\calendar\\calendar-test.js\r\n         * @return {Object} date\r\n         */\r\n        getTimezoneDate: function () {\r\n            return datepickerPrototype._getTimezoneDate.call(this, this.options);\r\n        }\r\n    });\r\n\r\n    calendarBasePrototype = $.mage.calendar.prototype;\r\n\r\n    /**\r\n     * Extension for Calendar - date and time format convert functionality\r\n     * @var {Object}\r\n     */\r\n    $.widget('mage.calendar', $.extend({}, calendarBasePrototype,\r\n            /** @lends {$.mage.calendar.prototype} */ {\r\n                /**\r\n                 * key - backend format, value - jquery format\r\n                 * @type {Object}\r\n                 * @private\r\n                 */\r\n                dateTimeFormat: {\r\n                    date: {\r\n                        'EEEE': 'DD',\r\n                        'EEE': 'D',\r\n                        'EE': 'D',\r\n                        'E': 'D',\r\n                        'D': 'o',\r\n                        'MMMM': 'MM',\r\n                        'MMM': 'M',\r\n                        'MM': 'mm',\r\n                        'M': 'mm',\r\n                        'yyyy': 'yy',\r\n                        'y': 'yy',\r\n                        'Y': 'yy',\r\n                        'yy': 'yy' // Always long year format on frontend\r\n                    },\r\n                    time: {\r\n                        'a': 'TT'\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Add Date and Time converting to _create method\r\n                 * @protected\r\n                 */\r\n                _create: function () {\r\n                    if (this.options.dateFormat) {\r\n                        this.options.dateFormat = this._convertFormat(this.options.dateFormat, 'date');\r\n                    }\r\n\r\n                    if (this.options.timeFormat) {\r\n                        this.options.timeFormat = this._convertFormat(this.options.timeFormat, 'time');\r\n                    }\r\n                    calendarBasePrototype._create.apply(this, arguments);\r\n                },\r\n\r\n                /**\r\n                 * Converting date or time format\r\n                 * @protected\r\n                 * @param {String} format\r\n                 * @param {String} type\r\n                 * @return {String}\r\n                 */\r\n                _convertFormat: function (format, type) {\r\n                    var symbols = format.match(/([a-z]+)/ig),\r\n                        separators = format.match(/([^a-z]+)/ig),\r\n                        self = this,\r\n                        convertedFormat = '';\r\n\r\n                    if (symbols) {\r\n                        $.each(symbols, function (key, val) {\r\n                            convertedFormat +=\r\n                                (self.dateTimeFormat[type][val] || val) +\r\n                                (separators[key] || '');\r\n                        });\r\n                    }\r\n\r\n                    return convertedFormat;\r\n                }\r\n            })\r\n    );\r\n\r\n    /**\r\n     * Widget dateRange\r\n     * @extends $.mage.calendar\r\n     */\r\n    $.widget('mage.dateRange', $.mage.calendar, {\r\n\r\n        /**\r\n         * creates two instances of datetimepicker for date range selection\r\n         * @protected\r\n         */\r\n        _initPicker: function () {\r\n            var from,\r\n                to;\r\n\r\n            if (this.options.from && this.options.to) {\r\n                from = this.element.find('#' + this.options.from.id);\r\n                to = this.element.find('#' + this.options.to.id);\r\n                this.options.onSelect = $.proxy(function (selectedDate) {\r\n                    to[this._picker()]('option', 'minDate', selectedDate);\r\n                }, this);\r\n                $.mage.calendar.prototype._initPicker.call(this, from);\r\n                from.on('change', $.proxy(function () {\r\n                    to[this._picker()]('option', 'minDate', from[this._picker()]('getDate'));\r\n                }, this));\r\n                this.options.onSelect = $.proxy(function (selectedDate) {\r\n                    from[this._picker()]('option', 'maxDate', selectedDate);\r\n                }, this);\r\n                $.mage.calendar.prototype._initPicker.call(this, to);\r\n                to.on('change', $.proxy(function () {\r\n                    from[this._picker()]('option', 'maxDate', to[this._picker()]('getDate'));\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * destroy two instances of datetimepicker\r\n         */\r\n        _destroy: function () {\r\n            if (this.options.from) {\r\n                this.element.find('#' + this.options.from.id)[this._picker()]('destroy');\r\n            }\r\n\r\n            if (this.options.to) {\r\n                this.element.find('#' + this.options.to.id)[this._picker()]('destroy');\r\n            }\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    // Overrides the \"today\" button functionality to select today's date when clicked.\r\n    $.datepicker._gotoTodayOriginal = $.datepicker._gotoToday;\r\n\r\n    /**\r\n     * overwrite jQuery UI _showDatepicker function for proper HTML generation conditions.\r\n     *\r\n     */\r\n    $.datepicker._showDatepickerOriginal = $.datepicker._showDatepicker;\r\n\r\n    /**\r\n     * Triggers original method showDataPicker for rendering calendar\r\n     * @param {HTMLObject} input\r\n     * @private\r\n     */\r\n    $.datepicker._showDatepicker = function (input) {\r\n        if (!input.disabled) {\r\n            $.datepicker._showDatepickerOriginal.call(this, input);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * _gotoToday\r\n     * @param {Object} el\r\n     */\r\n    $.datepicker._gotoToday = function (el) {\r\n        //Set date/time according to timezone offset\r\n        $(el).datepicker('setTimezoneDate')\r\n            // To ensure that user can re-select date field without clicking outside it first.\r\n            .blur().trigger('change');\r\n    };\r\n\r\n    return {\r\n        dateRange:  $.mage.dateRange,\r\n        calendar:   $.mage.calendar\r\n    };\r\n});\r\n","mage/item-table.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.itemTable', {\r\n        options: {\r\n            addBlock: '[data-template=\"add-block\"]',\r\n            addBlockData: {},\r\n            addEvent: 'click',\r\n            addSelector: '[data-role=\"add\"]',\r\n            itemsSelector: '[data-container=\"items\"]',\r\n            keepLastRow: true\r\n        },\r\n\r\n        /**\r\n         * This method adds a new instance of the block to the items.\r\n         * @private\r\n         */\r\n        _add: function () {\r\n            var hideShowDelete,\r\n                deletableItems,\r\n                addedBlock;\r\n\r\n            // adding a new row, so increment the count to give each row a unique index\r\n            this.rowIndex++;\r\n\r\n            // make sure the block data has the rowIndex\r\n            this.options.addBlockData.rowIndex = this.rowIndex;\r\n\r\n            // render the form\r\n            addedBlock = $(this.addBlockTmpl({\r\n                data: this.options.addBlockData\r\n            }));\r\n\r\n            // add the row to the item block\r\n            this.element.find(this.options.itemsSelector).append(addedBlock);\r\n\r\n            // initialize all mage content\r\n            addedBlock.trigger('contentUpdated');\r\n\r\n            // determine all existing items in the collection\r\n            deletableItems = this._getDeletableItems();\r\n\r\n            // for the most part, show the delete mechanism, except in the case where there is only one it should not\r\n            // be deleted\r\n            hideShowDelete = 'showDelete';\r\n\r\n            if (this.options.keepLastRow && deletableItems.length === 1) {\r\n                hideShowDelete = 'hideDelete';\r\n            }\r\n\r\n            // loop through each control and perform that action on the deletable item\r\n            $.each(deletableItems, function (index) {\r\n                $(deletableItems[index]).trigger(hideShowDelete);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            // since the first handler is dynamic, generate the object using array notation\r\n            handlers[this.options.addEvent + ' ' + this.options.addSelector] = '_add';\r\n            handlers.deleteItem = '_onDeleteItem';\r\n\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n\r\n            this.addBlockTmpl = mageTemplate(this.options.addBlock);\r\n\r\n            // nothing in the table, so indicate that\r\n            this.rowIndex = -1;\r\n\r\n            // make sure the block data is an object\r\n            if (this.options.addBlockData == null || typeof this.options.addBlockData !== 'object') {\r\n                // reset the block data to an empty object\r\n                this.options.addBlockData = {};\r\n            }\r\n\r\n            // add the first row to the table\r\n            this._add();\r\n        },\r\n\r\n        /**\r\n         * This method returns the list of widgets associated with deletable items from the container (direct children\r\n         * only).\r\n         * @private\r\n         */\r\n        _getDeletableItems: function () {\r\n            return this.element.find(this.options.itemsSelector + '> .deletableItem');\r\n        },\r\n\r\n        /**\r\n         * This method removes the item associated with the message.\r\n         * @private\r\n         */\r\n        _onDeleteItem: function (e) {\r\n            var deletableItems;\r\n\r\n            // parent elements don't need to see this event\r\n            e.stopPropagation();\r\n\r\n            // remove the deletable item\r\n            $(e.target).remove();\r\n\r\n            if (this.options.keepLastRow) {\r\n                // determine if there is only one element remaining, in which case, disable the delete mechanism on it\r\n                deletableItems = this._getDeletableItems();\r\n\r\n                if (deletableItems.length === 1) {\r\n                    $(deletableItems[0]).trigger('hideDelete');\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.itemTable;\r\n});\r\n","mage/mage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/apply/main'\r\n], function ($, mage) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Main namespace for Magento extensions\r\n     * @type {Object}\r\n     */\r\n    $.mage = $.mage || {};\r\n\r\n    /**\r\n     * Plugin mage, initialize components on elements\r\n     * @param {String} name - Components' path.\r\n     * @param {Object} config - Components' config.\r\n     * @returns {JQuery} Chainable.\r\n     */\r\n    $.fn.mage = function (name, config) {\r\n        config = config || {};\r\n\r\n        this.each(function (index, el) {\r\n            mage.applyFor(el, config, name);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    $.extend($.mage, {\r\n        /**\r\n         * Handle all components declared via data attribute\r\n         * @return {Object} $.mage\r\n         */\r\n        init: function () {\r\n            mage.apply();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Method handling redirects and page refresh\r\n         * @param {String} url - redirect URL\r\n         * @param {(undefined|String)} type - 'assign', 'reload', 'replace'\r\n         * @param {(undefined|Number)} timeout - timeout in milliseconds before processing the redirect or reload\r\n         * @param {(undefined|Boolean)} forced - true|false used for 'reload' only\r\n         */\r\n        redirect: function (url, type, timeout, forced) {\r\n            var _redirect;\r\n\r\n            forced  = !!forced;\r\n            timeout = timeout || 0;\r\n            type    = type || 'assign';\r\n\r\n            /**\r\n             * @private\r\n             */\r\n            _redirect = function () {\r\n                window.location[type](type === 'reload' ? forced : url);\r\n            };\r\n\r\n            timeout ? setTimeout(_redirect, timeout) : _redirect();\r\n        },\r\n\r\n        /**\r\n         * Checks if provided string is a valid selector.\r\n         * @param {String} selector - Selector to check.\r\n         * @returns {Boolean}\r\n         */\r\n        isValidSelector: function (selector) {\r\n            try {\r\n                document.querySelector(selector);\r\n\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Init components inside of dynamically updated elements\r\n     */\r\n    $('body').on('contentUpdated', function () {\r\n        if (mage) {\r\n            mage.apply();\r\n        }\r\n    });\r\n\r\n    return $.mage;\r\n});\r\n","mage/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'jquery/jquery-storageapi',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var hideProps = {},\r\n        showProps = {};\r\n\r\n    hideProps.height = 'hide';\r\n    showProps.height = 'show';\r\n\r\n    $.widget('mage.collapsible', {\r\n        options: {\r\n            active: false,\r\n            disabled: false,\r\n            collapsible: true,\r\n            header: '[data-role=title]',\r\n            content: '[data-role=content]',\r\n            trigger: '[data-role=trigger]',\r\n            closedState: null,\r\n            openedState: null,\r\n            disabledState: null,\r\n            ajaxUrlElement: '[data-ajax=true]',\r\n            ajaxContent: false,\r\n            loadingClass: null,\r\n            saveState: false,\r\n            animate: false,\r\n            icons: {\r\n                activeHeader: null,\r\n                header: null\r\n            },\r\n            collateral: {\r\n                element: null,\r\n                openedState: null\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.storage = $.localStorage;\r\n            this.icons = false;\r\n\r\n            if (typeof this.options.icons === 'string') {\r\n                this.options.icons = $.parseJSON(this.options.icons);\r\n            }\r\n\r\n            this._processPanels();\r\n            this._processState();\r\n            this._refresh();\r\n\r\n            if (this.options.icons.header && this.options.icons.activeHeader) {\r\n                this._createIcons();\r\n                this.icons = true;\r\n            }\r\n\r\n            this.element.on('dimensionsChanged', function (e) {\r\n                if (e.target && e.target.classList.contains('active')) {\r\n                    this._scrollToTopIfNotVisible();\r\n                }\r\n            }.bind(this));\r\n\r\n            this._bind('click');\r\n            this._trigger('created');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _refresh: function () {\r\n            this.trigger.attr('tabIndex', 0);\r\n\r\n            if (this.options.active && !this.options.disabled) {\r\n                if (this.options.openedState) {\r\n                    this.element.addClass(this.options.openedState);\r\n                }\r\n\r\n                if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                    $(this.options.collateral.element).addClass(this.options.collateral.openedState);\r\n                }\r\n\r\n                if (this.options.ajaxContent) {\r\n                    this._loadContent();\r\n                }\r\n                // ARIA (updates aria attributes)\r\n                this.header.attr({\r\n                    'aria-selected': false\r\n                });\r\n            } else if (this.options.disabled) {\r\n                this.disable();\r\n            } else {\r\n                this.content.hide();\r\n\r\n                if (this.options.closedState) {\r\n                    this.element.addClass(this.options.closedState);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processing the state:\r\n         *     If deep linking is used and the anchor is the id of the content or the content contains this id,\r\n         *     and the collapsible element is a nested one having collapsible parents, in order to see the content,\r\n         *     all the parents must be expanded.\r\n         * @private\r\n         */\r\n        _processState: function () {\r\n            var anchor = window.location.hash,\r\n                isValid = $.mage.isValidSelector(anchor),\r\n                urlPath = window.location.pathname.replace(/\\./g, ''),\r\n                state;\r\n\r\n            this.stateKey = encodeURIComponent(urlPath + this.element.attr('id'));\r\n\r\n            if (isValid &&\r\n                ($(this.content.find(anchor)).length > 0 || this.content.attr('id') === anchor.replace('#', ''))\r\n            ) {\r\n                this.element.parents('[data-collapsible=true]').collapsible('forceActivate');\r\n\r\n                if (!this.options.disabled) {\r\n                    this.options.active = true;\r\n\r\n                    if (this.options.saveState) { //eslint-disable-line max-depth\r\n                        this.storage.set(this.stateKey, true);\r\n                    }\r\n                }\r\n            } else if (this.options.saveState && !this.options.disabled) {\r\n                state = this.storage.get(this.stateKey);\r\n\r\n                if (typeof state === 'undefined' || state === null) {\r\n                    this.storage.set(this.stateKey, this.options.active);\r\n                } else if (state === true) {\r\n                    this.options.active = true;\r\n                } else if (state === false) {\r\n                    this.options.active = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _createIcons: function () {\r\n            var icons = this.options.icons;\r\n\r\n            if (icons) {\r\n                $('<span>')\r\n                    .addClass(icons.header)\r\n                    .attr('data-role', 'icons')\r\n                    .prependTo(this.header);\r\n\r\n                if (this.options.active && !this.options.disabled) {\r\n                    this.header.children('[data-role=icons]')\r\n                        .removeClass(icons.header)\r\n                        .addClass(icons.activeHeader);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroyIcons: function () {\r\n            this.header\r\n                .children('[data-role=icons]')\r\n                .remove();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            var options = this.options;\r\n\r\n            this.element.removeAttr('data-collapsible');\r\n\r\n            this.trigger.removeAttr('tabIndex');\r\n\r\n            if (options.openedState) {\r\n                this.element.removeClass(options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).removeClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (options.closedState) {\r\n                this.element.removeClass(options.closedState);\r\n            }\r\n\r\n            if (options.disabledState) {\r\n                this.element.removeClass(options.disabledState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this._destroyIcons();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _processPanels: function () {\r\n            var headers, triggers;\r\n\r\n            this.element.attr('data-collapsible', 'true');\r\n\r\n            if (typeof this.options.header === 'object') {\r\n                this.header = this.options.header;\r\n            } else {\r\n                headers = this.element.find(this.options.header);\r\n\r\n                if (headers.length > 0) {\r\n                    this.header = headers.eq(0);\r\n                } else {\r\n                    this.header = this.element;\r\n                }\r\n            }\r\n\r\n            if (typeof this.options.content === 'object') {\r\n                this.content = this.options.content;\r\n            } else {\r\n                this.content = this.header.next(this.options.content).eq(0);\r\n            }\r\n\r\n            // ARIA (init aria attributes)\r\n            if (this.header.attr('id')) {\r\n                this.content.attr('aria-labelledby', this.header.attr('id'));\r\n            }\r\n\r\n            if (this.content.attr('id')) {\r\n                this.header.attr('aria-controls', this.content.attr('id'));\r\n            }\r\n\r\n            this.header\r\n                .attr({\r\n                    'role': 'tab',\r\n                    'aria-selected': this.options.active,\r\n                    'aria-expanded': this.options.active\r\n                });\r\n\r\n            // For collapsible widget only (not tabs or accordion)\r\n            if (this.header.parent().attr('role') !== 'presentation') {\r\n                this.header\r\n                    .parent()\r\n                    .attr('role', 'tablist');\r\n            }\r\n\r\n            this.content.attr({\r\n                'role': 'tabpanel',\r\n                'aria-hidden': !this.options.active\r\n            });\r\n\r\n            if (typeof this.options.trigger === 'object') {\r\n                this.trigger = this.options.trigger;\r\n            } else {\r\n                triggers = this.header.find(this.options.trigger);\r\n\r\n                if (triggers.length > 0) {\r\n                    this.trigger = triggers.eq(0);\r\n                } else {\r\n                    this.trigger = this.header;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var keyCode;\r\n\r\n            if (event.altKey || event.ctrlKey) {\r\n                return;\r\n            }\r\n\r\n            keyCode = $.ui.keyCode;\r\n\r\n            switch (event.keyCode) {\r\n                case keyCode.SPACE:\r\n                case keyCode.ENTER:\r\n                    this._eventHandler(event);\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _bind: function (event) {\r\n            var self = this;\r\n\r\n            this.events = {\r\n                keydown: '_keydown'\r\n            };\r\n\r\n            if (event) {\r\n                $.each(event.split(' '), function (index, eventName) {\r\n                    self.events[eventName] = '_eventHandler';\r\n                });\r\n            }\r\n            this._off(this.trigger);\r\n\r\n            if (!this.options.disabled) {\r\n                this._on(this.trigger, this.events);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable.\r\n         */\r\n        disable: function () {\r\n            this.options.disabled = true;\r\n            this._off(this.trigger);\r\n            this.forceDeactivate();\r\n\r\n            if (this.options.disabledState) {\r\n                this.element.addClass(this.options.disabledState);\r\n            }\r\n            this.trigger.attr('tabIndex', -1);\r\n        },\r\n\r\n        /**\r\n         * Enable.\r\n         */\r\n        enable: function () {\r\n            this.options.disabled = false;\r\n            this._on(this.trigger, this.events);\r\n            this.forceActivate();\r\n\r\n            if (this.options.disabledState) {\r\n                this.element.removeClass(this.options.disabledState);\r\n            }\r\n            this.trigger.attr('tabIndex', 0);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _eventHandler: function (event) {\r\n\r\n            if (this.options.active && this.options.collapsible) {\r\n                this.deactivate();\r\n            } else {\r\n                this.activate();\r\n\r\n            }\r\n            event.preventDefault();\r\n\r\n        },\r\n\r\n        /**\r\n         * @param {*} prop\r\n         * @private\r\n         */\r\n        _animate: function (prop) {\r\n            var duration,\r\n                easing,\r\n                animate = this.options.animate;\r\n\r\n            if (typeof animate === 'number') {\r\n                duration = animate;\r\n            }\r\n\r\n            if (typeof animate === 'string') {\r\n                animate = $.parseJSON(animate);\r\n            }\r\n            duration = duration || animate.duration;\r\n            easing = animate.easing;\r\n            this.content.animate(prop, duration, easing);\r\n        },\r\n\r\n        /**\r\n         * Deactivate.\r\n         */\r\n        deactivate: function () {\r\n            if (this.options.animate) {\r\n                this._animate(hideProps);\r\n            } else {\r\n                this.content.hide();\r\n            }\r\n            this._close();\r\n        },\r\n\r\n        /**\r\n         * Force deactivate.\r\n         */\r\n        forceDeactivate: function () {\r\n            this.content.hide();\r\n            this._close();\r\n\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _close: function () {\r\n            this.options.active = false;\r\n\r\n            if (this.options.saveState) {\r\n                this.storage.set(this.stateKey, false);\r\n            }\r\n\r\n            if (this.options.openedState) {\r\n                this.element.removeClass(this.options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).removeClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (this.options.closedState) {\r\n                this.element.addClass(this.options.closedState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this.header.children('[data-role=icons]')\r\n                    .removeClass(this.options.icons.activeHeader)\r\n                    .addClass(this.options.icons.header);\r\n            }\r\n\r\n            // ARIA (updates aria attributes)\r\n            this.header.attr({\r\n                'aria-selected': 'false',\r\n                'aria-expanded': 'false'\r\n            });\r\n            this.content.attr({\r\n                'aria-hidden': 'true'\r\n            });\r\n\r\n            this.element.trigger('dimensionsChanged', {\r\n                opened: false\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Activate.\r\n         *\r\n         * @return void;\r\n         */\r\n        activate: function () {\r\n            if (this.options.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.options.animate) {\r\n                this._animate(showProps);\r\n            } else {\r\n                this.content.show();\r\n            }\r\n            this._open();\r\n        },\r\n\r\n        /**\r\n         * Force activate.\r\n         */\r\n        forceActivate: function () {\r\n            if (!this.options.disabled) {\r\n                this.content.show();\r\n                this._open();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _open: function () {\r\n            this.element.trigger('beforeOpen');\r\n            this.options.active = true;\r\n\r\n            if (this.options.ajaxContent) {\r\n                this._loadContent();\r\n            }\r\n\r\n            if (this.options.saveState) {\r\n                this.storage.set(this.stateKey, true);\r\n            }\r\n\r\n            if (this.options.openedState) {\r\n                this.element.addClass(this.options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).addClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (this.options.closedState) {\r\n                this.element.removeClass(this.options.closedState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this.header.children('[data-role=icons]')\r\n                    .removeClass(this.options.icons.header)\r\n                    .addClass(this.options.icons.activeHeader);\r\n            }\r\n\r\n            // ARIA (updates aria attributes)\r\n            this.header.attr({\r\n                'aria-selected': 'true',\r\n                'aria-expanded': 'true'\r\n            });\r\n            this.content.attr({\r\n                'aria-hidden': 'false'\r\n            });\r\n\r\n            this.element.trigger('dimensionsChanged', {\r\n                opened: true\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _loadContent: function () {\r\n            var url = this.element.find(this.options.ajaxUrlElement).attr('href'),\r\n                that = this;\r\n\r\n            if (url) {\r\n                that.xhr = $.get({\r\n                    url: url,\r\n                    dataType: 'html'\r\n                }, function () {\r\n                });\r\n            }\r\n\r\n            if (that.xhr && that.xhr.statusText !== 'canceled') {\r\n                if (that.options.loadingClass) {\r\n                    that.element.addClass(that.options.loadingClass);\r\n                }\r\n                that.content.attr('aria-busy', 'true');\r\n                that.xhr.done(function (response) {\r\n                    setTimeout(function () {\r\n                        that.content.html(response);\r\n                    }, 1);\r\n                });\r\n                that.xhr.always(function (jqXHR, status) {\r\n                    setTimeout(function () {\r\n                        if (status === 'abort') {\r\n                            that.content.stop(false, true);\r\n                        }\r\n\r\n                        if (that.options.loadingClass) {\r\n                            that.element.removeClass(that.options.loadingClass);\r\n                        }\r\n                        that.content.removeAttr('aria-busy');\r\n\r\n                        if (jqXHR === that.xhr) {\r\n                            delete that.xhr;\r\n                        }\r\n                    }, 1);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _scrollToTopIfNotVisible: function () {\r\n            if (this._isElementOutOfViewport()) {\r\n                this.header[0].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _isElementOutOfViewport: function () {\r\n            var headerRect = this.header[0].getBoundingClientRect(),\r\n                contentRect = this.content.get().length ? this.content[0].getBoundingClientRect() : false,\r\n                headerOut,\r\n                contentOut;\r\n\r\n            headerOut = headerRect.bottom - headerRect.height < 0 ||\r\n                headerRect.right - headerRect.width < 0 ||\r\n                headerRect.left + headerRect.width > window.innerWidth ||\r\n                headerRect.top + headerRect.height > window.innerHeight;\r\n\r\n            contentOut = contentRect ? contentRect.bottom - contentRect.height < 0 ||\r\n                contentRect.right - contentRect.width < 0 ||\r\n                contentRect.left + contentRect.width > window.innerWidth ||\r\n                contentRect.top + contentRect.height > window.innerHeight : false;\r\n\r\n            return headerOut ? headerOut : contentOut;\r\n        }\r\n    });\r\n\r\n    return $.mage.collapsible;\r\n});\r\n","mage/deletable-item.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * This widget is used to tag a DOM element as deletable. By default, it will use the click event on the item with a\r\n     * data role of delete to trigger the deletion.\r\n     */\r\n    $.widget('mage.deletableItem', {\r\n        options: {\r\n            deleteEvent: 'click',\r\n            deleteSelector: '[data-role=\"delete\"]',\r\n            hiddenClass: 'no-display'\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            // since the first handler is dynamic, generate the object using array notation\r\n            handlers[this.options.deleteEvent + ' ' + this.options.deleteSelector] = '_onDeleteClicked';\r\n            handlers.hideDelete = '_onHideDelete';\r\n            handlers.showDelete = '_onShowDelete';\r\n\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method is to initialize the control\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._onHideDelete(); // by default, hide the control\r\n        },\r\n\r\n        /**\r\n         * This method removes the entity from the DOM.\r\n         * @private\r\n         */\r\n        _onDeleteClicked: function (e) {\r\n            e.stopPropagation();\r\n            this.element.trigger('deleteItem');\r\n        },\r\n\r\n        /**\r\n         * This method hides the delete capability of this item (i.e. making it not deletable)\r\n         * @private\r\n         */\r\n        _onHideDelete: function () {\r\n            this.element.find(this.options.deleteSelector).addClass(this.options.hiddenClass);\r\n        },\r\n\r\n        /**\r\n         * This method shows the delete capability of this item (i.e. making it deletable)\r\n         * @private\r\n         */\r\n        _onShowDelete: function () {\r\n            this.element.find(this.options.deleteSelector).removeClass(this.options.hiddenClass);\r\n        }\r\n    });\r\n\r\n    return $.mage.deletableItem;\r\n});\r\n","mage/dropdowns.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} options\r\n     */\r\n    $.fn.dropdown = function (options) {\r\n        var defaults = {\r\n                parent: null,\r\n                autoclose: true,\r\n                btnArrow: '.arrow',\r\n                menu: '[data-target=\"dropdown\"]',\r\n                activeClass: 'active'\r\n            },\r\n            actionElem = $(this),\r\n            self = this;\r\n\r\n        options = $.extend(defaults, options);\r\n        actionElem = $(this);\r\n        self = this;\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         */\r\n        this.openDropdown = function (elem) {\r\n            elem\r\n                .addClass(options.activeClass)\r\n                .attr('aria-expanded', true)\r\n                .parent()\r\n                    .addClass(options.activeClass);\r\n\r\n            elem.parent()\r\n                .find(options.menu)\r\n                .attr('aria-hidden', false);\r\n\r\n            $(options.btnArrow, elem).text('-');\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         */\r\n        this.closeDropdown = function (elem) {\r\n            elem.removeClass(options.activeClass)\r\n                .attr('aria-expanded', false)\r\n                .parent()\r\n                    .removeClass(options.activeClass);\r\n\r\n            elem.parent()\r\n                .find(options.menu)\r\n                .attr('aria-hidden', true);\r\n\r\n            $(options.btnArrow, elem).text('+');\r\n        };\r\n\r\n        /**\r\n         * Reset all dropdowns.\r\n         *\r\n         * @param {Object} param\r\n         */\r\n        this.reset = function (param) {\r\n            var params = param || {},\r\n                dropdowns = params.elems || actionElem;\r\n\r\n            dropdowns.each(function (index, elem) {\r\n                self.closeDropdown($(elem));\r\n            });\r\n        };\r\n\r\n        /* document Event bindings */\r\n        if (options.autoclose === true) {\r\n            $(document).on('click.hideDropdown', this.reset);\r\n            $(document).on('keyup.hideDropdown', function (e) {\r\n                var ESC_CODE = '27';\r\n\r\n                if (e.keyCode == ESC_CODE) { //eslint-disable-line eqeqeq\r\n                    self.reset();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (options.events) {\r\n            $.each(options.events, function (index, event) {\r\n                $(document).on(event.name, event.selector, event.action);\r\n            });\r\n        }\r\n\r\n        return this.each(function () {\r\n            var elem = $(this),\r\n                parent = $(options.parent).length > 0 ? $(options.parent) : elem.parent(),\r\n                menu = $(options.menu, parent) || $('.dropdown-menu', parent);\r\n\r\n            // ARIA (adding aria attributes)\r\n            if (menu.length) {\r\n                elem.attr('aria-haspopup', true);\r\n            }\r\n\r\n            if (!elem.hasClass(options.activeClass)) {\r\n                elem.attr('aria-expanded', false);\r\n                menu.attr('aria-hidden', true);\r\n            } else {\r\n                elem.attr('aria-expanded', true);\r\n                menu.attr('aria-hidden', false);\r\n            }\r\n\r\n            if (!elem.is('a, button')) {\r\n                elem.attr('role', 'button');\r\n                elem.attr('tabindex', 0);\r\n            }\r\n\r\n            if (elem.attr('data-trigger-keypress-button')) {\r\n                elem.on('keypress', function (e) {\r\n                    var keyCode = e.keyCode || e.which,\r\n                        ENTER_CODE = 13;\r\n\r\n                    if (keyCode === ENTER_CODE) {\r\n                        e.preventDefault();\r\n                        elem.trigger('click.toggleDropdown');\r\n                    }\r\n                });\r\n            }\r\n\r\n            elem.on('click.toggleDropdown', function () {\r\n                var el = actionElem;\r\n\r\n                if (options.autoclose === true) {\r\n                    actionElem = $();\r\n                    $(document).trigger('click.hideDropdown');\r\n                    actionElem = el;\r\n                }\r\n\r\n                self[el.hasClass(options.activeClass) ? 'closeDropdown' : 'openDropdown'](elem);\r\n\r\n                return false;\r\n            });\r\n        });\r\n    };\r\n\r\n    return function (data, el) {\r\n        $(el).dropdown(data);\r\n    };\r\n});\r\n","mage/template.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided string is a valid DOM selector.\r\n     *\r\n     * @param {String} selector - Selector to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isSelector(selector) {\r\n        try {\r\n            document.querySelector(selector);\r\n\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unescapes characters used in underscore templates.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function unescape(str) {\r\n        return str.replace(/&lt;%|%3C%/g, '<%').replace(/%&gt;|%%3E/g, '%>');\r\n    }\r\n\r\n    /**\r\n     * If 'tmpl' is a valid selector, returns target node's innerHTML if found.\r\n     * Else, returns empty string and emits console warning.\r\n     * If 'tmpl' is not a selector, returns 'tmpl' as is.\r\n     *\r\n     * @param {String} tmpl\r\n     * @returns {String}\r\n     */\r\n    function getTmplString(tmpl) {\r\n        if (isSelector(tmpl)) {\r\n            tmpl = document.querySelector(tmpl);\r\n\r\n            if (tmpl) {\r\n                tmpl = tmpl.innerHTML.trim();\r\n            } else {\r\n                console.warn('No template was found by selector: ' + tmpl);\r\n\r\n                tmpl = '';\r\n            }\r\n        }\r\n\r\n        return unescape(tmpl);\r\n    }\r\n\r\n    /**\r\n     * Compiles or renders template provided either\r\n     * by selector or by the template string.\r\n     *\r\n     * @param {String} tmpl - Template string or selector.\r\n     * @param {(Object|Array|Function)} [data] - Data object with which to render template.\r\n     * @returns {String|Function}\r\n     */\r\n    return function (tmpl, data) {\r\n        var render;\r\n\r\n        tmpl   = getTmplString(tmpl);\r\n        render = _.template(tmpl);\r\n\r\n        return !_.isUndefined(data) ?\r\n            render(data) :\r\n            render;\r\n    };\r\n});\r\n","mage/multiselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'text!mage/multiselect.html',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/editableMultiselect/js/jquery.multiselect'\r\n], function (_, $, searchTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.multiselect2', {\r\n        options: {\r\n            mselectContainer: 'section.mselect-list',\r\n            mselectItemsWrapperClass: 'mselect-items-wrapper',\r\n            mselectCheckedClass: 'mselect-checked',\r\n            containerClass: 'paginated',\r\n            searchInputClass: 'admin__action-multiselect-search',\r\n            selectedItemsCountClass: 'admin__action-multiselect-items-selected',\r\n            currentPage: 1,\r\n            lastAppendValue: 0,\r\n            updateDelay: 1000,\r\n            optionsLoaded: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            $.fn.multiselect.call(this.element, this.options);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _init: function () {\r\n            this.domElement = this.element.get(0);\r\n\r\n            this.$container = $(this.options.mselectContainer);\r\n            this.$wrapper = this.$container.find('.' + this.options.mselectItemsWrapperClass);\r\n            this.$item = this.$wrapper.find('div').first();\r\n            this.selectedValues = [];\r\n            this.values = {};\r\n\r\n            this.$container.addClass(this.options.containerClass).prepend(searchTemplate);\r\n            this.$input = this.$container.find('.' + this.options.searchInputClass);\r\n            this.$selectedCounter = this.$container.find('.' + this.options.selectedItemsCountClass);\r\n            this.filter = '';\r\n\r\n            if (this.domElement.options.length) {\r\n                this._setLastAppendOption(this.domElement.options[this.domElement.options.length - 1].value);\r\n            }\r\n\r\n            this._initElement();\r\n            this._events();\r\n        },\r\n\r\n        /**\r\n         * Leave only saved/selected options in select element.\r\n         *\r\n         * @private\r\n         */\r\n        _initElement: function () {\r\n            this.element.empty();\r\n            _.each(this.options.selectedValues, function (value) {\r\n                this._createSelectedOption({\r\n                    value: value,\r\n                    label: value\r\n                });\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Attach required events.\r\n         *\r\n         * @private\r\n         */\r\n        _events: function () {\r\n            var onKeyUp = _.debounce(this.onKeyUp, this.options.updateDelay);\r\n\r\n            _.bindAll(this, 'onScroll', 'onCheck', 'onOptionsChange');\r\n\r\n            this.$wrapper.on('scroll', this.onScroll);\r\n            this.$wrapper.on('change.mselectCheck', '[type=checkbox]', this.onCheck);\r\n            this.$input.on('keyup', _.bind(onKeyUp, this));\r\n            this.element.on('change.hiddenSelect', this.onOptionsChange);\r\n        },\r\n\r\n        /**\r\n         * Behaves multiselect scroll.\r\n         */\r\n        onScroll: function () {\r\n            var height = this.$wrapper.height(),\r\n                scrollHeight = this.$wrapper.prop('scrollHeight'),\r\n                scrollTop = Math.ceil(this.$wrapper.prop('scrollTop'));\r\n\r\n            if (!this.options.optionsLoaded && scrollHeight - height <= scrollTop) {\r\n                this.loadOptions();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Behaves keyup event on input search\r\n         */\r\n        onKeyUp: function () {\r\n            if (this.getSearchCriteria() === this.filter) {\r\n                return false;\r\n            }\r\n\r\n            this.setFilter();\r\n            this.clearMultiselectOptions();\r\n            this.setCurrentPage(0);\r\n            this.loadOptions();\r\n        },\r\n\r\n        /**\r\n         * Callback for select change event\r\n         */\r\n        onOptionsChange: function () {\r\n            this.selectedValues = _.map(this.domElement.options, function (option) {\r\n                this.values[option.value] = true;\r\n\r\n                return option.value;\r\n            }, this);\r\n\r\n            this._updateSelectedCounter();\r\n        },\r\n\r\n        /**\r\n         * Overrides native check behaviour.\r\n         *\r\n         * @param {Event} event\r\n         */\r\n        onCheck: function (event) {\r\n            var checkbox = event.target,\r\n                option = {\r\n                    value: checkbox.value,\r\n                    label: $(checkbox).parent('label').text()\r\n                };\r\n\r\n            checkbox.checked ? this._createSelectedOption(option) : this._removeSelectedOption(option);\r\n            event.stopPropagation();\r\n        },\r\n\r\n        /**\r\n         * Show error message.\r\n         *\r\n         * @param {String} message\r\n         */\r\n        onError: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates current filter state.\r\n         */\r\n        setFilter: function () {\r\n            this.filter = this.getSearchCriteria() || '';\r\n        },\r\n\r\n        /**\r\n         * Reads search input value.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getSearchCriteria: function () {\r\n            return $.trim(this.$input.val());\r\n        },\r\n\r\n        /**\r\n         * Load options data.\r\n         */\r\n        loadOptions: function () {\r\n            var nextPage = this.getCurrentPage() + 1;\r\n\r\n            this.$wrapper.trigger('processStart');\r\n            this.$input.prop('disabled', true);\r\n\r\n            $.get(this.options.nextPageUrl, {\r\n                p: nextPage,\r\n                s: this.filter\r\n            })\r\n            .done(function (response) {\r\n                if (response.success) {\r\n                    this.appendOptions(response.result);\r\n                    this.setCurrentPage(nextPage);\r\n                } else {\r\n                    this.onError(response.errorMessage);\r\n                }\r\n            }.bind(this))\r\n            .always(function () {\r\n                this.$wrapper.trigger('processStop');\r\n                this.$input.prop('disabled', false);\r\n\r\n                if (this.filter) {\r\n                    this.$input.focus();\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Append loaded options\r\n         *\r\n         * @param {Array} options\r\n         */\r\n        appendOptions: function (options) {\r\n            var divOptions = [];\r\n\r\n            if (!options.length) {\r\n                return false;\r\n            }\r\n\r\n            if (this.isOptionsLoaded(options)) {\r\n                return;\r\n            }\r\n\r\n            options.forEach(function (option) {\r\n                if (!this.values[option.value]) {\r\n                    this.values[option.value] = true;\r\n                    option.selected = this._isOptionSelected(option);\r\n                    divOptions.push(this._createMultiSelectOption(option));\r\n                    this._setLastAppendOption(option.value);\r\n                }\r\n            }, this);\r\n\r\n            this.$wrapper.append(divOptions);\r\n        },\r\n\r\n        /**\r\n         * Clear multiselect options\r\n         */\r\n        clearMultiselectOptions: function () {\r\n            this._setLastAppendOption(0);\r\n            this.values = {};\r\n            this.$wrapper.empty();\r\n        },\r\n\r\n        /**\r\n         * Checks if all options are already loaded\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isOptionsLoaded: function (options) {\r\n            this.options.optionsLoaded = this.options.lastAppendValue === options[options.length - 1].value;\r\n\r\n            return this.options.optionsLoaded;\r\n        },\r\n\r\n        /**\r\n         * Setter for current page.\r\n         *\r\n         * @param {Number} page\r\n         */\r\n        setCurrentPage: function (page) {\r\n            this.options.currentPage = page;\r\n        },\r\n\r\n        /**\r\n         * Getter for current page.\r\n         *\r\n         * @return {Number}\r\n         */\r\n        getCurrentPage: function () {\r\n            return this.options.currentPage;\r\n        },\r\n\r\n        /**\r\n         * Creates new selected option for select element\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @private\r\n         */\r\n        _createSelectedOption: function (option) {\r\n            var selectOption = new Option(option.label, option.value, false, true);\r\n\r\n            this.element.append(selectOption);\r\n            this.selectedValues.push(option.value);\r\n            this._updateSelectedCounter();\r\n\r\n            return selectOption;\r\n        },\r\n\r\n        /**\r\n         * Remove passed option from select element\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @return {Object} option\r\n         * @private\r\n         */\r\n        _removeSelectedOption: function (option) {\r\n            var unselectedOption = _.findWhere(this.domElement.options, {\r\n                value: option.value\r\n            });\r\n\r\n            if (!_.isUndefined(unselectedOption)) {\r\n                this.domElement.remove(unselectedOption.index);\r\n                this.selectedValues.splice(_.indexOf(this.selectedValues, option.value), 1);\r\n                this._updateSelectedCounter();\r\n            }\r\n\r\n            return unselectedOption;\r\n        },\r\n\r\n        /**\r\n         * Creates new DIV option for multiselect widget\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @param {Boolean} option.selected - is option selected\r\n         * @private\r\n         */\r\n        _createMultiSelectOption: function (option) {\r\n            var item = this.$item.clone(),\r\n                checkbox = item.find('input'),\r\n                isSelected = !!option.selected;\r\n\r\n            checkbox.val(option.value)\r\n                .prop('checked', isSelected)\r\n                .toggleClass(this.options.mselectCheckedClass, isSelected);\r\n\r\n            item.find('label > span').text(option.label);\r\n\r\n            return item;\r\n        },\r\n\r\n        /**\r\n         * Checks if passed option should be selected\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @param {Boolean} option.selected - is option selected\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _isOptionSelected: function (option) {\r\n            return !!~this.selectedValues.indexOf(option.value);\r\n        },\r\n\r\n        /**\r\n         * Saves last added option value.\r\n         *\r\n         * @param {Number} value\r\n         * @private\r\n         */\r\n        _setLastAppendOption: function (value) {\r\n            this.options.lastAppendValue = value;\r\n        },\r\n\r\n        /**\r\n         * Updates counter of selected items.\r\n         *\r\n         * @private\r\n         */\r\n        _updateSelectedCounter: function () {\r\n            this.$selectedCounter.text(this.selectedValues.length);\r\n        }\r\n    });\r\n\r\n    return $.mage.multiselect2;\r\n});\r\n","mage/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/apply/main',\r\n    'Magento_Ui/js/lib/knockout/bootstrap'\r\n], function ($, mage) {\r\n    'use strict';\r\n\r\n    $.ajaxSetup({\r\n        cache: false\r\n    });\r\n\r\n    /**\r\n     * Init all components defined via data-mage-init attribute.\r\n     * Execute in a separate task to prevent main thread blocking.\r\n     */\r\n    setTimeout(mage.apply);\r\n});\r\n","mage/decorate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable strict */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate'\r\n], function ($) {\r\n    var methods = {\r\n        /**\r\n         * Decorate a list (e.g. a <ul> containing <li>) recursively if specified.\r\n         * @param {Boolean} isRecursive\r\n         */\r\n        list: function (isRecursive) {\r\n            return this.each(function () {\r\n                var list = $(this),\r\n                    items;\r\n\r\n                if (list.length > 0) {\r\n                    items = typeof isRecursive === 'undefined' || isRecursive ?\r\n                        list.find('li') :\r\n                        list.children();\r\n                    items.decorate('generic', ['odd', 'even', 'last']);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Annotate a set of DOM elements with decorator classes.\r\n         * @param {Array} decoratorParams\r\n         */\r\n        generic: function (decoratorParams) {\r\n            var elements = $(this),\r\n                allSupportedParams;\r\n\r\n            if (elements) {\r\n                allSupportedParams = {\r\n                    even: 'odd', // Flip jQuery odd/even so that index 0 is odd.\r\n                    odd: 'even',\r\n                    last: 'last',\r\n                    first: 'first'\r\n                };\r\n\r\n                decoratorParams = decoratorParams || allSupportedParams;\r\n\r\n                $.each(decoratorParams, function (index, param) {\r\n                    if (param === 'even' || param === 'odd') {\r\n                        elements.filter(':' + param).removeClass('odd even').addClass(allSupportedParams[param]);\r\n                    } else {\r\n                        elements.filter(':' + param).addClass(allSupportedParams[param]);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Decorate DOM elements in an HTML table with specified classes.\r\n         * @param {Object} instanceOptions\r\n         */\r\n        table: function (instanceOptions) {\r\n            return this.each(function () {\r\n                var table = $(this),\r\n                    options;\r\n\r\n                if (table.length > 0) {\r\n                    options = {\r\n                        'tbody': false,\r\n                        'tbody tr': ['odd', 'even', 'first', 'last'],\r\n                        'thead tr': ['first', 'last'],\r\n                        'tfoot tr': ['first', 'last'],\r\n                        'tr td': ['last']\r\n                    };\r\n\r\n                    $.extend(options, instanceOptions || {});\r\n\r\n                    $.each(options, function (key, value) {\r\n                        if (options[key]) {\r\n                            if (key === 'tr td') {\r\n                                $.each(table.find('tr'), function () {\r\n                                    $(this).find('td').decorate('generic', options['tr td']);\r\n                                });\r\n                            } else {\r\n                                table.find(key).decorate('generic', value);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Annotate data list elements with CSS classes.\r\n         */\r\n        dataList: function () {\r\n            return this.each(function () {\r\n                var list = $(this);\r\n\r\n                if (list) {\r\n                    list.find('dt').decorate('generic', ['odd', 'even', 'last']);\r\n                    list.find('dd').decorate('generic', ['odd', 'even', 'last']);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} method\r\n     * @return {*}\r\n     */\r\n    $.fn.decorate = function (method) {\r\n        var message;\r\n\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n\r\n        message = $.mage.__('Method %s does not exist on jQuery.decorate');\r\n        $.error(message.replace('%s', method));\r\n    };\r\n});\r\n","mage/terms.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} args\r\n     */\r\n    $.fn.terms = function (args) {\r\n\r\n        // default\r\n        var defaults = {\r\n                start: 0,\r\n                wrapper: '',\r\n                showAnchor: '',\r\n                effects: 'slide'\r\n            },\r\n            options = $.extend(defaults, args);\r\n\r\n        this.each(function () {\r\n            var obj = $(this),\r\n                wrapper = options.wrapper !== '' ? '> ' + options.wrapper : '',\r\n                switches = $(wrapper + '> [data-section=\"title\"] > [data-toggle=\"switch\"]', obj),\r\n                terms = $(wrapper + '> [data-section=\"content\"]', obj),\r\n                t = switches.length,\r\n                marginTop = $(switches[0]).closest('[data-section=\"title\"]').css('position') == 'absolute' ? 0 : null, //eslint-disable-line\r\n                title,\r\n                current,\r\n\r\n                /**\r\n                 * @param {*} item\r\n                 */\r\n                showItem = function (item) {\r\n                    if (item != current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled')) { //eslint-disable-line\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        $(switches[item]).closest('[data-section=\"title\"]').addClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches[current]).parent().parent().addClass('active');\r\n                        }\r\n                        $(terms[item]).addClass('active');\r\n                        current = item;\r\n                    } else if (\r\n                        // Check if this is accordion width as criteria for now\r\n                        (obj.attr('data-sections') == 'accordion' || $(switches[item]).closest('[data-section=\"title\"]').css('width') == obj.css('width')) && //eslint-disable-line\r\n                        item == current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled') //eslint-disable-line\r\n                    ) {\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        current = -1;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Init.\r\n                 */\r\n                init = function () {\r\n                    var linksList, i, classes, dataSection, itemHref, itemClass, fromUrl;\r\n\r\n                    if (t > 0) {\r\n                        if ($(switches[0]).closest('[data-section=\"title\"]').css('display') == 'table-cell') { //eslint-disable-line\r\n                            obj.addClass('adjusted');\r\n\r\n                            if (obj[0].tagName == 'DL') { //eslint-disable-line eqeqeq, max-depth\r\n                                linksList = $('<dd>');\r\n                            } else {\r\n                                linksList = $('<div>');\r\n                            }\r\n                            linksList.addClass('sections-nav');\r\n                            obj.prepend(linksList);\r\n\r\n                            for (i = 0; i < t; i++) { //eslint-disable-line max-depth\r\n                                title = $(switches[i]).html();\r\n                                classes = $(switches[i]).closest('[data-section=\"title\"]').attr('class');\r\n                                dataSection = $(switches[i]).closest('[data-section=\"title\"]').attr('data-section');\r\n                                itemHref = $(switches[i]).attr('href');\r\n                                itemClass = $(switches[i]).attr('class');\r\n                                $(switches[i]).parent('[data-section=\"title\"]').hide();\r\n                                switches[i] = $('<a/>', {\r\n                                    href: itemHref,\r\n                                    'class': itemClass,\r\n                                    html: title\r\n                                }).appendTo(linksList);\r\n                                $(switches[i]).wrap(\r\n                                    '<strong class=\"' + classes + '\" data-section=\"' + dataSection + '\" />'\r\n                                );\r\n                            }\r\n                        }\r\n                        $(switches).each(function (ind, el) {\r\n                            $(el).click(function (event) {\r\n                                event.preventDefault();\r\n                                showItem(ind);\r\n                            });\r\n\r\n                            if (marginTop !== null) {\r\n                                $(el).closest('[data-section=\"title\"]').css({\r\n                                    'top': marginTop + 'px'\r\n                                });\r\n                                marginTop += $(el).closest('[data-section=\"title\"]').outerHeight(true);\r\n                                obj.css({\r\n                                    'min-height': marginTop + 'px'\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        fromUrl = false;\r\n\r\n                        if (window.location.hash.length > 0) {\r\n                            $(terms).each(function (ind, el) {\r\n                                if ('#info-' + $(el).attr('id') == window.location.hash) { //eslint-disable-line eqeqeq\r\n                                    showItem(ind);\r\n                                    $('html, body').animate({\r\n                                        scrollTop: $(switches[ind]).offset().top\r\n                                    }, 700);\r\n                                    fromUrl = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (fromUrl === false) {\r\n                            if (options.start % 1 === 0) { //eslint-disable-line max-depth\r\n                                current = options.start + 1;\r\n                                showItem(options.start);\r\n                            } else {\r\n                                $(terms).each(function (ind, el) {\r\n                                    if ($(el).attr('id') == options.start) { //eslint-disable-line eqeqeq\r\n                                        current = ind + 1;\r\n                                        showItem(ind);\r\n                                        $('html, body').animate({\r\n                                            scrollTop: $(switches[ind]).offset().top\r\n                                        }, 700);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n            init();\r\n        });\r\n    };\r\n\r\n    return function (data, el) {\r\n        $(el).terms(data);\r\n    };\r\n});\r\n","mage/dialog.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/dialog'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Dialog Widget - this widget is a wrapper for the jQuery UI Dialog\r\n     */\r\n    $.widget('mage.dialog', $.ui.dialog, {});\r\n\r\n    return $.mage.dialog;\r\n});\r\n","mage/redirect-url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.redirectUrl', {\r\n        options: {\r\n            event: 'click',\r\n            url: undefined\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            handlers[this.options.event] = '_onEvent';\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method set the url for the redirect.\r\n         * @private\r\n         */\r\n        _onEvent: function () {\r\n            if (this.options.url) {\r\n                location.href = this.options.url;\r\n            } else {\r\n                location.href = this.element.val();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.redirectUrl;\r\n});\r\n","mage/toggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.toggleAdvanced', {\r\n        options: {\r\n            baseToggleClass: 'active' // Class used to be toggled on clicked element\r\n        },\r\n\r\n        /**\r\n         * Toggle creation\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.beforeCreate();\r\n            this._bindCore();\r\n            this.afterCreate();\r\n        },\r\n\r\n        /**\r\n         *  Core bound events & setup\r\n         * @protected\r\n         */\r\n        _bindCore: function () {\r\n            var widget = this;\r\n\r\n            this.element.on('click', $.proxy(function (e) {\r\n                widget._onClick();\r\n                e.preventDefault();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         */\r\n        _onClick: function () {\r\n            this._prepareOptions();\r\n            this._toggleSelectors();\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.baseToggleClass = this.element.data('base-toggle-class') ?\r\n                this.element.data('base-toggle-class') : this.options.baseToggleClass;\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * Toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         */\r\n        _toggleSelectors: function () {\r\n            this.element.toggleClass(this.options.baseToggleClass);\r\n        },\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality before create\r\n         * @public\r\n         */\r\n        beforeCreate: function () {},\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality after create\r\n         * @public\r\n         */\r\n        afterCreate: function () {}\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding selectors support for other DOM elements we wish to toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            selectorsToggleClass: 'hidden',    // Class used to be toggled on selectors DOM elements\r\n            toggleContainers: null\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * If data-toggle-selectors attribute is present - toggle will be done on these selectors\r\n         * Otherwise we toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _toggleSelectors: function () {\r\n            this._super();\r\n\r\n            if (this.options.toggleContainers) {\r\n                $(this.options.toggleContainers).toggleClass(this.options.selectorsToggleClass);\r\n            } else {\r\n                this.element.toggleClass(this.options.baseToggleClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.selectorsToggleClass = this.element.data('selectors-toggle-class') ?\r\n                this.element.data('selectors-toggle-class') : this.options.selectorsToggleClass;\r\n            this.options.toggleContainers = this.element.data('toggle-selectors') ?\r\n                this.element.data('toggle-selectors') : this.options.toggleContainers;\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding label toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            newLabel: null,             // Text of the new label to be used on toggle\r\n            curLabel: null,             // Text of the old label to be used on toggle\r\n            currentLabelElement: null   // Current label container\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _onClick: function () {\r\n            this._super();\r\n            this._toggleLabel();\r\n        },\r\n\r\n        /**\r\n         * Method responsible for replacing clicked element labels\r\n         * @protected\r\n         */\r\n        _toggleLabel: function () {\r\n            var cachedLabel, currentLabelSelector;\r\n\r\n            if (this.options.newLabel) {\r\n                cachedLabel = this.options.newLabel;\r\n                currentLabelSelector = this.options.currentLabelElement ?\r\n                        $(this.options.currentLabelElement) : this.element;\r\n\r\n                this.element.data('toggle-label', this.options.curLabel);\r\n                currentLabelSelector.html(this.options.newLabel);\r\n\r\n                this.options.curLabel = this.options.newLabel;\r\n                this.options.newLabel = cachedLabel;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.newLabel = this.element.data('toggle-label') ?\r\n                this.element.data('toggle-label') : this.options.newLabel;\r\n\r\n            this.options.currentLabelElement = this.element.data('current-label-el') ?\r\n                this.element.data('current-label-el') : this.options.currentLabelElement;\r\n\r\n            if (!this.options.currentLabelElement) {\r\n                this.options.currentLabelElement = this.element;\r\n            }\r\n\r\n            this.options.curLabel = $(this.options.currentLabelElement).html();\r\n\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    return $.mage.toggleAdvanced;\r\n});\r\n","mage/common.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'domReady!'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /* Form with auto submit feature */\r\n    $('form[data-auto-submit=\"true\"]').submit();\r\n\r\n    //Add form keys.\r\n    $(document).on(\r\n        'submit',\r\n        'form',\r\n        function (e) {\r\n            var formKeyElement,\r\n                existingFormKeyElement,\r\n                isKeyPresentInForm,\r\n                isActionExternal,\r\n                baseUrl = window.BASE_URL,\r\n                form = $(e.target),\r\n                formKey = $('input[name=\"form_key\"]').val(),\r\n                formMethod = form.prop('method'),\r\n                formAction = form.prop('action');\r\n\r\n            isActionExternal = formAction.indexOf(baseUrl) !== 0;\r\n\r\n            existingFormKeyElement = form.find('input[name=\"form_key\"]');\r\n            isKeyPresentInForm = existingFormKeyElement.length;\r\n\r\n            /* Verifies that existing auto-added form key is a direct form child element,\r\n               protection from a case when one form contains another form. */\r\n            if (isKeyPresentInForm && existingFormKeyElement.attr('auto-added-form-key') === '1') {\r\n                isKeyPresentInForm = form.find('> input[name=\"form_key\"]').length;\r\n            }\r\n\r\n            if (formKey && !isKeyPresentInForm && !isActionExternal && formMethod !== 'get') {\r\n                formKeyElement = document.createElement('input');\r\n                formKeyElement.setAttribute('type', 'hidden');\r\n                formKeyElement.setAttribute('name', 'form_key');\r\n                formKeyElement.setAttribute('value', formKey);\r\n                formKeyElement.setAttribute('auto-added-form-key', '1');\r\n                form.get(0).appendChild(formKeyElement);\r\n            }\r\n        }\r\n    );\r\n});\r\n","mage/gallery/gallery.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'fotorama/fotorama',\r\n    'underscore',\r\n    'matchMedia',\r\n    'mage/template',\r\n    'text!mage/gallery/gallery.html',\r\n    'uiClass',\r\n    'mage/translate'\r\n], function ($, fotorama, _, mediaCheck, template, galleryTpl, Class, $t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Retrieves index if the main item.\r\n     * @param {Array.<Object>} data - Set of gallery items.\r\n     */\r\n    var getMainImageIndex = function (data) {\r\n            var mainIndex;\r\n\r\n            if (_.every(data, function (item) {\r\n                    return _.isObject(item);\r\n                })\r\n            ) {\r\n                mainIndex = _.findIndex(data, function (item) {\r\n                    return item.isMain;\r\n                });\r\n            }\r\n\r\n            return mainIndex > 0 ? mainIndex : 0;\r\n        },\r\n\r\n        /**\r\n         * Helper for parse translate property\r\n         *\r\n         * @param {Element} el - el that to parse\r\n         * @returns {Array} - array of properties.\r\n         */\r\n        getTranslate = function (el) {\r\n            var slideTransform = $(el).attr('style').split(';');\r\n\r\n            slideTransform = $.map(slideTransform, function (style) {\r\n                style = style.trim();\r\n\r\n                if (style.startsWith('transform: translate3d')) {\r\n                    return style.match(/transform: translate3d\\((.+)px,(.+)px,(.+)px\\)/);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return slideTransform.filter(Boolean);\r\n        },\r\n\r\n        /**\r\n         * @param {*} str\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _toNumber = function (str) {\r\n            var type = typeof str;\r\n\r\n            if (type === 'string') {\r\n                return parseInt(str); //eslint-disable-line radix\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            settings: {},\r\n            config: {},\r\n            startConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Checks if device has touch interface.\r\n         * @return {Boolean} The result of searching touch events on device.\r\n         */\r\n        isTouchEnabled: (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n\r\n        /**\r\n         * Initializes gallery.\r\n         * @param {Object} config - Gallery configuration.\r\n         * @param {String} element - String selector of gallery DOM element.\r\n         */\r\n        initialize: function (config, element) {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            _.bindAll(this,\r\n                '_focusSwitcher'\r\n            );\r\n\r\n            /*turn off arrows for touch devices*/\r\n            if (this.isTouchEnabled) {\r\n                config.options.arrows = false;\r\n\r\n                if (config.fullscreen) {\r\n                    config.fullscreen.arrows = false;\r\n                }\r\n            }\r\n\r\n            config.options.width = _toNumber(config.options.width);\r\n            config.options.height = _toNumber(config.options.height);\r\n            config.options.thumbwidth = _toNumber(config.options.thumbwidth);\r\n            config.options.thumbheight = _toNumber(config.options.thumbheight);\r\n\r\n            config.options.swipe = true;\r\n            this.config = config;\r\n\r\n            this.settings = {\r\n                $element: $(element),\r\n                $pageWrapper: $('body>.page-wrapper'),\r\n                currentConfig: config,\r\n                defaultConfig: _.clone(config),\r\n                fullscreenConfig: _.clone(config.fullscreen),\r\n                breakpoints: config.breakpoints,\r\n                activeBreakpoint: {},\r\n                fotoramaApi: null,\r\n                isFullscreen: false,\r\n                api: null,\r\n                data: _.clone(config.data)\r\n            };\r\n            config.options.ratio = config.options.width / config.options.height;\r\n            config.options.height = null;\r\n\r\n            $.extend(true, this.startConfig, config);\r\n\r\n            this.initGallery();\r\n            this.initApi();\r\n            this.setupBreakpoints();\r\n            this.initFullscreenSettings();\r\n\r\n            this.settings.$element.on('click', '.fotorama__stage__frame', function () {\r\n                if (\r\n                    !$(this).parents('.fotorama__shadows--left, .fotorama__shadows--right').length &&\r\n                    !$(this).hasClass('fotorama-video-container')\r\n                ) {\r\n                    self.openFullScreen();\r\n                }\r\n            });\r\n\r\n            if (this.isTouchEnabled && this.settings.isFullscreen) {\r\n                this.settings.$element.on('tap', '.fotorama__stage__frame', function () {\r\n                    var translate = getTranslate($(this).parents('.fotorama__stage__shaft'));\r\n\r\n                    if (translate[1] === '0' && !$(this).hasClass('fotorama-video-container')) {\r\n                        self.openFullScreen();\r\n                        self.settings.$pageWrapper.hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open gallery fullscreen\r\n         */\r\n        openFullScreen: function () {\r\n            this.settings.api.fotorama.requestFullScreen();\r\n            this.settings.$fullscreenIcon.css({\r\n                opacity: 1,\r\n                visibility: 'visible',\r\n                display: 'block'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Gallery fullscreen settings.\r\n         */\r\n        initFullscreenSettings: function () {\r\n            var settings = this.settings,\r\n                self = this;\r\n\r\n            settings.$gallery = this.settings.$element.find('[data-gallery-role=\"gallery\"]');\r\n            settings.$fullscreenIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.focusableStart = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-start\"]');\r\n            settings.focusableEnd = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-end\"]');\r\n            settings.closeIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.fullscreenConfig.swipe = true;\r\n\r\n            settings.$gallery.on('fotorama:fullscreenenter', function () {\r\n                settings.closeIcon.show();\r\n                settings.focusableStart.attr('tabindex', '0');\r\n                settings.focusableEnd.attr('tabindex', '0');\r\n                settings.focusableStart.bind('focusin', self._focusSwitcher);\r\n                settings.focusableEnd.bind('focusin', self._focusSwitcher);\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = true;\r\n            });\r\n\r\n            settings.$gallery.on('fotorama:fullscreenexit', function () {\r\n                settings.closeIcon.hide();\r\n                settings.focusableStart.attr('tabindex', '-1');\r\n                settings.focusableEnd.attr('tabindex', '-1');\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.focusableStart.unbind('focusin', this._focusSwitcher);\r\n                settings.focusableEnd.unbind('focusin', this._focusSwitcher);\r\n                settings.closeIcon.hide();\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = false;\r\n                settings.$element.data('gallery').updateOptions({\r\n                    swipe: true\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Switcher focus.\r\n         */\r\n        _focusSwitcher: function (e) {\r\n            var target = $(e.target),\r\n                settings = this.settings;\r\n\r\n            if (target.is(settings.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(settings.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         */\r\n        _setFocus: function (position) {\r\n            var settings = this.settings,\r\n                focusableElements,\r\n                infelicity;\r\n\r\n            if (position === 'end') {\r\n                settings.$gallery.find(settings.closeIcon).focus();\r\n            } else if (position === 'start') {\r\n                infelicity = 3; //Constant for find last focusable element\r\n                focusableElements = settings.$gallery.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes gallery with configuration options.\r\n         */\r\n        initGallery: function () {\r\n            var breakpoints = {},\r\n                settings = this.settings,\r\n                config = this.config,\r\n                tpl = template(galleryTpl, {\r\n                    next: $t('Next'),\r\n                    previous: $t('Previous')\r\n                }),\r\n                mainImageIndex,\r\n                $element = settings.$element,\r\n                $fotoramaElement,\r\n                $fotoramaStage;\r\n\r\n            if (settings.breakpoints) {\r\n                _.each(_.values(settings.breakpoints), function (breakpoint) {\r\n                    var conditions;\r\n\r\n                    _.each(_.pairs(breakpoint.conditions), function (pair) {\r\n                        conditions = conditions ? conditions + ' and (' + pair[0] + ': ' + pair[1] + ')' :\r\n                        '(' + pair[0] + ': ' + pair[1] + ')';\r\n                    });\r\n                    breakpoints[conditions] = breakpoint.options;\r\n                });\r\n                settings.breakpoints = breakpoints;\r\n            }\r\n\r\n            _.extend(config, config.options,\r\n                {\r\n                    options: undefined,\r\n                    click: false,\r\n                    breakpoints: null\r\n                }\r\n            );\r\n            settings.currentConfig = config;\r\n\r\n            $element\r\n                .css('min-height', settings.$element.height())\r\n                .append(tpl);\r\n\r\n            $fotoramaElement = $element.find('[data-gallery-role=\"gallery\"]');\r\n\r\n            $fotoramaStage = $fotoramaElement.find('.fotorama__stage');\r\n            $fotoramaStage.css('position', 'absolute');\r\n\r\n            $fotoramaElement.fotorama(config);\r\n            $fotoramaElement.find('.fotorama__stage__frame.fotorama__active')\r\n                    .one('f:load', function () {\r\n                        // Remove placeholder when main gallery image loads.\r\n                        $element.find('.gallery-placeholder__image').remove();\r\n                        $element\r\n                            .removeClass('_block-content-loading')\r\n                            .css('min-height', '');\r\n\r\n                        $fotoramaStage.css('position', '');\r\n                    });\r\n            settings.$elementF = $fotoramaElement;\r\n            settings.fotoramaApi = $fotoramaElement.data('fotorama');\r\n\r\n            $.extend(true, config, this.startConfig);\r\n\r\n            mainImageIndex = getMainImageIndex(config.data);\r\n\r\n            if (mainImageIndex) {\r\n                this.settings.fotoramaApi.show({\r\n                    index: mainImageIndex,\r\n                    time: 0\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates breakpoints for gallery.\r\n         */\r\n        setupBreakpoints: function () {\r\n            var pairs,\r\n                settings = this.settings,\r\n                config = this.config,\r\n                startConfig = this.startConfig,\r\n                isTouchEnabled = this.isTouchEnabled;\r\n\r\n            if (_.isObject(settings.breakpoints)) {\r\n                pairs = _.pairs(settings.breakpoints);\r\n                _.each(pairs, function (pair) {\r\n                    mediaCheck({\r\n                        media: pair[0],\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint enties.\r\n                         */\r\n                        entry: function () {\r\n                            $.extend(true, config, _.clone(startConfig));\r\n\r\n                            settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                            if (settings.isFullscreen) {\r\n                                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                            }\r\n\r\n                            if (isTouchEnabled) {\r\n                                settings.breakpoints[pair[0]].options.arrows = false;\r\n\r\n                                if (settings.breakpoints[pair[0]].options.fullscreen) {\r\n                                    settings.breakpoints[pair[0]].options.fullscreen.arrows = false;\r\n                                }\r\n                            }\r\n\r\n                            settings.api.updateOptions(settings.breakpoints[pair[0]].options, true);\r\n                            $.extend(true, config, settings.breakpoints[pair[0]]);\r\n                            settings.activeBreakpoint = settings.breakpoints[pair[0]];\r\n                        },\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint exits.\r\n                         */\r\n                        exit: function () {\r\n                            $.extend(true, config, _.clone(startConfig));\r\n                            settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                            if (settings.isFullscreen) {\r\n                                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                            }\r\n                            settings.activeBreakpoint = {};\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates gallery's API.\r\n         */\r\n        initApi: function () {\r\n            var settings = this.settings,\r\n                config = this.config,\r\n                api = {\r\n\r\n                    /**\r\n                     * Contains fotorama's API methods.\r\n                     */\r\n                    fotorama: settings.fotoramaApi,\r\n\r\n                    /**\r\n                     * Displays the last image on preview.\r\n                     */\r\n                    last: function () {\r\n                        settings.fotoramaApi.show('>>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays the first image on preview.\r\n                     */\r\n                    first: function () {\r\n                        settings.fotoramaApi.show('<<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays previous element on preview.\r\n                     */\r\n                    prev: function () {\r\n                        settings.fotoramaApi.show('<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays next element on preview.\r\n                     */\r\n                    next: function () {\r\n                        settings.fotoramaApi.show('>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays image with appropriate count number on preview.\r\n                     * @param {Number} index - Number of image that should be displayed.\r\n                     */\r\n                    seek: function (index) {\r\n                        if (_.isNumber(index) && index !== 0) {\r\n\r\n                            if (index > 0) {\r\n                                index -= 1;\r\n                            }\r\n                            settings.fotoramaApi.show(index);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with new set of options.\r\n                     * @param {Object} configuration - Standart gallery configuration object.\r\n                     * @param {Boolean} isInternal - Is this function called via breakpoints.\r\n                     */\r\n                    updateOptions: function (configuration, isInternal) {\r\n\r\n                        var $selectable = $('a[href], area[href], input, select, ' +\r\n                                'textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\r\n                                .not('[tabindex=-1], [disabled], :hidden'),\r\n                            $focus = $(':focus'),\r\n                            index;\r\n\r\n                        if (_.isObject(configuration)) {\r\n\r\n                            //Saves index of focus\r\n                            $selectable.each(function (number) {\r\n                                if ($(this).is($focus)) {\r\n                                    index = number;\r\n                                }\r\n                            });\r\n\r\n                            if (this.isTouchEnabled) {\r\n                                configuration.arrows = false;\r\n                            }\r\n                            configuration.click = false;\r\n                            configuration.breakpoints = null;\r\n\r\n                            if (!isInternal) {\r\n                                !_.isEqual(settings.activeBreakpoint, {} && settings.brekpoints) ?\r\n                                    $.extend(true, settings.activeBreakpoint.options, configuration) :\r\n\r\n                                    settings.isFullscreen ?\r\n                                        $.extend(true, settings.fullscreenConfig, configuration) :\r\n                                        $.extend(true, settings.defaultConfig.options, configuration);\r\n\r\n                            }\r\n                            $.extend(true, settings.currentConfig.options, configuration);\r\n                            settings.fotoramaApi.setOptions(settings.currentConfig.options);\r\n\r\n                            if (_.isNumber(index)) {\r\n                                $selectable.eq(index).focus();\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with specific set of items.\r\n                     * @param {Array.<Object>} data - Set of gallery items to update.\r\n                     */\r\n                    updateData: function (data) {\r\n                        var mainImageIndex;\r\n\r\n                        if (_.isArray(data)) {\r\n                            settings.fotoramaApi.load(data);\r\n                            mainImageIndex = getMainImageIndex(data);\r\n\r\n                            if (settings.fotoramaApi.activeIndex !== mainImageIndex) {\r\n                                settings.fotoramaApi.show({\r\n                                    index: mainImageIndex,\r\n                                    time: 0\r\n                                });\r\n                            }\r\n\r\n                            $.extend(false, settings, {\r\n                                data: data,\r\n                                defaultConfig: data\r\n                            });\r\n                            $.extend(false, config, {\r\n                                data: data\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Returns current images list\r\n                     *\r\n                     * @returns {Array}\r\n                     */\r\n                    returnCurrentImages: function () {\r\n                        var images = [];\r\n\r\n                        _.each(this.fotorama.data, function (item) {\r\n                            images.push(_.omit(item, '$navThumbFrame', '$navDotFrame', '$stageFrame', 'labelledby'));\r\n                        });\r\n\r\n                        return images;\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery data partially by index\r\n                     * @param {Number} index - Index of image in data array to be updated.\r\n                     * @param {Object} item - Standart gallery image object.\r\n                     *\r\n                     */\r\n                    updateDataByIndex: function (index, item) {\r\n                        settings.fotoramaApi.spliceByIndex(index, item);\r\n                    }\r\n                };\r\n\r\n            settings.$element.data('gallery', api);\r\n            settings.api = settings.$element.data('gallery');\r\n            settings.$element.trigger('gallery:loaded');\r\n        }\r\n    });\r\n});\r\n","mage/requirejs/text.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* inspired by http://github.com/requirejs/text */\r\n/*global XMLHttpRequest, XDomainRequest */\r\n\r\ndefine(['module'], function (module) {\r\n    'use strict';\r\n\r\n    var xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        stripReg = /!strip$/i,\r\n        defaultConfig = module.config && module.config() || {};\r\n\r\n    /**\r\n     * Strips <?xml ...?> declarations so that external SVG and XML documents can be\r\n     * added to a document without worry.\r\n     * Also, if the string is an HTML document, only the part inside the body tag is returned.\r\n     *\r\n     * @param {String} external\r\n     * @returns {String}\r\n     */\r\n    function stripContent(external) {\r\n        var matches;\r\n\r\n        if (!external) {\r\n            return '';\r\n        }\r\n\r\n        matches = external.match(bodyRegExp);\r\n        external = matches ?\r\n            matches[1] :\r\n            external.replace(xmlRegExp, '');\r\n\r\n        return external;\r\n    }\r\n\r\n    /**\r\n     * Checks that url match current location\r\n     *\r\n     * @param {String} url\r\n     * @returns {Boolean}\r\n     */\r\n    function sameDomain(url) {\r\n        var uProtocol, uHostName, uPort,\r\n            xdRegExp = /^([\\w:]+)?\\/\\/([^\\/\\\\]+)/i,\r\n            location = window.location,\r\n            match = xdRegExp.exec(url);\r\n\r\n        if (!match) {\r\n            return true;\r\n        }\r\n        uProtocol = match[1];\r\n        uHostName = match[2];\r\n\r\n        uHostName = uHostName.split(':');\r\n        uPort = uHostName[1] || '';\r\n        uHostName = uHostName[0];\r\n\r\n        return (!uProtocol || uProtocol === location.protocol) &&\r\n            (!uHostName || uHostName.toLowerCase() === location.hostname.toLowerCase()) &&\r\n            (!uPort && !uHostName || uPort === location.port);\r\n    }\r\n\r\n    /**\r\n     * @returns {XMLHttpRequest|XDomainRequest|null}\r\n     */\r\n    function createRequest(url) {\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        if (!sameDomain(url) && typeof XDomainRequest !== 'undefined') {\r\n            xhr = new XDomainRequest();\r\n        }\r\n\r\n        return xhr;\r\n    }\r\n\r\n    /**\r\n     * XHR requester. Returns value to callback.\r\n     *\r\n     * @param {String} url\r\n     * @param {Function} callback\r\n     * @param {Function} fail\r\n     * @param {Object} headers\r\n     */\r\n    function getContent(url, callback, fail, headers) {\r\n        var xhr = createRequest(url),\r\n            header;\r\n\r\n        xhr.open('GET', url);\r\n\r\n        /*eslint-disable max-depth */\r\n        if ('setRequestHeader' in xhr && headers) {\r\n            for (header in headers) {\r\n                if (headers.hasOwnProperty(header)) {\r\n                    xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        xhr.onreadystatechange = function () {\r\n            var status, err;\r\n\r\n            //Do not explicitly handle errors, those should be\r\n            //visible via console output in the browser.\r\n            if (xhr.readyState === 4) {\r\n                status = xhr.status || 0;\r\n\r\n                if (status > 399 && status < 600) {\r\n                    //An http 4xx or 5xx error. Signal an error.\r\n                    err = new Error(url + ' HTTP status: ' + status);\r\n                    err.xhr = xhr;\r\n\r\n                    if (fail) {\r\n                        fail(err);\r\n                    }\r\n                } else {\r\n                    callback(xhr.responseText);\r\n\r\n                    if (defaultConfig.onXhrComplete) {\r\n                        defaultConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /*eslint-enable max-depth */\r\n\r\n        if (defaultConfig.onXhr) {\r\n            defaultConfig.onXhr(xhr, url);\r\n        }\r\n\r\n        xhr.send();\r\n    }\r\n\r\n    /**\r\n     * Main method used by RequireJs.\r\n     *\r\n     * @param {String} name - has format: some.module.filext!strip\r\n     * @param {Function} req\r\n     * @param {Function|undefined} onLoad\r\n     */\r\n    function loadContent(name, req, onLoad) {\r\n\r\n        var toStrip = stripReg.test(name),\r\n            url = req.toUrl(name.replace(stripReg, '')),\r\n            headers = defaultConfig.headers;\r\n\r\n        getContent(url, function (content) {\r\n                content = toStrip ? stripContent(content) : content;\r\n                onLoad(content);\r\n            }, onLoad.error, headers);\r\n    }\r\n\r\n    return {\r\n        load: loadContent,\r\n        get: getContent\r\n    };\r\n});\r\n","mage/requirejs/baseUrlResolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Sample configuration:\r\n *\r\n require.config({\r\n        \"config\": {\r\n            \"baseUrlInterceptor\": {\r\n                \"Magento_Ui/js/lib/knockout/bindings/collapsible.js\": \"../../../../frontend/Magento/luma/en_US/\"\r\n            }\r\n        }\r\n    });\r\n */\r\n\r\n/* global jsSuffixRegExp */\r\n/* eslint-disable max-depth */\r\ndefine('baseUrlInterceptor', [\r\n    'module'\r\n], function (module) {\r\n    'use strict';\r\n\r\n    /**\r\n     * RequireJS Context object\r\n     */\r\n    var ctx = require.s.contexts._,\r\n\r\n        /**\r\n         * Original function\r\n         *\r\n         * @type {Function}\r\n         */\r\n        origNameToUrl = ctx.nameToUrl,\r\n\r\n        /**\r\n         * Original function\r\n         *\r\n         * @type {Function}\r\n         */\r\n        newContextConstr = require.s.newContext;\r\n\r\n    /**\r\n     * Remove dots from URL\r\n     *\r\n     * @param {Array} ary\r\n     */\r\n    function trimDots(ary) {\r\n        var i, part, length = ary.length;\r\n\r\n        for (i = 0; i < length; i++) {\r\n            part = ary[i];\r\n\r\n            if (part === '.') {\r\n                ary.splice(i, 1);\r\n                i -= 1;\r\n            } else if (part === '..') {\r\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\r\n                    //End of the line. Keep at least one non-dot\r\n                    //path segment at the front so it can be mapped\r\n                    //correctly to disk. Otherwise, there is likely\r\n                    //no path mapping for a path starting with '..'.\r\n                    //This can still fail, but catches the most reasonable\r\n                    //uses of ..\r\n                    break;\r\n                } else if (i > 0) {\r\n                    ary.splice(i - 1, 2);\r\n                    i -= 2;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Normalize URL string (remove '/../')\r\n     *\r\n     * @param {String} name\r\n     * @param {String} baseName\r\n     * @param {Object} applyMap\r\n     * @param {Object} localContext\r\n     * @returns {*}\r\n     */\r\n    function normalize(name, baseName, applyMap, localContext) {\r\n        var lastIndex,\r\n            baseParts = baseName && baseName.split('/'),\r\n            normalizedBaseParts = baseParts;\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === '.') {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                //Convert baseName to array, and lop off the last part,\r\n                //so that . matches that 'directory' and not name of the baseName's\r\n                //module. For instance, baseName of 'one/two/three', maps to\r\n                //'one/two/three.js', but we want the directory, 'one/two' for\r\n                //this normalization.\r\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\r\n                name = name.split('/');\r\n                lastIndex = name.length - 1;\r\n\r\n                // If wanting node ID compatibility, strip .js from end\r\n                // of IDs. Have to do this here, and not in nameToUrl\r\n                // because node allows either .js or non .js to map\r\n                // to same file.\r\n                if (localContext.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\r\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\r\n                }\r\n\r\n                name = normalizedBaseParts.concat(name);\r\n                trimDots(name);\r\n                name = name.join('/');\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * Get full url.\r\n     *\r\n     * @param {Object} context\r\n     * @param {String} url\r\n     * @return {String}\r\n     */\r\n    function getUrl(context, url) {\r\n        var baseUrl = context.config.baseUrl,\r\n            newConfig = context.config,\r\n            modulePath = url.replace(baseUrl, ''),\r\n            newBaseUrl,\r\n            rewrite = module.config()[modulePath];\r\n\r\n        if (!rewrite) {\r\n            return url;\r\n        }\r\n\r\n        newBaseUrl = normalize(rewrite, baseUrl, undefined, newConfig);\r\n\r\n        return newBaseUrl + modulePath;\r\n    }\r\n\r\n    /**\r\n     * Replace original function.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    ctx.nameToUrl = function () {\r\n        return getUrl(ctx, origNameToUrl.apply(ctx, arguments));\r\n    };\r\n\r\n    /**\r\n     * Replace original function.\r\n     *\r\n     * @return {*}\r\n     */\r\n    require.s.newContext = function () {\r\n        var newCtx = newContextConstr.apply(require.s, arguments),\r\n            newOrigNameToUrl = newCtx.nameToUrl;\r\n\r\n        /**\r\n         * New implementation of native function.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        newCtx.nameToUrl = function () {\r\n            return getUrl(newCtx, newOrigNameToUrl.apply(newCtx, arguments));\r\n        };\r\n\r\n        return newCtx;\r\n    };\r\n});\r\n\r\nrequire(['baseUrlInterceptor'], function () {\r\n    'use strict';\r\n\r\n});\r\n","mage/requirejs/resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'domReady!'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var context = require.s.contexts._,\r\n        execCb = context.execCb,\r\n        registry = context.registry,\r\n        callbacks = [],\r\n        retries = 10,\r\n        updateDelay = 1,\r\n        ready,\r\n        update;\r\n\r\n    /**\r\n     * Checks if provided callback already exists in the callbacks list.\r\n     *\r\n     * @param {Object} callback - Callback object to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isSubscribed(callback) {\r\n        return !!_.findWhere(callbacks, callback);\r\n    }\r\n\r\n    /**\r\n     * Checks if provided module is rejected during load.\r\n     *\r\n     * @param {Object} module - Module to be checked.\r\n     * @return {Boolean}\r\n     */\r\n    function isRejected(module) {\r\n        return registry[module.id] && (registry[module.id].inited || registry[module.id].error);\r\n    }\r\n\r\n    /**\r\n     * Checks if provided module has unresolved dependencies.\r\n     *\r\n     * @param {Object} module - Module to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isPending(module) {\r\n        if (!module.depCount) {\r\n            return false;\r\n        }\r\n\r\n        return module.depCount > _.filter(module.depMaps, isRejected).length;\r\n    }\r\n\r\n    /**\r\n     * Checks if requirejs's registry object contains pending modules.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPending() {\r\n        return _.some(registry, isPending);\r\n    }\r\n\r\n    /**\r\n     * Checks if 'resolver' module is in ready\r\n     * state and that there are no pending modules.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    function isReady() {\r\n        return ready && !hasPending();\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callback handler.\r\n     *\r\n     * @param {Object} callback\r\n     */\r\n    function invoke(callback) {\r\n        callback.handler.call(callback.ctx);\r\n    }\r\n\r\n    /**\r\n     * Sets 'resolver' module to a ready state\r\n     * and invokes pending callbacks.\r\n     */\r\n    function resolve() {\r\n        ready = true;\r\n\r\n        callbacks.splice(0).forEach(invoke);\r\n    }\r\n\r\n    /**\r\n     * Drops 'ready' flag and runs the update process.\r\n     */\r\n    function tick() {\r\n        ready = false;\r\n\r\n        update(retries);\r\n    }\r\n\r\n    /**\r\n     * Adds callback which will be invoked\r\n     * when all of the pending modules are initiated.\r\n     *\r\n     * @param {Function} handler - 'Ready' event handler function.\r\n     * @param {Object} [ctx] - Optional context with which handler\r\n     *      will be invoked.\r\n     */\r\n    function subscribe(handler, ctx) {\r\n        var callback = {\r\n            handler: handler,\r\n            ctx: ctx\r\n        };\r\n\r\n        if (!isSubscribed(callback)) {\r\n            callbacks.push(callback);\r\n\r\n            if (isReady()) {\r\n                _.defer(tick);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks for all modules to be initiated\r\n     * and invokes pending callbacks if it's so.\r\n     *\r\n     * @param {Number} [retry] - Number of retries\r\n     *      that will be used to repeat the 'update' function\r\n     *      invokation in case if there are no pending requests.\r\n     */\r\n    update = _.debounce(function (retry) {\r\n        if (!hasPending()) {\r\n            retry ? update(--retry) : resolve();\r\n        }\r\n    }, updateDelay);\r\n\r\n    /**\r\n     * Overrides requirejs's original 'execCb' method\r\n     * in order to track pending modules.\r\n     *\r\n     * @returns {*} Result of original method call.\r\n     */\r\n    context.execCb = function () {\r\n        var exported = execCb.apply(context, arguments);\r\n\r\n        tick();\r\n\r\n        return exported;\r\n    };\r\n\r\n    return subscribe;\r\n});\r\n","mage/app/config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\n/* eslint-disable strict */\r\ndefine([], function () {\r\n    return {\r\n        /**\r\n         * Get base url.\r\n         */\r\n        getBaseUrl: function () {\r\n            return this.values.baseUrl;\r\n        },\r\n\r\n        /**\r\n         * Get form key.\r\n         */\r\n        getFormKey: function () {\r\n            return this.values.formKey;\r\n        }\r\n    };\r\n});\r\n","mage/utils/strings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var jsonRe = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to convert string to one of the primitive values,\r\n         * or to parse it as a valid json object.\r\n         *\r\n         * @param {String} str - String to be processed.\r\n         * @returns {*}\r\n         */\r\n        castString: function (str) {\r\n            try {\r\n                str = str === 'true' ? true :\r\n                    str === 'false' ? false :\r\n                        str === 'null' ? null :\r\n                            +str + '' === str ? +str :\r\n                                jsonRe.test(str) ? JSON.parse(str) :\r\n                                    str;\r\n            } catch (e) {\r\n            }\r\n\r\n            return str;\r\n        },\r\n\r\n        /**\r\n         * Splits string by separator if it's possible,\r\n         * otherwise returns the incoming value.\r\n         *\r\n         * @param {(String|Array|*)} str - String to split.\r\n         * @param {String} [separator=' '] - Seperator based on which to split the string.\r\n         * @returns {Array|*} Splitted string or the incoming value.\r\n         */\r\n        stringToArray: function (str, separator) {\r\n            separator = separator || ' ';\r\n\r\n            return typeof str === 'string' ?\r\n                str.split(separator) :\r\n                str;\r\n        },\r\n\r\n        /**\r\n         * Converts the incoming string which consists\r\n         * of a specified delimiters into a format commonly used in form elements.\r\n         *\r\n         * @param {String} name - The incoming string.\r\n         * @param {String} [separator='.']\r\n         * @returns {String} Serialized string.\r\n         *\r\n         * @example\r\n         *      utils.serializeName('one.two.three');\r\n         *      => 'one[two][three]';\r\n         */\r\n        serializeName: function (name, separator) {\r\n            var result;\r\n\r\n            separator = separator || '.';\r\n            name = name.split(separator);\r\n\r\n            result = name.shift();\r\n\r\n            name.forEach(function (part) {\r\n                result += '[' + part + ']';\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming value is not empty,\r\n         * e.g. not 'null' or 'undefined'\r\n         *\r\n         * @param {*} value - Value to check.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || _.isUndefined(value) || _.isNull(value);\r\n        },\r\n\r\n        /**\r\n         * Adds 'prefix' to the 'part' value if it was provided.\r\n         *\r\n         * @param {String} prefix\r\n         * @param {String} part\r\n         * @returns {String}\r\n         */\r\n        fullPath: function (prefix, part) {\r\n            return prefix ? prefix + '.' + part : part;\r\n        },\r\n\r\n        /**\r\n         * Splits incoming string and returns its' part specified by offset.\r\n         *\r\n         * @param {String} parts\r\n         * @param {Number} [offset]\r\n         * @param {String} [delimiter=.]\r\n         * @returns {String}\r\n         */\r\n        getPart: function (parts, offset, delimiter) {\r\n            delimiter = delimiter || '.';\r\n            parts = parts.split(delimiter);\r\n            offset = this.formatOffset(parts, offset);\r\n\r\n            parts.splice(offset, 1);\r\n\r\n            return parts.join(delimiter) || '';\r\n        },\r\n\r\n        /**\r\n         * Converts nameThroughCamelCase to name-through-minus\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        camelCaseToMinus: function camelCaseToMinus(string) {\r\n            return ('' + string)\r\n                .split('')\r\n                .map(function (symbol, index) {\r\n                    return index ?\r\n                        symbol.toUpperCase() === symbol ?\r\n                        '-' + symbol.toLowerCase() :\r\n                            symbol :\r\n                        symbol.toLowerCase();\r\n                })\r\n                .join('');\r\n        },\r\n\r\n        /**\r\n         * Converts name-through-minus to nameThroughCamelCase\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        minusToCamelCase: function minusToCamelCase(string) {\r\n            return ('' + string)\r\n                .split('-')\r\n                .map(function (part, index) {\r\n                    return index ? part.charAt(0).toUpperCase() + part.slice(1) : part;\r\n                })\r\n                .join('');\r\n        }\r\n    };\r\n});\r\n","mage/utils/compare.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mage/utils/objects'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    var result = [];\r\n\r\n    /**\r\n     * Checks if all of the provided arrays contains equal values.\r\n     *\r\n     * @param {(Boolean|Array)} [keepOrder=false]\r\n     * @param {Array} target\r\n     * @returns {Boolean}\r\n     */\r\n    function equalArrays(keepOrder, target) {\r\n        var args = _.toArray(arguments),\r\n            arrays;\r\n\r\n        if (!Array.isArray(keepOrder)) {\r\n            arrays      = args.slice(2);\r\n        } else {\r\n            target      = keepOrder;\r\n            keepOrder   = false;\r\n            arrays      = args.slice(1);\r\n        }\r\n\r\n        if (!arrays.length) {\r\n            return true;\r\n        }\r\n\r\n        return arrays.every(function (array) {\r\n            if (array === target) {\r\n                return true;\r\n            } else if (array.length !== target.length) {\r\n                return false;\r\n            } else if (!keepOrder) {\r\n                return !_.difference(target, array).length;\r\n            }\r\n\r\n            return array.every(function (value, index) {\r\n                return target[index] === value;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if two values are different.\r\n     *\r\n     * @param {*} a - First value.\r\n     * @param {*} b - Second value.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDifferent(a, b) {\r\n        var oldIsPrimitive = utils.isPrimitive(a);\r\n\r\n        if (Array.isArray(a) && Array.isArray(b)) {\r\n            return !equalArrays(true, a, b);\r\n        }\r\n\r\n        return oldIsPrimitive ? a !== b : true;\r\n    }\r\n\r\n    /**\r\n     * @param {String} prefix\r\n     * @param {String} part\r\n     */\r\n    function getPath(prefix, part) {\r\n        return prefix ? prefix + '.' + part : part;\r\n    }\r\n\r\n    /**\r\n     * Checks if object has own specified property.\r\n     *\r\n     * @param {*} obj - Value to be checked.\r\n     * @param {String} key - Key of the property.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasOwn(obj, key) {\r\n        return Object.prototype.hasOwnProperty.call(obj, key);\r\n    }\r\n\r\n    /**\r\n     * @param {Array} changes\r\n     */\r\n    function getContainers(changes) {\r\n        var containers  = {},\r\n            indexed     = _.indexBy(changes, 'path');\r\n\r\n        _.each(indexed, function (change, name) {\r\n            var path;\r\n\r\n            name.split('.').forEach(function (part) {\r\n                path = getPath(path, part);\r\n\r\n                if (path in indexed) {\r\n                    return;\r\n                }\r\n\r\n                (containers[path] = containers[path] || []).push(change);\r\n            });\r\n        });\r\n\r\n        return containers;\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} newValue\r\n     * @param {String} oldValue\r\n     */\r\n    function addChange(path, name, type, newValue, oldValue) {\r\n        var data;\r\n\r\n        data = {\r\n            path: path,\r\n            name: name,\r\n            type: type\r\n        };\r\n\r\n        if (type !== 'remove') {\r\n            data.value = newValue;\r\n            data.oldValue = oldValue;\r\n        } else {\r\n            data.oldValue = newValue;\r\n        }\r\n\r\n        result.push(data);\r\n    }\r\n\r\n    /**\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} iterator\r\n     * @param {String} placeholder\r\n     */\r\n    function setAll(ns, name, type, iterator, placeholder) {\r\n        var key;\r\n\r\n        if (arguments.length > 4) {\r\n            type === 'add' ?\r\n                addChange(ns, name, 'update', iterator, placeholder) :\r\n                addChange(ns, name, 'update', placeholder, iterator);\r\n        } else {\r\n            addChange(ns, name, type, iterator);\r\n        }\r\n\r\n        if (!utils.isObject(iterator)) {\r\n            return;\r\n        }\r\n\r\n        for (key in iterator) {\r\n            if (hasOwn(iterator, key)) {\r\n                setAll(getPath(ns, key), key, type, iterator[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*eslint-disable max-depth*/\r\n    /**\r\n     * @param {Object} old\r\n     * @param {Object} current\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     */\r\n    function compare(old, current, ns, name) {\r\n        var key,\r\n            oldIsObj = utils.isObject(old),\r\n            newIsObj = utils.isObject(current);\r\n\r\n        if (oldIsObj && newIsObj) {\r\n            for (key in old) {\r\n                if (hasOwn(old, key) && !hasOwn(current, key)) {\r\n                    setAll(getPath(ns, key), key, 'remove', old[key]);\r\n                }\r\n            }\r\n\r\n            for (key in current) {\r\n                if (hasOwn(current, key)) {\r\n                    hasOwn(old, key) ?\r\n                        compare(old[key], current[key], getPath(ns, key), key) :\r\n                        setAll(getPath(ns, key), key, 'add', current[key]);\r\n                }\r\n            }\r\n        } else if (oldIsObj) {\r\n            setAll(ns, name, 'remove', old, current);\r\n        } else if (newIsObj) {\r\n            setAll(ns, name, 'add', current, old);\r\n        } else if (isDifferent(old, current)) {\r\n            addChange(ns, name, 'update', current, old);\r\n        }\r\n    }\r\n\r\n    /*eslint-enable max-depth*/\r\n\r\n    return {\r\n\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        compare: function () {\r\n            var changes;\r\n\r\n            compare.apply(null, arguments);\r\n\r\n            changes = result.splice(0);\r\n\r\n            return {\r\n                containers: getContainers(changes),\r\n                changes: changes,\r\n                equal: !changes.length\r\n            };\r\n        },\r\n\r\n        equalArrays: equalArrays\r\n    };\r\n});\r\n","mage/utils/main.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var utils = {},\r\n        _ = require('underscore');\r\n\r\n    return _.extend(\r\n        utils,\r\n        require('./arrays'),\r\n        require('./compare'),\r\n        require('./misc'),\r\n        require('./objects'),\r\n        require('./strings'),\r\n        require('./template')\r\n    );\r\n});\r\n","mage/utils/arrays.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    './strings'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Defines index of an item in a specified container.\r\n     *\r\n     * @param {*} item - Item whose index should be defined.\r\n     * @param {Array} container - Container upon which to perform search.\r\n     * @returns {Number}\r\n     */\r\n    function getIndex(item, container) {\r\n        var index = container.indexOf(item);\r\n\r\n        if (~index) {\r\n            return index;\r\n        }\r\n\r\n        return _.findIndex(container, function (value) {\r\n            return value && value.name === item;\r\n        });\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Facade method to remove/add value from/to array\r\n         * without creating a new instance.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to add/remove.\r\n         * @param {Boolean} add - Flag that specfies operation.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        toggle: function (arr, value, add) {\r\n            return add ?\r\n                this.add(arr, value) :\r\n                this.remove(arr, value);\r\n        },\r\n\r\n        /**\r\n         * Removes the incoming value from array in case\r\n         * without creating a new instance of it.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to be removed.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        remove: function (arr, value) {\r\n            var index = arr.indexOf(value);\r\n\r\n            if (~index) {\r\n                arr.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds the incoming value to array if\r\n         * it's not alredy present in there.\r\n         *\r\n         * @param {Array} arr - Array to be modifed.\r\n         * @param {...*} arguments - Values to be added.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        add: function (arr) {\r\n            var values = _.toArray(arguments).slice(1);\r\n\r\n            values.forEach(function (value) {\r\n                if (!~arr.indexOf(value)) {\r\n                    arr.push(value);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Inserts specified item into container at a specified position.\r\n         *\r\n         * @param {*} item - Item to be inserted into container.\r\n         * @param {Array} container - Container of items.\r\n         * @param {*} [position=-1] - Position at which item should be inserted.\r\n         *      Position can represent:\r\n         *          - specific index in container\r\n         *          - item which might already be present in container\r\n         *          - structure with one of these properties: after, before\r\n         * @returns {Boolean|*}\r\n         *      - true if element has changed its' position\r\n         *      - false if nothing has changed\r\n         *      - inserted value if it wasn't present in container\r\n         */\r\n        insert: function (item, container, position) {\r\n            var currentIndex = getIndex(item, container),\r\n                newIndex,\r\n                target;\r\n\r\n            if (typeof position === 'undefined') {\r\n                position = -1;\r\n            } else if (typeof position === 'string') {\r\n                position = isNaN(+position) ? position : +position;\r\n            }\r\n\r\n            newIndex = position;\r\n\r\n            if (~currentIndex) {\r\n                target = container.splice(currentIndex, 1)[0];\r\n\r\n                if (typeof item === 'string') {\r\n                    item = target;\r\n                }\r\n            }\r\n\r\n            if (typeof position !== 'number') {\r\n                target = position.after || position.before || position;\r\n\r\n                newIndex = getIndex(target, container);\r\n\r\n                if (~newIndex && (position.after || newIndex >= currentIndex)) {\r\n                    newIndex++;\r\n                }\r\n            }\r\n\r\n            if (newIndex < 0) {\r\n                newIndex += container.length + 1;\r\n            }\r\n\r\n            container[newIndex] ?\r\n                container.splice(newIndex, 0, item) :\r\n                container[newIndex] = item;\r\n\r\n            return !~currentIndex ? item : currentIndex !== newIndex;\r\n        },\r\n\r\n        /**\r\n         * @param {Array} elems\r\n         * @param {Number} offset\r\n         * @return {Number|*}\r\n         */\r\n        formatOffset: function (elems, offset) {\r\n            if (utils.isEmpty(offset)) {\r\n                offset = -1;\r\n            }\r\n\r\n            offset = +offset;\r\n\r\n            if (offset < 0) {\r\n                offset += elems.length + 1;\r\n            }\r\n\r\n            return offset;\r\n        }\r\n    };\r\n});\r\n","mage/utils/wrapper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Utility methods used to wrap and extend functions.\r\n *\r\n * @example Usage of a 'wrap' method with arguments delegation.\r\n *      var multiply = function (a, b) {\r\n *          return a * b;\r\n *      };\r\n *\r\n *      multiply = module.wrap(multiply, function (orig) {\r\n *          return 'Result is: ' + orig();\r\n *      });\r\n *\r\n *      multiply(2, 2);\r\n *      => 'Result is: 4'\r\n *\r\n * @example Usage of 'wrapSuper' method.\r\n *      var multiply = function (a, b) {\r\n *         return a * b;\r\n *      };\r\n *\r\n *      var obj = {\r\n *          multiply: module.wrapSuper(multiply, function () {\r\n *              return 'Result is: ' + this._super();\r\n *          });\r\n *      };\r\n *\r\n *      obj.multiply(2, 2);\r\n *      => 'Result is: 4'\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if string has a '_super' substring.\r\n     */\r\n    var superReg = /\\b_super\\b/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Wraps target function with a specified wrapper, which will receive\r\n         * reference to the original function as a first argument.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapper function.\r\n         */\r\n        wrap: function (target, wrapper) {\r\n            if (!_.isFunction(target) || !_.isFunction(wrapper)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var args    = _.toArray(arguments),\r\n                    ctx     = this,\r\n                    _super;\r\n\r\n                /**\r\n                 * Function that will be passed to the wrapper.\r\n                 * If no arguments will be passed to it, then the original\r\n                 * function will be called with an arguments of a wrapper function.\r\n                 */\r\n                _super = function () {\r\n                    var superArgs = arguments.length ? arguments : args.slice(1);\r\n\r\n                    return target.apply(ctx, superArgs);\r\n                };\r\n\r\n                args.unshift(_super);\r\n\r\n                return wrapper.apply(ctx, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Wraps the incoming function to implement support of the '_super' method.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapped function.\r\n         */\r\n        wrapSuper: function (target, wrapper) {\r\n            if (!this.hasSuper(wrapper) || !_.isFunction(target)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var _super  = this._super,\r\n                    args    = arguments,\r\n                    result;\r\n\r\n                /**\r\n                 * Temporary define '_super' method which\r\n                 * contains call to the original function.\r\n                 */\r\n                this._super = function () {\r\n                    var superArgs = arguments.length ? arguments : args;\r\n\r\n                    return target.apply(this, superArgs);\r\n                };\r\n\r\n                result = wrapper.apply(this, args);\r\n\r\n                this._super = _super;\r\n\r\n                return result;\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming method contains calls of the '_super' method.\r\n         *\r\n         * @param {Function} fn - Function to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        hasSuper: function (fn) {\r\n            return _.isFunction(fn) && superReg.test(fn);\r\n        },\r\n\r\n        /**\r\n         * Extends target object with provided extenders.\r\n         * If property in target and extender objects is a function,\r\n         * then it will be wrapped using 'wrap' method.\r\n         *\r\n         * @param {Object} target - Object to be extended.\r\n         * @param {...Object} extenders - Multiple extenders objects.\r\n         * @returns {Object} Modified target object.\r\n         */\r\n        extend: function (target) {\r\n            var extenders = _.toArray(arguments).slice(1),\r\n                iterator = this._extend.bind(this, target);\r\n\r\n            extenders.forEach(iterator);\r\n\r\n            return target;\r\n        },\r\n\r\n        /**\r\n         * Same as the 'extend' method, but operates only on one extender object.\r\n         *\r\n         * @private\r\n         * @param {Object} target\r\n         * @param {Object} extender\r\n         */\r\n        _extend: function (target, extender) {\r\n            _.each(extender, function (value, key) {\r\n                target[key] = this.wrap(target[key], extender[key]);\r\n            }, this);\r\n        }\r\n    };\r\n});\r\n","mage/utils/objects.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    var primitives = [\r\n        'undefined',\r\n        'boolean',\r\n        'number',\r\n        'string'\r\n    ];\r\n\r\n    /**\r\n     * Sets nested property of a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @param {*} value - Value of the last property in 'path' array.\r\n     * returns {*} New value for the property.\r\n     */\r\n    function setNested(parent, path, value) {\r\n        var last = path.pop(),\r\n            len = path.length,\r\n            pi = 0,\r\n            part = path[pi];\r\n\r\n        for (; pi < len; part = path[++pi]) {\r\n            if (!_.isObject(parent[part])) {\r\n                parent[part] = {};\r\n            }\r\n\r\n            parent = parent[part];\r\n        }\r\n\r\n        if (typeof parent[last] === 'function') {\r\n            parent[last](value);\r\n        } else {\r\n            parent[last] = value;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Retrieves value of a nested property.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @returns {*} Value of the property.\r\n     */\r\n    function getNested(parent, path) {\r\n        var exists = true,\r\n            len = path.length,\r\n            pi = 0;\r\n\r\n        for (; pi < len && exists; pi++) {\r\n            parent = parent[path[pi]];\r\n\r\n            if (typeof parent === 'undefined') {\r\n                exists = false;\r\n            }\r\n        }\r\n\r\n        if (exists) {\r\n            if (ko.isObservable(parent)) {\r\n                parent = parent();\r\n            }\r\n\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes property from a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object from which to remove property.\r\n     * @param {Array} path - Splitted path to the property.\r\n     */\r\n    function removeNested(parent, path) {\r\n        var field = path.pop();\r\n\r\n        parent = getNested(parent, path);\r\n\r\n        if (_.isObject(parent)) {\r\n            delete parent[field];\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Retrieves or defines objects' property by a composite path.\r\n         *\r\n         * @param {Object} data - Container for the properties specified in path.\r\n         * @param {String} path - Objects' properties divided by dots.\r\n         * @param {*} [value] - New value for the last property.\r\n         * @returns {*} Returns value of the last property in chain.\r\n         *\r\n         * @example\r\n         *      utils.nested({}, 'one.two', 3);\r\n         *      => { one: {two: 3} }\r\n         */\r\n        nested: function (data, path, value) {\r\n            var action = arguments.length > 2 ? setNested : getNested;\r\n\r\n            path = path ? path.split('.') : [];\r\n\r\n            return action(data, path, value);\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from an object.\r\n         *\r\n         * @param {Object} data - Data source.\r\n         * @param {String} path - Path to the property e.g. 'one.two.three'\r\n         */\r\n        nestedRemove: function (data, path) {\r\n            path = path.split('.');\r\n\r\n            removeNested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Flattens objects' nested properties.\r\n         *\r\n         * @param {Object} data - Object to flatten.\r\n         * @param {String} [separator='.'] - Objects' keys separator.\r\n         * @returns {Object} Flattened object.\r\n         *\r\n         * @example Example with a default separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }});\r\n         *      => { 'one.two.three': 'value' };\r\n         *\r\n         * @example Example with a custom separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }}, '=>');\r\n         *      => {'one=>two=>three': 'value'};\r\n         */\r\n        flatten: function (data, separator, parent, result) {\r\n            separator = separator || '.';\r\n            result = result || {};\r\n\r\n            if (!data) {\r\n                return result;\r\n            }\r\n\r\n            // UnderscoreJS each breaks when an object has a length property so we use Object.keys\r\n            _.each(Object.keys(data), function (name) {\r\n                var node = data[name];\r\n\r\n                if ({}.toString.call(node) === '[object Function]') {\r\n                    return;\r\n                }\r\n\r\n                if (parent) {\r\n                    name = parent + separator + name;\r\n                }\r\n\r\n                typeof node === 'object' ?\r\n                    this.flatten(node, separator, name, result) :\r\n                    result[name] = node;\r\n\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Opposite operation of the 'flatten' method.\r\n         *\r\n         * @param {Object} data - Previously flattened object.\r\n         * @param {String} [separator='.'] - Keys separator.\r\n         * @returns {Object} Object with nested properties.\r\n         *\r\n         * @example Example using custom separator.\r\n         *      utils.unflatten({'one=>two': 'value'}, '=>');\r\n         *      => {\r\n         *          one: { two: 'value' }\r\n         *      };\r\n         */\r\n        unflatten: function (data, separator) {\r\n            var result = {};\r\n\r\n            separator = separator || '.';\r\n\r\n            _.each(data, function (value, nodes) {\r\n                nodes = nodes.split(separator);\r\n\r\n                setNested(result, nodes, value);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Same operation as 'flatten' method,\r\n         * but returns objects' keys wrapped in '[]'.\r\n         *\r\n         * @param {Object} data - Object that should be serialized.\r\n         * @returns {Object} Serialized data.\r\n         *\r\n         * @example\r\n         *      utils.serialize({one: { two: { three: 'value'} }});\r\n         *      => { 'one[two][three]': 'value' }\r\n         */\r\n        serialize: function (data) {\r\n            var result = {};\r\n\r\n            data = this.flatten(data);\r\n\r\n            _.each(data, function (value, keys) {\r\n                keys = this.serializeName(keys);\r\n                value = _.isUndefined(value) ? '' : value;\r\n\r\n                result[keys] = value;\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs deep extend of specified objects.\r\n         *\r\n         * @returns {Object|Array} Extended object.\r\n         */\r\n        extend: function () {\r\n            var args = _.toArray(arguments);\r\n\r\n            args.unshift(true);\r\n\r\n            return $.extend.apply($, args);\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         *\r\n         * @param {(Object|Array)} data - Data that should be copied.\r\n         * @returns {Object|Array} Cloned object.\r\n         */\r\n        copy: function (data) {\r\n            var result = data,\r\n                isArray = Array.isArray(data),\r\n                placeholder;\r\n\r\n            if (this.isObject(data) || isArray) {\r\n                placeholder = isArray ? [] : {};\r\n                result = this.extend(placeholder, data);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         * Doesn't save links to original object.\r\n         *\r\n         * @param {*} original - Object to clone\r\n         * @returns {*}\r\n         */\r\n        hardCopy: function (original) {\r\n            if (original === null || typeof original !== 'object') {\r\n                return original;\r\n            }\r\n\r\n            return JSON.parse(JSON.stringify(original));\r\n        },\r\n\r\n        /**\r\n         * Removes specified nested properties from the target object.\r\n         *\r\n         * @param {Object} target - Object whose properties should be removed.\r\n         * @param {(...String|Array|Object)} list - List that specifies properties to be removed.\r\n         * @returns {Object} Modified object.\r\n         *\r\n         * @example Basic usage\r\n         *      var obj = {a: {b: 2}, c: 'a'};\r\n         *\r\n         *      omit(obj, 'a.b');\r\n         *      => {'a.b': 2};\r\n         *      obj => {a: {}, c: 'a'};\r\n         *\r\n         * @example Various syntaxes that would return same result\r\n         *      omit(obj, ['a.b', 'c']);\r\n         *      omit(obj, 'a.b', 'c');\r\n         *      omit(obj, {'a.b': true, 'c': true});\r\n         */\r\n        omit: function (target, list) {\r\n            var removed = {},\r\n                ignored = list;\r\n\r\n            if (this.isObject(list)) {\r\n                ignored = [];\r\n\r\n                _.each(list, function (value, key) {\r\n                    if (value) {\r\n                        ignored.push(key);\r\n                    }\r\n                });\r\n            } else if (_.isString(list)) {\r\n                ignored = _.toArray(arguments).slice(1);\r\n            }\r\n\r\n            _.each(ignored, function (path) {\r\n                var value = this.nested(target, path);\r\n\r\n                if (!_.isUndefined(value)) {\r\n                    removed[path] = value;\r\n\r\n                    this.nestedRemove(target, path);\r\n                }\r\n            }, this);\r\n\r\n            return removed;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value is a plain object.\r\n         *\r\n         * @param {*} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isObject: function (value) {\r\n            var objProto = Object.prototype;\r\n\r\n            return typeof value == 'object' ?\r\n            objProto.toString.call(value) === '[object Object]' :\r\n                false;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean}\r\n         */\r\n        isPrimitive: function (value) {\r\n            return value === null || ~primitives.indexOf(typeof value);\r\n        },\r\n\r\n        /**\r\n         * Iterates over obj props/array elems recursively, applying action to each one\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to be called with each item as an argument.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         */\r\n        forEachRecursive: function (data, action, maxDepth) {\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                action(data);\r\n\r\n                return;\r\n            }\r\n\r\n            _.each(data, function (value) {\r\n                this.forEachRecursive(value, action, maxDepth);\r\n            }, this);\r\n\r\n            action(data);\r\n        },\r\n\r\n        /**\r\n         * Maps obj props/array elems recursively\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to transform each item.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         *\r\n         * @returns {Object|Array}\r\n         */\r\n        mapRecursive: function (data, action, maxDepth) {\r\n            var newData;\r\n\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return data;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                return action(data);\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                newData = _.map(data, function (item) {\r\n                    return this.mapRecursive(item, action, maxDepth);\r\n                }, this);\r\n\r\n                return action(newData);\r\n            }\r\n\r\n            newData = _.mapObject(data, function (val, key) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    return this.mapRecursive(val, action, maxDepth);\r\n                }\r\n\r\n                return val;\r\n            }, this);\r\n\r\n            return action(newData);\r\n        },\r\n\r\n        /**\r\n         * Removes empty(in common sence) obj props/array elems\r\n         *\r\n         * @param {*} data - Data to be cleaned.\r\n         * @returns {*}\r\n         */\r\n        removeEmptyValues: function (data) {\r\n            if (!_.isObject(data)) {\r\n                return data;\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                return data.filter(function (item) {\r\n                    return !this.isEmptyObj(item);\r\n                }, this);\r\n            }\r\n\r\n            return _.omit(data, this.isEmptyObj.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Checks that argument of any type is empty in common sence:\r\n         * empty string, string with spaces only, object without own props, empty array, null or undefined\r\n         *\r\n         * @param {*} val - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmptyObj: function (val) {\r\n\r\n            return _.isObject(val) && _.isEmpty(val) ||\r\n            this.isEmpty(val) ||\r\n            val && val.trim && this.isEmpty(val.trim());\r\n        }\r\n    };\r\n});\r\n\r\n","mage/utils/template.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable no-shadow */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/utils/objects',\r\n    'mage/utils/strings'\r\n], function ($, _, utils, stringUtils) {\r\n    'use strict';\r\n\r\n    var tmplSettings = _.templateSettings,\r\n        interpolate = /\\$\\{([\\s\\S]+?)\\}/g,\r\n        opener = '${',\r\n        template,\r\n        hasStringTmpls;\r\n\r\n    /**\r\n     * Identifies whether ES6 templates are supported.\r\n     */\r\n    hasStringTmpls = (function () {\r\n        var testString = 'var foo = \"bar\"; return `${ foo }` === foo';\r\n\r\n        try {\r\n            return Function(testString)();\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Objects can specify how to use templating for their properties - getting that configuration.\r\n     *\r\n     * To disable rendering for all properties of your object add __disableTmpl: true.\r\n     * To disable for specific property add __disableTmpl: {propertyName: true}.\r\n     * To limit recursion for a specific property add __disableTmpl: {propertyName: numberOfCycles}.\r\n     *\r\n     * @param {String} tmpl\r\n     * @param {Object | undefined} target\r\n     * @returns {Boolean|Object}\r\n     */\r\n    function isTmplIgnored(tmpl, target) {\r\n        var parsedTmpl;\r\n\r\n        try {\r\n            parsedTmpl = JSON.parse(tmpl);\r\n\r\n            if (typeof parsedTmpl === 'object') {\r\n                return tmpl.includes('__disableTmpl');\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        if (typeof target !== 'undefined') {\r\n            if (typeof target === 'object' && target.hasOwnProperty('__disableTmpl')) {\r\n                return target.__disableTmpl;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    if (hasStringTmpls) {\r\n\r\n        /*eslint-disable no-unused-vars, no-eval*/\r\n        /**\r\n         * Evaluates template string using ES6 templates.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} $ - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, $) {\r\n            return eval('`' + tmpl + '`');\r\n        };\r\n\r\n        /*eslint-enable no-unused-vars, no-eval*/\r\n    } else {\r\n\r\n        /**\r\n         * Fallback function used when ES6 templates are not supported.\r\n         * Uses underscore templates renderer.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} data - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, data) {\r\n            var cached = tmplSettings.interpolate;\r\n\r\n            tmplSettings.interpolate = interpolate;\r\n\r\n            tmpl = _.template(tmpl, {\r\n                variable: '$'\r\n            })(data);\r\n\r\n            tmplSettings.interpolate = cached;\r\n\r\n            return tmpl;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks if provided value contains template syntax.\r\n     *\r\n     * @param {*} value - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isTemplate(value) {\r\n        return typeof value === 'string' &&\r\n            value.indexOf(opener) !== -1 &&\r\n            // the below pattern almost always indicates an accident which should not cause template evaluation\r\n            // refuse to evaluate\r\n            value.indexOf('${{') === -1;\r\n    }\r\n\r\n    /**\r\n     * Iteratively processes provided string\r\n     * until no templates syntax will be found.\r\n     *\r\n     * @param {String} tmpl - Template string.\r\n     * @param {Object} data - Data object used in a template.\r\n     * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n     *      should be casted after evaluation to a value of another type or\r\n     *      that it should be leaved as a string.\r\n     * @param {Number|undefined} maxCycles - Maximum number of rendering cycles, can be 0.\r\n     * @returns {*} Compiled template.\r\n     */\r\n    function render(tmpl, data, castString, maxCycles) {\r\n        var last = tmpl,\r\n            cycles = 0;\r\n\r\n        while (~tmpl.indexOf(opener) && (typeof maxCycles === 'undefined' || cycles < maxCycles)) {\r\n            if (!isTmplIgnored(tmpl)) {\r\n                tmpl = template(tmpl, data);\r\n            }\r\n\r\n            if (tmpl === last) {\r\n                break;\r\n            }\r\n\r\n            last = tmpl;\r\n            cycles++;\r\n        }\r\n\r\n        return castString ?\r\n            stringUtils.castString(tmpl) :\r\n            tmpl;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Applies provided data to the template.\r\n         *\r\n         * @param {Object|String} tmpl\r\n         * @param {Object} [data] - Data object to match with template.\r\n         * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n         *      should be casted after evaluation to a value of another type or\r\n         *      that it should be leaved as a string.\r\n         * @returns {*}\r\n         *\r\n         * @example Template defined as a string.\r\n         *      var source = { foo: 'Random Stuff', bar: 'Some' };\r\n         *\r\n         *      utils.template('${ $.bar } ${ $.foo }', source);\r\n         *      => 'Some Random Stuff';\r\n         *\r\n         * @example Template defined as an object.\r\n         *      var tmpl = {\r\n         *              key: {'${ $.$data.bar }': '${ $.$data.foo }'},\r\n         *              foo: 'bar',\r\n         *              x1: 2, x2: 5,\r\n         *              delta: '${ $.x2 - $.x1 }',\r\n         *              baz: 'Upper ${ $.foo.toUpperCase() }'\r\n         *      };\r\n         *\r\n         *      utils.template(tmpl, source);\r\n         *      => {\r\n         *          key: {'Some': 'Random Stuff'},\r\n         *          foo: 'bar',\r\n         *          x1: 2, x2: 5,\r\n         *          delta: 3,\r\n         *          baz: 'Upper BAR'\r\n         *      };\r\n         */\r\n        template: function (tmpl, data, castString, dontClone) {\r\n            if (typeof tmpl === 'string') {\r\n                return render(tmpl, data, castString);\r\n            }\r\n\r\n            if (!dontClone) {\r\n                tmpl = utils.copy(tmpl);\r\n            }\r\n\r\n            tmpl.$data = data || {};\r\n\r\n            /**\r\n             * Template iterator function.\r\n             */\r\n            _.each(tmpl, function iterate(value, key, list) {\r\n                var disabled,\r\n                    maxCycles;\r\n\r\n                if (key === '$data') {\r\n                    return;\r\n                }\r\n\r\n                if (isTemplate(key)) {\r\n                    delete list[key];\r\n\r\n                    key = render(key, tmpl);\r\n                    list[key] = value;\r\n                }\r\n\r\n                if (isTemplate(value)) {\r\n                    //Getting template disabling settings, can be true for all disabled and separate settings\r\n                    //for each property.\r\n                    disabled = isTmplIgnored(value, list);\r\n\r\n                    if (typeof disabled === 'object' && disabled.hasOwnProperty(key) && disabled[key] !== false) {\r\n                        //Checking if specific settings for a property provided.\r\n                        maxCycles = disabled[key];\r\n                    }\r\n\r\n                    if (disabled === true || maxCycles === true) {\r\n                        //Rendering for all properties is disabled.\r\n                        maxCycles = 0;\r\n                    }\r\n\r\n                    list[key] = render(value, tmpl, castString, maxCycles);\r\n                } else if ($.isPlainObject(value) || Array.isArray(value)) {\r\n                    _.each(value, iterate);\r\n                }\r\n            });\r\n\r\n            delete tmpl.$data;\r\n\r\n            return tmpl;\r\n        }\r\n    };\r\n});\r\n","mage/utils/misc.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'FormData'\r\n], function (_, $) {\r\n    'use strict';\r\n\r\n    var defaultAttributes,\r\n        ajaxSettings,\r\n        map;\r\n\r\n    defaultAttributes = {\r\n        method: 'post',\r\n        enctype: 'multipart/form-data'\r\n    };\r\n\r\n    ajaxSettings = {\r\n        default: {\r\n            method: 'POST',\r\n            cache: false,\r\n            processData: false,\r\n            contentType: false\r\n        },\r\n        simple: {\r\n            method: 'POST',\r\n            dataType: 'json'\r\n        }\r\n    };\r\n\r\n    map = {\r\n        'D': 'DDD',\r\n        'dd': 'DD',\r\n        'd': 'D',\r\n        'EEEE': 'dddd',\r\n        'EEE': 'ddd',\r\n        'e': 'd',\r\n        'yyyy': 'YYYY',\r\n        'yy': 'YY',\r\n        'y': 'YYYY',\r\n        'a': 'A'\r\n    };\r\n\r\n    return {\r\n\r\n        /**\r\n         * Generates a unique identifier.\r\n         *\r\n         * @param {Number} [size=7] - Length of a resulting identifier.\r\n         * @returns {String}\r\n         */\r\n        uniqueid: function (size) {\r\n            var code = Math.random() * 25 + 65 | 0,\r\n                idstr = String.fromCharCode(code);\r\n\r\n            size = size || 7;\r\n\r\n            while (idstr.length < size) {\r\n                code = Math.floor(Math.random() * 42 + 48);\r\n\r\n                if (code < 58 || code > 64) {\r\n                    idstr += String.fromCharCode(code);\r\n                }\r\n            }\r\n\r\n            return idstr;\r\n        },\r\n\r\n        /**\r\n         * Limits function call.\r\n         *\r\n         * @param {Object} owner\r\n         * @param {String} target\r\n         * @param {Number} limit\r\n         */\r\n        limit: function (owner, target, limit) {\r\n            var fn = owner[target];\r\n\r\n            owner[target] = _.debounce(fn.bind(owner), limit);\r\n        },\r\n\r\n        /**\r\n         * Converts mage date format to a moment.js format.\r\n         *\r\n         * @param {String} mageFormat\r\n         * @returns {String}\r\n         */\r\n        normalizeDate: function (mageFormat) {\r\n            var result = mageFormat;\r\n\r\n            _.each(map, function (moment, mage) {\r\n                result = result.replace(mage, moment);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Puts provided value in range of min and max parameters.\r\n         *\r\n         * @param {Number} value - Value to be located.\r\n         * @param {Number} min - Min value.\r\n         * @param {Number} max - Max value.\r\n         * @returns {Number}\r\n         */\r\n        inRange: function (value, min, max) {\r\n            return Math.min(Math.max(min, value), max);\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} attrs - Attributes that will be added to virtual form.\r\n         */\r\n        submit: function (options, attrs) {\r\n            var form        = document.createElement('form'),\r\n                data        = this.serialize(options.data),\r\n                attributes  = _.extend({}, defaultAttributes, attrs || {});\r\n\r\n            if (!attributes.action) {\r\n                attributes.action = options.url;\r\n            }\r\n\r\n            data['form_key'] = window.FORM_KEY;\r\n\r\n            _.each(attributes, function (value, name) {\r\n                form.setAttribute(name, value);\r\n            });\r\n\r\n            data = _.map(\r\n                data,\r\n                function (value, name) {\r\n                    return '<input type=\"hidden\" ' +\r\n                        'name=\"' + _.escape(name) + '\" ' +\r\n                        'value=\"' + _.escape(value) + '\"' +\r\n                        ' />';\r\n                }\r\n            ).join('');\r\n\r\n            form.insertAdjacentHTML('afterbegin', data);\r\n            document.body.appendChild(form);\r\n\r\n            form.submit();\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via AJAX POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} config\r\n         */\r\n        ajaxSubmit: function (options, config) {\r\n            var t = new Date().getTime(),\r\n                settings;\r\n\r\n            options.data['form_key'] = window.FORM_KEY;\r\n            options.data = this.prepareFormData(options.data, config.ajaxSaveType);\r\n            settings = _.extend({}, ajaxSettings[config.ajaxSaveType], options || {});\r\n\r\n            if (!config.ignoreProcessEvents) {\r\n                $('body').trigger('processStart');\r\n            }\r\n\r\n            return $.ajax(settings)\r\n                .done(function (data) {\r\n                    if (config.response) {\r\n                        data.t = t;\r\n                        config.response.data(data);\r\n                        config.response.status(undefined);\r\n                        config.response.status(!data.error);\r\n                    }\r\n                })\r\n                .fail(function () {\r\n                    config.response.status(undefined);\r\n                    config.response.status(false);\r\n                    config.response.data({\r\n                        error: true,\r\n                        messages: 'Something went wrong.',\r\n                        t: t\r\n                    });\r\n                })\r\n                .always(function () {\r\n                    if (!config.ignoreProcessEvents) {\r\n                        $('body').trigger('processStop');\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Creates FormData object and append this data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} type\r\n         * @returns {FormData}\r\n         */\r\n        prepareFormData: function (data, type) {\r\n            var formData;\r\n\r\n            if (type === 'default') {\r\n                formData = new FormData();\r\n                _.each(this.serialize(data), function (val, name) {\r\n                    formData.append(name, val);\r\n                });\r\n            } else if (type === 'simple') {\r\n                formData = this.serialize(data);\r\n            }\r\n\r\n            return formData;\r\n        },\r\n\r\n        /**\r\n         * Filters data object. Finds properties with suffix\r\n         * and sets their values to properties with the same name without suffix.\r\n         *\r\n         * @param {Object} data - The data object that should be filtered\r\n         * @param {String} suffix - The string by which data object should be filtered\r\n         * @param {String} separator - The string that is separator between property and suffix\r\n         *\r\n         * @returns {Object} Filtered data object\r\n         */\r\n        filterFormData: function (data, suffix, separator) {\r\n            data = data || {};\r\n            suffix = suffix || 'prepared-for-send';\r\n            separator = separator || '-';\r\n\r\n            _.each(data, function (value, key) {\r\n                if (_.isObject(value) && !Array.isArray(value)) {\r\n                    this.filterFormData(value, suffix, separator);\r\n                } else if (_.isString(key) && ~key.indexOf(suffix)) {\r\n                    data[key.split(separator)[0]] = value;\r\n                    delete data[key];\r\n                }\r\n            }, this);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Replaces symbol codes with their unescaped counterparts.\r\n         *\r\n         * @param {String} data\r\n         *\r\n         * @returns {String}\r\n         */\r\n        unescape: function (data) {\r\n            var unescaped = _.unescape(data),\r\n                mapCharacters = {\r\n                    '&#039;': '\\''\r\n                };\r\n\r\n            _.each(mapCharacters, function (value, key) {\r\n                unescaped = unescaped.replace(key, value);\r\n            });\r\n\r\n            return unescaped;\r\n        },\r\n\r\n        /**\r\n         * Converts PHP IntlFormatter format to moment format.\r\n         *\r\n         * @param {String} format - PHP format\r\n         * @returns {String} - moment compatible formatting\r\n         */\r\n        convertToMomentFormat: function (format) {\r\n            var newFormat;\r\n\r\n            newFormat = format.replace(/yyyy|yy|y/, 'YYYY'); // replace the year\r\n            newFormat = newFormat.replace(/dd|d/g, 'DD'); // replace the date\r\n\r\n            return newFormat;\r\n        },\r\n\r\n        /**\r\n         * Get Url Parameters.\r\n         *\r\n         * @param {String} url - Url string\r\n         * @returns {Object}\r\n         */\r\n        getUrlParameters: function (url) {\r\n            var params = {},\r\n                queries = url.split('?'),\r\n                temp,\r\n                i,\r\n                l;\r\n\r\n            if (!queries[1]) {\r\n                return params;\r\n            }\r\n\r\n            queries = queries[1].split('&');\r\n\r\n            for (i = 0, l = queries.length; i < l; i++) {\r\n                temp = queries[i].split('=');\r\n\r\n                if (temp[1]) {\r\n                    params[temp[0]] = decodeURIComponent(temp[1].replace(/\\+/g, '%20'));\r\n                } else {\r\n                    params[temp[0]] = '';\r\n                }\r\n            }\r\n\r\n            return params;\r\n        }\r\n    };\r\n});\r\n","mage/validation/url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Redirects to the url if it is considered safe\r\n         *\r\n         * @param {String} path - url to be redirected to\r\n         */\r\n        redirect: function (path) {\r\n            path = this.sanitize(path);\r\n\r\n            if (this.validate(path)) {\r\n                window.location.href = path;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validates url\r\n         *\r\n         * @param {Object} path - url to be validated\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (path) {\r\n            var hostname = window.location.hostname;\r\n\r\n            if (path.indexOf(hostname) === -1 ||\r\n                path.indexOf('javascript:') !== -1 ||\r\n                path.indexOf('vbscript:') !== -1) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Sanitize url, replacing disallowed chars\r\n         *\r\n         * @param {String} path - url to be normalized\r\n         * @returns {String}\r\n         */\r\n        sanitize: function (path) {\r\n            return path.replace('[^-A-Za-z0-9+&@#/%?=~_|!:,.;\\(\\)]', '');\r\n        }\r\n    };\r\n});\r\n","mage/validation/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/validation',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.each({\r\n        'validate-grouped-qty': [\r\n            function (value, element, params) {\r\n                var result = false,\r\n                    total = 0;\r\n\r\n                $(params).find('input[data-validate*=\"validate-grouped-qty\"]').each(function (i, e) {\r\n                    var val = $(e).val(),\r\n                        valInt;\r\n\r\n                    if (val && val.length > 0) {\r\n                        result = true;\r\n                        valInt = parseFloat(val) || 0;\r\n\r\n                        if (valInt >= 0) {\r\n                            total += valInt;\r\n                        } else {\r\n                            result = false;\r\n\r\n                            return result;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return result && total > 0;\r\n            },\r\n            $.mage.__('Please specify the quantity of product(s).')\r\n        ],\r\n        'validate-one-checkbox-required-by-name': [\r\n            function (value, element, params) {\r\n                var checkedCount = 0,\r\n                    container;\r\n\r\n                if (element.type === 'checkbox') {\r\n                    $('[name=\"' + element.name + '\"]').each(\r\n                        function () {\r\n                            if ($(this).is(':checked')) {\r\n                                checkedCount += 1;\r\n\r\n                                return false;\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                container = '#' + params;\r\n\r\n                if (checkedCount > 0) {\r\n                    $(container).removeClass('validation-failed');\r\n                    $(container).addClass('validation-passed');\r\n\r\n                    return true;\r\n                }\r\n                $(container).addClass('validation-failed');\r\n                $(container).removeClass('validation-passed');\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        'validate-date-between': [\r\n            function (value, element, params) {\r\n                var minDate = new Date(params[0]),\r\n                    maxDate = new Date(params[1]),\r\n                    inputDate = new Date(element.value),\r\n                    message;\r\n\r\n                minDate.setHours(0);\r\n                maxDate.setHours(0);\r\n\r\n                if (inputDate >= minDate && inputDate <= maxDate) {\r\n                    return true;\r\n                }\r\n                message = $.mage.__('Please enter a date between %min and %max.');\r\n                this.dateBetweenErrorMessage = message.replace('%min', minDate).replace('%max', maxDate);\r\n\r\n                return false;\r\n            },\r\n            function () {\r\n                return this.dateBetweenErrorMessage;\r\n            }\r\n        ],\r\n        'validate-dob': [\r\n            function (val, element, params) {\r\n                var dob = $(element).parents('.customer-dob'),\r\n                    dayVal, monthVal, yearVal, dobLength, day, month, year, curYear,\r\n                    validYearMessage, validateDayInMonth, validDateMessage, today, dateEntered;\r\n\r\n                $(dob).find('.' + this.settings.errorClass).removeClass(this.settings.errorClass);\r\n                dayVal = $(dob).find(params[0]).find('input:text').val();\r\n                monthVal = $(dob).find(params[1]).find('input:text').val();\r\n                yearVal = $(dob).find(params[2]).find('input:text').val();\r\n                dobLength = dayVal.length + monthVal.length + yearVal.length;\r\n\r\n                if (params[3] && dobLength === 0) {\r\n                    this.dobErrorMessage = $.mage.__('This is a required field.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (!params[3] && dobLength === 0) {\r\n                    return true;\r\n                }\r\n                day = parseInt(dayVal, 10) || 0;\r\n                month = parseInt(monthVal, 10) || 0;\r\n                year = parseInt(yearVal, 10) || 0;\r\n                curYear = (new Date()).getFullYear();\r\n\r\n                if (!day || !month || !year) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid full date.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (month < 1 || month > 12) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid month (1-12).');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (year < 1900 || year > curYear) {\r\n                    validYearMessage = $.mage.__('Please enter a valid year (1900-%1).');\r\n                    this.dobErrorMessage = validYearMessage.replace('%1', curYear.toString());\r\n\r\n                    return false;\r\n                }\r\n                validateDayInMonth = new Date(year, month, 0).getDate();\r\n\r\n                if (day < 1 || day > validateDayInMonth) {\r\n                    validDateMessage = $.mage.__('Please enter a valid day (1-%1).');\r\n                    this.dobErrorMessage = validDateMessage.replace('%1', validateDayInMonth.toString());\r\n\r\n                    return false;\r\n                }\r\n                today = new Date();\r\n                dateEntered = new Date();\r\n                dateEntered.setFullYear(year, month - 1, day);\r\n\r\n                if (dateEntered > today) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a date from the past.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                day = day % 10 === day ? '0' + day : day;\r\n                month = month % 10 === month ? '0' + month : month;\r\n                $(element).val(month + '/' + day + '/' + year);\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                return this.dobErrorMessage;\r\n            }\r\n        ]\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n});\r\n","mage/view/composite.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\n/* eslint-disable strict */\r\ndefine(['jquery'], function ($) {\r\n    return function () {\r\n        var renderedChildren = {},\r\n            children = {};\r\n\r\n        return {\r\n            /**\r\n             * @param {*} child\r\n             * @param {String} key\r\n             */\r\n            addChild: function (child, key) {\r\n                children[key] = child;\r\n            },\r\n\r\n            /**\r\n             * @param {*} root\r\n             */\r\n            render: function (root) {\r\n                $.each(children, function (key, child) {\r\n                    var childRoot = $('<div>');\r\n\r\n                    renderedChildren[key] = child.render(childRoot);\r\n                    root.append(childRoot);\r\n                });\r\n            }\r\n        };\r\n    };\r\n});\r\n","mage/apply/scripts.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery'\r\n], function (_, $) {\r\n    'use strict';\r\n\r\n    var scriptSelector = 'script[type=\"text/x-magento-init\"]',\r\n        dataAttr = 'data-mage-init',\r\n        virtuals = [];\r\n\r\n    /**\r\n     * Adds components to the virtual list.\r\n     *\r\n     * @param {Object} components\r\n     */\r\n    function addVirtual(components) {\r\n        virtuals.push({\r\n            el: false,\r\n            data: components\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Merges provided data with a current data\r\n     * of a elements' \"data-mage-init\" attribute.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {HTMLElement} elem - Element whose data should be modified.\r\n     */\r\n    function setData(components, elem) {\r\n        var data = elem.getAttribute(dataAttr);\r\n\r\n        data = data ? JSON.parse(data) : {};\r\n        _.each(components, function (obj, key) {\r\n            if (_.has(obj, 'mixins')) {\r\n                data[key] = data[key] || {};\r\n                data[key].mixins = data[key].mixins || [];\r\n                data[key].mixins = data[key].mixins.concat(obj.mixins);\r\n                delete obj.mixins;\r\n            }\r\n        });\r\n\r\n        data = $.extend(true, data, components);\r\n        data = JSON.stringify(data);\r\n        elem.setAttribute(dataAttr, data);\r\n    }\r\n\r\n    /**\r\n     * Search for the elements by privded selector and extends theirs data.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {String} selector - Selector for the elements.\r\n     */\r\n    function processElems(components, selector) {\r\n        var elems,\r\n            iterator;\r\n\r\n        if (selector === '*') {\r\n            addVirtual(components);\r\n\r\n            return;\r\n        }\r\n\r\n        elems = document.querySelectorAll(selector);\r\n        iterator = setData.bind(null, components);\r\n\r\n        _.toArray(elems).forEach(iterator);\r\n    }\r\n\r\n    /**\r\n     * Parses content of a provided script node.\r\n     * Note: node will be removed from DOM.\r\n     *\r\n     * @param {HTMLScriptElement} node - Node to be processed.\r\n     * @returns {Object}\r\n     */\r\n    function getNodeData(node) {\r\n        var data = node.textContent;\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        return JSON.parse(data);\r\n    }\r\n\r\n    /**\r\n     * Parses 'script' tags with a custom type attribute and moves it's data\r\n     * to a 'data-mage-init' attribute of an element found by provided selector.\r\n     * Note: All found script nodes will be removed from DOM.\r\n     *\r\n     * @returns {Array} An array of components not assigned to the specific element.\r\n     *\r\n     * @example Sample declaration.\r\n     *      <script type=\"text/x-magento-init\">\r\n     *          {\r\n     *              \"body\": {\r\n     *                  \"path/to/component\": {\"foo\": \"bar\"}\r\n     *              }\r\n     *          }\r\n     *      </script>\r\n     *\r\n     * @example Providing data without selector.\r\n     *      {\r\n     *          \"*\": {\r\n     *              \"path/to/component\": {\"bar\": \"baz\"}\r\n     *          }\r\n     *      }\r\n     */\r\n    return function () {\r\n        var nodes = document.querySelectorAll(scriptSelector);\r\n\r\n        _.toArray(nodes)\r\n            .map(getNodeData)\r\n            .forEach(function (item) {\r\n                _.each(item, processElems);\r\n            });\r\n\r\n        return virtuals.splice(0, virtuals.length);\r\n    };\r\n});\r\n","mage/apply/main.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    './scripts'\r\n], function (_, $, processScripts) {\r\n    'use strict';\r\n\r\n    var dataAttr = 'data-mage-init',\r\n        nodeSelector = '[' + dataAttr + ']';\r\n\r\n    /**\r\n     * Initializes components assigned to a specified element via data-* attribute.\r\n     *\r\n     * @param {HTMLElement} el - Element to initialize components with.\r\n     * @param {Object|String} config - Initial components' config.\r\n     * @param {String} component - Components' path.\r\n     */\r\n    function init(el, config, component) {\r\n        require([component], function (fn) {\r\n            var $el;\r\n\r\n            if (typeof fn === 'object') {\r\n                fn = fn[component].bind(fn);\r\n            }\r\n\r\n            if (_.isFunction(fn)) {\r\n                fn = fn.bind(null, config, el);\r\n            } else {\r\n                $el = $(el);\r\n\r\n                if ($el[component]) {\r\n                    fn = $el[component].bind($el, config);\r\n                }\r\n            }\r\n            // Init module in separate task to prevent blocking main thread.\r\n            setTimeout(fn);\r\n        }, function (error) {\r\n            if ('console' in window && typeof window.console.error === 'function') {\r\n                console.error(error);\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parses elements 'data-mage-init' attribute as a valid JSON data.\r\n     * Note: data-mage-init attribute will be removed.\r\n     *\r\n     * @param {HTMLElement} el - Element whose attribute should be parsed.\r\n     * @returns {Object}\r\n     */\r\n    function getData(el) {\r\n        var data = el.getAttribute(dataAttr);\r\n\r\n        el.removeAttribute(dataAttr);\r\n\r\n        return {\r\n            el: el,\r\n            data: JSON.parse(data)\r\n        };\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Initializes components assigned to HTML elements via [data-mage-init].\r\n         *\r\n         * @example Sample 'data-mage-init' declaration.\r\n         *      data-mage-init='{\"path/to/component\": {\"foo\": \"bar\"}}'\r\n         */\r\n        apply: function (context) {\r\n            var virtuals = processScripts(!context ? document : context),\r\n                nodes = document.querySelectorAll(nodeSelector);\r\n\r\n            _.toArray(nodes)\r\n                .map(getData)\r\n                .concat(virtuals)\r\n                .forEach(function (itemContainer) {\r\n                    var element = itemContainer.el;\r\n\r\n                    _.each(itemContainer.data, function (obj, key) {\r\n                            if (obj.mixins) {\r\n                                require(obj.mixins, function () { //eslint-disable-line max-nested-callbacks\r\n                                    var i, len;\r\n\r\n                                    for (i = 0, len = arguments.length; i < len; i++) {\r\n                                        $.extend(\r\n                                            true,\r\n                                            itemContainer.data[key],\r\n                                            arguments[i](itemContainer.data[key], element)\r\n                                        );\r\n                                    }\r\n\r\n                                    delete obj.mixins;\r\n                                    init.call(null, element, obj, key);\r\n                                });\r\n                            } else {\r\n                                init.call(null, element, obj, key);\r\n                            }\r\n\r\n                        }\r\n                    );\r\n\r\n                });\r\n        },\r\n        applyFor: init\r\n    };\r\n});\r\n","mage/msie/file-reader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Init \"readAsBinaryString\" function for FileReader class.\r\n     * It need for IE11\r\n     * @param {Blob} fileData\r\n     */\r\n    var readAsBinaryStringIEFunc = function (fileData) {\r\n        var binary = '',\r\n            self = this,\r\n            reader = new FileReader();\r\n\r\n        /**\r\n         * Read file as binary string\r\n         */\r\n        reader.onload = function () {\r\n            var bytes, length, index;\r\n\r\n            /* eslint-disable no-undef */\r\n            bytes = new Uint8Array(reader.result);\r\n            /* eslint-enable */\r\n            length = bytes.length;\r\n\r\n            for (index = 0; index < length; index++) {\r\n                binary += String.fromCharCode(bytes[index]);\r\n            }\r\n            //self.result  - readonly so assign binary\r\n            self.content = binary;\r\n            $(self).trigger('onload');\r\n        };\r\n        reader.readAsArrayBuffer(fileData);\r\n    };\r\n\r\n    if (typeof FileReader.prototype.readAsBinaryString === 'undefined') {\r\n        FileReader.prototype.readAsBinaryString = readAsBinaryStringIEFunc;\r\n    }\r\n});\r\n","Magento_Ups/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Ups/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Ups/js/model/shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Ups/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    'Magento_Ups/js/model/shipping-rates-validator',\r\n    'Magento_Ups/js/model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    upsShippingRatesValidator,\r\n    upsShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('ups', upsShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('ups', upsShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_GiftMessage/js/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.giftOptions', {\r\n        options: {\r\n            mageError: 'mage-error',\r\n            noDisplay: 'no-display',\r\n            requiredEntry: 'required-entry'\r\n        },\r\n\r\n        /**\r\n         * Initial toggle of the various gift options after widget instantiation.\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._toggleVisibility();\r\n        },\r\n\r\n        /**\r\n         * Bind a click handler to the widget's context element.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', $.proxy(this._toggleVisibility, this));\r\n            $(this.element.data('selector').id).find('.giftmessage-area')\r\n                .on('change', $.proxy(this._toggleRequired, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the visibility of the widget's context element's selector(s).\r\n         * @private\r\n         * @param {jQuery.Event} event - Click event. Target is a checkbox.\r\n         */\r\n        _toggleVisibility: function (event) {\r\n            var checkbox = event ? $(event.target) : this.element,\r\n                container = $(checkbox.data('selector').id),\r\n                _this;\r\n\r\n            if (checkbox.is(':checked')) {\r\n                container.show()\r\n                    .find('.giftmessage-area:not(:visible)').each(function (x, element) {\r\n                        if ($(element).val().length > 0) {\r\n                            $(element).change();\r\n                            container.find('a').click();\r\n                        }\r\n                    });\r\n            } else {\r\n                _this = this;\r\n                container.hide()\r\n                    .find('.input-text:not(.giftmessage-area)').each(function (x, element) {\r\n                        $(element).val(element.defaultValue).removeClass(_this.options.mageError)\r\n                            .next('div.' + _this.options.mageError).remove();\r\n                    }).end()\r\n                    .find('.giftmessage-area').val('').change().end()\r\n                    .find('.select').val('').change().end()\r\n                    .find('.checkbox:checked').prop('checked', false).click().prop('checked', false).end()\r\n                    .find('.price-box').addClass(this.options.noDisplay).end();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the From and To input fields required if a gift message has been written.\r\n         * @private\r\n         * @param {jQuery.Event} event - Change event. Target is a textarea.\r\n         */\r\n        _toggleRequired: function (event) {\r\n            var textArea = $(event.target),\r\n                length = textArea.val().length;\r\n\r\n            textArea.closest('li').prev('.fields')\r\n                .find('.input-text').toggleClass(this.options.requiredEntry, length > 0);\r\n        }\r\n    });\r\n\r\n    return $.mage.giftOptions;\r\n});\r\n","Magento_GiftMessage/js/extra-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.extraOptions', {\r\n        options: {\r\n            events: 'billingSave shippingSave',\r\n            additionalContainer: '#onepage-checkout-shipping-method-additional-load'\r\n        },\r\n\r\n        /**\r\n         * Set up event handler for requesting any additional extra options from the backend.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on(this.options.events, $.proxy(this._addExtraOptions, this));\r\n        },\r\n\r\n        /**\r\n         * Fetch the extra options using an Ajax call. Extra options include Gift Receipt and\r\n         * Printed Card.\r\n         * @private\r\n         */\r\n        _addExtraOptions: function () {\r\n            $.ajax({\r\n                url: this.options.additionalUrl,\r\n                context: this,\r\n                type: 'post',\r\n                async: false,\r\n\r\n                /** @inheritdoc */\r\n                success: function (response) {\r\n                    $(this.options.additionalContainer).html(response).trigger('contentUpdated');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.extraOptions;\r\n});\r\n","Magento_GiftMessage/js/model/gift-message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiElement',\r\n    'underscore',\r\n    'mage/url'\r\n], function (uiElement, _, url) {\r\n    'use strict';\r\n\r\n    var provider = uiElement();\r\n\r\n    return function (itemId) {\r\n        var model = {\r\n            id: 'message-' + itemId,\r\n            itemId: itemId,\r\n            observables: {},\r\n            additionalOptions: [],\r\n            submitParams: [\r\n                'recipient',\r\n                'sender',\r\n                'message'\r\n            ],\r\n\r\n            /**\r\n             * Initialize.\r\n             */\r\n            initialize: function () {\r\n                var message = false;\r\n\r\n                this.getObservable('alreadyAdded')(false);\r\n\r\n                if (this.itemId == 'orderLevel') { //eslint-disable-line eqeqeq\r\n                    message = window.giftOptionsConfig.giftMessage.hasOwnProperty(this.itemId) ?\r\n                        window.giftOptionsConfig.giftMessage[this.itemId] :\r\n                        null;\r\n                } else {\r\n                    message =\r\n                        window.giftOptionsConfig.giftMessage.hasOwnProperty('itemLevel') &&\r\n                        window.giftOptionsConfig.giftMessage.itemLevel.hasOwnProperty(this.itemId) ?\r\n                            window.giftOptionsConfig.giftMessage.itemLevel[this.itemId].message :\r\n                            null;\r\n                }\r\n\r\n                if (_.isObject(message)) {\r\n                    this.getObservable('recipient')(message.recipient);\r\n                    this.getObservable('sender')(message.sender);\r\n                    this.getObservable('message')(message.message);\r\n                    this.getObservable('alreadyAdded')(true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {String} key\r\n             * @return {*}\r\n             */\r\n            getObservable: function (key) {\r\n                this.initObservable(this.id, key);\r\n\r\n                return provider[this.getUniqueKey(this.id, key)];\r\n            },\r\n\r\n            /**\r\n             * @param {String} node\r\n             * @param {String} key\r\n             */\r\n            initObservable: function (node, key) {\r\n                if (node && !this.observables.hasOwnProperty(node)) {\r\n                    this.observables[node] = [];\r\n                }\r\n\r\n                if (key && this.observables[node].indexOf(key) === -1) {\r\n                    this.observables[node].push(key);\r\n                    provider.observe(this.getUniqueKey(node, key));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {String} node\r\n             * @param {String} key\r\n             * @return {String}\r\n             */\r\n            getUniqueKey: function (node, key) {\r\n                return node + '-' + key;\r\n            },\r\n\r\n            /**\r\n             * @param {String} key\r\n             * @return {null}\r\n             */\r\n            getConfigValue: function (key) {\r\n                return window.giftOptionsConfig.hasOwnProperty(key) ?\r\n                    window.giftOptionsConfig[key]\r\n                    : null;\r\n            },\r\n\r\n            /**\r\n             * Reset.\r\n             */\r\n            reset: function () {\r\n                this.getObservable('isClear')(true);\r\n            },\r\n\r\n            /**\r\n             * @return {Array}\r\n             */\r\n            getAfterSubmitCallbacks: function () {\r\n                var callbacks = [];\r\n\r\n                callbacks.push(this.afterSubmit);\r\n                _.each(this.additionalOptions, function (option) {\r\n                    if (_.isFunction(option.afterSubmit)) {\r\n                        callbacks.push(option.afterSubmit);\r\n                    }\r\n                });\r\n\r\n                return callbacks;\r\n            },\r\n\r\n            /**\r\n             * After submit.\r\n             */\r\n            afterSubmit: function () {\r\n                window.location.href = url.build('checkout/cart/updatePost') +\r\n                    '?form_key=' + window.checkoutConfig.formKey +\r\n                    '&cart[]';\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} remove\r\n             * @return {Object}\r\n             */\r\n            getSubmitParams: function (remove) {\r\n                var params = {},\r\n                    self = this;\r\n\r\n                _.each(this.submitParams, function (key) {\r\n                    var observable = provider[self.getUniqueKey(self.id, key)];\r\n\r\n                    if (_.isFunction(observable)) {\r\n                        params[key] = remove ? null : observable();\r\n                    }\r\n                });\r\n\r\n                if (this.additionalOptions.length) {\r\n                    params['extension_attributes'] = {};\r\n                }\r\n                _.each(this.additionalOptions, function (option) {\r\n                    if (_.isFunction(option.getSubmitParams)) {\r\n                        params['extension_attributes'] = _.extend(\r\n                            params['extension_attributes'],\r\n                            option.getSubmitParams(remove)\r\n                        );\r\n                    }\r\n                });\r\n\r\n                return params;\r\n            },\r\n\r\n            /**\r\n             * Check if gift message can be displayed\r\n             *\r\n             * @returns {Boolean}\r\n             */\r\n            isGiftMessageAvailable: function () {\r\n                var isGloballyAvailable,\r\n                    giftMessageConfig,\r\n                    itemConfig;\r\n\r\n                // itemId represent gift message level: 'orderLevel' constant or cart item ID\r\n                if (this.itemId === 'orderLevel') {\r\n                    return this.getConfigValue('isOrderLevelGiftOptionsEnabled');\r\n                }\r\n\r\n                // gift message product configuration must override system configuration\r\n                isGloballyAvailable = this.getConfigValue('isItemLevelGiftOptionsEnabled');\r\n                giftMessageConfig = window.giftOptionsConfig.giftMessage;\r\n                itemConfig = giftMessageConfig.hasOwnProperty('itemLevel') &&\r\n                    giftMessageConfig.itemLevel.hasOwnProperty(this.itemId) ?\r\n                    giftMessageConfig.itemLevel[this.itemId] :\r\n                    {};\r\n\r\n                return itemConfig.hasOwnProperty('is_available') ? itemConfig['is_available'] : isGloballyAvailable;\r\n            }\r\n        };\r\n\r\n        model.initialize();\r\n\r\n        return model;\r\n    };\r\n});\r\n","Magento_GiftMessage/js/model/url-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/model/url-builder'\r\n], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return $.extend(urlBuilder, {\r\n        storeCode: window.giftOptionsConfig.storeCode\r\n    });\r\n});\r\n","Magento_GiftMessage/js/model/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'ko'\r\n], function (_, ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        options: ko.observableArray([]),\r\n\r\n        /**\r\n         * @param {Object} option\r\n         */\r\n        addOption: function (option) {\r\n            if (!this.options().hasOwnProperty(option.itemId)) {\r\n                this.options.push({\r\n                        id: option.itemId, value: option\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} itemId\r\n         * @return {*}\r\n         */\r\n        getOptionByItemId: function (itemId) {\r\n            var option = null;\r\n\r\n            _.each(this.options(), function (data) {\r\n                if (data.id === itemId) {\r\n                    option = data.value;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return option;\r\n        }\r\n    };\r\n});\r\n","Magento_GiftMessage/js/view/gift-message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_GiftMessage/js/model/gift-message',\r\n    'Magento_GiftMessage/js/model/gift-options',\r\n    'Magento_GiftMessage/js/action/gift-options'\r\n], function (Component, GiftMessage, giftOptions, giftOptionsService) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        formBlockVisibility: null,\r\n        resultBlockVisibility: null,\r\n        model: {},\r\n\r\n        /**\r\n         * Component init\r\n         */\r\n        initialize: function () {\r\n            var self = this,\r\n                model;\r\n\r\n            this._super()\r\n                .observe('formBlockVisibility')\r\n                .observe({\r\n                    'resultBlockVisibility': false\r\n                });\r\n\r\n            this.itemId = this.itemId || 'orderLevel';\r\n            model = new GiftMessage(this.itemId);\r\n            this.model = model;\r\n            this.isResultBlockVisible();\r\n            giftOptions.addOption(model);\r\n\r\n            this.model.getObservable('isClear').subscribe(function (value) {\r\n                if (value == true) { //eslint-disable-line eqeqeq\r\n                    self.formBlockVisibility(false);\r\n                    self.model.getObservable('alreadyAdded')(true);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Is reslt block visible\r\n         */\r\n        isResultBlockVisible: function () {\r\n            var self = this;\r\n\r\n            if (this.model.getObservable('alreadyAdded')()) {\r\n                this.resultBlockVisibility(true);\r\n            }\r\n            this.model.getObservable('additionalOptionsApplied').subscribe(function (value) {\r\n                if (value == true) { //eslint-disable-line eqeqeq\r\n                    self.resultBlockVisibility(true);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @return {*}\r\n         */\r\n        getObservable: function (key) {\r\n            return this.model.getObservable(key);\r\n        },\r\n\r\n        /**\r\n         * Hide\\Show form block\r\n         */\r\n        toggleFormBlockVisibility: function () {\r\n            if (!this.model.getObservable('alreadyAdded')()) {\r\n                this.formBlockVisibility(!this.formBlockVisibility());\r\n            } else {\r\n                this.resultBlockVisibility(!this.resultBlockVisibility());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Edit options\r\n         */\r\n        editOptions: function () {\r\n            this.resultBlockVisibility(false);\r\n            this.formBlockVisibility(true);\r\n        },\r\n\r\n        /**\r\n         * Delete options\r\n         */\r\n        deleteOptions: function () {\r\n            giftOptionsService(this.model, true);\r\n        },\r\n\r\n        /**\r\n         * Hide form block\r\n         */\r\n        hideFormBlock: function () {\r\n            this.formBlockVisibility(false);\r\n\r\n            if (this.model.getObservable('alreadyAdded')()) {\r\n                this.resultBlockVisibility(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        hasActiveOptions: function () {\r\n            var regionData = this.getRegion('additionalOptions'),\r\n                options = regionData(),\r\n                i;\r\n\r\n            for (i = 0; i < options.length; i++) {\r\n                if (options[i].isActive()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isActive: function () {\r\n            return this.model.isGiftMessageAvailable();\r\n        },\r\n\r\n        /**\r\n         * Submit options\r\n         */\r\n        submitOptions: function () {\r\n            giftOptionsService(this.model);\r\n        }\r\n    });\r\n});\r\n","Magento_GiftMessage/js/action/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_GiftMessage/js/model/url-builder',\r\n    'mage/storage',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'mage/url',\r\n    'Magento_Checkout/js/model/quote',\r\n    'underscore'\r\n], function (urlBuilder, storage, messageList, errorProcessor, url, quote, _) {\r\n    'use strict';\r\n\r\n    return function (giftMessage, remove) {\r\n        var serviceUrl;\r\n\r\n        url.setBaseUrl(giftMessage.getConfigValue('baseUrl'));\r\n\r\n        if (giftMessage.getConfigValue('isCustomerLoggedIn')) {\r\n            serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message', {});\r\n\r\n            if (giftMessage.itemId != 'orderLevel') { //eslint-disable-line eqeqeq\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message/:itemId', {\r\n                    itemId: giftMessage.itemId\r\n                });\r\n            }\r\n        } else {\r\n            serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/gift-message', {\r\n                cartId: quote.getQuoteId()\r\n            });\r\n\r\n            if (giftMessage.itemId != 'orderLevel') { //eslint-disable-line eqeqeq\r\n                serviceUrl = urlBuilder.createUrl(\r\n                    '/guest-carts/:cartId/gift-message/:itemId',\r\n                    {\r\n                        cartId: quote.getQuoteId(), itemId: giftMessage.itemId\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        messageList.clear();\r\n\r\n        storage.post(\r\n            serviceUrl,\r\n            JSON.stringify({\r\n                'gift_message': giftMessage.getSubmitParams(remove)\r\n            })\r\n        ).done(function () {\r\n            giftMessage.reset();\r\n            _.each(giftMessage.getAfterSubmitCallbacks(), function (callback) {\r\n                if (_.isFunction(callback)) {\r\n                    callback();\r\n                }\r\n            });\r\n        }).fail(function (response) {\r\n            errorProcessor.process(response);\r\n        });\r\n    };\r\n});\r\n","Vertex_Tax/js/form/depend-field-checker.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Makes sure a value is set if its depending field is also set.\r\n         *\r\n         * @param dependField\r\n         * @param valueCheck\r\n         * @returns {boolean}\r\n         */\r\n        validateValues : function (dependField, valueCheck) {\r\n            if ($(dependField).length) {\r\n                let dependValue = $(dependField).val();\r\n\r\n                return !(dependValue && !valueCheck);\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n});\r\n","Vertex_Tax/js/form/element/custom-option-flex-field-select.js":"/*\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(['underscore', 'Magento_Ui/js/form/element/select'], function (_, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        /**\r\n         * Overwrites the parent's filter to allow for checking if a value is\r\n         * in an array and for allowing the value of \"unmapped\" through all\r\n         * filters\r\n         *\r\n         * @param {String} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return Array.isArray(item[field]) && item[field].includes(value) ||\r\n                    item[field] === value ||\r\n                    item.value === '' ||\r\n                    item.value === 'unmapped';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        }\r\n    });\r\n});\r\n","Vertex_Tax/js/model/customer-country-validation.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Vertex_Tax/js/form/depend-field-checker',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, dependFieldChecker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Validates if customer added a VAT number, then selecting a Country is required.\r\n     */\r\n    return function (config) {\r\n        $.validator.addMethod(\r\n            \"vertex-customer-country\",\r\n            function (value, element, dependField) {\r\n                return dependFieldChecker.validateValues(dependField, value);\r\n            },\r\n            $.mage.__(\"Please select a Country.\")\r\n        );\r\n    }\r\n});\r\n","Vertex_Tax/js/model/set-checkout-messages.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine(\r\n    [\r\n        'underscore',\r\n        'Magento_Customer/js/customer-data',\r\n        'Magento_Ui/js/model/messageList'\r\n    ],\r\n    function (_, customerData, messageContainer) {\r\n        'use strict';\r\n\r\n        /**\r\n         * A utility for observing message updates in session storage. It is designed to subscribe to\r\n         * customer data updates and forward messages to the appropriate messageList model.\r\n         */\r\n        return function () {\r\n            var typeMap = {\r\n                    'success': 'addSuccessMessage',\r\n                    'warning': 'addErrorMessage',\r\n                    'error': 'addErrorMessage'\r\n                },\r\n\r\n                /**\r\n                 * Observe message section data changes and forward to the error processor.\r\n                 * @param {Object} data - The observable payload.\r\n                 * @return void\r\n                 */\r\n                messageSubscriptionCallback = function (data) {\r\n                    if ('messages' in data) {\r\n                        _.each(data.messages, function (message) {\r\n                            if (message.type in typeMap) {\r\n                                messageContainer[typeMap[message.type]]({\r\n                                    'message': message.text\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n\r\n            customerData.get('messages').subscribe(messageSubscriptionCallback);\r\n        };\r\n    }\r\n);\r\n","Vertex_Tax/js/view/checkout/summary/tax-messages.js":"/**\r\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\r\n * @author     Mediotype                     https://www.mediotype.com/\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/totals'\r\n], function (_, ko, Component, totals) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            messages: []\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.subscribeTotals();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super().observe('messages');\r\n            this.getMessages();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieve messages\r\n         */\r\n        getMessages: function () {\r\n            var taxSegment = totals.getSegment('tax');\r\n\r\n            this.messages([]);\r\n\r\n            if (taxSegment && taxSegment['extension_attributes']) {\r\n                this.messages(taxSegment['extension_attributes']['vertex_tax_calculation_messages']);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Subscribe totals observer\r\n         */\r\n        subscribeTotals: function () {\r\n            var self = this;\r\n\r\n            totals.totals.subscribe(\r\n                function () {\r\n                    self.getMessages();\r\n                },\r\n                null,\r\n                'change'\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_ConfigurableProduct/js/configurable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'mage/translate',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/jquery.parsequery',\r\n    'fotoramaVideoEvents'\r\n], function ($, _, mageTemplate, $t, priceUtils) {\r\n    'use strict';\r\n\r\n    $.widget('mage.configurable', {\r\n        options: {\r\n            superSelector: '.super-attribute-select',\r\n            selectSimpleProduct: '[name=\"selected_configurable_option\"]',\r\n            priceHolderSelector: '.price-box',\r\n            spConfig: {},\r\n            state: {},\r\n            priceFormat: {},\r\n            optionTemplate: '<%- data.label %>' +\r\n            '<% if (typeof data.finalPrice.value !== \"undefined\") { %>' +\r\n            ' <%- data.finalPrice.formatted %>' +\r\n            '<% } %>',\r\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\r\n            mediaGalleryInitial: null,\r\n            slyOldPriceSelector: '.sly-old-price',\r\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label',\r\n\r\n            /**\r\n             * Defines the mechanism of how images of a gallery should be\r\n             * updated when user switches between configurations of a product.\r\n             *\r\n             * As for now value of this option can be either 'replace' or 'prepend'.\r\n             *\r\n             * @type {String}\r\n             */\r\n            gallerySwitchStrategy: 'replace',\r\n            tierPriceTemplateSelector: '#tier-prices-template',\r\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\r\n            tierPriceTemplate: ''\r\n        },\r\n\r\n        /**\r\n         * Creates widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            // Initial setting of various option values\r\n            this._initializeOptions();\r\n\r\n            // Override defaults with URL query parameters and/or inputs values\r\n            this._overrideDefaults();\r\n\r\n            // Change events to check select reloads\r\n            this._setupChangeEvents();\r\n\r\n            // Fill state\r\n            this._fillState();\r\n\r\n            // Setup child and prev/next settings\r\n            this._setChildSettings();\r\n\r\n            // Setup/configure values to inputs\r\n            this._configureForValues();\r\n\r\n            $(this.element).trigger('configurable.initialized');\r\n        },\r\n\r\n        /**\r\n         * Initialize tax configuration, initial settings, and options values.\r\n         * @private\r\n         */\r\n        _initializeOptions: function () {\r\n            var options = this.options,\r\n                gallery = $(options.mediaGallerySelector),\r\n                priceBoxOptions = $(this.options.priceHolderSelector).priceBox('option').priceConfig || null;\r\n\r\n            if (priceBoxOptions && priceBoxOptions.optionTemplate) {\r\n                options.optionTemplate = priceBoxOptions.optionTemplate;\r\n            }\r\n\r\n            if (priceBoxOptions && priceBoxOptions.priceFormat) {\r\n                options.priceFormat = priceBoxOptions.priceFormat;\r\n            }\r\n            options.optionTemplate = mageTemplate(options.optionTemplate);\r\n            options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\r\n\r\n            options.settings = options.spConfig.containerId ?\r\n                $(options.spConfig.containerId).find(options.superSelector) :\r\n                $(options.superSelector);\r\n\r\n            options.values = options.spConfig.defaultValues || {};\r\n            options.parentImage = $('[data-role=base-image-container] img').attr('src');\r\n\r\n            this.inputSimpleProduct = this.element.find(options.selectSimpleProduct);\r\n\r\n            gallery.data('gallery') ?\r\n                this._onGalleryLoaded(gallery) :\r\n                gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\r\n\r\n        },\r\n\r\n        /**\r\n         * Override default options values settings with either URL query parameters or\r\n         * initialized inputs values.\r\n         * @private\r\n         */\r\n        _overrideDefaults: function () {\r\n            var hashIndex = window.location.href.indexOf('#');\r\n\r\n            if (hashIndex !== -1) {\r\n                this._parseQueryParams(window.location.href.substr(hashIndex + 1));\r\n            }\r\n\r\n            if (this.options.spConfig.inputsInitialized) {\r\n                this._setValuesByAttribute();\r\n            }\r\n\r\n            this._setInitialOptionsLabels();\r\n        },\r\n\r\n        /**\r\n         * Parse query parameters from a query string and set options values based on the\r\n         * key value pairs of the parameters.\r\n         * @param {*} queryString - URL query string containing query parameters.\r\n         * @private\r\n         */\r\n        _parseQueryParams: function (queryString) {\r\n            var queryParams = $.parseQuery({\r\n                query: queryString\r\n            });\r\n\r\n            $.each(queryParams, $.proxy(function (key, value) {\r\n                if (this.options.spConfig.attributes[key] !== undefined &&\r\n                    _.find(this.options.spConfig.attributes[key].options, function (element) {\r\n                        return element.id === value;\r\n                    })) {\r\n                    this.options.values[key] = value;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Override default options values with values based on each element's attribute\r\n         * identifier.\r\n         * @private\r\n         */\r\n        _setValuesByAttribute: function () {\r\n            this.options.values = {};\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId;\r\n\r\n                if (element.value) {\r\n                    attributeId = element.id.replace(/[a-z]*/, '');\r\n\r\n                    if (this.options.spConfig.attributes[attributeId] !== undefined &&\r\n                        _.find(this.options.spConfig.attributes[attributeId].options, function (optionElement) {\r\n                            return optionElement.id === element.value;\r\n                        })) {\r\n                        this.options.values[attributeId] = element.value;\r\n                    }\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set additional field with initial label to be used when switching between options with different prices.\r\n         * @private\r\n         */\r\n        _setInitialOptionsLabels: function () {\r\n            $.each(this.options.spConfig.attributes, $.proxy(function (index, element) {\r\n                $.each(element.options, $.proxy(function (optIndex, optElement) {\r\n                    this.options.spConfig.attributes[index].options[optIndex].initialLabel = optElement.label;\r\n                }, this));\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set up .on('change') events for each option element to configure the option.\r\n         * @private\r\n         */\r\n        _setupChangeEvents: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                $(element).on('change', this, this._configure);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Iterate through the option settings and set each option's element configuration,\r\n         * attribute identifier. Set the state based on the attribute identifier.\r\n         * @private\r\n         */\r\n        _fillState: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId = element.id.replace(/[a-z]*/, '');\r\n\r\n                if (attributeId && this.options.spConfig.attributes[attributeId]) {\r\n                    element.config = this.options.spConfig.attributes[attributeId];\r\n                    element.attributeId = attributeId;\r\n                    this.options.state[attributeId] = false;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set each option's child settings, and next/prev option setting. Fill (initialize)\r\n         * an option's list of selections as needed or disable an option's setting.\r\n         * @private\r\n         */\r\n        _setChildSettings: function () {\r\n            var childSettings = [],\r\n                settings = this.options.settings,\r\n                index = settings.length,\r\n                option;\r\n\r\n            while (index--) {\r\n                option = settings[index];\r\n\r\n                if (index) {\r\n                    option.disabled = true;\r\n                } else {\r\n                    this._fillSelect(option);\r\n                }\r\n\r\n                _.extend(option, {\r\n                    childSettings: childSettings.slice(),\r\n                    prevSetting: settings[index - 1],\r\n                    nextSetting: settings[index + 1]\r\n                });\r\n\r\n                childSettings.push(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup for all configurable option settings. Set the value of the option and configure\r\n         * the option, which sets its state, and initializes the option's choices, etc.\r\n         * @private\r\n         */\r\n        _configureForValues: function () {\r\n            if (this.options.values) {\r\n                this.options.settings.each($.proxy(function (index, element) {\r\n                    var attributeId = element.attributeId;\r\n\r\n                    element.value = this.options.values[attributeId] || '';\r\n                    this._configureElement(element);\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for configuring an option.\r\n         * @private\r\n         * @param {Object} event - Event triggered to configure an option.\r\n         */\r\n        _configure: function (event) {\r\n            event.data._configureElement(this);\r\n        },\r\n\r\n        /**\r\n         * Configure an option, initializing it's state and enabling related options, which\r\n         * populates the related option's selection and resets child option selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _configureElement: function (element) {\r\n            this.simpleProduct = this._getSimpleProductId(element);\r\n\r\n            if (element.value) {\r\n                this.options.state[element.config.id] = element.value;\r\n\r\n                if (element.nextSetting) {\r\n                    element.nextSetting.disabled = false;\r\n                    this._fillSelect(element.nextSetting);\r\n                    this._resetChildren(element.nextSetting);\r\n                } else {\r\n                    if (!!document.documentMode) { //eslint-disable-line\r\n                        this.inputSimpleProduct.val(element.options[element.selectedIndex].config.allowedProducts[0]);\r\n                    } else {\r\n                        this.inputSimpleProduct.val(element.selectedOptions[0].config.allowedProducts[0]);\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetChildren(element);\r\n            }\r\n\r\n            this._reloadPrice();\r\n            this._displayRegularPriceBlock(this.simpleProduct);\r\n            this._displayTierPriceBlock(this.simpleProduct);\r\n            this._displayNormalPriceLabel();\r\n            this._changeProductImage();\r\n        },\r\n\r\n        /**\r\n         * Change displayed product image according to chosen options of configurable product\r\n         *\r\n         * @private\r\n         */\r\n        _changeProductImage: function () {\r\n            var images,\r\n                initialImages = this.options.mediaGalleryInitial,\r\n                gallery = $(this.options.mediaGallerySelector).data('gallery');\r\n\r\n            if (_.isUndefined(gallery)) {\r\n                $(this.options.mediaGallerySelector).on('gallery:loaded', function () {\r\n                    this._changeProductImage();\r\n                }.bind(this));\r\n\r\n                return;\r\n            }\r\n\r\n            images = this.options.spConfig.images[this.simpleProduct];\r\n\r\n            if (images) {\r\n                images = this._sortImages(images);\r\n\r\n                if (this.options.gallerySwitchStrategy === 'prepend') {\r\n                    images = images.concat(initialImages);\r\n                }\r\n\r\n                images = $.extend(true, [], images);\r\n                images = this._setImageIndex(images);\r\n\r\n                gallery.updateData(images);\r\n                this._addFotoramaVideoEvents(false);\r\n            } else {\r\n                gallery.updateData(initialImages);\r\n                this._addFotoramaVideoEvents(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add video events\r\n         *\r\n         * @param {Boolean} isInitial\r\n         * @private\r\n         */\r\n        _addFotoramaVideoEvents: function (isInitial) {\r\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\r\n                return;\r\n            }\r\n\r\n            if (isInitial) {\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\r\n\r\n                return;\r\n            }\r\n\r\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\r\n                selectedOption: this.simpleProduct,\r\n                dataMergeStrategy: this.options.gallerySwitchStrategy\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sorting images array\r\n         *\r\n         * @private\r\n         */\r\n        _sortImages: function (images) {\r\n            return _.sortBy(images, function (image) {\r\n                return image.position;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set correct indexes for image set.\r\n         *\r\n         * @param {Array} images\r\n         * @private\r\n         */\r\n        _setImageIndex: function (images) {\r\n            var length = images.length,\r\n                i;\r\n\r\n            for (i = 0; length > i; i++) {\r\n                images[i].i = i + 1;\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * For a given option element, reset all of its selectable options. Clear any selected\r\n         * index, disable the option choice, and reset the option's state if necessary.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _resetChildren: function (element) {\r\n            if (element.childSettings) {\r\n                _.each(element.childSettings, function (set) {\r\n                    set.selectedIndex = 0;\r\n                    set.disabled = true;\r\n                });\r\n\r\n                if (element.config) {\r\n                    this.options.state[element.config.id] = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Populates an option's selectable choices.\r\n         * @private\r\n         * @param {*} element - Element associated with a configurable option.\r\n         */\r\n        _fillSelect: function (element) {\r\n            var attributeId = element.id.replace(/[a-z]*/, ''),\r\n                options = this._getAttributeOptions(attributeId),\r\n                prevConfig,\r\n                index = 1,\r\n                allowedProducts,\r\n                allowedProductsByOption,\r\n                allowedProductsAll,\r\n                i,\r\n                j,\r\n                finalPrice = parseFloat(this.options.spConfig.prices.finalPrice.amount),\r\n                optionFinalPrice,\r\n                optionPriceDiff,\r\n                optionPrices = this.options.spConfig.optionPrices,\r\n                allowedOptions = [],\r\n                indexKey,\r\n                allowedProductMinPrice,\r\n                allowedProductsAllMinPrice;\r\n\r\n            this._clearSelect(element);\r\n            element.options[0] = new Option('', '');\r\n            element.options[0].innerHTML = this.options.spConfig.chooseText;\r\n            prevConfig = false;\r\n\r\n            if (element.prevSetting) {\r\n                prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\r\n            }\r\n\r\n            if (options) {\r\n                for (indexKey in this.options.spConfig.index) {\r\n                    /* eslint-disable max-depth */\r\n                    if (this.options.spConfig.index.hasOwnProperty(indexKey)) {\r\n                        allowedOptions = allowedOptions.concat(_.values(this.options.spConfig.index[indexKey]));\r\n                    }\r\n                }\r\n\r\n                if (prevConfig) {\r\n                    allowedProductsByOption = {};\r\n                    allowedProductsAll = [];\r\n\r\n                    for (i = 0; i < options.length; i++) {\r\n                        /* eslint-disable max-depth */\r\n                        for (j = 0; j < options[i].products.length; j++) {\r\n                            // prevConfig.config can be undefined\r\n                            if (prevConfig.config &&\r\n                                prevConfig.config.allowedProducts &&\r\n                                prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {\r\n                                if (!allowedProductsByOption[i]) {\r\n                                    allowedProductsByOption[i] = [];\r\n                                }\r\n                                allowedProductsByOption[i].push(options[i].products[j]);\r\n                                allowedProductsAll.push(options[i].products[j]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (typeof allowedProductsAll[0] !== 'undefined' &&\r\n                        typeof optionPrices[allowedProductsAll[0]] !== 'undefined') {\r\n                        allowedProductsAllMinPrice = this._getAllowedProductWithMinPrice(allowedProductsAll);\r\n                        finalPrice = parseFloat(optionPrices[allowedProductsAllMinPrice].finalPrice.amount);\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < options.length; i++) {\r\n                    if (prevConfig && typeof allowedProductsByOption[i] === 'undefined') {\r\n                        continue; //jscs:ignore disallowKeywords\r\n                    }\r\n\r\n                    allowedProducts = prevConfig ? allowedProductsByOption[i] : options[i].products.slice(0);\r\n                    optionPriceDiff = 0;\r\n\r\n                    if (typeof allowedProducts[0] !== 'undefined' &&\r\n                        typeof optionPrices[allowedProducts[0]] !== 'undefined') {\r\n                        allowedProductMinPrice = this._getAllowedProductWithMinPrice(allowedProducts);\r\n                        optionFinalPrice = parseFloat(optionPrices[allowedProductMinPrice].finalPrice.amount);\r\n                        optionPriceDiff = optionFinalPrice - finalPrice;\r\n                        options[i].label = options[i].initialLabel;\r\n\r\n                        if (optionPriceDiff !== 0) {\r\n                            options[i].label += ' ' + priceUtils.formatPrice(\r\n                                optionPriceDiff,\r\n                                this.options.priceFormat,\r\n                                true\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    if (allowedProducts.length > 0 || _.include(allowedOptions, options[i].id)) {\r\n                        options[i].allowedProducts = allowedProducts;\r\n                        element.options[index] = new Option(this._getOptionLabel(options[i]), options[i].id);\r\n\r\n                        if (typeof options[i].price !== 'undefined') {\r\n                            element.options[index].setAttribute('price', options[i].price);\r\n                        }\r\n\r\n                        if (allowedProducts.length === 0) {\r\n                            element.options[index].disabled = true;\r\n                        }\r\n\r\n                        element.options[index].config = options[i];\r\n                        index++;\r\n                    }\r\n\r\n                    /* eslint-enable max-depth */\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate the label associated with a configurable option. This includes the option's\r\n         * label or value and the option's price.\r\n         * @private\r\n         * @param {*} option - A single choice among a group of choices for a configurable option.\r\n         * @return {String} The option label with option value and price (e.g. Black +1.99)\r\n         */\r\n        _getOptionLabel: function (option) {\r\n            return option.label;\r\n        },\r\n\r\n        /**\r\n         * Removes an option's selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _clearSelect: function (element) {\r\n            var i;\r\n\r\n            for (i = element.options.length - 1; i >= 0; i--) {\r\n                element.remove(i);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Retrieve the attribute options associated with a specific attribute Id.\r\n         * @private\r\n         * @param {Number} attributeId - The id of the attribute whose configurable options are sought.\r\n         * @return {Object} Object containing the attribute options.\r\n         */\r\n        _getAttributeOptions: function (attributeId) {\r\n            if (this.options.spConfig.attributes[attributeId]) {\r\n                return this.options.spConfig.attributes[attributeId].options;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload the price of the configurable product incorporating the prices of all of the\r\n         * configurable product's option selections.\r\n         */\r\n        _reloadPrice: function () {\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', this._getPrices());\r\n        },\r\n\r\n        /**\r\n         * Get product various prices\r\n         * @returns {{}}\r\n         * @private\r\n         */\r\n        _getPrices: function () {\r\n            var prices = {},\r\n                elements = _.toArray(this.options.settings),\r\n                allowedProduct;\r\n\r\n            _.each(elements, function (element) {\r\n                var selected = element.options[element.selectedIndex],\r\n                    config = selected && selected.config,\r\n                    priceValue = {};\r\n\r\n                if (config && config.allowedProducts.length === 1) {\r\n                    priceValue = this._calculatePrice(config);\r\n                } else if (element.value) {\r\n                    allowedProduct = this._getAllowedProductWithMinPrice(config.allowedProducts);\r\n                    priceValue = this._calculatePrice({\r\n                        'allowedProducts': [\r\n                            allowedProduct\r\n                        ]\r\n                    });\r\n                }\r\n\r\n                if (!_.isEmpty(priceValue)) {\r\n                    prices.prices = priceValue;\r\n                }\r\n            }, this);\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Get product with minimum price from selected options.\r\n         *\r\n         * @param {Array} allowedProducts\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\r\n            var optionPrices = this.options.spConfig.optionPrices,\r\n                product = {},\r\n                optionMinPrice, optionFinalPrice;\r\n\r\n            _.each(allowedProducts, function (allowedProduct) {\r\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\r\n\r\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\r\n                    optionMinPrice = optionFinalPrice;\r\n                    product = allowedProduct;\r\n                }\r\n            }, this);\r\n\r\n            return product;\r\n        },\r\n\r\n        /**\r\n         * Returns prices for configured products\r\n         *\r\n         * @param {*} config - Products configuration\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _calculatePrice: function (config) {\r\n            var displayPrices = $(this.options.priceHolderSelector).priceBox('option').prices,\r\n                newPrices = this.options.spConfig.optionPrices[_.first(config.allowedProducts)];\r\n\r\n            _.each(displayPrices, function (price, code) {\r\n                if (newPrices[code]) {\r\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\r\n                }\r\n            });\r\n\r\n            return displayPrices;\r\n        },\r\n\r\n        /**\r\n         * Returns Simple product Id\r\n         *  depending on current selected option.\r\n         *\r\n         * @private\r\n         * @param {HTMLElement} element\r\n         * @returns {String|undefined}\r\n         */\r\n        _getSimpleProductId: function (element) {\r\n            // TODO: Rewrite algorithm. It should return ID of\r\n            //        simple product based on selected options.\r\n            var allOptions = element.config.options,\r\n                value = element.value,\r\n                config;\r\n\r\n            config = _.filter(allOptions, function (option) {\r\n                return option.id === value;\r\n            });\r\n            config = _.first(config);\r\n\r\n            return _.isEmpty(config) ?\r\n                undefined :\r\n                _.first(config.allowedProducts);\r\n\r\n        },\r\n\r\n        /**\r\n         * Show or hide regular price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayRegularPriceBlock: function (optionId) {\r\n            var shouldBeShown = true;\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = false;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown &&\r\n                this.options.spConfig.optionPrices[optionId].oldPrice.amount !==\r\n                this.options.spConfig.optionPrices[optionId].finalPrice.amount\r\n            ) {\r\n                $(this.options.slyOldPriceSelector).show();\r\n            } else {\r\n                $(this.options.slyOldPriceSelector).hide();\r\n            }\r\n\r\n            $(document).trigger('updateMsrpPriceBlock',\r\n                [\r\n                    optionId,\r\n                    this.options.spConfig.optionPrices\r\n                ]\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Show or hide normal price label\r\n         *\r\n         * @private\r\n         */\r\n        _displayNormalPriceLabel: function () {\r\n            var shouldBeShown = false;\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = true;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown) {\r\n                $(this.options.normalPriceLabelSelector).show();\r\n            } else {\r\n                $(this.options.normalPriceLabelSelector).hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback which fired after gallery gets initialized.\r\n         *\r\n         * @param {HTMLElement} element - DOM element associated with gallery.\r\n         */\r\n        _onGalleryLoaded: function (element) {\r\n            var galleryObject = element.data('gallery');\r\n\r\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\r\n        },\r\n\r\n        /**\r\n         * Show or hide tier price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionId) {\r\n            var options, tierPriceHtml;\r\n\r\n            if (typeof optionId != 'undefined' &&\r\n                this.options.spConfig.optionPrices[optionId].tierPrices != [] // eslint-disable-line eqeqeq\r\n            ) {\r\n                options = this.options.spConfig.optionPrices[optionId];\r\n\r\n                if (this.options.tierPriceTemplate) {\r\n                    tierPriceHtml = mageTemplate(this.options.tierPriceTemplate, {\r\n                        'tierPrices': options.tierPrices,\r\n                        '$t': $t,\r\n                        'currencyFormat': this.options.spConfig.currencyFormat,\r\n                        'priceUtils': priceUtils\r\n                    });\r\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\r\n                }\r\n            } else {\r\n                $(this.options.tierPriceBlockSelector).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.configurable;\r\n});\r\n","Magento_ConfigurableProduct/js/configurable-customer-data.js":"require([\r\n    'jquery',\r\n    'Magento_ConfigurableProduct/js/options-updater'\r\n], function ($, Updater) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n            formSelector: '#product_addtocart_form'\r\n        },\r\n        configurableWidgetName = 'mageConfigurable',\r\n        widgetInitEvent = 'configurable.initialized',\r\n\r\n    /**\r\n    * Sets all configurable attribute's selected values\r\n    */\r\n    updateConfigurableOptions = function () {\r\n        var configurableWidget = $(selectors.formSelector).data(configurableWidgetName);\r\n\r\n        if (!configurableWidget) {\r\n            return;\r\n        }\r\n        configurableWidget.options.values = this.productOptions || {};\r\n        configurableWidget._configureForValues();\r\n    },\r\n    updater = new Updater(widgetInitEvent, updateConfigurableOptions);\r\n\r\n    updater.listen();\r\n});\r\n","Magento_ConfigurableProduct/js/catalog-add-to-cart-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'Magento_ConfigurableProduct/js/product/view/product-info-resolver'\r\n], function (_, $, productInfoResolver) {\r\n    'use strict';\r\n\r\n    return function (widget) {\r\n\r\n        $.widget('mage.catalogAddToCart', widget, {\r\n            /**\r\n             * @param {jQuery} form\r\n             */\r\n            ajaxSubmit: function (form) {\r\n                var isConfigurable = !!_.find(form.serializeArray(), function (item) {\r\n                    return item.name.indexOf('super_attribute') !== -1;\r\n                });\r\n\r\n                if (isConfigurable) {\r\n                    this.options.productInfoResolver = productInfoResolver;\r\n                }\r\n\r\n                return this._super(form);\r\n            }\r\n        });\r\n\r\n        return $.mage.catalogAddToCart;\r\n    };\r\n});\r\n","Magento_ConfigurableProduct/js/options-updater.js":"define([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, _, customerData) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n        formSelector: '#product_addtocart_form',\r\n        productIdSelector: '#product_addtocart_form [name=\"product\"]',\r\n        itemIdSelector: '#product_addtocart_form [name=\"item\"]'\r\n    },\r\n    cartData = customerData.get('cart'),\r\n    productId = $(selectors.productIdSelector).val(),\r\n    itemId = $(selectors.itemIdSelector).val(),\r\n\r\n    /**\r\n    * set productOptions according to cart data from customer-data\r\n    *\r\n    * @param {Object} data - cart data from customer-data\r\n    * @returns {Boolean} - whether the new options differ from previous\r\n    */\r\n    setProductOptions = function (data) {\r\n        var changedProductOptions;\r\n\r\n        if (!(data && data.items && data.items.length && productId)) {\r\n            return false;\r\n        }\r\n        changedProductOptions = _.find(data.items, function (item) {\r\n            if (item['item_id'] === itemId) {\r\n                return item['product_id'] === productId;\r\n            }\r\n        });\r\n        changedProductOptions = changedProductOptions && changedProductOptions.options &&\r\n            changedProductOptions.options.reduce(function (obj, val) {\r\n                obj[val['option_id']] = val['option_value'];\r\n\r\n                return obj;\r\n            }, {});\r\n\r\n        if (JSON.stringify(this.productOptions || {}) === JSON.stringify(changedProductOptions || {})) {\r\n            return false;\r\n        }\r\n\r\n        this.productOptions = changedProductOptions;\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n    * Listens to update of cart data or options initialization and update selected option according to customer data\r\n    *\r\n    */\r\n    listen = function () {\r\n        cartData.subscribe(function (updateCartData) {\r\n            if (this.setProductOptions(updateCartData)) {\r\n                this.updateOptions();\r\n            }\r\n        }.bind(this));\r\n        $(selectors.formSelector).on(this.eventName, function () {\r\n            this.setProductOptions(cartData());\r\n            this.updateOptions();\r\n        }.bind(this));\r\n    },\r\n\r\n    /**\r\n    * Updater constructor function\r\n    *\r\n    */\r\n    Updater = function (eventName, updateOptionsCallback) {\r\n        if (this instanceof Updater) {\r\n            this.eventName = eventName;\r\n            this.updateOptions = updateOptionsCallback;\r\n            this.productOptions = {};\r\n        }\r\n    };\r\n\r\n    Updater.prototype.setProductOptions = setProductOptions;\r\n    Updater.prototype.listen = listen;\r\n\r\n    return Updater;\r\n});\r\n","Magento_ConfigurableProduct/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\nrequire([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add selected configurable attributes to redirect url\r\n     *\r\n     * @see Magento_Catalog/js/catalog-add-to-cart\r\n     */\r\n    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {\r\n        $(data.form).find('select[name*=\"super\"]').each(function (index, item) {\r\n            data.redirectParameters.push(item.config.id + '=' + $(item).val());\r\n        });\r\n    });\r\n});\r\n","Magento_ConfigurableProduct/js/product/view/product-info-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function (_, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns info about configurable products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var optionValues = [],\r\n            product = _.findWhere($form.serializeArray(), {\r\n                name: 'product'\r\n            }),\r\n            productId;\r\n\r\n        if (!_.isUndefined(product)) {\r\n            productId = product.value;\r\n            _.each($form.serializeArray(), function (item) {\r\n                if (item.name.indexOf('super_attribute') !== -1) {\r\n                    optionValues.push(item.value);\r\n                }\r\n            });\r\n            optionValues.sort();\r\n            productInfo().push(\r\n                {\r\n                    'id': productId,\r\n                    'optionValues': optionValues\r\n                }\r\n            );\r\n        }\r\n\r\n        return _.uniq(productInfo(), function (item) {\r\n            var optionValuesStr = item.optionValues ? item.optionValues.join() : '';\r\n\r\n            return item.id + optionValuesStr;\r\n        });\r\n    };\r\n});\r\n\r\n","Magento_ReCaptchaPaypal/js/reCaptchaPaypal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'Magento_ReCaptchaFrontendUi/js/reCaptcha',\r\n        'jquery'\r\n    ],\r\n    function (Component, $) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * Recaptcha callback\r\n             * @param {String} token\r\n             */\r\n            reCaptchaCallback: function (token) {\r\n                this.tokenField.value = token;\r\n                this.$parentForm.trigger('captcha:endExecute');\r\n            },\r\n\r\n            /**\r\n             * Initialize parent form.\r\n             *\r\n             * @param {Object} parentForm\r\n             * @param {String} widgetId\r\n             */\r\n            initParentForm: function (parentForm, widgetId) {\r\n                var me = this;\r\n\r\n                parentForm.on('captcha:startExecute', function (event) {\r\n                    if (!me.tokenField.value && me.getIsInvisibleRecaptcha()) {\r\n                        // eslint-disable-next-line no-undef\r\n                        grecaptcha.execute(widgetId);\r\n                        event.preventDefault(event);\r\n                        event.stopImmediatePropagation();\r\n                    } else {\r\n                        me.$parentForm.trigger('captcha:endExecute');\r\n                    }\r\n                });\r\n\r\n                // Create a virtual token field\r\n                this.tokenField = $('<input type=\"text\" name=\"token\" style=\"display: none\" />')[0];\r\n                this.$parentForm = parentForm;\r\n                parentForm.append(this.tokenField);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_ReCaptchaPaypal/js/payflowpro-method-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/model/payment/additional-validators'\r\n], function ($, additionalValidators) {\r\n    'use strict';\r\n\r\n    return function (originalComponent) {\r\n        return originalComponent.extend({\r\n            /**\r\n             * Initializes reCaptcha\r\n             */\r\n            placeOrder: function () {\r\n                var original = this._super.bind(this),\r\n                    // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n                    isEnabledForPaypal = window.checkoutConfig.recaptcha_paypal,\r\n                    // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n                    paymentFormSelector = $('#co-payment-form'),\r\n                    startEvent = 'captcha:startExecute',\r\n                    endEvent = 'captcha:endExecute';\r\n\r\n                if (!this.validateHandler() || !additionalValidators.validate() || !isEnabledForPaypal) {\r\n                    return original();\r\n                }\r\n\r\n                paymentFormSelector.off(endEvent).on(endEvent, function () {\r\n                    original();\r\n                    paymentFormSelector.off(endEvent);\r\n                });\r\n\r\n                paymentFormSelector.trigger(startEvent);\r\n            }\r\n        });\r\n    };\r\n});\r\n","Amazon_Login/js/amazon-csrf.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine([\r\n    'sjcl',\r\n    'jquery',\r\n    'mage/cookies'\r\n], function (sjcl, $) {\r\n    'use strict';\r\n\r\n    return {\r\n        options: {\r\n            wordsLength: 8,\r\n            cookieName: 'amazon-csrf-state'\r\n        },\r\n\r\n        /**\r\n         * Create random string for Amazon CSRF cookie\r\n         */\r\n        generateNewValue: function () {\r\n            var randomString = sjcl.codec.base64.fromBits(sjcl.random.randomWords(this.options.wordsLength));\r\n\r\n            $.mage.cookies.set(this.options.cookieName, randomString);\r\n\r\n            return randomString;\r\n        },\r\n\r\n        /**\r\n         * Check if Amazon CSRF cookie is valid and clear cookie\r\n         * @param {String} stateString\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function (stateString) {\r\n            var isValid = $.mage.cookies.get(this.options.cookieName) === stateString;\r\n\r\n            this.clear(); // always clear nonce when validating\r\n\r\n            return isValid;\r\n        },\r\n\r\n        /**\r\n         * Clear Amazon CSRF cookie\r\n         */\r\n        clear: function () {\r\n            $.mage.cookies.clear(this.options.cookieName);\r\n        }\r\n    };\r\n});\r\n","Amazon_Login/js/amazon-logout.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'amazonCore',\r\n    'mage/cookies'\r\n], function ($, core) {\r\n    'use strict';\r\n\r\n    $.widget('amazon.AmazonLogout', {\r\n        options: {\r\n            onInit: false\r\n        },\r\n\r\n        /**\r\n         * Create Amazon Logout Widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.options.onInit) {\r\n                core.AmazonLogout(); //logout amazon user on init\r\n                $.mage.cookies.clear('amazon_Login_accessToken');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Logs out a user if called directly\r\n         * @private\r\n         */\r\n        _logoutAmazonUser: function () {\r\n            core.AmazonLogout();\r\n            $.mage.cookies.clear('amazon_Login_accessToken');\r\n        }\r\n    });\r\n\r\n    return $.amazon.AmazonLogout;\r\n});\r\n","Amazon_Login/js/amazon-redirect.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'amazonCore',\r\n    'amazonPaymentConfig',\r\n    'amazonCsrf',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/loader',\r\n    'mage/cookies'\r\n], function ($, amazonCore, amazonPaymentConfig, amazonCsrf, customerData) {\r\n    'use strict';\r\n\r\n    var self;\r\n\r\n    $.widget('amazon.AmazonRedirect', {\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n\r\n            self = this;\r\n            // start the loading animation. WIll en on redirect, no explicit stop here\r\n            $('body').trigger('processStart');\r\n\r\n            //verify nonce first\r\n            this.redirectOnInvalidState();\r\n\r\n            // we don't have the customer's consent or invalid request\r\n            this.redirectOnRequestWithError();\r\n            this.setAuthStateCookies();\r\n            self.redirect();\r\n        },\r\n\r\n        /**\r\n         * getURLParamater from URL for access OAuth Token\r\n         * @param {String} name\r\n         * @param {String} source\r\n         * @returns {String|Null}\r\n         */\r\n        getURLParameter: function (name, source) {\r\n            return decodeURIComponent((new RegExp('[?|&|#]' + name + '=' +\r\n                    '([^&]+?)(&|#|;|$)').exec(source) || [,''])[1].replace(\r\n                        /\\+/g,\r\n                        '%20'\r\n                    )) || null;\r\n        },\r\n\r\n        /**\r\n         * Set State Cache Auth Cookies if they aren't already set\r\n         * @returns {Boolean}\r\n         */\r\n        setAuthStateCookies: function () {\r\n            var token = this.getURLParameter('access_token', location.hash);\r\n\r\n            if (typeof token === 'string' && token.match(/^Atza/)) {\r\n                $.mage.cookies.set('amazon_Login_accessToken', token);\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Redirect user to correct controller which logs them into M2 via Amazon hash\r\n         */\r\n        redirect: function () {\r\n            window.location = amazonPaymentConfig.getValue('redirectUrl') + '?access_token=' +\r\n                this.getURLParameter('access_token', location.hash);\r\n        },\r\n\r\n        /**\r\n         * Redirect user on invalid state\r\n         */\r\n        redirectOnInvalidState: function () {\r\n            var state = this.getURLParameter('state', location.hash);\r\n\r\n            if (!state || !amazonCsrf.isValid(state)) {\r\n                window.location = amazonPaymentConfig.getValue('customerLoginPageUrl');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Redirect user on request error\r\n         */\r\n        redirectOnRequestWithError: function () {\r\n            if (this.getURLParameter('error', window.location)) {\r\n                window.location = amazonPaymentConfig.getValue('customerLoginPageUrl');\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.amazon.AmazonRedirect;\r\n});\r\n","Amazon_Login/js/view/login-button-wrapper.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(['uiRegistry', 'Amazon_Login/js/view/login-button', 'uiComponent'], function(registry, login, component) {\r\n    'use strict';\r\n    var amazonPayment = registry.get('amazonPayment');\r\n\r\n    if (amazonPayment !== undefined && amazonPayment.allowAmLoginLoading === true) {\r\n        return login;\r\n    }\r\n    return component;\r\n});\r\n","Amazon_Login/js/view/login-button.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'ko',\r\n        'Magento_Customer/js/model/customer',\r\n        'Amazon_Payment/js/model/storage',\r\n        'amazonPaymentConfig'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        ko,\r\n        customer,\r\n        amazonStorage,\r\n        amazonPaymentConfig\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Amazon_Login/login-button'\r\n            },\r\n            isCustomerLoggedIn: customer.isLoggedIn,\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n            isLwaVisible: ko.observable(amazonPaymentConfig.getValue('isLwaEnabled')),\r\n\r\n            /**\r\n             * Initialize login button\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Klarna_Onsitemessaging/js/pricebox-widget-mixin.js":"/**\r\n * This file is part of the Klarna Onsitemessaging module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    var priceBoxWidget = {\r\n        updatePrice: function (newPrices) {\r\n            let ret = this._super(newPrices);\r\n\r\n            if (document.querySelector('klarna-placement')) {\r\n                const price = Math.round(this.cache.displayPrices.finalPrice.amount * 100);\r\n                document.querySelector('klarna-placement').dataset.purchaseAmount = price;\r\n                window.KlarnaOnsiteService = window.KlarnaOnsiteService || [];\r\n                window.KlarnaOnsiteService.push({eventName: 'refresh-placements'});\r\n            }\r\n            return ret;\r\n        }\r\n    };\r\n    return function (targetWidget) {\r\n        $.widget('mage.priceBox', targetWidget, priceBoxWidget);\r\n\r\n        return $.mage.priceBox;\r\n    };\r\n});\r\n","Klarna_Onsitemessaging/js/cart-update.js":"/**\r\n * This file is part of the Klarna Onsitemessaging module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/totals'\r\n], function (totalsService) {\r\n    'use strict';\r\n\r\n    // Monitor the cart totals so we can update messaging with any price changes\r\n    totalsService.totals.subscribe(function () {\r\n        if (document.querySelector('klarna-placement')) {\r\n            const grand_total = totalsService.getSegment('grand_total').value;\r\n            const price = Math.round(grand_total * 100);\r\n\r\n            document.querySelector('klarna-placement').dataset.purchaseAmount = price;\r\n            window.KlarnaOnsiteService = window.KlarnaOnsiteService || [];\r\n            window.KlarnaOnsiteService.push({eventName: 'refresh-placements'});\r\n        }\r\n    });\r\n});\r\n","Magento_Translation/js/i18n-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    require.config({\r\n        config: {\r\n            'Magento_Ui/js/lib/knockout/bindings/i18n': {\r\n                inlineTranslation: true\r\n            }\r\n        }\r\n    });\r\n})();\r\n","Magento_Translation/js/mage-translation-dictionary.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'text!js-translation.json'\r\n], function (dict) {\r\n    'use strict';\r\n\r\n    return JSON.parse(dict);\r\n});\r\n","Magento_Translation/js/add-class.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).addClass(config.class);\r\n    };\r\n});\r\n","Magento_Reports/js/recently-viewed.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.recentlyViewedProducts', {\r\n        options: {\r\n            localStorageKey: 'recently-viewed-products',\r\n            productBlock: '#widget_viewed_item',\r\n            viewedContainer: 'ol'\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var productHtml = $(this.options.productBlock).html(),\r\n                productSku = $(this.options.productBlock).data('sku'),\r\n                products = JSON.parse(window.localStorage.getItem(this.options.localStorageKey)),\r\n                productsLength, maximum, showed, index;\r\n\r\n            if (products) {\r\n                productsLength = products.sku.length;\r\n                maximum = $(this.element).data('count');\r\n                showed = 0;\r\n\r\n                for (index = 0; index <= productsLength; index++) {\r\n                    if (products.sku[index] == productSku || showed >= maximum) { //eslint-disable-line\r\n                        products.sku.splice(index, 1);\r\n                        products.html.splice(index, 1);\r\n                    } else {\r\n                        $(this.element).find(this.options.viewedContainer).append(products.html[index]);\r\n                        $(this.element).show();\r\n                        showed++;\r\n                    }\r\n                }\r\n                $(this.element).find(this.options.productBlock).show();\r\n            } else {\r\n                products = {};\r\n                products.sku = [];\r\n                products.html = [];\r\n            }\r\n            products.sku.unshift(productSku);\r\n            products.html.unshift(productHtml);\r\n            window.localStorage.setItem(this.options.localStorageKey, JSON.stringify(products));\r\n        }\r\n    });\r\n\r\n    return $.mage.recentlyViewedProducts;\r\n});\r\n","Amazon_Payment/js/amazon-product-add.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'amazonCore'\r\n], function ($, customerData) {\r\n    'use strict';\r\n\r\n    var _this,\r\n        addedViaAmazon = false;\r\n\r\n    $.widget('amazon.AmazonProductAdd', {\r\n        options: {\r\n            addToCartForm: '#product_addtocart_form'\r\n        },\r\n\r\n        /**\r\n         * Create triggers\r\n         */\r\n        _create: function () {\r\n            _this = this;\r\n            this.setupTriggers();\r\n        },\r\n\r\n        /**\r\n         * Setup triggers when item added to cart if amazon pay button pressed\r\n         */\r\n        setupTriggers: function () {\r\n            this.cart = customerData.get('cart');\r\n\r\n            //subscribe to add to cart event\r\n            this.cart.subscribe(function () {\r\n                //only trigger the amazon button click if the user has chosen to add to cart via this method\r\n                if (addedViaAmazon) {\r\n                    addedViaAmazon = false;\r\n                    $('.login-with-amazon img').trigger('click');\r\n                }\r\n            }, this);\r\n\r\n            //setup binds for click\r\n            $('.amazon-addtoCart').on('click', function () {\r\n                if ($(_this.options.addToCartForm).valid()) {\r\n                    addedViaAmazon = true;\r\n                    $(_this.options.addToCartForm).submit();\r\n                }\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n    return $.amazon.AmazonProductAdd;\r\n});\r\n","Amazon_Payment/js/amazon-core.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'mage/url',\r\n    'amazonPaymentConfig',\r\n    'Magento_Ui/js/model/messageList',\r\n    'amazonWidgetsLoader',\r\n    'jquery/jquery-storageapi',\r\n    'mage/cookies'\r\n], function ($, ko, url, amazonPaymentConfig, messageList) {\r\n    'use strict';\r\n\r\n    var amazonDefined = ko.observable(false),\r\n        amazonLoginError = ko.observable(false),\r\n        accessToken = ko.observable(null),\r\n        // Match region config to amazon.Login.Region\r\n        regions = {'us': 'NA', 'de': 'EU', 'uk': 'EU', 'jp': 'APAC'},\r\n        sandboxMode,\r\n        region;\r\n\r\n    accessToken($.mage.cookies.get('amazon_Login_accessToken'));\r\n\r\n    var initAmazonLogin = function () {\r\n        amazon.Login.setClientId(amazonPaymentConfig.getValue('clientId')); //eslint-disable-line no-undef\r\n        amazon.Login.setSandboxMode(amazonPaymentConfig.getValue('isSandboxEnabled', false)); //eslint-disable-line no-undef\r\n        amazon.Login.setRegion(regions[amazonPaymentConfig.getValue('region')]); //eslint-disable-line no-undef\r\n        amazon.Login.setUseCookie(true); //eslint-disable-line no-undef\r\n\r\n        doLogoutOnFlagCookie(); //eslint-disable-line no-use-before-define\r\n        amazonDefined(true);\r\n    };\r\n\r\n    if (typeof amazon === 'undefined') {\r\n        window.onAmazonLoginReady = initAmazonLogin;\r\n    } else {\r\n        initAmazonLogin();\r\n    }\r\n\r\n    // Widgets.js ready callback\r\n    window.onAmazonPaymentsReady = function() {\r\n        $(window).trigger('OffAmazonPayments');\r\n    };\r\n\r\n    /**\r\n     * Log user out of amazon\r\n     */\r\n    function amazonLogout() {\r\n        $.mage.cookies.clear('amazon_Login_accessToken');\r\n        $.ajax({\r\n            url: url.build('amazon/logout'),\r\n            context: this\r\n        }).always(function () {\r\n            if (amazonDefined()) {\r\n                amazon.Login.logout(); //eslint-disable-line no-undef\r\n            } else {\r\n                var logout = amazonDefined.subscribe(function (defined) { //eslint-disable-line vars-on-top\r\n                    if (defined) {\r\n                        amazon.Login.logout(); // eslint-disable-line no-undef\r\n                        logout.dispose(); //remove subscribe\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if login error / logout cookies are present\r\n     */\r\n    function doLogoutOnFlagCookie() {\r\n        var errorFlagCookie = 'amz_auth_err',\r\n            amazonLogoutCookie = 'amz_auth_logout';\r\n\r\n        //eslint-disable-next-line no-use-before-define\r\n        $.cookieStorage.isSet(errorFlagCookie) ? amazonLogoutThrowError(errorFlagCookie) : false;\r\n        //eslint-disable-next-line no-use-before-define\r\n        $.cookieStorage.isSet(amazonLogoutCookie) ? amazonLogoutThrowError(amazonLogoutCookie) : false;\r\n    }\r\n\r\n    /**\r\n     * Handle deletion of cookie and log user out if present\r\n     */\r\n    function amazonLogoutThrowError(cookieToRemove) {\r\n        amazonLogout();\r\n        document.cookie = cookieToRemove + '=; Path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        amazonLoginError(true);\r\n    }\r\n\r\n    function handleWidgetError(error) {\r\n        console.log('OffAmazonPayments.Widgets', error.getErrorCode(), error.getErrorMessage());\r\n        switch (error.getErrorCode()) {\r\n            case 'BuyerSessionExpired':\r\n                messageList.addErrorMessage({message: $.mage.__('Your Amazon session has expired.  Please sign in again by clicking the Amazon Pay Button.')});\r\n                var storage = require('Amazon_Payment/js/model/storage'); //TODO: clean up this circular dependency\r\n                storage.amazonlogOut();\r\n                break;\r\n            case 'ITP':\r\n                // ITP errors are how handled within the widget code\r\n                break;\r\n            default:\r\n                messageList.addErrorMessage({message: $.mage.__(error.getErrorMessage())});\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Log user out of Amazon\r\n         */\r\n        AmazonLogout: amazonLogout,\r\n        amazonDefined: amazonDefined,\r\n        accessToken: accessToken,\r\n        amazonLoginError: amazonLoginError,\r\n        handleWidgetError: handleWidgetError\r\n    };\r\n\r\n});\r\n","Amazon_Payment/js/amazon-button.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/section-config',\r\n    'Amazon_Payment/js/model/amazonPaymentConfig',\r\n    'amazonCsrf',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'modernizr/modernizr',\r\n    'amazonCore',\r\n    'uiRegistry',\r\n    'mage/cookies'\r\n], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf, fullScreenLoader) {\r\n    'use strict';\r\n    var _this;\r\n\r\n    if (amazonPaymentConfig.isDefined()) {\r\n\r\n        $.widget('amazon.AmazonButton', {\r\n            options: {\r\n                merchantId: null,\r\n                buttonType: 'LwA',\r\n                buttonColor: 'Gold',\r\n                buttonSize: 'medium',\r\n                redirectUrl: null,\r\n                loginPostUrl: null\r\n            },\r\n\r\n            /**\r\n             * Create button\r\n             */\r\n            _create: function () {\r\n                _this = this;\r\n\r\n                this._verifyAmazonConfig();\r\n\r\n                if (typeof OffAmazonPayments === 'undefined') {\r\n                    // async render\r\n                    $(window).on('OffAmazonPayments', $.proxy(function () {\r\n                        this._renderAmazonButton();\r\n                    }, this));\r\n                } else {\r\n                    this._renderAmazonButton();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Verify if checkout config is available\r\n             * @private\r\n             */\r\n            _verifyAmazonConfig: function () {\r\n                if (amazonPaymentConfig.isDefined()) {\r\n                    this.options.merchantId = amazonPaymentConfig.getValue('merchantId');\r\n                    this.options.buttonType = this.options.buttonType === 'LwA' ?\r\n                        amazonPaymentConfig.getValue('buttonTypeLwa') : amazonPaymentConfig.getValue('buttonTypePwa');\r\n                    this.options.buttonColor = amazonPaymentConfig.getValue('buttonColor');\r\n                    this.options.buttonSize = amazonPaymentConfig.getValue('buttonSize');\r\n                    this.options.redirectUrl = amazonPaymentConfig.getValue('redirectUrl');\r\n                    this.options.loginPostUrl = amazonPaymentConfig.getValue('loginPostUrl');\r\n                    this.options.loginScope = amazonPaymentConfig.getValue('loginScope');\r\n                    this.options.buttonLanguage = amazonPaymentConfig.getValue('displayLanguage');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Validate CSRF cookie and redirect to HTTPS\r\n             */\r\n            secureHttpsCallback: function (event) {\r\n                var sections = sectionConfig.getAffectedSections(_this.options.loginPostUrl);\r\n\r\n                if (!event.state || !amazonCsrf.isValid(event.state)) {\r\n                    window.location = amazonPaymentConfig.getValue('customerLoginPageUrl');\r\n\r\n                    return window.location;\r\n                }\r\n\r\n                // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n                if (!event.access_token || !!event.error) {\r\n                    window.location = amazonPaymentConfig.getValue('customerLoginPageUrl');\r\n\r\n                    return window.location;\r\n                }\r\n\r\n                if (sections) {\r\n                    customerData.invalidate(sections);\r\n                }\r\n                $.mage.cookies.set('amazon_Login_accessToken', event.access_token);\r\n                window.location = _this.options.redirectUrl + '?access_token=' + event.access_token;\r\n                // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n            },\r\n\r\n            /**\r\n             * Use popup or redirect URI\r\n             *\r\n             * @return {String}\r\n             */\r\n            _popupCallback: function () {\r\n                return _this.usePopUp() ? _this.secureHttpsCallback :\r\n                    amazonPaymentConfig.getValue('oAuthHashRedirectUrl');\r\n            },\r\n\r\n            /**\r\n             * Are touch events available\r\n             * (Supports both v2 and v3 Modernizr)\r\n             * @returns {Boolean}\r\n             * @private\r\n             */\r\n            _touchSupported: function () {\r\n                //eslint-disable-next-line no-undef\r\n                return Modernizr.touch !== undefined ? Modernizr.touch : Modernizr.touchevents;\r\n            },\r\n\r\n            /**\r\n             * Should we use the pop up login flow?\r\n             *  - are we on an HTTPS page (required for popup)\r\n             *  - confirm we are not on the product detail page (items are added asynchronously to the cart,\r\n             *    hence popups will be blocked)\r\n             *  - confirm we are not using a touch device (redirect provides a better mobile experience)\r\n             * @returns {Boolean}\r\n             * @public\r\n             */\r\n            usePopUp: function () {\r\n                return window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view') &&\r\n                    !this._touchSupported();\r\n            },\r\n\r\n            /**\r\n             * onAmazonPaymentsReady\r\n             * @private\r\n             */\r\n            _renderAmazonButton: function () {\r\n                OffAmazonPayments.Button(this.element[0].id, this.options.merchantId, { //eslint-disable-line no-undef\r\n                    type: this.options.buttonType,\r\n                    color: this.options.buttonColor,\r\n                    size: this.options.buttonSize,\r\n                    language: this.options.buttonLanguage,\r\n\r\n                    /**\r\n                     * Authorization callback\r\n                     */\r\n                    authorization: function () {\r\n                        //eslint-disable-next-line no-undef\r\n                        amazon.Login.authorize(_this._getLoginOptions(), _this._popupCallback());\r\n                    }\r\n                });\r\n                $('.amazon-button-container .field-tooltip').fadeIn();\r\n            },\r\n\r\n            /**\r\n             * Build login options\r\n             * @returns {{scope: *, popup: *, state: *}}\r\n             * @private\r\n             */\r\n            _getLoginOptions: function () {\r\n                return {\r\n                    scope: this.options.loginScope,\r\n                    popup: this.usePopUp(),\r\n                    state: amazonCsrf.generateNewValue()\r\n                };\r\n            }\r\n        });\r\n\r\n        return $.amazon.AmazonButton;\r\n    }\r\n});\r\n","Amazon_Payment/js/messages.js":"/**\r\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Amazon_Payment/js/model/storage',\r\n        'Magento_Theme/js/view/messages',\r\n        'Magento_Ui/js/model/messageList'\r\n    ], function(\r\n        $,\r\n        amazonStorage,\r\n        messagesFactory,\r\n        messageList\r\n    ) {\r\n        'use strict';\r\n\r\n        return {\r\n            defaults: {},\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n\r\n            /*\r\n             * Magento's core Checkout module removes the \"messages\" block from the layout,\r\n             *  so we display them on checkout using the messageList API.\r\n             */\r\n            displayMessages: function () {\r\n                if(this.isAmazonAccountLoggedIn()) {\r\n                    var messagesComponent = messagesFactory();\r\n                    messagesComponent.cookieMessages.forEach(function(message) {\r\n                        if(message.type == 'error') {\r\n                            messageList.addErrorMessage({message: $.mage.__($(\"<textarea/>\").html(message.text).text())});\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n);\r\n","Amazon_Payment/js/amazon-widgets-loader.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(['uiRegistry'], function(registry) {\r\n    'use strict';\r\n    registry.get('amazonPayment', function (amazonPayment) {\r\n        // Load external Widgets.js\r\n        require([amazonPayment.widgetUrl]);\r\n    });\r\n});\r\n","Amazon_Payment/js/lib/sjcl.min.js":"// jscs:disable\r\n\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\r\n\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\"function\"===typeof define&&define([],function(){return sjcl});\r\nsjcl.cipher.aes=function(a){this.s[0][0][0]||this.O();var b,c,d,e,g=this.s[0][4],f=this.s[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid(\"invalid aes key size\");this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=g[c>>>24]<<24^g[c>>16&255]<<16^g[c>>8&255]<<8^g[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:f[0][g[c>>>24]]^f[1][g[c>>16&255]]^f[2][g[c>>8&255]]^f[3][g[c&\r\n255]]};\r\nsjcl.cipher.aes.prototype={encrypt:function(a){return u(this,a,0)},decrypt:function(a){return u(this,a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],O:function(){var a=this.s[0],b=this.s[1],c=a[4],d=b[4],e,g,f,h=[],l=[],k,m,n,p;for(e=0;0x100>e;e++)l[(h[e]=e<<1^283*(e>>7))^e]=e;for(g=f=0;!c[g];g^=k||1,f=l[f]||1)for(n=f^f<<1^f<<2^f<<3^f<<4,n=n>>8^n&255^99,c[g]=n,d[n]=g,m=h[e=h[k=h[g]]],p=0x1010101*m^0x10001*e^0x101*k^0x1010100*g,m=0x101*h[n]^0x1010100*n,e=0;4>e;e++)a[e][g]=m=m<<24^m>>>8,b[e][n]=p=p<<24^p>>>8;for(e=\r\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\r\nfunction u(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid(\"invalid aes block size\");var d=a.b[c],e=b[0]^d[0],g=b[c?3:1]^d[1],f=b[2]^d[2];b=b[c?1:3]^d[3];var h,l,k,m=d.length/4-2,n,p=4,r=[0,0,0,0];h=a.s[c];a=h[0];var q=h[1],t=h[2],w=h[3],x=h[4];for(n=0;n<m;n++)h=a[e>>>24]^q[g>>16&255]^t[f>>8&255]^w[b&255]^d[p],l=a[g>>>24]^q[f>>16&255]^t[b>>8&255]^w[e&255]^d[p+1],k=a[f>>>24]^q[b>>16&255]^t[e>>8&255]^w[g&255]^d[p+2],b=a[b>>>24]^q[e>>16&255]^t[g>>8&255]^w[f&255]^d[p+3],p+=4,e=h,g=l,f=k;for(n=\r\n0;4>n;n++)r[c?3&-n:n]=x[e>>>24]<<24^x[g>>16&255]<<16^x[f>>8&255]<<8^x[b&255]^d[p++],h=e,e=g,g=f,f=b,b=h;return r}\r\nsjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.$(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.$(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===\r\nb?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===\r\nc},$:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},i:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,c;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&0xff00|(c&0xff00)<<8|c<<24;return a}};\r\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>24),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};\r\nsjcl.codec.hex={fromBits:function(a){var b=\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,\"\");d=a.length;a=a+\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};\r\nsjcl.codec.base32={B:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",X:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,c){var d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,g=\"\",f=0,h=sjcl.codec.base32.B,l=0,k=sjcl.bitArray.bitLength(a);c&&(h=sjcl.codec.base32.X);for(c=0;g.length*d<k;)g+=h.charAt((l^a[c]>>>f)>>>e),f<d?(l=a[c]<<d-f,f+=e,c++):(l<<=d,f-=d);for(;g.length&7&&!b;)g+=\"=\";return g},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\").toUpperCase();var c=sjcl.codec.base32.BITS,\r\nd=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,g=[],f,h=0,l=sjcl.codec.base32.B,k=0,m,n=\"base32\";b&&(l=sjcl.codec.base32.X,n=\"base32hex\");for(f=0;f<a.length;f++){m=l.indexOf(a.charAt(f));if(0>m){if(!b)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid(\"this isn't \"+n+\"!\");}h>e?(h-=e,g.push(k^m>>>h),k=m<<c-h):(h+=d,k^=m<<c-h)}h&56&&g.push(sjcl.bitArray.partial(h&56,k,1));return g}};\r\nsjcl.codec.base32hex={fromBits:function(a,b){return sjcl.codec.base32.fromBits(a,b,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};\r\nsjcl.codec.base64={B:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,c){var d=\"\",e=0,g=sjcl.codec.base64.B,f=0,h=sjcl.bitArray.bitLength(a);c&&(g=g.substr(0,62)+\"-_\");for(c=0;6*d.length<h;)d+=g.charAt((f^a[c]>>>e)>>>26),6>e?(f=a[c]<<6-e,e+=26,c++):(f<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var c=[],d,e=0,g=sjcl.codec.base64.B,f=0,h;b&&(g=g.substr(0,62)+\"-_\");for(d=0;d<a.length;d++){h=g.indexOf(a.charAt(d));\r\nif(0>h)throw new sjcl.exception.invalid(\"this isn't base64!\");26<e?(e-=26,c.push(f^h>>>e),f=h<<32-e):(e+=6,f^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,f,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.O();a?(this.F=a.F.slice(0),this.A=a.A.slice(0),this.l=a.l):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\r\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.F=this.Y.slice(0);this.A=[];this.l=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.A=sjcl.bitArray.concat(this.A,a);b=this.l;a=this.l=b+sjcl.bitArray.bitLength(a);for(b=512+b&-512;b<=a;b+=512)v(this,c.splice(0,16));return this},finalize:function(){var a,b=this.A,c=this.F,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.l/\r\n4294967296));for(b.push(this.l|0);b.length;)v(this,b.splice(0,16));this.reset();return c},Y:[],b:[],O:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}var b=0,c=2,d;a:for(;64>b;c++){for(d=2;d*d<=c;d++)if(0===c%d)continue a;8>b&&(this.Y[b]=a(Math.pow(c,.5)));this.b[b]=a(Math.pow(c,1/3));b++}}};\r\nfunction v(a,b){var c,d,e,g=b.slice(0),f=a.F,h=a.b,l=f[0],k=f[1],m=f[2],n=f[3],p=f[4],r=f[5],q=f[6],t=f[7];for(c=0;64>c;c++)16>c?d=g[c]:(d=g[c+1&15],e=g[c+14&15],d=g[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+g[c&15]+g[c+9&15]|0),d=d+t+(p>>>6^p>>>11^p>>>25^p<<26^p<<21^p<<7)+(q^p&(r^q))+h[c],t=q,q=r,r=p,p=n+d|0,n=m,m=k,k=l,l=d+(k&m^n&(k^m))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+l|0;f[1]=f[1]+k|0;f[2]=f[2]+m|0;f[3]=f[3]+n|0;f[4]=f[4]+p|0;f[5]=f[5]+r|0;f[6]=\r\nf[6]+q|0;f[7]=f[7]+t|0}\r\nsjcl.mode.ccm={name:\"ccm\",G:[],listenProgress:function(a){sjcl.mode.ccm.G.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.G.indexOf(a);-1<a&&sjcl.mode.ccm.G.splice(a,1)},fa:function(a){var b=sjcl.mode.ccm.G.slice(),c;for(c=0;c<b.length;c+=1)b[c](a)},encrypt:function(a,b,c,d,e){var g,f=b.slice(0),h=sjcl.bitArray,l=h.bitLength(c)/8,k=h.bitLength(f)/8;e=e||64;d=d||[];if(7>l)throw new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(g=2;4>g&&k>>>8*g;g++);g<15-l&&(g=15-l);c=h.clamp(c,\r\n8*(15-g));b=sjcl.mode.ccm.V(a,b,c,d,e,g);f=sjcl.mode.ccm.C(a,f,c,b,e,g);return h.concat(f.data,f.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var g=sjcl.bitArray,f=g.bitLength(c)/8,h=g.bitLength(b),l=g.clamp(b,h-e),k=g.bitSlice(b,h-e),h=(h-e)/8;if(7>f)throw new sjcl.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(b=2;4>b&&h>>>8*b;b++);b<15-f&&(b=15-f);c=g.clamp(c,8*(15-b));l=sjcl.mode.ccm.C(a,l,c,k,e,b);a=sjcl.mode.ccm.V(a,l.data,c,d,e,b);if(!g.equal(l.tag,a))throw new sjcl.exception.corrupt(\"ccm: tag doesn't match\");\r\nreturn l.data},na:function(a,b,c,d,e,g){var f=[],h=sjcl.bitArray,l=h.i;d=[h.partial(8,(b.length?64:0)|d-2<<2|g-1)];d=h.concat(d,c);d[3]|=e;d=a.encrypt(d);if(b.length)for(c=h.bitLength(b)/8,65279>=c?f=[h.partial(16,c)]:0xffffffff>=c&&(f=h.concat([h.partial(16,65534)],[c])),f=h.concat(f,b),b=0;b<f.length;b+=4)d=a.encrypt(l(d,f.slice(b,b+4).concat([0,0,0])));return d},V:function(a,b,c,d,e,g){var f=sjcl.bitArray,h=f.i;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid(\"ccm: invalid tag length\");\r\nif(0xffffffff<d.length||0xffffffff<b.length)throw new sjcl.exception.bug(\"ccm: can't deal with 4GiB or more data\");c=sjcl.mode.ccm.na(a,d,c,e,f.bitLength(b)/8,g);for(d=0;d<b.length;d+=4)c=a.encrypt(h(c,b.slice(d,d+4).concat([0,0,0])));return f.clamp(c,8*e)},C:function(a,b,c,d,e,g){var f,h=sjcl.bitArray;f=h.i;var l=b.length,k=h.bitLength(b),m=l/50,n=m;c=h.concat([h.partial(8,g-1)],c).concat([0,0,0]).slice(0,4);d=h.bitSlice(f(d,a.encrypt(c)),0,e);if(!l)return{tag:d,data:[]};for(f=0;f<l;f+=4)f>m&&(sjcl.mode.ccm.fa(f/\r\nl),m+=n),c[3]++,e=a.encrypt(c),b[f]^=e[0],b[f+1]^=e[1],b[f+2]^=e[2],b[f+3]^=e[3];return{tag:d,data:h.clamp(b,k)}}};\r\nsjcl.mode.ocb2={name:\"ocb2\",encrypt:function(a,b,c,d,e,g){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");var f,h=sjcl.mode.ocb2.S,l=sjcl.bitArray,k=l.i,m=[0,0,0,0];c=h(a.encrypt(c));var n,p=[];d=d||[];e=e||64;for(f=0;f+4<b.length;f+=4)n=b.slice(f,f+4),m=k(m,n),p=p.concat(k(c,a.encrypt(k(c,n)))),c=h(c);n=b.slice(f);b=l.bitLength(n);f=a.encrypt(k(c,[0,0,0,b]));n=l.clamp(k(n.concat([0,0,0]),f),b);m=k(m,k(n.concat([0,0,0]),f));m=a.encrypt(k(m,k(c,h(c))));\r\nd.length&&(m=k(m,g?d:sjcl.mode.ocb2.pmac(a,d)));return p.concat(l.concat(n,l.clamp(m,e)))},decrypt:function(a,b,c,d,e,g){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid(\"ocb iv must be 128 bits\");e=e||64;var f=sjcl.mode.ocb2.S,h=sjcl.bitArray,l=h.i,k=[0,0,0,0],m=f(a.encrypt(c)),n,p,r=sjcl.bitArray.bitLength(b)-e,q=[];d=d||[];for(c=0;c+4<r/32;c+=4)n=l(m,a.decrypt(l(m,b.slice(c,c+4)))),k=l(k,n),q=q.concat(n),m=f(m);p=r-32*c;n=a.encrypt(l(m,[0,0,0,p]));n=l(n,h.clamp(b.slice(c),p).concat([0,\r\n0,0]));k=l(k,n);k=a.encrypt(l(k,l(m,f(m))));d.length&&(k=l(k,g?d:sjcl.mode.ocb2.pmac(a,d)));if(!h.equal(h.clamp(k,e),h.bitSlice(b,r)))throw new sjcl.exception.corrupt(\"ocb: tag doesn't match\");return q.concat(h.clamp(n,p))},pmac:function(a,b){var c,d=sjcl.mode.ocb2.S,e=sjcl.bitArray,g=e.i,f=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=g(h,d(d(h)));for(c=0;c+4<b.length;c+=4)h=d(h),f=g(f,a.encrypt(g(h,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(h=g(h,d(h)),c=e.concat(c,[-2147483648,0,0,0]));f=g(f,c);\r\nreturn a.encrypt(g(d(g(h,d(h))),f))},S:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};\r\nsjcl.mode.gcm={name:\"gcm\",encrypt:function(a,b,c,d,e){var g=b.slice(0);b=sjcl.bitArray;d=d||[];a=sjcl.mode.gcm.C(!0,a,g,d,c,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var g=b.slice(0),f=sjcl.bitArray,h=f.bitLength(g);e=e||128;d=d||[];e<=h?(b=f.bitSlice(g,h-e),g=f.bitSlice(g,0,h-e)):(b=g,g=[]);a=sjcl.mode.gcm.C(!1,a,g,d,c,e);if(!f.equal(a.tag,b))throw new sjcl.exception.corrupt(\"gcm: tag doesn't match\");return a.data},ka:function(a,b){var c,d,e,g,f,h=sjcl.bitArray.i;e=[0,0,\r\n0,0];g=b.slice(0);for(c=0;128>c;c++){(d=0!==(a[Math.floor(c/32)]&1<<31-c%32))&&(e=h(e,g));f=0!==(g[3]&1);for(d=3;0<d;d--)g[d]=g[d]>>>1|(g[d-1]&1)<<31;g[0]>>>=1;f&&(g[0]^=-0x1f000000)}return e},j:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=0xffffffff&c[d],b[1]^=0xffffffff&c[d+1],b[2]^=0xffffffff&c[d+2],b[3]^=0xffffffff&c[d+3],b=sjcl.mode.gcm.ka(b,a);return b},C:function(a,b,c,d,e,g){var f,h,l,k,m,n,p,r,q=sjcl.bitArray;n=c.length;p=q.bitLength(c);r=q.bitLength(d);h=q.bitLength(e);\r\nf=b.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=q.concat(e,[1])):(e=sjcl.mode.gcm.j(f,[0,0,0,0],e),e=sjcl.mode.gcm.j(f,e,[0,0,Math.floor(h/0x100000000),h&0xffffffff]));h=sjcl.mode.gcm.j(f,[0,0,0,0],d);m=e.slice(0);d=h.slice(0);a||(d=sjcl.mode.gcm.j(f,h,c));for(k=0;k<n;k+=4)m[3]++,l=b.encrypt(m),c[k]^=l[0],c[k+1]^=l[1],c[k+2]^=l[2],c[k+3]^=l[3];c=q.clamp(c,p);a&&(d=sjcl.mode.gcm.j(f,h,c));a=[Math.floor(r/0x100000000),r&0xffffffff,Math.floor(p/0x100000000),p&0xffffffff];d=sjcl.mode.gcm.j(f,d,a);l=b.encrypt(e);\r\nd[0]^=l[0];d[1]^=l[1];d[2]^=l[2];d[3]^=l[3];return{tag:q.bitSlice(d,0,g),data:c}}};sjcl.misc.hmac=function(a,b){this.W=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.w=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.w[0].update(c[0]);this.w[1].update(c[1]);this.R=new b(this.w[0])};\r\nsjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.aa)throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.R=new this.W(this.w[0]);this.aa=!1};sjcl.misc.hmac.prototype.update=function(a){this.aa=!0;this.R.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.R.finalize(),a=(new this.W(this.w[1])).update(a).finalize();this.reset();return a};\r\nsjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E3;if(0>d||0>c)throw sjcl.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var g,f,h,l,k=[],m=sjcl.bitArray;for(l=1;32*k.length<(d||1);l++){e=g=a.encrypt(m.concat(b,[l]));for(f=1;f<c;f++)for(g=a.encrypt(g),h=0;h<g.length;h++)e[h]^=g[h];k=k.concat(e)}d&&(k=m.clamp(k,d));return k};\r\nsjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.m=[0];this.P=0;this.H={};this.N=0;this.U={};this.Z=this.f=this.o=this.ha=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.L=void 0;this.M=a;this.D=!1;this.K={progress:{},seeded:{}};this.u=this.ga=0;this.I=1;this.J=2;this.ca=0x10000;this.T=[0,48,64,96,128,192,0x100,384,512,768,1024];this.da=3E4;this.ba=80};\r\nsjcl.prng.prototype={randomWords:function(a,b){var c=[],d;d=this.isReady(b);var e;if(d===this.u)throw new sjcl.exception.notReady(\"generator isn't seeded\");if(d&this.J){d=!(d&this.I);e=[];var g=0,f;this.Z=e[0]=(new Date).valueOf()+this.da;for(f=0;16>f;f++)e.push(0x100000000*Math.random()|0);for(f=0;f<this.c.length&&(e=e.concat(this.c[f].finalize()),g+=this.m[f],this.m[f]=0,d||!(this.P&1<<f));f++);this.P>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.m.push(0));this.f-=g;g>this.o&&(this.o=\r\ng);this.P++;this.b=sjcl.hash.sha256.hash(this.b.concat(e));this.L=new sjcl.cipher.aes(this.b);for(d=0;4>d&&(this.h[d]=this.h[d]+1|0,!this.h[d]);d++);}for(d=0;d<a;d+=4)0===(d+1)%this.ca&&y(this),e=z(this),c.push(e[0],e[1],e[2],e[3]);y(this);return c.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&\"Setting paranoia=0 will ruin your security; use it only for testing\"!==b)throw\"Setting paranoia=0 will ruin your security; use it only for testing\";this.M=a},addEntropy:function(a,b,c){c=c||\"user\";\r\nvar d,e,g=(new Date).valueOf(),f=this.H[c],h=this.isReady(),l=0;d=this.U[c];void 0===d&&(d=this.U[c]=this.ha++);void 0===f&&(f=this.H[c]=0);this.H[c]=(this.H[c]+1)%this.c.length;switch(typeof a){case \"number\":void 0===b&&(b=1);this.c[f].update([d,this.N++,1,b,g,1,a|0]);break;case \"object\":c=Object.prototype.toString.call(a);if(\"[object Uint32Array]\"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else for(\"[object Array]\"!==c&&(l=1),c=0;c<a.length&&!l;c++)\"number\"!==typeof a[c]&&(l=1);if(!l){if(void 0===\r\nb)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,e=e>>>1;this.c[f].update([d,this.N++,2,b,g,a.length].concat(a))}break;case \"string\":void 0===b&&(b=a.length);this.c[f].update([d,this.N++,3,b,g,a.length]);this.c[f].update(a);break;default:l=1}if(l)throw new sjcl.exception.bug(\"random: addEntropy only supports number, array of numbers or string\");this.m[f]+=b;this.f+=b;h===this.u&&(this.isReady()!==this.u&&A(\"seeded\",Math.max(this.o,this.f)),A(\"progress\",this.getProgress()))},isReady:function(a){a=this.T[void 0!==\r\na?a:this.M];return this.o&&this.o>=a?this.m[0]>this.ba&&(new Date).valueOf()>this.Z?this.J|this.I:this.I:this.f>=a?this.J|this.u:this.u},getProgress:function(a){a=this.T[a?a:this.M];return this.o>=a?1:this.f>a?1:this.f/a},startCollectors:function(){if(!this.D){this.a={loadTimeCollector:B(this,this.ma),mouseCollector:B(this,this.oa),keyboardCollector:B(this,this.la),accelerometerCollector:B(this,this.ea),touchCollector:B(this,this.qa)};if(window.addEventListener)window.addEventListener(\"load\",this.a.loadTimeCollector,\r\n!1),window.addEventListener(\"mousemove\",this.a.mouseCollector,!1),window.addEventListener(\"keypress\",this.a.keyboardCollector,!1),window.addEventListener(\"devicemotion\",this.a.accelerometerCollector,!1),window.addEventListener(\"touchmove\",this.a.touchCollector,!1);else if(document.attachEvent)document.attachEvent(\"onload\",this.a.loadTimeCollector),document.attachEvent(\"onmousemove\",this.a.mouseCollector),document.attachEvent(\"keypress\",this.a.keyboardCollector);else throw new sjcl.exception.bug(\"can't attach event\");\r\nthis.D=!0}},stopCollectors:function(){this.D&&(window.removeEventListener?(window.removeEventListener(\"load\",this.a.loadTimeCollector,!1),window.removeEventListener(\"mousemove\",this.a.mouseCollector,!1),window.removeEventListener(\"keypress\",this.a.keyboardCollector,!1),window.removeEventListener(\"devicemotion\",this.a.accelerometerCollector,!1),window.removeEventListener(\"touchmove\",this.a.touchCollector,!1)):document.detachEvent&&(document.detachEvent(\"onload\",this.a.loadTimeCollector),document.detachEvent(\"onmousemove\",\r\nthis.a.mouseCollector),document.detachEvent(\"keypress\",this.a.keyboardCollector)),this.D=!1)},addEventListener:function(a,b){this.K[a][this.ga++]=b},removeEventListener:function(a,b){var c,d,e=this.K[a],g=[];for(d in e)e.hasOwnProperty(d)&&e[d]===b&&g.push(d);for(c=0;c<g.length;c++)d=g[c],delete e[d]},la:function(){C(1)},oa:function(a){var b,c;try{b=a.x||a.clientX||a.offsetX||0,c=a.y||a.clientY||a.offsetY||0}catch(d){c=b=0}0!=b&&0!=c&&sjcl.random.addEntropy([b,c],2,\"mouse\");C(0)},qa:function(a){a=\r\na.touches[0]||a.changedTouches[0];sjcl.random.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,\"touch\");C(0)},ma:function(){C(2)},ea:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;\"number\"===typeof b&&sjcl.random.addEntropy(b,1,\"accelerometer\")}a&&sjcl.random.addEntropy(a,2,\"accelerometer\");C(0)}};\r\nfunction A(a,b){var c,d=sjcl.random.K[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}function C(a){\"undefined\"!==typeof window&&window.performance&&\"function\"===typeof window.performance.now?sjcl.random.addEntropy(window.performance.now(),a,\"loadtime\"):sjcl.random.addEntropy((new Date).valueOf(),a,\"loadtime\")}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}\r\nfunction z(a){for(var b=0;4>b&&(a.h[b]=a.h[b]+1|0,!a.h[b]);b++);return a.L.encrypt(a.h)}function B(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);\r\na:try{var D,E,F,G;if(G=\"undefined\"!==typeof module&&module.exports){var H;try{H=require(\"crypto\")}catch(a){H=null}G=E=H}if(G&&E.randomBytes)D=E.randomBytes(128),D=new Uint32Array((new Uint8Array(D)).buffer),sjcl.random.addEntropy(D,1024,\"crypto['randomBytes']\");else if(\"undefined\"!==typeof window&&\"undefined\"!==typeof Uint32Array){F=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(F);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(F);\r\nelse break a;sjcl.random.addEntropy(F,1024,\"crypto['getRandomValues']\")}}catch(a){\"undefined\"!==typeof window&&window.console&&(console.log(\"There was an error collecting entropy from the browser:\"),console.log(a))}\r\nsjcl.json={defaults:{v:1,iter:1E3,ks:128,ts:64,mode:\"ccm\",adata:\"\",cipher:\"aes\"},ja:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json,g=e.g({iv:sjcl.random.randomWords(4,0)},e.defaults),f;e.g(g,c);c=g.adata;\"string\"===typeof g.salt&&(g.salt=sjcl.codec.base64.toBits(g.salt));\"string\"===typeof g.iv&&(g.iv=sjcl.codec.base64.toBits(g.iv));if(!sjcl.mode[g.mode]||!sjcl.cipher[g.cipher]||\"string\"===typeof a&&100>=g.iter||64!==g.ts&&96!==g.ts&&128!==g.ts||128!==g.ks&&192!==g.ks&&0x100!==g.ks||2>g.iv.length||\r\n4<g.iv.length)throw new sjcl.exception.invalid(\"json encrypt: invalid parameters\");\"string\"===typeof a?(f=sjcl.misc.cachedPbkdf2(a,g),a=f.key.slice(0,g.ks/32),g.salt=f.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(f=a.kem(),g.kemtag=f.tag,a=f.key.slice(0,g.ks/32));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));\"string\"===typeof c&&(g.adata=c=sjcl.codec.utf8String.toBits(c));f=new sjcl.cipher[g.cipher](a);e.g(d,g);d.key=a;g.ct=\"ccm\"===g.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&\r\nb instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(f,b,g.iv,c,g.ts):sjcl.mode[g.mode].encrypt(f,b,g.iv,c,g.ts);return g},encrypt:function(a,b,c,d){var e=sjcl.json,g=e.ja.apply(e,arguments);return e.encode(g)},ia:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json;b=e.g(e.g(e.g({},e.defaults),b),c,!0);var g,f;g=b.adata;\"string\"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));\"string\"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));if(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||\"string\"===\r\ntypeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&0x100!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new sjcl.exception.invalid(\"json decrypt: invalid parameters\");\"string\"===typeof a?(f=sjcl.misc.cachedPbkdf2(a,b),a=f.key.slice(0,b.ks/32),b.salt=f.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));\"string\"===typeof g&&(g=sjcl.codec.utf8String.toBits(g));f=new sjcl.cipher[b.cipher](a);g=\"ccm\"===\r\nb.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(f,b.ct,b.iv,b.tag,g,b.ts):sjcl.mode[b.mode].decrypt(f,b.ct,b.iv,g,b.ts);e.g(d,b);d.key=a;return 1===c.raw?g:sjcl.codec.utf8String.fromBits(g)},decrypt:function(a,b,c,d){var e=sjcl.json;return e.ia(a,e.decode(b),c,d)},encode:function(a){var b,c=\"{\",d=\"\";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid(\"json encode: invalid property name\");c+=d+'\"'+\r\nb+'\":';d=\",\";switch(typeof a[b]){case \"number\":case \"boolean\":c+=a[b];break;case \"string\":c+='\"'+escape(a[b])+'\"';break;case \"object\":c+='\"'+sjcl.codec.base64.fromBits(a[b],0)+'\"';break;default:throw new sjcl.exception.bug(\"json encode: unsupported type\");}}return c+\"}\"},decode:function(a){a=a.replace(/\\s/g,\"\");if(!a.match(/^\\{.*\\}$/))throw new sjcl.exception.invalid(\"json decode: this isn't json!\");a=a.replace(/^\\{|\\}$/g,\"\").split(/,/);var b={},c,d;for(c=0;c<a.length;c++){if(!(d=a[c].match(/^\\s*(?:([\"']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|\"([a-z0-9+\\/%*_.@=\\-]*)\"|(true|false))$/i)))throw new sjcl.exception.invalid(\"json decode: this isn't json!\");\r\nnull!=d[3]?b[d[2]]=parseInt(d[3],10):null!=d[4]?b[d[2]]=d[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(d[4]):unescape(d[4]):null!=d[5]&&(b[d[2]]=\"true\"===d[5])}return b},g:function(a,b,c){void 0===a&&(a={});if(void 0===b)return a;for(var d in b)if(b.hasOwnProperty(d)){if(c&&void 0!==a[d]&&a[d]!==b[d])throw new sjcl.exception.invalid(\"required parameter overridden\");a[d]=b[d]}return a},sa:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},ra:function(a,\r\nb){var c={},d;for(d=0;d<b.length;d++)void 0!==a[b[d]]&&(c[b[d]]=a[b[d]]);return c}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.pa={};sjcl.misc.cachedPbkdf2=function(a,b){var c=sjcl.misc.pa,d;b=b||{};d=b.iter||1E3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};c=void 0===b.salt?d.firstSalt:b.salt;d[c]=d[c]||sjcl.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};\r\n","Amazon_Payment/js/model/storage.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'amazonCore',\r\n        'amazonPaymentConfig'\r\n    ],\r\n    function (\r\n        $,\r\n        ko,\r\n        amazonCore,\r\n        amazonPaymentConfig\r\n    ) {\r\n        'use strict';\r\n\r\n        var isAmazonAccountLoggedIn = ko.observable(false),\r\n            isAmazonEnabled = ko.observable(amazonPaymentConfig.getValue('isPwaEnabled')),\r\n            orderReferenceId = ko.observable(amazonPaymentConfig.getValue('orderReferenceId')),\r\n            orderReference,\r\n            addressConsentToken = amazonCore.accessToken,\r\n            //eslint-disable-next-line no-use-before-define\r\n            amazonLoginError = amazonCore.amazonLoginError.subscribe(setAmazonLoggedOutIfLoginError),\r\n            amazonDeclineCode = ko.observable(false),\r\n            sandboxSimulationReference = ko.observable('default'),\r\n            isPlaceOrderDisabled = ko.observable(false),\r\n            isShippingMethodsLoading = ko.observable(false),\r\n            isAmazonShippingAddressSelected = ko.observable(false),\r\n            isQuoteDirty = ko.observable(amazonPaymentConfig.getValue('isQuoteDirty')),\r\n            isPwaVisible = ko.computed(function () {\r\n                return isAmazonEnabled() && !isQuoteDirty();\r\n            }),\r\n            isAmazonCartInValid = ko.computed(function () {\r\n                return isAmazonAccountLoggedIn() && isQuoteDirty();\r\n            }),\r\n            isLoginRedirectPage = $('body').hasClass('amazon-login-login-processauthhash'),\r\n            amazonCustomerEmail = ko.computed(function () {\r\n                // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n                if (window.hasOwnProperty('checkoutConfig') &&\r\n                    window.checkoutConfig.hasOwnProperty('amazonLogin') &&\r\n                    typeof window.checkoutConfig.amazonLogin.amazon_customer_email === 'string'\r\n                ) {\r\n                    return window.checkoutConfig.amazonLogin.amazon_customer_email;\r\n                }\r\n                // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n                return '';\r\n            });\r\n\r\n\r\n\r\n        /**\r\n         * Log out amazon user\r\n         */\r\n        function amazonLogOut() {\r\n            amazonCore.AmazonLogout();\r\n            this.isAmazonAccountLoggedIn(false);\r\n        }\r\n\r\n        /**\r\n         * Set login error if logged out\r\n         */\r\n        function setAmazonLoggedOutIfLoginError(isLoggedOut) {\r\n            if (isLoggedOut === true) {\r\n                isAmazonAccountLoggedIn(false);\r\n                amazonLoginError.dispose();\r\n            }\r\n        }\r\n\r\n        /** if Amazon cart contents are invalid log user out **/\r\n        isAmazonCartInValid.subscribe(function (isCartInValid) {\r\n            if (isCartInValid) {\r\n                amazonLogOut();\r\n            }\r\n        });\r\n\r\n        verifyAmazonLoggedIn();\r\n        setAmazonLoggedOutIfLoginError(amazonCore.amazonLoginError());\r\n\r\n        /**\r\n         * Verifies amazon user is logged in\r\n         */\r\n        function verifyAmazonLoggedIn() {\r\n            isAmazonAccountLoggedIn(!!amazonCore.accessToken());\r\n        }\r\n\r\n        return {\r\n            isAmazonAccountLoggedIn: isAmazonAccountLoggedIn,\r\n            isAmazonEnabled: isAmazonEnabled,\r\n            orderReferenceId: orderReferenceId,\r\n            amazonDeclineCode: amazonDeclineCode,\r\n            sandboxSimulationReference: sandboxSimulationReference,\r\n            isPlaceOrderDisabled: isPlaceOrderDisabled,\r\n            isShippingMethodsLoading: isShippingMethodsLoading,\r\n            isAmazonShippingAddressSelected: isAmazonShippingAddressSelected,\r\n            isQuoteDirty: isQuoteDirty,\r\n            isPwaVisible: isPwaVisible,\r\n            amazonlogOut: amazonLogOut,\r\n            amazonDefined: amazonCore.amazonDefined,\r\n            amazonCustomerEmail: amazonCustomerEmail,\r\n\r\n            /**\r\n             * Set order reference\r\n             */\r\n            setOrderReference: function (or) {\r\n                orderReference = or;\r\n            },\r\n\r\n            /**\r\n             * Get order reference\r\n             */\r\n            getOrderReference: function () {\r\n                return this.orderReferenceId() || orderReference;\r\n            },\r\n\r\n            /**\r\n             * Get address consent token\r\n             */\r\n            getAddressConsentToken: function () {\r\n                return addressConsentToken();\r\n            }\r\n        };\r\n    }\r\n);\r\n","Amazon_Payment/js/model/place-order-mixin.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n * http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\r\n], function ($, wrapper, agreementsAssigner) {\r\n    'use strict';\r\n\r\n    return function (placeOrderAction) {\r\n\r\n        /** Override default place order action and add agreement_ids to request */\r\n        return wrapper.wrap(placeOrderAction, function (originalAction, paymentData,\r\n            redirectOnSuccess, messageContainer) {\r\n\r\n            agreementsAssigner(paymentData);\r\n\r\n            return originalAction(paymentData, redirectOnSuccess, messageContainer);\r\n        });\r\n    };\r\n});\r\n","Amazon_Payment/js/model/amazonPaymentConfig.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\ndefine(\r\n    ['uiRegistry'],\r\n    function (registry) {\r\n        'use strict';\r\n\r\n        var config = registry.get('amazonPayment') || {};\r\n\r\n        return {\r\n            /**\r\n             * Get config value\r\n             */\r\n            getValue: function (key, defaultValue) {\r\n                if (config.hasOwnProperty(key)) {\r\n                    return config[key];\r\n                } else if (defaultValue !== undefined) {\r\n                    return defaultValue;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Is amazonPayment defined?\r\n             */\r\n            isDefined: function () {\r\n                return registry.get('amazonPayment') !== undefined;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Amazon_Payment/js/view/shipping.js":"/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/shipping',\r\n        'Magento_Customer/js/model/customer',\r\n        'Amazon_Payment/js/model/storage'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        customer,\r\n        amazonStorage\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * Initialize shipping\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                this.isNewAddressAdded(amazonStorage.isAmazonAccountLoggedIn());\r\n                amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\r\n                    this.isNewAddressAdded(value);\r\n                }, this);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Validate guest email\r\n             */\r\n            validateGuestEmail: function () {\r\n                var loginFormSelector = 'form[data-role=email-with-possible-login]';\r\n\r\n                $(loginFormSelector).validation();\r\n\r\n                return $(loginFormSelector + ' input[type=email]').valid();\r\n            },\r\n\r\n            /**\r\n             * Overridden validateShippingInformation for Amazon Pay to bypass validation\r\n             *\r\n             * @inheritDoc\r\n             */\r\n            validateShippingInformation: function () {\r\n                if (!amazonStorage.isAmazonAccountLoggedIn()) {\r\n                    return this._super();\r\n                }\r\n\r\n                if (!customer.isLoggedIn()) {\r\n                    return this.validateGuestEmail();\r\n                }\r\n\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Amazon_Payment/js/view/notification.js":"/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'underscore',\r\n        'ko',\r\n        'uiComponent',\r\n        'Amazon_Payment/js/model/storage',\r\n        'uiRegistry'\r\n    ],\r\n    function (\r\n        $,\r\n        _,\r\n        ko,\r\n        Component,\r\n        amazonStorage,\r\n        registry\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend(\r\n            {\r\n                defaults: {\r\n                    template: 'Amazon_Payment/notification'\r\n                },\r\n                isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n                chargeOnOrder: ko.observable(registry.get('amazonPayment').chargeOnOrder),\r\n                isEuPaymentRegion: ko.observable(registry.get('amazonPayment').isEuPaymentRegion),\r\n\r\n                /**\r\n                 * Init\r\n                 */\r\n                initialize: function () {\r\n                    this._super();\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n","Amazon_Payment/js/view/checkout-widget-address.js":"/*global define*/\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'ko',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/action/select-shipping-address',\r\n        'Magento_Checkout/js/model/shipping-rate-processor/new-address',\r\n        'Magento_Checkout/js/action/set-shipping-information',\r\n        'Amazon_Payment/js/model/storage',\r\n        'amazonCore',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'uiRegistry',\r\n        'Amazon_Payment/js/messages'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        ko,\r\n        customer,\r\n        quote,\r\n        selectShippingAddress,\r\n        shippingProcessor,\r\n        setShippingInformationAction,\r\n        amazonStorage,\r\n        amazonCore,\r\n        shippingService,\r\n        addressConverter,\r\n        storage,\r\n        fullScreenLoader,\r\n        errorProcessor,\r\n        urlBuilder,\r\n        checkoutData,\r\n        checkoutDataResolver,\r\n        registry,\r\n        amazonMessages\r\n    ) {\r\n        'use strict';\r\n\r\n        var self;\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Amazon_Payment/checkout-widget-address'\r\n            },\r\n            options: {\r\n                sellerId: registry.get('amazonPayment').merchantId,\r\n                addressWidgetDOMId: 'addressBookWidgetDiv',\r\n                widgetScope: registry.get('amazonPayment').loginScope\r\n            },\r\n            isCustomerLoggedIn: customer.isLoggedIn,\r\n            amazonCustomerEmail: amazonStorage.amazonCustomerEmail,\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n            isAmazonEnabled: ko.observable(registry.get('amazonPayment').isPwaEnabled),\r\n            rates: shippingService.getShippingRates(),\r\n\r\n            /**\r\n             * Init\r\n             */\r\n            initialize: function () {\r\n                self = this;\r\n                this._super();\r\n                // Update checkoutUrl for step-navigator if orderReferenceId is set (e.g. InvaldPaymentMethod)\r\n                if (amazonStorage.orderReferenceId()) {\r\n                    window.checkoutConfig.checkoutUrl += '?orderReferenceId=' + amazonStorage.orderReferenceId()\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Call when component template is rendered\r\n             */\r\n            initAddressWidget: function () {\r\n                if(amazonStorage.amazonDefined()) {\r\n                    self.renderAddressWidget();\r\n                } else {\r\n                    var subscription = amazonStorage.amazonDefined.subscribe(function (defined) { //eslint-disable-line vars-on-top\r\n                        if (defined) {\r\n                            self.renderAddressWidget();\r\n                            subscription.dispose();\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * render Amazon address Widget\r\n             */\r\n            renderAddressWidget: function () {\r\n                new OffAmazonPayments.Widgets.AddressBook({ // eslint-disable-line no-undef\r\n                    sellerId: self.options.sellerId,\r\n                    scope: self.options.widgetScope,\r\n\r\n                    /**\r\n                     * Order reference creation callback\r\n                     */\r\n                    onOrderReferenceCreate: function (orderReference) {\r\n                        var orderid = amazonStorage.orderReferenceId() || orderReference.getAmazonOrderReferenceId();\r\n                        amazonStorage.setOrderReference(orderid);\r\n                    },\r\n\r\n                    /**\r\n                     * Address select callback\r\n                     */\r\n                    onAddressSelect: function () { // orderReference\r\n                        self.getShippingAddressFromAmazon();\r\n                    },\r\n                    displayMode: self.isShippingAddressReadOnly() ? 'Read' : '',\r\n                    design: {\r\n                        designMode: 'responsive'\r\n                    },\r\n\r\n                    /**\r\n                     * Error callback\r\n                     */\r\n                    onError: amazonCore.handleWidgetError\r\n                }).bind(self.options.addressWidgetDOMId);\r\n                amazonMessages.displayMessages();\r\n            },\r\n\r\n            /**\r\n             * Get shipping address from Amazon API\r\n             */\r\n            getShippingAddressFromAmazon: function () {\r\n                var serviceUrl, payload;\r\n\r\n                amazonStorage.isShippingMethodsLoading(true);\r\n                shippingService.isLoading(true);\r\n                serviceUrl = urlBuilder.createUrl('/amazon-shipping-address/:amazonOrderReference', {\r\n                    amazonOrderReference: amazonStorage.getOrderReference()\r\n                }),\r\n                    payload = {\r\n                        addressConsentToken: amazonStorage.getAddressConsentToken()\r\n                    };\r\n\r\n                storage.put(\r\n                    serviceUrl,\r\n                    JSON.stringify(payload)\r\n                ).done(\r\n                    function (data) {\r\n                        var amazonAddress = data.shift(),\r\n                            addressData = addressConverter.formAddressDataToQuoteAddress(amazonAddress),\r\n                            i;\r\n\r\n                        //if telephone is blank set it to 00000000 so it passes the required validation\r\n                        addressData.telephone = !addressData.telephone ? '0000000000' : addressData.telephone;\r\n\r\n                        //fill in blank street fields\r\n                        if ($.isArray(addressData.street)) {\r\n                            for (i = addressData.street.length; i <= 2; i++) {\r\n                                addressData.street[i] = '';\r\n                            }\r\n                        }\r\n                        checkoutData.setShippingAddressFromData(\r\n                            addressConverter.quoteAddressToFormAddressData(addressData)\r\n                        );\r\n                        checkoutDataResolver.resolveEstimationAddress();\r\n                    }\r\n                ).fail(\r\n                    function (response) {\r\n                        errorProcessor.process(response);\r\n                        //remove shipping loader and set shipping rates to 0 on a fail\r\n                        shippingService.setShippingRates([]);\r\n                        amazonStorage.isShippingMethodsLoading(false);\r\n                        if (self.isShippingAddressReadOnly()) {\r\n                            shippingService.isLoading(false);\r\n                            $('.checkout-shipping-method').hide();\r\n                        }\r\n                    }\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Get Amazon Order Reference ID\r\n             */\r\n            getAmazonOrderReference: function () {\r\n                return amazonStorage.getOrderReference();\r\n            },\r\n\r\n            /**\r\n             * Get Amazon Address Consent Token\r\n             */\r\n            getAddressConsentToken: function () {\r\n                return amazonStorage.getAddressConsentToken();\r\n            },\r\n\r\n            /**\r\n             * Is shipping widget set to read-only (orderReferenceId already set?)\r\n             */\r\n            isShippingAddressReadOnly: function() {\r\n                return (amazonStorage.orderReferenceId());\r\n            },\r\n\r\n            /**\r\n             * Continue to payment (e.g. if shipping address is read-only)\r\n             */\r\n            continuePayment: function() {\r\n                window.location = window.checkoutConfig.checkoutUrl + '#payment';\r\n            }\r\n        });\r\n    }\r\n);\r\n","Amazon_Payment/js/view/checkout-button.js":"/*global define*/\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'ko',\r\n        'Magento_Customer/js/model/customer',\r\n        'Amazon_Payment/js/model/storage'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        ko,\r\n        customer,\r\n        amazonStorage\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend(\r\n            {\r\n                defaults: {\r\n                    template: 'Amazon_Payment/checkout-button'\r\n                },\r\n                isCustomerLoggedIn: customer.isLoggedIn,\r\n                isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n                isPwaVisible: amazonStorage.isPwaVisible,\r\n\r\n                /**\r\n                 * Init\r\n                 */\r\n                initialize: function () {\r\n                    this._super();\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n\r\n","Amazon_Payment/js/view/checkout-sandbox-simulator.js":"/*global define*/\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'ko',\r\n        'Amazon_Payment/js/model/storage',\r\n        'uiRegistry'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        ko,\r\n        amazonStorage,\r\n        registry\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Amazon_Payment/checkout-sandbox-simulator'\r\n            },\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n            isSandboxEnabled: ko.observable(registry.get('amazonPayment').isSandboxEnabled),\r\n            sandboxSimulationReference: amazonStorage.sandboxSimulationReference,\r\n            sandboxSimulationOptions: ko.observableArray(registry.get('amazonPayment').sandboxSimulationOptions),\r\n\r\n            /**\r\n             * Init\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Amazon_Payment/js/view/checkout-revert.js":"/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'underscore',\r\n        'ko',\r\n        'uiComponent',\r\n        'Amazon_Payment/js/model/storage',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'uiRegistry'\r\n    ],\r\n    function (\r\n        $,\r\n        _,\r\n        ko,\r\n        Component,\r\n        amazonStorage,\r\n        storage,\r\n        errorProcessor,\r\n        urlBuilder,\r\n        fullScreenLoader,\r\n        registry\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Amazon_Payment/checkout-revert'\r\n            },\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n            isAmazonEnabled: ko.observable(registry.get('amazonPayment').isPwaEnabled),\r\n\r\n            /**\r\n             * Init\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n            },\r\n\r\n            /**\r\n             * Revert checkout\r\n             */\r\n            revertCheckout: function () {\r\n                var serviceUrl = urlBuilder.createUrl('/amazon/order-ref', {});\r\n\r\n                fullScreenLoader.startLoader();\r\n                storage.delete(\r\n                    serviceUrl\r\n                ).done(\r\n                    function () {\r\n                        amazonStorage.amazonlogOut();\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                ).fail(\r\n                    function (response) {\r\n                        fullScreenLoader.stopLoader();\r\n                        errorProcessor.process(response);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n);\r\n","Amazon_Payment/js/view/shipping-address/list.js":"define([\r\n    'Magento_Checkout/js/view/shipping-address/list',\r\n    'Magento_Customer/js/model/address-list',\r\n    'Amazon_Payment/js/model/storage',\r\n    'ko'\r\n], function (Component, addressList, amazonStorage, ko) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * Init address list\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.visible = ko.computed(function () {\r\n                return addressList().length > 0 && !amazonStorage.isAmazonAccountLoggedIn();\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Amazon_Payment/js/view/shipping-address/inline-form.js":"define([\r\n    'uiComponent',\r\n    'ko',\r\n    'Amazon_Payment/js/model/storage'\r\n], function (Component, ko, amazonStorage) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Amazon_Payment/shipping-address/inline-form',\r\n            formSelector: 'co-shipping-form',\r\n            accountFormSelector: 'customer-email-fieldset'\r\n        },\r\n\r\n        /**\r\n         * Init inline form\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            amazonStorage.isAmazonAccountLoggedIn.subscribe(this.hideInlineForm, this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show/hide inline form depending on Amazon login status\r\n         */\r\n        manipulateInlineForm: function () {\r\n            this.hideInlineForm(amazonStorage.isAmazonAccountLoggedIn());\r\n        },\r\n\r\n        /**\r\n         * Show/hide inline form\r\n         */\r\n        hideInlineForm: function(hide) {\r\n            var shippingForm = document.getElementById(this.formSelector);\r\n            var accountForm = document.getElementById(this.accountFormSelector);\r\n\r\n            if (shippingForm) {\r\n                shippingForm.style.display = hide ? 'none' : 'block';\r\n            }\r\n            if (accountForm) {\r\n                accountForm.parentElement.style.display = hide ? 'none' : 'block';\r\n            }\r\n        }\r\n    });\r\n});\r\n","Amazon_Payment/js/view/form/element/email.js":"define([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/form/element/email',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'mage/validation'\r\n], function ($, Component, customerData, quote, checkoutData) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get Amazon customer email\r\n     */\r\n    function getAmazonCustomerEmail() {\r\n        // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n        if (window.checkoutConfig.hasOwnProperty('amazonLogin') &&\r\n            typeof window.checkoutConfig.amazonLogin.amazon_customer_email === 'string'\r\n        ) {\r\n            return window.checkoutConfig.amazonLogin.amazon_customer_email;\r\n        }\r\n        // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n\r\n        return '';\r\n    }\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            email: checkoutData.getInputFieldEmailValue() || getAmazonCustomerEmail(),\r\n            template: 'Amazon_Payment/form/element/email'\r\n        },\r\n\r\n        /**\r\n         * Init email validator\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.email()) {\r\n\r\n                if ($.validator.methods['validate-email'].call(this, this.email())) {\r\n                    quote.guestEmail = this.email();\r\n                    checkoutData.setValidatedEmailValue(this.email());\r\n                }\r\n                checkoutData.setInputFieldEmailValue(this.email());\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Amazon_Payment/js/view/payment/list.js":"define([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'Magento_Checkout/js/view/payment/list',\r\n    'Magento_Checkout/js/model/payment/method-list',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'Magento_Checkout/js/model/address-converter',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Amazon_Payment/js/action/populate-shipping-address',\r\n    'Amazon_Payment/js/model/storage'\r\n\r\n], function (\r\n    $,\r\n    _,\r\n    ko,\r\n    Component,\r\n    paymentMethods,\r\n    checkoutDataResolver,\r\n    addressConverter,\r\n    quote,\r\n    populateShippingAddress,\r\n    amazonStorage\r\n) {\r\n    'use strict';\r\n\r\n    var self;\r\n\r\n    return Component.extend({\r\n        /**\r\n         * Initialize view.\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initialize: function () {\r\n\r\n            self = this;\r\n            amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\r\n                if (!value) {\r\n                    this._reloadPaymentMethods();\r\n                }\r\n            }, this);\r\n\r\n            this._hidePaymentMethodsOnLoad(); //hide methods on load\r\n\r\n            //subscribe to payment methods to remove other payment methods from render list\r\n            paymentMethods.subscribe(function (changes) {\r\n                checkoutDataResolver.resolvePaymentMethod();\r\n                //remove renderer for \"deleted\" payment methods\r\n                _.each(changes, function (change) {\r\n                    if (this._shouldRemovePaymentMethod(change.value.method)) {\r\n                        this.removeRenderer(change.value.method);\r\n                        change.status = 'deleted';\r\n                    }\r\n                }, this);\r\n            }, this, 'arrayChange');\r\n\r\n            this._setupDeclineHandler();\r\n            this._super();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if a payment method is applicable with Amazon Pay\r\n         * @param {String} method\r\n         * @returns {Boolean}\r\n         * @private\r\n         */\r\n        _shouldRemovePaymentMethod: function (method) {\r\n            return amazonStorage.isAmazonAccountLoggedIn() && method !== 'amazon_payment' && method !== 'free';\r\n        },\r\n\r\n        /**\r\n         * handle decline codes\r\n         * @private\r\n         */\r\n        _setupDeclineHandler: function () {\r\n            amazonStorage.amazonDeclineCode.subscribe(function (declined) {\r\n                switch (declined) {\r\n                    //hard decline\r\n                    case 4273:\r\n                        //populate shipping form\r\n                        populateShippingAddress();\r\n                        amazonStorage.amazonlogOut();\r\n                        this._reloadPaymentMethods();\r\n                        amazonStorage.amazonDeclineCode(false);\r\n                        break;\r\n                    //soft decline\r\n                    case 7638:\r\n                        amazonStorage.isPlaceOrderDisabled(true);\r\n                        this._reInitializeAmazonWalletWidget();\r\n                        this._hideEditableOptions();\r\n                        amazonStorage.amazonDeclineCode(false);\r\n                        break;\r\n                    default:\r\n                        amazonStorage.amazonDeclineCode(false);\r\n                        break;\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * When payment methods exist on load hook into widget render to remove when widget has rendered\r\n         * @private\r\n         */\r\n        _hidePaymentMethodsOnLoad: function () {\r\n            if (paymentMethods().length > 0) {\r\n                //if the payment methods are already set\r\n                $(document).on('rendered', '#amazon_payment', function () {\r\n                    _.each(paymentMethods(), function (payment) {\r\n                        if (this._shouldRemovePaymentMethod(payment.method)) {\r\n                            this.removeRenderer(payment.method);\r\n                        }\r\n                    }, self);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * reload payment methods on decline\r\n         * @private\r\n         */\r\n        _reloadPaymentMethods: function () {\r\n            _.each(paymentMethods(), function (paymentMethodData) {\r\n                if (paymentMethodData.method === 'amazon_payment' && !amazonStorage.isAmazonAccountLoggedIn()) {\r\n                    this.removeRenderer(paymentMethodData.method);\r\n                } else {\r\n                    this.createRenderer(paymentMethodData);\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * re-intialises Amazon wallet widget\r\n         * @private\r\n         */\r\n        _reInitializeAmazonWalletWidget: function () {\r\n            var child = this.getChild('amazon_payment');\r\n\r\n            if (child) {\r\n                child.renderPaymentWidget();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * hides editable content and links to prevent unexptect behaviour\r\n         * @private\r\n         */\r\n        _hideEditableOptions: function () {\r\n            $('.payment-option.discount-code', '#payment').remove();\r\n            $('.action-edit', '.shipping-information').remove();\r\n            $('.opc-progress-bar-item._complete', '.opc-progress-bar').addClass('lock-step');\r\n        }\r\n    });\r\n});\r\n","Amazon_Payment/js/view/payment/amazon-pay.js":"define([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n\r\n], function (\r\n    Component,\r\n    rendererList\r\n) {\r\n    'use strict';\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'amazon_payment',\r\n            component: 'Amazon_Payment/js/view/payment/method-renderer/amazon-payment-widget'\r\n        }\r\n    );\r\n\r\n    /** Add view logic here if needed */\r\n    return Component.extend({});\r\n});\r\n","Amazon_Payment/js/view/payment/amazonlogin.js":"define(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/payment/renderer-list'\r\n    ],\r\n    function (\r\n        Component,\r\n        rendererList\r\n    ) {\r\n        'use strict';\r\n        rendererList.push(\r\n            {\r\n                type: 'amazonlogin',\r\n                component: 'Amazon_Payment/js/view/payment/method-renderer/amazonlogin'\r\n            }\r\n        );\r\n\r\n    // Add view logic here if needed\r\n\r\n        return Component.extend({});\r\n    }\r\n);\r\n","Amazon_Payment/js/view/payment/method-renderer/amazon-payment-widget.js":"define(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'ko',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Customer/js/customer-data',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Amazon_Payment/js/model/storage',\r\n        'amazonCore',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Amazon_Payment/js/action/place-order',\r\n        'Magento_Checkout/js/action/get-totals',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/action/select-billing-address',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'amazonPaymentConfig',\r\n        'uiRegistry',\r\n        'Amazon_Payment/js/messages'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        ko,\r\n        customer,\r\n        customerData,\r\n        quote,\r\n        amazonStorage,\r\n        amazonCore,\r\n        storage,\r\n        fullScreenLoader,\r\n        placeOrderAction,\r\n        getTotalsAction,\r\n        errorProcessor,\r\n        addressConverter,\r\n        selectBillingAddress,\r\n        additionalValidators,\r\n        urlBuilder,\r\n        amazonPaymentConfig,\r\n        registry,\r\n        amazonMessages\r\n    ) {\r\n        'use strict';\r\n\r\n        var countryData = customerData.get('directory-data');\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Amazon_Payment/payment/amazon-payment-widget',\r\n                paymentWidgetDOMId: 'walletWidgetDiv',\r\n                presentmentDOMId: 'tr.totals.charge',\r\n                apInputDOMId: '#amazon_payment',\r\n                customerEmail: '#customer-email'\r\n            },\r\n            isCustomerLoggedIn: customer.isLoggedIn,\r\n            isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\r\n            isPwaVisible: amazonStorage.isPwaVisible,\r\n            shippingAddress: quote.shippingAddress,\r\n            billingAddress: quote.billingAddress,\r\n            isPlaceOrderDisabled: amazonStorage.isPlaceOrderDisabled,\r\n\r\n            /**\r\n             * Inits\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n            },\r\n\r\n            /**\r\n             * Init payment widget\r\n             */\r\n            initPaymentWidget: function () {\r\n                var $amazonPayment = $(this.apInputDOMId);\r\n\r\n                this.initDefaultValues();\r\n                this.renderPaymentWidget();\r\n                $amazonPayment.trigger('click'); //activate Amazon Pay method on render\r\n                $amazonPayment.trigger('rendered');\r\n            },\r\n\r\n            /**\r\n             * Init potentially asynchronous values\r\n             */\r\n            initDefaultValues: function () {\r\n                registry.get('amazonPayment', function (amazonPayment) {\r\n                    this.widgetScope = amazonPayment.loginScope;\r\n                    this.sellerId = amazonPayment.merchantId;\r\n                    this.presentmentCurrency = amazonPayment.presentmentCurrency;\r\n                    this.useMultiCurrency = amazonPayment.useMultiCurrency;\r\n                }.bind(this));\r\n            },\r\n\r\n            /**\r\n             * render Amazon Pay Widget\r\n             */\r\n            renderPaymentWidget: function () {\r\n                var widget = new OffAmazonPayments.Widgets.Wallet({ // eslint-disable-line no-undef\r\n                    sellerId: this.sellerId,\r\n                    scope: this.widgetScope,\r\n                    amazonOrderReferenceId: amazonStorage.getOrderReference(),\r\n\r\n                    /**\r\n                     * Payment select callback\r\n                     */\r\n                    onPaymentSelect: function () { // orderReference\r\n                        amazonStorage.isPlaceOrderDisabled(true);\r\n                        this.setBillingAddressFromAmazon();\r\n                    }.bind(this),\r\n                    design: {\r\n                        designMode: 'responsive'\r\n                    },\r\n\r\n                    /**\r\n                     * Error callback\r\n                     */\r\n                    onError: amazonCore.handleWidgetError\r\n                });\r\n                if (this.useMultiCurrency) {\r\n                    widget.setPresentmentCurrency(this.presentmentCurrency);\r\n                    $(this.presentmentDOMId).hide();\r\n                }\r\n                else {\r\n                    $(this.presentmentDOMId).show();\r\n                }\r\n                widget.bind(this.paymentWidgetDOMId);\r\n                amazonMessages.displayMessages();\r\n            },\r\n\r\n            /**\r\n             * Return payment code\r\n             */\r\n            getCode: function () {\r\n                return 'amazon_payment';\r\n            },\r\n\r\n            /**\r\n             * Is widget active?\r\n             */\r\n            isActive: function () {\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * Return country name\r\n             */\r\n            getCountryName: function (countryId) {\r\n                return countryData()[countryId] !== undefined ? countryData()[countryId].name : '';\r\n            },\r\n\r\n            /**\r\n             * Check if country name set\r\n             */\r\n            checkCountryName: function (countryId) {\r\n                return countryData()[countryId] !== undefined;\r\n            },\r\n\r\n            /**\r\n             * Save billing address\r\n             */\r\n            setBillingAddressFromAmazon: function () {\r\n                var serviceUrl = urlBuilder.createUrl('/amazon-billing-address/:amazonOrderReference', {\r\n                        amazonOrderReference: amazonStorage.getOrderReference()\r\n                    }),\r\n                    payload = {\r\n                        addressConsentToken: amazonStorage.getAddressConsentToken()\r\n                    };\r\n\r\n                fullScreenLoader.startLoader();\r\n\r\n                storage.put(\r\n                    serviceUrl,\r\n                    JSON.stringify(payload)\r\n                ).done(\r\n                    function (data) {\r\n                        var amazonAddress = data.shift(), addressData;\r\n\r\n                        addressData = addressConverter.formAddressDataToQuoteAddress(amazonAddress);\r\n                        addressData.telephone = !addressData.telephone ? '0000000000' : addressData.telephone;\r\n\r\n                        selectBillingAddress(addressData);\r\n                        amazonStorage.isPlaceOrderDisabled(false);\r\n\r\n                        if (window.checkoutConfig.amazonLogin.amazon_customer_email) {\r\n                            var customerField = $(this.customerEmail).val();\r\n\r\n                            if (!customerField) {\r\n                                $(this.customerEmail).val(window.checkoutConfig.amazonLogin.amazon_customer_email);\r\n                            }\r\n                        }\r\n                    }\r\n                ).fail(\r\n                    function (response) {\r\n                        errorProcessor.process(response);\r\n                    }\r\n                ).always(\r\n                    function () {\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Return Magento billing object\r\n             */\r\n            getData: function () {\r\n                return {\r\n                    'method': this.item.method,\r\n                    'additional_data': {\r\n                        'sandbox_simulation_reference': amazonStorage.sandboxSimulationReference()\r\n                    }\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Save order\r\n             */\r\n            placeOrder: function (data, event) {\r\n                var placeOrder;\r\n\r\n                if (event) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if (this.validate() && additionalValidators.validate()) {\r\n                    this.isPlaceOrderActionAllowed(false);\r\n                    placeOrder = placeOrderAction(this.getData(), this.redirectAfterPlaceOrder);\r\n\r\n                    $.when(placeOrder).fail(function () {\r\n                        this.isPlaceOrderActionAllowed(true);\r\n                    }.bind(this)).done(this.afterPlaceOrder.bind(this));\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Amazon_Payment/js/view/payment/method-renderer/amazonlogin.js":"define(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Amazon_Payment/js/model/storage',\r\n    ],\r\n    function (\r\n        Component,\r\n        amazonStorage\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend(\r\n            {\r\n                defaults: {\r\n                    template: 'Amazon_Payment/payment/amazonlogin'\r\n                },\r\n                getCode: function () {\r\n                    return 'amazonlogin';\r\n                },\r\n                isActive: function () {\r\n                    return true;\r\n                },\r\n                isPwaVisible: function () {\r\n                    return amazonStorage.isPwaVisible && amazonStorage.isAmazonEnabled;\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n","Amazon_Payment/js/action/place-order.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'mage/url',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Amazon_Payment/js/model/storage',\r\n        'Amazon_Payment/js/model/amazonPaymentConfig',\r\n        'Magento_Customer/js/customer-data'\r\n    ],\r\n    function (quote, urlBuilder, storage, url, errorProcessor, customer, fullScreenLoader, amazonStorage, amazonPaymentConfig, customerData) {\r\n        'use strict';\r\n\r\n        return function (paymentData, redirectOnSuccess) {\r\n            var serviceUrl, payload;\r\n\r\n            redirectOnSuccess = redirectOnSuccess !== false;\r\n\r\n            /** Checkout for guest and registered customer. */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:quoteId/set-payment-information', {\r\n                    quoteId: quote.getQuoteId()\r\n                });\r\n                payload = {\r\n                    confirmOrder: true,\r\n                    cartId: quote.getQuoteId(),\r\n                    email: quote.guestEmail,\r\n                    paymentMethod: paymentData,\r\n                    billingAddress: quote.billingAddress()\r\n                };\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/set-payment-information', {});\r\n                payload = {\r\n                    confirmOrder: true,\r\n                    cartId: quote.getQuoteId(),\r\n                    paymentMethod: paymentData,\r\n                    billingAddress: quote.billingAddress()\r\n                };\r\n            }\r\n\r\n            fullScreenLoader.startLoader();\r\n            customerData.invalidate(['cart']);\r\n            if(amazonPaymentConfig.getValue('scaRegions').indexOf(amazonPaymentConfig.getValue('region')) !== -1) {\r\n                console.log('SCA enabled for region: ' + amazonPaymentConfig.getValue('region'));\r\n                return OffAmazonPayments.initConfirmationFlow(amazonPaymentConfig.getValue('merchantId'), amazonStorage.getOrderReference(), function(confirmationFlow) {\r\n                    return storage.post(\r\n                        serviceUrl,\r\n                        JSON.stringify(payload)\r\n                    ).done(\r\n                        function () {\r\n                            confirmationFlow.success();\r\n                        }\r\n                    ).fail(\r\n                        function (response) {\r\n                            confirmationFlow.error();\r\n                            errorProcessor.process(response);\r\n                            amazonStorage.amazonDeclineCode(response.responseJSON.code);\r\n                            fullScreenLoader.stopLoader(true);\r\n                        }\r\n                    );\r\n                });\r\n            } else {\r\n                console.log('SCA disabled for region: ' + amazonPaymentConfig.getValue('region'));\r\n                return storage.post(\r\n                    serviceUrl,\r\n                    JSON.stringify(payload)\r\n                ).done(\r\n                    function () {\r\n                        if(redirectOnSuccess) {\r\n                            window.location.replace(url.build('amazonpayments/payment/completecheckout/?AuthenticationStatus=Success'));\r\n                        }\r\n                    }\r\n                ).fail(\r\n                    function (response) {\r\n                        errorProcessor.process(response);\r\n                        amazonStorage.amazonDeclineCode(response.responseJSON.code);\r\n                        fullScreenLoader.stopLoader(true);\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);\r\n","Amazon_Payment/js/action/populate-shipping-address.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/model/quote',\r\n        'uiRegistry',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'Amazon_Payment/js/model/storage'\r\n    ],\r\n    function ($, addressConverter, quote, registry, checkoutData, checkoutDataResolver, amazonStorage) {\r\n        'use strict';\r\n\r\n        /**\r\n         * Populate shipping address form in shipping step from quote model         *\r\n         */\r\n        function populateShippingForm() {\r\n            var shippingAddressData = checkoutData.getShippingAddressFromData();\r\n\r\n            registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                checkoutProvider.set(\r\n                    'shippingAddress',\r\n                    $.extend({}, checkoutProvider.get('shippingAddress'), shippingAddressData)\r\n                );\r\n            });\r\n            checkoutDataResolver.resolveShippingAddress();\r\n        }\r\n\r\n        /**\r\n         * Populate shipping address form in shipping step from quote model\r\n         * @private\r\n         */\r\n        return function () {\r\n            //check to see if user is logged out of amazon (otherwise shipping form won't be in DOM)\r\n            if (!amazonStorage.isAmazonAccountLoggedIn) {\r\n                populateShippingForm();\r\n            }\r\n            //subscribe to logout and trigger shippingform population when logged out.\r\n            amazonStorage.isAmazonAccountLoggedIn.subscribe(function (loggedIn) {\r\n                if (!loggedIn) {\r\n                    populateShippingForm();\r\n                }\r\n            });\r\n        };\r\n    }\r\n);\r\n","Magento_InstantPurchase/js/view/instant-purchase.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/url',\r\n    'mage/template',\r\n    'mage/translate',\r\n    'text!Magento_InstantPurchase/template/confirmation.html',\r\n    'mage/validation'\r\n], function (ko, $, _, Component, confirm, customerData, urlBuilder, mageTemplate, $t, confirmationTemplate) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_InstantPurchase/instant-purchase',\r\n            buttonText: $t('Instant Purchase'),\r\n            purchaseUrl: urlBuilder.build('instantpurchase/button/placeOrder'),\r\n            showButton: false,\r\n            paymentToken: null,\r\n            shippingAddress: null,\r\n            billingAddress: null,\r\n            shippingMethod: null,\r\n            productFormSelector: '#product_addtocart_form',\r\n            confirmationTitle: $t('Instant Purchase Confirmation'),\r\n            confirmationData: {\r\n                message: $t('Are you sure you want to place order and pay?'),\r\n                shippingAddressTitle: $t('Shipping Address'),\r\n                billingAddressTitle: $t('Billing Address'),\r\n                paymentMethodTitle: $t('Payment Method'),\r\n                shippingMethodTitle: $t('Shipping Method')\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var instantPurchase = customerData.get('instant-purchase');\r\n\r\n            this._super();\r\n\r\n            this.setPurchaseData(instantPurchase());\r\n            instantPurchase.subscribe(this.setPurchaseData, this);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('showButton paymentToken shippingAddress billingAddress shippingMethod');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set data from customerData.\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setPurchaseData: function (data) {\r\n            this.showButton(data.available);\r\n            this.paymentToken(data.paymentToken);\r\n            this.shippingAddress(data.shippingAddress);\r\n            this.billingAddress(data.billingAddress);\r\n            this.shippingMethod(data.shippingMethod);\r\n        },\r\n\r\n        /**\r\n         * Confirmation method\r\n         */\r\n        instantPurchase: function () {\r\n            var form = $(this.productFormSelector),\r\n                confirmTemplate = mageTemplate(confirmationTemplate),\r\n                confirmData = _.extend({}, this.confirmationData, {\r\n                    paymentToken: this.paymentToken().summary,\r\n                    shippingAddress: this.shippingAddress().summary,\r\n                    billingAddress: this.billingAddress().summary,\r\n                    shippingMethod: this.shippingMethod().summary\r\n                });\r\n\r\n            if (!(form.validation() && form.validation('isValid'))) {\r\n                return;\r\n            }\r\n\r\n            confirm({\r\n                title: this.confirmationTitle,\r\n                content: confirmTemplate({\r\n                    data: confirmData\r\n                }),\r\n                actions: {\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        $.ajax({\r\n                            url: this.purchaseUrl,\r\n                            data: form.serialize(),\r\n                            type: 'post',\r\n                            dataType: 'json',\r\n\r\n                            /** Show loader before send */\r\n                            beforeSend: function () {\r\n                                $('body').trigger('processStart');\r\n                            }\r\n                        }).always(function () {\r\n                            $('body').trigger('processStop');\r\n                        });\r\n                    }.bind(this)\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_GroupedProduct/js/product-ids-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/product/view/product-ids',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function ($, productIds, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns id's of products in form.\r\n     *\r\n     * @param {Object} config\r\n     * @param {HTMLElement} element\r\n     * @return {Array}\r\n     */\r\n    return function (config, element) {\r\n        $(element).find('div[data-product-id]').each(function () {\r\n            productIds.push($(this).data('productId').toString());\r\n            productInfo.push(\r\n                {\r\n                    'id': $(this).data('productId').toString()\r\n                }\r\n            );\r\n        });\r\n\r\n        return productIds();\r\n    };\r\n});\r\n","Magento_PaypalCaptcha/js/view/checkout/paymentCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Captcha/js/model/captcha'\r\n],\r\nfunction ($, defaultCaptcha, captchaList, Captcha) {\r\n    'use strict';\r\n\r\n    return defaultCaptcha.extend({\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var captchaConfigPayment,\r\n                currentCaptcha;\r\n\r\n            this._super();\r\n\r\n            if (window[this.configSource] && window[this.configSource].captchaPayments) {\r\n                captchaConfigPayment = window[this.configSource].captchaPayments;\r\n\r\n                $.each(captchaConfigPayment, function (formId, captchaData) {\r\n                    var captcha;\r\n\r\n                    captchaData.formId = formId;\r\n                    captcha = Captcha(captchaData);\r\n                    captchaList.add(captcha);\r\n                });\r\n            }\r\n\r\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (currentCaptcha != null) {\r\n                currentCaptcha.setIsVisible(true);\r\n                this.setCurrentCaptcha(currentCaptcha);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_PaypalCaptcha/js/view/payment/list-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Captcha/js/model/captchaList'\r\n], function ($, captchaList) {\r\n    'use strict';\r\n\r\n    var mixin = {\r\n\r\n        formId: 'co-payment-form',\r\n\r\n        /**\r\n         * Sets custom template for Payflow Pro\r\n         *\r\n         * @param {Object} payment\r\n         * @returns {Object}\r\n         */\r\n        createComponent: function (payment) {\r\n\r\n            var component = this._super(payment);\r\n\r\n            if (component.component === 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method') {\r\n                component.template = 'Magento_PaypalCaptcha/payment/payflowpro-form';\r\n                $(window).off('clearTimeout')\r\n                    .on('clearTimeout', this.clearTimeout.bind(this));\r\n            }\r\n\r\n            return component;\r\n        },\r\n\r\n        /**\r\n         * Overrides default window.clearTimeout() to catch errors from iframe and reload Captcha.\r\n         *\r\n         * @param {Number} timeoutID\r\n         */\r\n        clearTimeout: function (timeoutID) {\r\n            var captcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (captcha !== null) {\r\n                captcha.refresh();\r\n            }\r\n            clearTimeout(timeoutID);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overrides `Magento_Checkout/js/view/payment/list::createComponent`\r\n     */\r\n    return function (target) {\r\n        return target.extend(mixin);\r\n    };\r\n});\r\n","Klarna_Kp/js/model/klarna.js":"/* global Klarna */\r\n/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(\r\n  [\r\n    'jquery',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/model/customer',\r\n    'Klarna_Kp/js/model/config',\r\n    'Klarna_Kp/js/model/debug',\r\n    'klarnapi'\r\n  ],\r\n  function ($, quote, customer, config, debug) {\r\n    'use strict';\r\n    return {\r\n      b2b_enabled: config.b2b_enabled,\r\n      buildAddress: function (address, email, isShipping = false) {\r\n        var addr = {\r\n          'organization_name': '',\r\n          'given_name': '',\r\n          'family_name': '',\r\n          'street_address': '',\r\n          'city': '',\r\n          'postal_code': '',\r\n          'country': '',\r\n          'phone': '',\r\n          'email': email\r\n        };\r\n\r\n        if (!address) { // Somehow we got a null passed in\r\n          return addr;\r\n        }\r\n        if (address.prefix) {\r\n          addr['title'] = address.prefix;\r\n        }\r\n        if (address.firstname) {\r\n          addr['given_name'] = address.firstname;\r\n        }\r\n        if (address.lastname) {\r\n          addr['family_name'] = address.lastname;\r\n        }\r\n        if (address.street) {\r\n          if (address.street.length > 0) {\r\n            addr['street_address'] = address.street[0];\r\n          }\r\n          if (address.street.length > 1) {\r\n            addr['street_address2'] = address.street[1];\r\n          }\r\n        }\r\n        if (address.city) {\r\n          addr['city'] = address.city;\r\n        }\r\n        if (address.regionCode) {\r\n          addr['region'] = address.regionCode;\r\n        }\r\n        if (address.postcode) {\r\n          addr['postal_code'] = address.postcode;\r\n        }\r\n        if (address.countryId) {\r\n          addr['country'] = address.countryId;\r\n        }\r\n        if (address.telephone) {\r\n          addr['phone'] = address.telephone;\r\n        }\r\n        // Having organization_name in the billing address causes KP/PLSI to return B2B methods\r\n        // no matter the customer type. So we only want to set this if the merchant has enabled B2B.\r\n        if (address.company && (this.b2b_enabled || isShipping)) {\r\n          addr['organization_name'] = address.company;\r\n        }\r\n        debug.log(addr);\r\n        return addr;\r\n      },\r\n      buildCustomer: function (billingAddress) {\r\n        var type = 'person';\r\n\r\n        if (this.b2b_enabled && billingAddress.company) {\r\n          type = 'organization';\r\n        }\r\n\r\n        return {\r\n          'type': type\r\n        };\r\n      },\r\n      getUpdateData: function () {\r\n        var email = '',\r\n          shippingAddress = quote.shippingAddress(),\r\n          data = {\r\n            'billing_address': {},\r\n            'shipping_address': {},\r\n            'customer': {}\r\n          };\r\n\r\n        if (customer.isLoggedIn()) {\r\n          email = customer.customerData.email;\r\n        } else {\r\n          email = quote.guestEmail;\r\n        }\r\n        if (quote.isVirtual()) {\r\n          shippingAddress = quote.billingAddress();\r\n        }\r\n        data.billing_address = this.buildAddress(quote.billingAddress(), email);\r\n        data.shipping_address = this.buildAddress(shippingAddress, email, true);\r\n        data.customer = this.buildCustomer(quote.billingAddress());\r\n        debug.log(data);\r\n        return data;\r\n      },\r\n      load: function (payment_method, container_id, callback) {\r\n        var data = null;\r\n\r\n        debug.log('Loading container ' + container_id);\r\n        if ($('#' + container_id).length) {\r\n          debug.log('Loading method ' + payment_method);\r\n          if (config.data_sharing_onload) {\r\n            data = this.getUpdateData();\r\n          }\r\n          Klarna.Payments.load(\r\n            {\r\n              payment_method_category: payment_method,\r\n              container: \"#\" + container_id\r\n            },\r\n            data,\r\n            function (res) {\r\n              var errors = false;\r\n\r\n              debug.log(res);\r\n              if (res.errors) {\r\n                errors = true;\r\n              }\r\n              config.hasErrors(errors);\r\n              if (callback) {\r\n                callback(res);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      },\r\n      init: function () {\r\n        Klarna.Payments.init({\r\n          client_token: config.client_token\r\n        });\r\n      },\r\n      authorize: function (payment_method, data, callback) {\r\n        Klarna.Payments.authorize(\r\n          {\r\n            payment_method_category: payment_method\r\n          },\r\n          data,\r\n          function (res) {\r\n            var errors = false;\r\n\r\n            debug.log(res);\r\n            if (true === res.approved) {\r\n              config.authorization_token(res.authorization_token);\r\n            }\r\n            if (res.errors) {\r\n              errors = true;\r\n            }\r\n            config.hasErrors(errors);\r\n            callback(res);\r\n          }\r\n        );\r\n      },\r\n      finalize: function (payment_method, data, callback) {\r\n        Klarna.Payments.finalize(\r\n          {\r\n            payment_method_category: payment_method\r\n          },\r\n          data,\r\n          function (res) {\r\n            var errors = false;\r\n\r\n            debug.log(res);\r\n            if (true === res.approved) {\r\n              config.authorization_token(res.authorization_token);\r\n            }\r\n            if (res.errors) {\r\n              errors = true;\r\n            }\r\n            config.hasErrors(errors);\r\n            callback(res);\r\n          }\r\n        );\r\n      }\r\n    };\r\n  }\r\n);\r\n","Klarna_Kp/js/model/config.js":"/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(\r\n  [\r\n    'ko'\r\n  ],\r\n  function (ko) {\r\n    'use strict';\r\n    var client_token = window.checkoutConfig.payment.klarna_kp.client_token,\r\n      message = window.checkoutConfig.payment.klarna_kp.message,\r\n      authorization_token = ko.observable(window.checkoutConfig.payment.klarna_kp.authorization_token),\r\n      debug = window.checkoutConfig.payment.klarna_kp.debug,\r\n      enabled = window.checkoutConfig.payment.klarna_kp.enabled,\r\n      b2b_enabled = window.checkoutConfig.payment.klarna_kp.b2b_enabled,\r\n      data_sharing_onload = window.checkoutConfig.payment.klarna_kp.data_sharing_onload,\r\n      success = window.checkoutConfig.payment.klarna_kp.success,\r\n      hasErrors = ko.observable(false),\r\n      available_methods = window.checkoutConfig.payment.klarna_kp.available_methods,\r\n      redirect_url = window.checkoutConfig.payment.klarna_kp.redirect_url;\r\n\r\n    return {\r\n      hasErrors: hasErrors,\r\n      debug: debug,\r\n      enabled: enabled,\r\n      b2b_enabled: b2b_enabled,\r\n      data_sharing_onload: data_sharing_onload,\r\n      client_token: client_token,\r\n      message: message,\r\n      success: success,\r\n      authorization_token: authorization_token,\r\n      available_methods: available_methods,\r\n      redirect_url: redirect_url,\r\n      getTitle: function (code) {\r\n        if (window.checkoutConfig.payment.klarna_kp[code]) {\r\n          return window.checkoutConfig.payment.klarna_kp[code].title;\r\n        }\r\n        return 'Klarna Payments';\r\n      },\r\n      getLogo: function (code) {\r\n        if (window.checkoutConfig.payment.klarna_kp[code]) {\r\n          return window.checkoutConfig.payment.klarna_kp[code].logo;\r\n        }\r\n        return '';\r\n      }\r\n    };\r\n  }\r\n);\r\n","Klarna_Kp/js/model/debug.js":"/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(\r\n  [\r\n    'Klarna_Kp/js/model/config'\r\n  ],\r\n  function (config) {\r\n    'use strict';\r\n    return {\r\n      log: function (message) {\r\n        if (config.debug) {\r\n          console.trace();\r\n          console.log(message);\r\n        }\r\n      },\r\n      group: function (groupid) {\r\n        if (config.debug) {\r\n          console.group(groupid);\r\n        }\r\n      },\r\n      groupEnd: function () {\r\n        if (config.debug) {\r\n          console.groupEnd();\r\n        }\r\n      },\r\n      table: function (tabularData, properties) {\r\n        if (config.debug) {\r\n          console.trace();\r\n          console.table(tabularData, properties);\r\n        }\r\n      }\r\n    };\r\n  }\r\n);\r\n","Klarna_Kp/js/view/payments.js":"/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(\r\n  [\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'Klarna_Kp/js/model/config'\r\n  ],\r\n  function (_,\r\n            Component,\r\n            rendererList,\r\n            config) {\r\n    'use strict';\r\n    if (config.available_methods && _.isArray(config.available_methods)) {\r\n      config.available_methods.forEach(function (value) {\r\n        rendererList.push(value);\r\n      });\r\n    }\r\n    // Add view logic here if needed\r\n    return Component.extend({});\r\n  }\r\n);\r\n","Klarna_Kp/js/view/payments/kp.js":"/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\ndefine(\r\n  [\r\n    'ko',\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Checkout/js/view/billing-address',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Checkout/js/action/set-payment-information',\r\n    'Klarna_Kp/js/model/config',\r\n    'Klarna_Kp/js/model/klarna',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Klarna_Kp/js/view/payments',\r\n    'Klarna_Kp/js/model/debug',\r\n    'Klarna_Kp/js/action/set-payment-method-action'\r\n  ],\r\n  function (ko,\r\n            $,\r\n            $t,\r\n            Component,\r\n            billingAddress,\r\n            fullScreenLoader,\r\n            setPaymentInformationAction,\r\n            config,\r\n            klarna,\r\n            quote,\r\n            additionalValidators,\r\n            kp,\r\n            debug,\r\n            setPaymentMethodAction) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n      defaults: {\r\n        template: 'Klarna_Kp/payments/kp',\r\n        timeoutMessage: 'Sorry, but something went wrong. Please contact the seller.',\r\n        redirectAfterPlaceOrder: false\r\n      },\r\n      placeOrderHandler: null,\r\n      validateHandler: null,\r\n\r\n      isVisible: ko.observable(true),\r\n      isLoading: false,\r\n      isBillingSameAsShipping: true,\r\n      showButton: ko.observable(false),\r\n\r\n      checkPreSelect: function() {\r\n        if (this.getCode() === this.isChecked()) {\r\n          this.isLoading = false;\r\n          this.debounceKlarnaLoad();\r\n        }\r\n      },\r\n\r\n      getLogoUrl: function() {\r\n        return config.getLogo(this.getCategoryId());\r\n      },\r\n\r\n      /**\r\n       * @param {Object} handler\r\n       */\r\n      setPlaceOrderHandler: function (handler) {\r\n        this.placeOrderHandler = handler;\r\n      },\r\n\r\n      /**\r\n       * @param {Object} handler\r\n       */\r\n      setValidateHandler: function (handler) {\r\n        this.validateHandler = handler;\r\n      },\r\n\r\n      /**\r\n       * @returns {Object}\r\n       */\r\n      context: function () {\r\n        return this;\r\n      },\r\n\r\n      /**\r\n       * @returns {Boolean}\r\n       */\r\n      isShowLegend: function () {\r\n        return true;\r\n      },\r\n\r\n      getTitle: function () {\r\n        return config.getTitle(this.getCategoryId());\r\n      },\r\n\r\n      /**\r\n       * Get data\r\n       * @returns {Object}\r\n       */\r\n      getData: function () {\r\n        return {\r\n          'method': this.item.method,\r\n          'additional_data': {\r\n            'method_title': this.getTitle(),\r\n            'logo': this.getLogoUrl(),\r\n            'authorization_token': config.authorization_token()\r\n          }\r\n        };\r\n      },\r\n\r\n      getCategoryId: function () {\r\n        // Strip off \"klarna_\"\r\n        return this.getCode().substr(7);\r\n      },\r\n\r\n      hasMessage: function () {\r\n        return config.message !== null || config.client_token === null || config.client_token === '';\r\n      },\r\n\r\n      getMessage: function () {\r\n        if (config.message !== null) {\r\n          return config.message;\r\n        }\r\n        return $t('An unknown error occurred. Please try another payment method');\r\n      },\r\n\r\n      getClientToken: function () {\r\n        return config.client_token;\r\n      },\r\n\r\n      getAuthorizationToken: function () {\r\n        return config.authorization_token();\r\n      },\r\n      initialize: function () {\r\n        var self = this;\r\n\r\n        this._super();\r\n\r\n        this.showButton(false);\r\n        if (this.hasMessage()) {\r\n          // Don't try to initialize Klarna\r\n          return;\r\n        }\r\n        klarna.init();\r\n        quote.paymentMethod.subscribe(function (value) {\r\n          self.isLoading = false;\r\n          if (value && value.method === self.getCode()) {\r\n            self.debounceKlarnaLoad();\r\n          }\r\n        });\r\n        config.hasErrors.subscribe(function (value) {\r\n          self.showButton(value);\r\n        });\r\n\r\n        billingAddress().isAddressSameAsShipping.subscribe(function (isSame) {\r\n          self.isBillingSameAsShipping = isSame;\r\n        });\r\n        quote.shippingAddress.subscribe(function () {\r\n          // MAGE-803: When billing and shipping are the same, both the shipping and billing listeners will be\r\n          // called with the shipping one called first. If we allow this to update KP in that case then the\r\n          // billing address will not match between Magento and Klarna as by the time it reaches here the address\r\n          // change will not have propagated to the billing address in the Magento quote and the billing listener\r\n          // will be blocked from updating KP as an update will already be in progress.\r\n          if (self.getCode() === self.isChecked() && !self.isBillingSameAsShipping) {\r\n            self.debounceKlarnaLoad();\r\n          }\r\n        });\r\n        quote.billingAddress.subscribe(function () {\r\n          if (self.getCode() === self.isChecked()) {\r\n            self.debounceKlarnaLoad();\r\n          }\r\n        });\r\n        quote.totals.subscribe(function (newTotals) {\r\n            if (self.getCode() === self.isChecked()) {\r\n                self.debounceKlarnaLoad();\r\n            }\r\n        });\r\n      },\r\n      getContainerId: function () {\r\n        return this.getCode().replace(new RegExp('_', 'g'), '-') + '-container';\r\n      },\r\n      selectPaymentMethod: function () {\r\n        this.isLoading = false;\r\n        this.debounceKlarnaLoad();\r\n        return this._super();\r\n      },\r\n      loadTimeout: null,\r\n      debounceKlarnaLoad: function () {\r\n        var self = this;\r\n        if (self.loadTimeout) {\r\n          clearTimeout(self.loadTimeout);\r\n        }\r\n        self.loadTimeout = setTimeout(function(){\r\n          self.loadKlarna();\r\n        }, 200);\r\n      },\r\n\r\n      loadKlarna: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoading) {\r\n          return false;\r\n        }\r\n        self.isLoading = true;\r\n        try {\r\n          klarna.load(self.getCategoryId(), self.getContainerId(), function (res) {\r\n            debug.log(res);\r\n            self.showButton(res.show_form);\r\n            self.isLoading = false;\r\n          });\r\n          return true;\r\n        } catch (e) {\r\n          debug.log(e);\r\n          self.isLoading = false;\r\n          return false;\r\n        }\r\n      },\r\n      authorize: function () {\r\n        var self = this;\r\n\r\n        if (additionalValidators.validate()) {\r\n          self.showButton(false);\r\n          if (this.hasMessage()) {\r\n            return;\r\n          }\r\n          klarna.authorize(self.getCategoryId(), klarna.getUpdateData(), function (res) {\r\n            debug.log(res);\r\n            if (res.approved) {\r\n              if (res.finalize_required) {\r\n                self.finalize();\r\n                return;\r\n              }\r\n              self.placeOrder();\r\n            }\r\n\r\n            if (res.show_form === false) {\r\n              self.showButton(false);\r\n            } else {\r\n              self.showButton(true);\r\n            }\r\n\r\n          });\r\n        }\r\n      },\r\n      finalize: function () {\r\n        var self = this;\r\n\r\n        if (this.hasMessage()) {\r\n          self.showButton(false);\r\n          return;\r\n        }\r\n        klarna.finalize(self.getCategoryId(), klarna.getUpdateData(), function (res) {\r\n          debug.log(res);\r\n          if (res.approved) {\r\n            self.placeOrder();\r\n          }\r\n          self.showButton(true);\r\n        });\r\n      },\r\n      afterPlaceOrder: function () {\r\n        setPaymentMethodAction(this.messageContainer);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n);\r\n","Klarna_Kp/js/action/set-payment-method-action.js":"define(\r\n    [\r\n        'jquery',\r\n        'Klarna_Kp/js/model/config'\r\n    ],\r\n    function ($, config) {\r\n        'use strict';\r\n        return function (messageContainer) {\r\n          $.mage.redirect(config.redirect_url);\r\n        };\r\n    }\r\n);\r\n","Klarna_Kp/js/action/override.js":"/**\r\n * This file is part of the Klarna KP module\r\n *\r\n * (c) Klarna Bank AB (publ)\r\n *\r\n * For the full copyright and license information, please view the NOTICE\r\n * and LICENSE files that were distributed with this source code.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([\r\n  'mage/utils/wrapper',\r\n  'Klarna_Kp/js/model/config',\r\n  'Magento_Checkout/js/model/full-screen-loader'\r\n], function (wrapper, config, loader) {\r\n  'use strict';\r\n\r\n  /**\r\n   * This is needed to prevent the customer from a race condition between 'Place Order' and adding/removing a coupon,\r\n   * giftcard, rewards points, etc.. as it affects order totals\r\n   */\r\n  return function (overriddenFunction) {\r\n    return wrapper.wrap(overriddenFunction, function (originalAction) {\r\n      if (!config.enabled) {\r\n        return originalAction();\r\n      }\r\n      if (config.hasErrors()) {\r\n        return originalAction();\r\n      }\r\n      loader.startLoader();\r\n      return originalAction().then(function () {\r\n        loader.stopLoader();\r\n      });\r\n    });\r\n  };\r\n});\r\n","Magento_Review/js/submit-review.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).on('submit', function () {\r\n            if ($(this).valid()) {\r\n                $(this).find('.submit').attr('disabled', true);\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Review/js/validate-review.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.validator.addMethod(\r\n        'rating-required', function (value) {\r\n            return value !== undefined;\r\n        }, $.mage.__('Please select one of each of the ratings above.'));\r\n});\r\n","Magento_Review/js/process-reviews.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} url\r\n     * @param {*} fromPages\r\n     */\r\n    function processReviews(url, fromPages) {\r\n        $.ajax({\r\n            url: url,\r\n            cache: true,\r\n            dataType: 'html',\r\n            showLoader: false,\r\n            loaderContext: $('.product.data.items')\r\n        }).done(function (data) {\r\n            $('#product-review-container').html(data).trigger('contentUpdated');\r\n            $('[data-role=\"product-review\"] .pages a').each(function (index, element) {\r\n                $(element).click(function (event) { //eslint-disable-line max-nested-callbacks\r\n                    processReviews($(element).attr('href'), true);\r\n                    event.preventDefault();\r\n                });\r\n            });\r\n        }).complete(function () {\r\n            if (fromPages == true) { //eslint-disable-line eqeqeq\r\n                $('html, body').animate({\r\n                    scrollTop: $('#reviews').offset().top - 50\r\n                }, 300);\r\n            }\r\n        });\r\n    }\r\n\r\n    return function (config) {\r\n        var reviewTab = $(config.reviewsTabSelector),\r\n            requiredReviewTabRole = 'tab';\r\n\r\n        if (reviewTab.attr('role') === requiredReviewTabRole && reviewTab.hasClass('active')) {\r\n            processReviews(config.productReviewUrl, location.hash === '#reviews');\r\n        } else {\r\n            reviewTab.one('beforeOpen', function () {\r\n                processReviews(config.productReviewUrl);\r\n            });\r\n        }\r\n\r\n        $(function () {\r\n            $('.product-info-main .reviews-actions a').click(function (event) {\r\n                var anchor, addReviewBlock;\r\n\r\n                event.preventDefault();\r\n                anchor = $(this).attr('href').replace(/^.*?(#|$)/, '');\r\n                addReviewBlock = $('#' + anchor);\r\n\r\n                if (addReviewBlock.length) {\r\n                    $('.product.data.items [data-role=\"content\"]').each(function (index) { //eslint-disable-line\r\n                        if (this.id == 'reviews') { //eslint-disable-line eqeqeq\r\n                            $('.product.data.items').tabs('activate', index);\r\n                        }\r\n                    });\r\n                    $('html, body').animate({\r\n                        scrollTop: addReviewBlock.offset().top - 50\r\n                    }, 300);\r\n                }\r\n\r\n            });\r\n        });\r\n    };\r\n});\r\n","Magento_Review/js/error-placement.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).mage('validation', {\r\n            /** @inheritdoc */\r\n            errorPlacement: function (error, el) {\r\n\r\n                if (el.parents('#product-review-table').length) {\r\n                    $('#product-review-table').siblings(this.errorElement + '.' + this.errorClass).remove();\r\n                    $('#product-review-table').after(error);\r\n                } else {\r\n                    el.after(error);\r\n                }\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Review/js/view/review.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/view/customer'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.review = customerData.get('review').extend({\r\n                disposableCustomerData: 'review'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        nickname: function () {\r\n            return this.review().nickname || customerData.get('customer')().firstname;\r\n        }\r\n    });\r\n});\r\n","Magento_Sales/js/orders-returns.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.ordersReturns', {\r\n        options: {\r\n            zipCode: '#oar-zip', // Search by zip code.\r\n            emailAddress: '#oar-email', // Search by email address.\r\n            searchType: '#quick-search-type-id' // Search element used for choosing between the two.\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            $(this.options.searchType).on('change', $.proxy(this._showIdentifyBlock, this)).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Show either the search by zip code option or the search by email address option.\r\n         * @private\r\n         * @param {jQuery.Event} e - Change event. Event target value is either 'zip' or 'email'.\r\n         */\r\n        _showIdentifyBlock: function (e) {\r\n            var value = $(e.target).val();\r\n\r\n            $(this.options.zipCode).toggle(value === 'zip');\r\n            $(this.options.emailAddress).toggle(value === 'email');\r\n        }\r\n    });\r\n\r\n    return $.mage.ordersReturns;\r\n});\r\n","Magento_Sales/js/gift-message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.giftMessage', {\r\n        options: {\r\n            rowPrefix: '#order-item-row-', // Selector prefix for item's row in the table.\r\n            linkPrefix: '#order-item-gift-message-link-', // Selector prefix for the 'Gift Message' link.\r\n            duration: 100, // Toggle duration.\r\n            expandedClass: 'expanded', // Class added/removed to/from the 'Gift Message' link.\r\n            expandedContentClass: 'expanded-content', // Class added/removed to/from the 'Gift Message' content.\r\n            lastClass: 'last' // Class added/removed to/from the last item's row in the products table.\r\n        },\r\n\r\n        /**\r\n         * Bind a click handler on the widget's element to toggle the gift message.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', $.proxy(this._toggleGiftMessage, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the display of the item's corresponding gift message.\r\n         * @private\r\n         * @param {jQuery.Event} event - Click event.\r\n         */\r\n        _toggleGiftMessage: function (event) {\r\n            var element = $(event.target), // Click target. The 'Gift Message' link or 'Close' button.\r\n                options = this.options, // Cached widget options.\r\n                itemId = element.data('item-id'), // The individual item's numeric id.\r\n                link = $(options.linkPrefix + itemId), // The 'Gift Message' expandable link.\r\n                row = $(options.rowPrefix + itemId), // The item's row in the products table.\r\n                region = $('#' + element.attr('aria-controls')); // The gift message container region.\r\n\r\n            region.toggleClass(options.expandedContentClass, options.duration, function () {\r\n                if (region.attr('aria-expanded') === 'true') {\r\n                    region.attr('aria-expanded', 'false');\r\n\r\n                    if (region.hasClass(options.lastClass)) {\r\n                        row.addClass(options.lastClass);\r\n                    }\r\n                } else {\r\n                    region.attr('aria-expanded', 'true');\r\n\r\n                    if (region.hasClass(options.lastClass)) {\r\n                        row.removeClass(options.lastClass);\r\n                    }\r\n                }\r\n                link.toggleClass(options.expandedClass);\r\n            });\r\n            event.preventDefault(); // Prevent event propagation and avoid going to the link's href.\r\n        }\r\n    });\r\n\r\n    return $.mage.giftMessage;\r\n});\r\n","Magento_Sales/js/view/last-ordered-items.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'underscore'\r\n], function (Component, customerData, _) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isShowAddToCart: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.lastOrderedItems = customerData.get('last-ordered-items');\r\n            this.lastOrderedItems.subscribe(this.checkSalableItems.bind(this));\r\n            this.checkSalableItems();\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('isShowAddToCart');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if items is_saleable and change add to cart button visibility.\r\n         */\r\n        checkSalableItems: function () {\r\n            var isShowAddToCart = _.some(this.lastOrderedItems().items, {\r\n                'is_saleable': true\r\n            });\r\n\r\n            this.isShowAddToCart(isShowAddToCart);\r\n        }\r\n    });\r\n});\r\n","Dotdigitalgroup_Chat/js/chatData.js":"define([\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery',\r\n    'mage/cookies'\r\n], function (customerData, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Enable the chat widget\r\n     *\r\n     * @param chatData\r\n     */\r\n    function startChat(chatData) {\r\n        var storageKey = chatData().cookieName;\r\n        window.comapiConfig = {\r\n            apiSpace: chatData().apiSpaceId,\r\n            launchTimeout: 2000\r\n        };\r\n\r\n        (function (d, s, id) {\r\n            var js, cjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) { return; }\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = '//cdn.dnky.co/widget/bootstrap.js';\r\n            cjs.parentNode.insertBefore(js, cjs);\r\n        }(document, 'script', 'comapi-widget'));\r\n\r\n        // listen for widget message events\r\n        window.addEventListener(\"message\", function (event) {\r\n            if (event.data.type !== 'SetWidgetState') {\r\n                return;\r\n            }\r\n\r\n            if (event.data.show === 'hidden') {\r\n                // user has closed the chat\r\n                sessionStorage.removeItem(storageKey);\r\n\r\n            } else if (sessionStorage.getItem(storageKey) === null) {\r\n                // Sync the Magento user id\r\n                window.COMAPI_WIDGET_API.profile.getProfile()\r\n                    .then(function (profile) {\r\n                        $.ajax({\r\n                            url: chatData().profileEndpoint,\r\n                            type: \"POST\",\r\n                            data: \"profileId=\" + profile.id,\r\n                            success: function (result) {\r\n                                // store profile ID in session to flag interaction\r\n                                sessionStorage.setItem(storageKey, profile.id);\r\n                                // store profile ID in cookie for server-side reference\r\n                                $.cookie(storageKey, profile.id);\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    return function () {\r\n        var sectionName = 'chatData';\r\n        var chatData = customerData.get(sectionName);\r\n\r\n        // check we have API space ID, that chat is enabled, and the API space ID was refreshed under 6 hours ago\r\n        if (\r\n            typeof chatData().apiSpaceId === 'undefined'\r\n            || chatData().data_id < Math.floor((new Date().getTime() / 1000) - (60 * 60))\r\n        ) {\r\n            customerData.invalidate([sectionName]);\r\n            customerData.reload([sectionName], true)\r\n                .done(function () {\r\n                    var chatData = customerData.get(sectionName);\r\n                    if (chatData().isEnabled) {\r\n                        startChat(chatData);\r\n                    }\r\n                });\r\n        } else if (chatData().isEnabled) {\r\n            startChat(chatData);\r\n        }\r\n    }\r\n});\r\n","Magento_Fedex/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'city': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Fedex/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Fedex/js/model/shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Fedex/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    'Magento_Fedex/js/model/shipping-rates-validator',\r\n    'Magento_Fedex/js/model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    fedexShippingRatesValidator,\r\n    fedexShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('fedex', fedexShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('fedex', fedexShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_Paypal/js/paypal-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery-ui-modules/widget',\r\n    'mage/mage'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.paypalCheckout', {\r\n        options: {\r\n            originalForm:\r\n                'form:not(#product_addtocart_form_from_popup):has(input[name=\"product\"][value=%1])',\r\n            productId: 'input[type=\"hidden\"][name=\"product\"]',\r\n            ppCheckoutSelector: '[data-role=pp-checkout-url]',\r\n            ppCheckoutInput: '<input type=\"hidden\" data-role=\"pp-checkout-url\" name=\"return_url\" value=\"\"/>'\r\n        },\r\n\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', '[data-action=\"checkout-form-submit\"]', $.proxy(function (e) {\r\n                var $target = $(e.target),\r\n                    returnUrl = $target.data('checkout-url'),\r\n                    productId = $target.closest('form').find(this.options.productId).val(),\r\n                    originalForm = this.options.originalForm.replace('%1', productId),\r\n                    self = this,\r\n                    billingAgreement = customerData.get('paypal-billing-agreement');\r\n\r\n                e.preventDefault();\r\n\r\n                if (billingAgreement().askToCreate) {\r\n                    confirm({\r\n                        content: billingAgreement().confirmMessage,\r\n                        actions: {\r\n\r\n                            /**\r\n                             * Confirmation handler\r\n                             *\r\n                             */\r\n                            confirm: function () {\r\n                                returnUrl = billingAgreement().confirmUrl;\r\n                                self._redirect(returnUrl, originalForm);\r\n                            },\r\n\r\n                            /**\r\n                             * Cancel confirmation handler\r\n                             *\r\n                             */\r\n                            cancel: function (event) {\r\n                                if (event && !$(event.target).hasClass('action-close')) {\r\n                                    self._redirect(returnUrl);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    this._redirect(returnUrl, originalForm);\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Redirect to certain url, with optional form\r\n         * @param {String} returnUrl\r\n         * @param {HTMLElement} originalForm\r\n         *\r\n         */\r\n        _redirect: function (returnUrl, originalForm) {\r\n            var $form,\r\n                ppCheckoutInput;\r\n\r\n            if (this.options.isCatalogProduct) {\r\n                // find the form from which the button was clicked\r\n                $form = originalForm ? $(originalForm) : $($(this.options.shortcutContainerClass).closest('form'));\r\n\r\n                ppCheckoutInput = $form.find(this.options.ppCheckoutSelector)[0];\r\n\r\n                if (!ppCheckoutInput) {\r\n                    ppCheckoutInput = $(this.options.ppCheckoutInput);\r\n                    ppCheckoutInput.appendTo($form);\r\n                }\r\n                $(ppCheckoutInput).val(returnUrl);\r\n\r\n                $form.submit();\r\n            } else {\r\n                $.mage.redirect(returnUrl);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.paypalCheckout;\r\n});\r\n","Magento_Paypal/js/order-review.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate',\r\n    'mage/mage',\r\n    'mage/validation'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.orderReview', {\r\n        options: {\r\n            orderReviewSubmitSelector: '#review-button',\r\n            shippingSelector: '#shipping_method',\r\n            shippingSubmitFormSelector: null,\r\n            updateOrderSelector: '#update-order',\r\n            billingAsShippingSelector: '#billing\\\\:as_shipping',\r\n            updateContainerSelector: '#details-reload',\r\n            waitLoadingContainer: '#review-please-wait',\r\n            shippingMethodContainer: '#shipping-method-container',\r\n            agreementSelector: 'div.checkout-agreements input',\r\n            isAjax: false,\r\n            updateShippingMethodSubmitSelector: '#update-shipping-method-submit',\r\n            shippingMethodUpdateUrl: null,\r\n            updateOrderSubmitUrl: null,\r\n            canEditShippingMethod: false\r\n        },\r\n\r\n        /**\r\n         * Widget instance properties\r\n         */\r\n        triggerPropertyChange: true,\r\n        isShippingSubmitForm: false,\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var isDisable;\r\n\r\n            //change handler for ajaxEnabled\r\n            if (this.options.isAjax) {\r\n                this._submitOrder = this._ajaxSubmitOrder;\r\n            }\r\n\r\n            this.element.on('click', this.options.orderReviewSubmitSelector, $.proxy(this._submitOrder, this))\r\n                .on('click', this.options.billingAsShippingSelector, $.proxy(this._shippingTobilling, this))\r\n                .on('change',\r\n                    this.options.shippingSelector,\r\n                    $.proxy(this._submitUpdateOrder,\r\n                        this,\r\n                        this.options.updateOrderSubmitUrl,\r\n                        this.options.updateContainerSelector\r\n                    )\r\n                ).find(this.options.updateOrderSelector).on('click', $.proxy(this._updateOrderHandler, this)).end()\r\n                .find(this.options.updateShippingMethodSubmitSelector).hide().end();\r\n            this._shippingTobilling();\r\n\r\n            if ($(this.options.shippingSubmitFormSelector).length && this.options.canEditShippingMethod) {\r\n                this.isShippingSubmitForm = true;\r\n                $(this.options.shippingSubmitFormSelector)\r\n                    .find(this.options.updateShippingMethodSubmitSelector).hide().end()\r\n                    .on('change',\r\n                        this.options.shippingSelector,\r\n                        $.proxy(\r\n                            this._submitUpdateOrder,\r\n                            this,\r\n                            $(this.options.shippingSubmitFormSelector).prop('action'),\r\n                            this.options.updateContainerSelector\r\n                        )\r\n                    );\r\n                this._updateOrderSubmit(!$(this.options.shippingSubmitFormSelector)\r\n                    .find(this.options.shippingSelector).val());\r\n            } else {\r\n                isDisable = this.isShippingSubmitForm && this.element.find(this.options.shippingSelector).val();\r\n                this.element\r\n                    .on('input propertychange', ':input[name]',\r\n                        $.proxy(this._updateOrderSubmit, this, isDisable, this._onShippingChange)\r\n                    ).find('select').not(this.options.shippingSelector).on('change', this._propertyChange);\r\n                this._updateOrderSubmit(isDisable);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * show ajax loader\r\n         */\r\n        _ajaxBeforeSend: function () {\r\n            this.element.find(this.options.waitLoadingContainer).show();\r\n        },\r\n\r\n        /**\r\n         * hide ajax loader\r\n         */\r\n        _ajaxComplete: function () {\r\n            this.element.find(this.options.waitLoadingContainer).hide();\r\n        },\r\n\r\n        /**\r\n         * trigger propertychange for input type select\r\n         */\r\n        _propertyChange: function () {\r\n            $(this).trigger('propertychange');\r\n        },\r\n\r\n        /**\r\n         * trigger change for the update of shipping methods from server\r\n         */\r\n        _updateOrderHandler: function () {\r\n            $(this.options.shippingSelector).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Attempt to submit order\r\n         */\r\n        _submitOrder: function () {\r\n            if (this._validateForm()) {\r\n                this.element.find(this.options.updateOrderSelector).fadeTo(0, 0.5)\r\n                    .end().find(this.options.waitLoadingContainer).show()\r\n                    .end().submit();\r\n                this._updateOrderSubmit(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempt to ajax submit order\r\n         */\r\n        _ajaxSubmitOrder: function () {\r\n            if (this.element.find(this.options.waitLoadingContainer).is(':visible')) {\r\n                return false;\r\n            }\r\n            $.ajax({\r\n                url: this.element.prop('action'),\r\n                type: 'post',\r\n                context: this,\r\n                data: {\r\n                    isAjax: 1\r\n                },\r\n                dataType: 'json',\r\n                beforeSend: this._ajaxBeforeSend,\r\n                complete: this._ajaxComplete,\r\n\r\n                /** @inheritdoc */\r\n                success: function (response) {\r\n                    var msg;\r\n\r\n                    if ($.type(response) === 'object' && !$.isEmptyObject(response)) {\r\n                        if (response['error_messages']) {\r\n                            this._ajaxComplete();\r\n                            msg = response['error_messages'];\r\n\r\n                            /* eslint-disable max-depth */\r\n                            if (msg) {\r\n                                if ($.type(msg) === 'array') {\r\n                                    msg = msg.join('\\n');\r\n                                }\r\n                            }\r\n\r\n                            /* eslint-enablemax-depth */\r\n                            alert({\r\n                                content: msg\r\n                            });\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        if (response.redirect) {\r\n                            $.mage.redirect(response.redirect);\r\n\r\n                            return false;\r\n                        } else if (response.success) {\r\n                            $.mage.redirect(this.options.successUrl);\r\n\r\n                            return false;\r\n                        }\r\n                        this._ajaxComplete();\r\n                        alert({\r\n                            content: $.mage.__('Sorry, something went wrong.')\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function () {\r\n                    alert({\r\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\r\n                    });\r\n                    this._ajaxComplete();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate Order form\r\n         */\r\n        _validateForm: function () {\r\n            this.element.find(this.options.agreementSelector).off('change').on('change', $.proxy(function () {\r\n                var isValid = this._validateForm();\r\n\r\n                this._updateOrderSubmit(!isValid);\r\n            }, this));\r\n\r\n            if (this.element.data('mageValidation')) {\r\n                return this.element.validation().valid();\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Check/Set whether order can be submitted\r\n         * Also disables form submission element, if any\r\n         * @param {*} shouldDisable - whether should prevent order submission explicitly\r\n         * @param {Function} [fn] - function for shipping change handler\r\n         * @param {*} [*] - if true the property change will be set to true\r\n         */\r\n        _updateOrderSubmit: function (shouldDisable, fn) {\r\n            this._toggleButton(this.options.orderReviewSubmitSelector, shouldDisable);\r\n\r\n            if ($.type(fn) === 'function') {\r\n                fn.call(this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable/Disable button\r\n         * @param {jQuery} button - button selector to be toggled\r\n         * @param {*} disable - boolean for toggling\r\n         */\r\n        _toggleButton: function (button, disable) {\r\n            $(button).prop({\r\n                'disabled': disable\r\n            }).toggleClass('no-checkout', disable).fadeTo(0, disable ? 0.5 : 1);\r\n        },\r\n\r\n        /**\r\n         * Copy element value from shipping to billing address\r\n         * @param {jQuery.Event} e - optional\r\n         */\r\n        _shippingTobilling: function (e) {\r\n            var isChecked, opacity;\r\n\r\n            if (this.options.shippingSubmitFormSelector) {\r\n                return false;\r\n            }\r\n            isChecked = $(this.options.billingAsShippingSelector).is(':checked');\r\n            opacity = isChecked ? 0.5 : 1;\r\n\r\n            if (isChecked) {\r\n                this.element.validation('clearError', ':input[name^=\"billing\"]');\r\n            }\r\n            $(':input[name^=\"shipping\"]', this.element).each($.proxy(function (key, value) {\r\n                var fieldObj = $(value.id.replace('shipping:', '#billing\\\\:'));\r\n\r\n                if (isChecked) {\r\n                    fieldObj = fieldObj.val($(value).val());\r\n                }\r\n                fieldObj.prop({\r\n                    'readonly': isChecked,\r\n                    'disabled': isChecked\r\n                }).fadeTo(0, opacity);\r\n\r\n                if (fieldObj.is('select')) {\r\n                    this.triggerPropertyChange = false;\r\n                    fieldObj.trigger('change');\r\n                }\r\n            }, this));\r\n\r\n            if (isChecked || e) {\r\n                this._updateOrderSubmit(true);\r\n            }\r\n            this.triggerPropertyChange = true;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an ajax request of Update Order submission\r\n         * @param {*} url - url where to submit shipping method\r\n         * @param {*} resultId - id of element to be updated\r\n         */\r\n        _submitUpdateOrder: function (url, resultId) {\r\n            var isChecked, formData, callBackResponseHandler, shippingMethod;\r\n\r\n            if (this.element.find(this.options.waitLoadingContainer).is(':visible')) {\r\n                return false;\r\n            }\r\n            isChecked = $(this.options.billingAsShippingSelector).is(':checked');\r\n            formData = null;\r\n            callBackResponseHandler = null;\r\n            shippingMethod = $.trim($(this.options.shippingSelector).val());\r\n            this._shippingTobilling();\r\n\r\n            if (url && resultId && shippingMethod) {\r\n                this._updateOrderSubmit(true);\r\n                this._toggleButton(this.options.updateOrderSelector, true);\r\n\r\n                // form data and callBack updated based on the shipping Form element\r\n                if (this.isShippingSubmitForm) {\r\n                    formData = $(this.options.shippingSubmitFormSelector).serialize() + '&isAjax=true';\r\n\r\n                    /**\r\n                     * @param {Object} response\r\n                     */\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._updateOrderSubmit(false);\r\n                        this._ajaxComplete();\r\n                    };\r\n                } else {\r\n                    formData = this.element.serialize() + '&isAjax=true';\r\n\r\n                    /**\r\n                     * @param {Object} response\r\n                     */\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._ajaxShippingUpdate(shippingMethod);\r\n                    };\r\n                }\r\n\r\n                if (isChecked) {\r\n                    $(this.options.shippingSelect).prop('disabled', true);\r\n                }\r\n                $.ajax({\r\n                    url: url,\r\n                    type: 'post',\r\n                    context: this,\r\n                    beforeSend: this._ajaxBeforeSend,\r\n                    data: formData,\r\n                    success: callBackResponseHandler\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update Shipping Methods Element from server\r\n         * @param {*} shippingMethod\r\n         */\r\n        _ajaxShippingUpdate: function (shippingMethod) {\r\n            $.ajax({\r\n                url: this.options.shippingMethodUpdateUrl,\r\n                data: {\r\n                    isAjax: true,\r\n                    'shipping_method': shippingMethod\r\n                },\r\n                type: 'post',\r\n                context: this,\r\n\r\n                /** @inheritdoc */\r\n                success: function (response) {\r\n                    $(this.options.shippingMethodContainer).parent().html(response);\r\n                    this._toggleButton(this.options.updateOrderSelector, false);\r\n                    this._updateOrderSubmit(false);\r\n                },\r\n                complete: this._ajaxComplete\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Actions on change Shipping Address data\r\n         */\r\n        _onShippingChange: function () {\r\n            if (this.triggerPropertyChange && $.trim($(this.options.shippingSelector).val())) {\r\n                this.element.find(this.options.shippingSelector).hide().end()\r\n                    .find(this.options.shippingSelector + '_update').show();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.orderReview;\r\n});\r\n","Magento_Paypal/js/model/iframe-redirect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Paypal/js/model/iframe',\r\n    'Magento_Ui/js/model/messageList'\r\n],\r\nfunction (ko, iframe, messageList) {\r\n    'use strict';\r\n\r\n    return function (cartUrl, errorMessage, goToSuccessPage, successUrl) {\r\n        if (this === window.self) {\r\n            window.location = cartUrl;\r\n        }\r\n\r\n        if (!!errorMessage.message) { //eslint-disable-line no-extra-boolean-cast\r\n            document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n            iframe.isInAction(false);\r\n            messageList.addErrorMessage(errorMessage);\r\n        } else if (!!goToSuccessPage) { //eslint-disable-line no-extra-boolean-cast\r\n            window.location = successUrl;\r\n        } else {\r\n            window.location = cartUrl;\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/model/iframe.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['ko'], function (ko) {\r\n    'use strict';\r\n\r\n    var isInAction = ko.observable(false);\r\n\r\n    return {\r\n        isInAction: isInAction,\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        stopEventPropagation: function (event) {\r\n            event.stopImmediatePropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/billing-agreement.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.billingAgreement', {\r\n        options: {\r\n            invalidateOnLoad: false,\r\n            cancelButtonSelector: '.block-billing-agreements-view button.cancel',\r\n            cancelMessage: '',\r\n            cancelUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Initialize billing agreements events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            if (this.options.invalidateOnLoad) {\r\n                this.invalidate();\r\n            }\r\n            $(this.options.cancelButtonSelector).on('click', function () {\r\n                confirm({\r\n                    content: self.options.cancelMessage,\r\n                    actions: {\r\n                        /**\r\n                         * 'Confirm' action handler.\r\n                         */\r\n                        confirm: function () {\r\n                            self.invalidate();\r\n                            window.location.href = self.options.cancelUrl;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return false;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * clear paypal billing agreement customer data\r\n         * @returns void\r\n         */\r\n        invalidate: function () {\r\n            customerData.invalidate(['paypal-billing-agreement']);\r\n        }\r\n    });\r\n\r\n    return $.mage.billingAgreement;\r\n});\r\n","Magento_Paypal/js/in-context/button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'jquery',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, $, Wrapper, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            declinePayment: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            var cart = customerData.get('cart'),\r\n                customer = customerData.get('customer');\r\n\r\n            this._super();\r\n            this.renderPayPalButtons(element);\r\n            this.declinePayment = !customer().firstname && !cart().isGuestCheckoutAllowed;\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            if (this.declinePayment) {\r\n                this.addError(this.signInMessage, 'warning');\r\n\r\n                reject();\r\n            } else {\r\n                promise.resolve();\r\n            }\r\n\r\n            return promise;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n\r\n            return this.clientConfig;\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/in-context/paypal-sdk.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var dfd = $.Deferred();\r\n\r\n    /**\r\n     * Loads the PayPal SDK object\r\n     * @param {String} paypalUrl - the url of the PayPal SDK\r\n     */\r\n    return function loadPaypalScript(paypalUrl) {\r\n        //configuration for loaded PayPal script\r\n        require.config({\r\n            paths: {\r\n                paypalSdk: paypalUrl\r\n            },\r\n            shim: {\r\n                paypalSdk: {\r\n                    exports: 'paypal'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (dfd.state() !== 'resolved') {\r\n            require(['paypalSdk'], function (paypalObject) {\r\n                dfd.resolve(paypalObject);\r\n            });\r\n        }\r\n\r\n        return dfd.promise();\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/express-checkout-smart-buttons.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* eslint-disable max-nested-callbacks */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'Magento_Paypal/js/in-context/paypal-sdk',\r\n    'domReady!'\r\n], function (_, $, paypalSdk) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Triggers beforePayment action on PayPal buttons\r\n     *\r\n     * @param {Object} clientConfig\r\n     * @returns {Object} jQuery promise\r\n     */\r\n    function performCreateOrder(clientConfig) {\r\n        var params = {\r\n            'quote_id': clientConfig.quoteId,\r\n            'customer_id': clientConfig.customerId || '',\r\n            'form_key': clientConfig.formKey,\r\n            button: clientConfig.button\r\n        };\r\n\r\n        return $.Deferred(function (deferred) {\r\n            clientConfig.rendererComponent.beforePayment(deferred.resolve, deferred.reject).then(function () {\r\n                $.post(clientConfig.getTokenUrl, params).done(function (res) {\r\n                    clientConfig.rendererComponent.afterPayment(res, deferred.resolve, deferred.reject);\r\n                }).fail(function (jqXHR, textStatus, err) {\r\n                    clientConfig.rendererComponent.catchPayment(err, deferred.resolve, deferred.reject);\r\n                });\r\n            });\r\n        }).promise();\r\n    }\r\n\r\n    /**\r\n     * Triggers beforeOnAuthorize action on PayPal buttons\r\n     * @param {Object} clientConfig\r\n     * @param {Object} data\r\n     * @param {Object} actions\r\n     * @returns {Object} jQuery promise\r\n     */\r\n    function performOnApprove(clientConfig, data, actions) {\r\n        var params = {\r\n            paymentToken: data.orderID,\r\n            payerId: data.payerID,\r\n            quoteId: clientConfig.quoteId || '',\r\n            customerId: clientConfig.customerId || '',\r\n            'form_key': clientConfig.formKey\r\n        };\r\n\r\n        return $.Deferred(function (deferred) {\r\n            clientConfig.rendererComponent.beforeOnAuthorize(deferred.resolve, deferred.reject, actions)\r\n                .then(function () {\r\n                    $.post(clientConfig.onAuthorizeUrl, params).done(function (res) {\r\n                        clientConfig.rendererComponent\r\n                            .afterOnAuthorize(res, deferred.resolve, deferred.reject, actions);\r\n                    }).fail(function (jqXHR, textStatus, err) {\r\n                        clientConfig.rendererComponent.catchOnAuthorize(err, deferred.resolve, deferred.reject);\r\n                    });\r\n                });\r\n        }).promise();\r\n    }\r\n\r\n    return function (clientConfig, element) {\r\n        paypalSdk(clientConfig.sdkUrl).done(function (paypal) {\r\n            paypal.Buttons({\r\n                style: clientConfig.styles,\r\n\r\n                /**\r\n                 * onInit is called when the button first renders\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onInit: function (data, actions) {\r\n                    clientConfig.rendererComponent.validate(actions);\r\n                },\r\n\r\n                /**\r\n                 * Triggers beforePayment action on PayPal buttons\r\n                 * @returns {Object} jQuery promise\r\n                 */\r\n                createOrder: function () {\r\n                    return performCreateOrder(clientConfig);\r\n                },\r\n\r\n                /**\r\n                 * Triggers beforeOnAuthorize action on PayPal buttons\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onApprove: function (data, actions) {\r\n                    performOnApprove(clientConfig, data, actions);\r\n                },\r\n\r\n                /**\r\n                 * Execute logic on Paypal button click\r\n                 */\r\n                onClick: function () {\r\n                    clientConfig.rendererComponent.validate();\r\n                    clientConfig.rendererComponent.onClick();\r\n                },\r\n\r\n                /**\r\n                 * Process cancel action\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onCancel: function (data, actions) {\r\n                    clientConfig.rendererComponent.onCancel(data, actions);\r\n                },\r\n\r\n                /**\r\n                 * Process errors\r\n                 *\r\n                 * @param {Error} err\r\n                 */\r\n                onError: function (err) {\r\n                    clientConfig.rendererComponent.onError(err);\r\n                }\r\n            }).render(element);\r\n        });\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/product-express-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, $, Component, Wrapper, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            productFormSelector: '#product_addtocart_form',\r\n            declinePayment: false,\r\n            formInvalid: false,\r\n            productAddedToCart: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            var cart = customerData.get('cart'),\r\n                customer = customerData.get('customer'),\r\n                isGuestCheckoutAllowed;\r\n\r\n            this._super();\r\n\r\n            isGuestCheckoutAllowed = cart().isGuestCheckoutAllowed;\r\n\r\n            if (typeof isGuestCheckoutAllowed === 'undefined') {\r\n                isGuestCheckoutAllowed = config.clientConfig.isGuestCheckoutAllowed;\r\n            }\r\n\r\n            if (config.clientConfig.isVisibleOnProductPage) {\r\n                this.renderPayPalButtons(element);\r\n            }\r\n\r\n            this.declinePayment = !customer().firstname && !isGuestCheckoutAllowed;\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onClick: function () {\r\n            var $form = $(this.productFormSelector);\r\n\r\n            if (!this.declinePayment && !this.productAddedToCart) {\r\n                $form.submit();\r\n                this.formInvalid = !$form.validation('isValid');\r\n                this.productAddedToCart = true;\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            if (this.declinePayment) {\r\n                this.addError(this.signInMessage, 'warning');\r\n                reject();\r\n            } else if (this.formInvalid) {\r\n                reject();\r\n            } else {\r\n                $(document).on('ajax:addToCart', function (e, data) {\r\n                    if (_.isEmpty(data.response)) {\r\n                        return promise.resolve();\r\n                    }\r\n\r\n                    return reject();\r\n                });\r\n                $(document).on('ajax:addToCart:error', reject);\r\n            }\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            this.addAlert(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n            this.clientConfig.quoteId = '';\r\n            this.clientConfig.customerId = '';\r\n\r\n            return this.clientConfig;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onError: function (err) {\r\n            this.productAddedToCart = false;\r\n            this._super(err);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onCancel: function (data, actions) {\r\n            this.productAddedToCart = false;\r\n            this._super(data, actions);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            this.productAddedToCart = false;\r\n\r\n            return this._super(res, resolve, reject, actions);\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/in-context/express-checkout-wrapper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Paypal/js/in-context/express-checkout-smart-buttons',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/cookies'\r\n], function ($, $t, customerData, checkoutSmartButtons, alert) {\r\n    'use strict';\r\n\r\n    return {\r\n        defaults: {\r\n            paymentActionError: $t('Something went wrong with your request. Please try again later.'),\r\n            signInMessage: $t('To check out, please sign in with your email address.')\r\n        },\r\n\r\n        /**\r\n         * Render PayPal buttons using checkout.js\r\n         */\r\n        renderPayPalButtons: function (element) {\r\n            checkoutSmartButtons(this.prepareClientConfig(), element);\r\n        },\r\n\r\n        /**\r\n         * Validate payment method\r\n         *\r\n         * @param {Object} actions\r\n         */\r\n        validate: function (actions) {\r\n            this.actions = actions || this.actions;\r\n        },\r\n\r\n        /**\r\n         * Execute logic on Paypal button click\r\n         */\r\n        onClick: function () {},\r\n\r\n        /**\r\n         * Before payment execute\r\n         *\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @return {*}\r\n         */\r\n        beforePayment: function (resolve, reject) { //eslint-disable-line no-unused-vars\r\n            return $.Deferred().resolve();\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * Catch payment\r\n         *\r\n         * @param {Error} err\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         */\r\n        catchPayment: function (err, resolve, reject) {\r\n            this.addAlert(this.paymentActionError);\r\n            reject(err);\r\n        },\r\n\r\n        /**\r\n         * Before onAuthorize execute\r\n         *\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {jQuery.Deferred}\r\n         */\r\n        beforeOnAuthorize: function (resolve, reject, actions) { //eslint-disable-line no-unused-vars\r\n            //display loading widget.\r\n            $('body').trigger('processStart');\r\n\r\n            return $.Deferred().resolve();\r\n        },\r\n\r\n        /**\r\n         * After onAuthorize execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            $('body').trigger('processStop');\r\n\r\n            if (res.success) {\r\n                resolve();\r\n\r\n                return actions.redirect(res.redirectUrl);\r\n            }\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * Catch payment\r\n         *\r\n         * @param {Error} err\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         */\r\n        catchOnAuthorize: function (err, resolve, reject) {\r\n            $('body').trigger('processStop');\r\n            this.addAlert(this.paymentActionError);\r\n            reject(err);\r\n        },\r\n\r\n        /**\r\n         * Process cancel action\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} actions\r\n         */\r\n        onCancel: function (data, actions) {\r\n            $('body').trigger('processStop');\r\n            actions.redirect(this.clientConfig.onCancelUrl);\r\n        },\r\n\r\n        /**\r\n         * Process errors\r\n         *\r\n         * @param {Error} err\r\n         */\r\n        onError: function (err) { //eslint-disable-line no-unused-vars\r\n            // Uncaught error isn't displayed in the console\r\n        },\r\n\r\n        /**\r\n         * Adds error message\r\n         *\r\n         * @param {String} message\r\n         * @param {String} [type]\r\n         */\r\n        addError: function (message, type) {\r\n            type = type || 'error';\r\n            customerData.set('messages', {\r\n                messages: [{\r\n                    type: type,\r\n                    text: message\r\n                }],\r\n                'data_id': Math.floor(Date.now() / 1000)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add alert message\r\n         *\r\n         * @param {String} message\r\n         */\r\n        addAlert: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getButtonId: function () {\r\n            return this.inContextId;\r\n        },\r\n\r\n        /**\r\n         * Populate client config with all required data\r\n         *\r\n         * @return {Object}\r\n         */\r\n        prepareClientConfig: function () {\r\n            this.clientConfig.rendererComponent = this;\r\n            this.clientConfig.formKey = $.mage.cookies.get('form_key');\r\n\r\n            return this.clientConfig;\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/view/review/actions/iframe.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Paypal/js/model/iframe'\r\n], function (Component, iframe) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/review/actions/iframe'\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getCode: function () {\r\n            return this.index;\r\n        },\r\n\r\n        /**\r\n         * @return {String}\r\n         */\r\n        getActionUrl: function () {\r\n            return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        afterSave: function () {\r\n            iframe.setIsInAction(true);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isInAction: function () {\r\n            return iframe.getIsInAction()();\r\n        },\r\n\r\n        /**\r\n         * @param {Object} context\r\n         * @return {Function}\r\n         */\r\n        placeOrder: function (context) {\r\n            return context.placeOrder.bind(context, this.afterSave);\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/paypal-payments.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n], function (Component, rendererList) {\r\n    'use strict';\r\n\r\n    var isContextCheckout = window.checkoutConfig.payment.paypalExpress.isContextCheckout,\r\n        paypalExpress = 'Magento_Paypal/js/view/payment/method-renderer' +\r\n            (isContextCheckout ? '/in-context/checkout-express' : '/paypal-express');\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'paypal_express',\r\n            component: paypalExpress,\r\n            config: window.checkoutConfig.payment.paypalExpress.inContextConfig\r\n        },\r\n        {\r\n            type: 'payflow_express',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express'\r\n        },\r\n        {\r\n            type: 'payflow_express_bml',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml'\r\n        },\r\n        {\r\n            type: 'payflowpro',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method'\r\n        },\r\n        {\r\n            type: 'payflow_link',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'payflow_advanced',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'hosted_pro',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'paypal_billing_agreement',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement'\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Add view logic here if needed\r\n     **/\r\n    return Component.extend({});\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Paypal/js/action/set-payment-method',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, Component, setPaymentMethodAction, additionalValidators, quote, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express-bml',\r\n            billingAgreement: ''\r\n        },\r\n\r\n        /** Init observable variables */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('billingAgreement');\r\n\r\n            return this;\r\n        },\r\n\r\n        /** Open window with  */\r\n        showAcceptanceWindow: function (data, event) {\r\n            window.open(\r\n                $(event.currentTarget).attr('href'),\r\n                'olcwhatispaypal',\r\n                'toolbar=no, location=no,' +\r\n                ' directories=no, status=no,' +\r\n                ' menubar=no, scrollbars=yes,' +\r\n                ' resizable=yes, ,left=0,' +\r\n                ' top=0, width=400, height=350'\r\n            );\r\n\r\n            return false;\r\n        },\r\n\r\n        /** Returns payment acceptance mark link path */\r\n        getPaymentAcceptanceMarkHref: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkHref;\r\n        },\r\n\r\n        /** Returns payment acceptance mark image path */\r\n        getPaymentAcceptanceMarkSrc: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkSrc;\r\n        },\r\n\r\n        /** Returns billing agreement data */\r\n        getBillingAgreementCode: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.billingAgreementCode[this.item.method];\r\n        },\r\n\r\n        /** Returns payment information data */\r\n        getData: function () {\r\n            var parent = this._super(),\r\n                additionalData = null;\r\n\r\n            if (this.getBillingAgreementCode()) {\r\n                additionalData = {};\r\n                additionalData[this.getBillingAgreementCode()] = this.billingAgreement();\r\n            }\r\n\r\n            return $.extend(true, parent, {\r\n                'additional_data': additionalData\r\n            });\r\n        },\r\n\r\n        /** Redirect to paypal */\r\n        continueToPayPal: function () {\r\n            if (additionalValidators.validate()) {\r\n                //update payment method information if additional data was changed\r\n                this.selectPaymentMethod();\r\n                setPaymentMethodAction(this.messageContainer).done(\r\n                    function () {\r\n                        customerData.invalidate(['cart']);\r\n                        $.mage.redirect(\r\n                            window.checkoutConfig.payment.paypalExpress.redirectUrl[quote.paymentMethod().method]\r\n                        );\r\n                    }\r\n                );\r\n\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal-express'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express-bml'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/view/payment/iframe',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Checkout/js/action/set-payment-information',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Vault/js/view/payment/vault-enabler'\r\n], function ($, Component, additionalValidators, setPaymentInformationAction, fullScreenLoader, VaultEnabler) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflowpro-form'\r\n        },\r\n        placeOrderHandler: null,\r\n        validateHandler: null,\r\n\r\n        /**\r\n         * @returns {exports.initialize}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.vaultEnabler = new VaultEnabler();\r\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {Function} handler\r\n         */\r\n        setPlaceOrderHandler: function (handler) {\r\n            this.placeOrderHandler = handler;\r\n        },\r\n\r\n        /**\r\n         * @param {Function} handler\r\n         */\r\n        setValidateHandler: function (handler) {\r\n            this.validateHandler = handler;\r\n        },\r\n\r\n        /**\r\n         * @returns {Object}\r\n         */\r\n        context: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @returns {Boolean}\r\n         */\r\n        isShowLegend: function () {\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return 'payflowpro';\r\n        },\r\n\r\n        /**\r\n         * @returns {Boolean}\r\n         */\r\n        isActive: function () {\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        placeOrder: function () {\r\n            var self = this;\r\n\r\n            if (this.validateHandler() &&\r\n                additionalValidators.validate() &&\r\n                this.isPlaceOrderActionAllowed() === true\r\n            ) {\r\n                this.isPlaceOrderActionAllowed(false);\r\n                fullScreenLoader.startLoader();\r\n                $.when(\r\n                    setPaymentInformationAction(this.messageContainer, self.getData())\r\n                ).done(\r\n                    function () {\r\n                        self.placeOrderHandler().fail(\r\n                            function () {\r\n                                fullScreenLoader.stopLoader();\r\n                            }\r\n                        );\r\n                    }\r\n                ).always(\r\n                    function () {\r\n                        self.isPlaceOrderActionAllowed(true);\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            var data = {\r\n                'method': this.getCode(),\r\n                'additional_data': {\r\n                    'cc_type': this.creditCardType(),\r\n                    'cc_exp_year': this.creditCardExpYear(),\r\n                    'cc_exp_month': this.creditCardExpMonth(),\r\n                    'cc_last_4': this.creditCardNumber().substr(-4)\r\n                }\r\n            };\r\n\r\n            this.vaultEnabler.visitAdditionalData(data);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * @returns {Bool}\r\n         */\r\n        isVaultEnabled: function () {\r\n            return this.vaultEnabler.isVaultEnabled();\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getVaultCode: function () {\r\n            return 'payflowpro_cc_vault';\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/iframe-methods.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Paypal/js/model/iframe',\r\n    'Magento_Checkout/js/model/full-screen-loader'\r\n], function (Component, iframe, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/iframe-methods',\r\n            paymentReady: false\r\n        },\r\n        redirectAfterPlaceOrder: false,\r\n        isInAction: iframe.isInAction,\r\n\r\n        /**\r\n         * @return {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('paymentReady');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isPaymentReady: function () {\r\n            return this.paymentReady();\r\n        },\r\n\r\n        /**\r\n         * Get action url for payment method iframe.\r\n         * @returns {String}\r\n         */\r\n        getActionUrl: function () {\r\n            return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\r\n        },\r\n\r\n        /**\r\n         * Places order in pending payment status.\r\n         */\r\n        placePendingPaymentOrder: function () {\r\n            if (this.placeOrder()) {\r\n                fullScreenLoader.startLoader();\r\n                this.isInAction(true);\r\n                // capture all click events\r\n                document.addEventListener('click', iframe.stopEventPropagation, true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPlaceOrderDeferredObject: function () {\r\n            var self = this;\r\n\r\n            return this._super().fail(function () {\r\n                fullScreenLoader.stopLoader();\r\n                self.isInAction(false);\r\n                document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * After place order callback\r\n         */\r\n        afterPlaceOrder: function () {\r\n            if (this.iframeIsLoaded) {\r\n                document.getElementById(this.getCode() + '-iframe')\r\n                    .contentWindow.location.reload();\r\n            }\r\n\r\n            this.paymentReady(true);\r\n            this.iframeIsLoaded = true;\r\n            this.isPlaceOrderActionAllowed(true);\r\n            fullScreenLoader.stopLoader();\r\n        },\r\n\r\n        /**\r\n         * Hide loader when iframe is fully loaded.\r\n         */\r\n        iframeLoaded: function () {\r\n            fullScreenLoader.stopLoader();\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'mage/validation'\r\n], function ($, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal_billing_agreement-form',\r\n            selectedBillingAgreement: ''\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('selectedBillingAgreement');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getTransportName: function () {\r\n            return window.checkoutConfig.payment.paypalBillingAgreement.transportName;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getBillingAgreements: function () {\r\n            return window.checkoutConfig.payment.paypalBillingAgreement.agreements;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getData: function () {\r\n            var additionalData = null;\r\n\r\n            if (this.getTransportName()) {\r\n                additionalData = {};\r\n                additionalData[this.getTransportName()] = this.selectedBillingAgreement();\r\n            }\r\n\r\n            return {\r\n                'method': this.item.method,\r\n                'additional_data': additionalData\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @return {jQuery}\r\n         */\r\n        validate: function () {\r\n            var form = '#billing-agreement-form';\r\n\r\n            return $(form).validation() && $(form).validation('isValid');\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Vault/js/view/payment/method-renderer/vault'\r\n], function (VaultComponent) {\r\n    'use strict';\r\n\r\n    return VaultComponent.extend({\r\n        defaults: {\r\n            template: 'Magento_Vault/payment/form'\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getToken: function () {\r\n            return this.publicHash;\r\n        },\r\n\r\n        /**\r\n         * Get last 4 digits of card\r\n         * @returns {String}\r\n         */\r\n        getMaskedCard: function () {\r\n            return this.details['cc_last_4'];\r\n        },\r\n\r\n        /**\r\n         * Get expiration date\r\n         * @returns {String}\r\n         */\r\n        getExpirationDate: function () {\r\n            return this.details['cc_exp_month'] + '/' + this.details['cc_exp_year'];\r\n        },\r\n\r\n        /**\r\n         * Get card type\r\n         * @returns {String}\r\n         */\r\n        getCardType: function () {\r\n            return this.details['cc_type'];\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/in-context/checkout-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Paypal/js/action/set-payment-method',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Ui/js/lib/view/utils/async'\r\n], function ($, Component, Wrapper, setPaymentMethod, additionalValidators, messageList) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal-express-in-context',\r\n            validationElements: 'input'\r\n        },\r\n\r\n        /**\r\n         * Listens element on change and validate it.\r\n         *\r\n         * @param {HTMLElement} context\r\n         */\r\n        initListeners: function (context) {\r\n            $.async(this.validationElements, context, function (element) {\r\n                $(element).on('change', function () {\r\n                    this.validate();\r\n                }.bind(this));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         *  Validates Smart Buttons\r\n         */\r\n        validate: function () {\r\n            this._super();\r\n\r\n            if (this.actions) {\r\n                additionalValidators.validate(true) ? this.actions.enable() : this.actions.disable();\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            setPaymentMethod(this.messageContainer).done(function () {\r\n                return promise.resolve();\r\n            }).fail(function (response) {\r\n                var error;\r\n\r\n                try {\r\n                    error = JSON.parse(response.responseText);\r\n                } catch (exception) {\r\n                    error = this.paymentActionError;\r\n                }\r\n\r\n                this.addError(error);\r\n\r\n                return reject(new Error(error));\r\n            }.bind(this));\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Populate client config with all required data\r\n         *\r\n         * @return {Object}\r\n         */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n            this.clientConfig.quoteId = window.checkoutConfig.quoteData['entity_id'];\r\n            this.clientConfig.customerId = window.customerData.id;\r\n            this.clientConfig.button = 0;\r\n\r\n            return this.clientConfig;\r\n        },\r\n\r\n        /**\r\n         * Adding logic to be triggered onClick action for smart buttons component\r\n         */\r\n        onClick: function () {\r\n            additionalValidators.validate();\r\n            this.selectPaymentMethod();\r\n        },\r\n\r\n        /**\r\n         * Adds error message\r\n         *\r\n         * @param {String} message\r\n         */\r\n        addError: function (message) {\r\n            messageList.addErrorMessage({\r\n                message: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            this.addError(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * After onAuthorize execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            if (res.success) {\r\n                resolve();\r\n\r\n                return actions.redirect(res.redirectUrl);\r\n            }\r\n\r\n            this.addError(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/action/set-payment-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/set-payment-information'\r\n], function (quote, setPaymentInformation) {\r\n    'use strict';\r\n\r\n    return function (messageContainer) {\r\n        return setPaymentInformation(messageContainer, quote.paymentMethod());\r\n    };\r\n});\r\n","Magento_LoginAsCustomerAssistance/js/opt-in.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).on('submit', function () {\r\n            this.elements['assistance_allowed'].value =\r\n                this.elements['assistance_allowed_checkbox'].checked ?\r\n                    config.allowAccess : config.denyAccess;\r\n        });\r\n    };\r\n});\r\n","Magento_Msrp/js/msrp.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/dropdown',\r\n    'mage/template'\r\n], function ($, priceUtils, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addToCart', {\r\n        options: {\r\n            showAddToCart: true,\r\n            submitUrl: '',\r\n            cartButtonId: '',\r\n            singleOpenDropDown: true,\r\n            dialog: {}, // Options for mage/dropdown\r\n            dialogDelay: 500, // Delay in ms after resize dropdown shown again\r\n            origin: '', //Required, type of popup: 'msrp', 'tier' or 'info' popup\r\n\r\n            // Selectors\r\n            cartForm: '.form.map.checkout',\r\n            msrpLabelId: '#map-popup-msrp',\r\n            msrpPriceElement: '#map-popup-msrp .price-wrapper',\r\n            priceLabelId: '#map-popup-price',\r\n            priceElement: '#map-popup-price .price',\r\n            mapInfoLinks: '.map-show-info',\r\n            displayPriceElement: '.old-price.map-old-price .price-wrapper',\r\n            fallbackPriceElement: '.normal-price.map-fallback-price .price-wrapper',\r\n            displayPriceContainer: '.old-price.map-old-price',\r\n            fallbackPriceContainer: '.normal-price.map-fallback-price',\r\n            popUpAttr: '[data-role=msrp-popup-template]',\r\n            popupCartButtonId: '#map-popup-button',\r\n            paypalCheckoutButons: '[data-action=checkout-form-submit]',\r\n            popupId: '',\r\n            realPrice: '',\r\n            isSaleable: '',\r\n            msrpPrice: '',\r\n            helpLinkId: '',\r\n            addToCartButton: '',\r\n\r\n            // Text options\r\n            productName: '',\r\n            addToCartUrl: ''\r\n        },\r\n\r\n        openDropDown: null,\r\n        triggerClass: 'dropdown-active',\r\n\r\n        popUpOptions: {\r\n            appendTo: 'body',\r\n            dialogContentClass: 'active',\r\n            closeOnMouseLeave: false,\r\n            autoPosition: true,\r\n            closeOnClickOutside: false,\r\n            'dialogClass': 'popup map-popup-wrapper',\r\n            position: {\r\n                my: 'left top',\r\n                collision: 'fit none',\r\n                at: 'left bottom',\r\n                within: 'body'\r\n            },\r\n            shadowHinter: 'popup popup-pointer'\r\n        },\r\n        popupOpened: false,\r\n        wasOpened: false,\r\n\r\n        /**\r\n         * Creates widget instance\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.options.origin === 'msrp') {\r\n                this.initMsrpPopup();\r\n            } else if (this.options.origin === 'info') {\r\n                this.initInfoPopup();\r\n            } else if (this.options.origin === 'tier') {\r\n                this.initTierPopup();\r\n            }\r\n            $(this.options.cartButtonId).on('click', this._addToCartSubmit.bind(this));\r\n            $(document).on('updateMsrpPriceBlock', this.onUpdateMsrpPrice.bind(this));\r\n            $(this.options.cartForm).on('submit', this._onSubmitForm.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Init msrp popup\r\n         *\r\n         * @private\r\n         */\r\n        initMsrpPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $msrpPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $msrpPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            $('body').append($msrpPopup);\r\n            $msrpPopup.trigger('contentUpdated');\r\n\r\n            $msrpPopup.find('button')\r\n                .on('click',\r\n                    this.handleMsrpAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $msrpPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleMsrpPaypalCheckout.bind(this));\r\n\r\n            $(this.options.popupId).on('click',\r\n                this.openPopup.bind(this));\r\n\r\n            this.$popup = $msrpPopup;\r\n        },\r\n\r\n        /**\r\n         * Init info popup\r\n         *\r\n         * @private\r\n         */\r\n        initInfoPopup: function () {\r\n            var infoPopupDOM = $('[data-role=msrp-info-template]')[0],\r\n                $infoPopup = $(infoPopupDOM.innerHTML.trim());\r\n\r\n            $('body').append($infoPopup);\r\n\r\n            $(this.options.helpLinkId).on('click', function (e) {\r\n                this.popUpOptions.position.of = $(e.target);\r\n                $infoPopup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n                this._toggle($infoPopup);\r\n            }.bind(this));\r\n\r\n            this.$popup = $infoPopup;\r\n        },\r\n\r\n        /**\r\n         * Init tier price popup\r\n         * @private\r\n         */\r\n        initTierPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $tierPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $('body').append($tierPopup);\r\n            $tierPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            this.popUpOptions.position.of = $(this.options.helpLinkId);\r\n\r\n            $tierPopup.find('button').on('click',\r\n                this.handleTierAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $tierPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleTierPaypalCheckout.bind(this));\r\n\r\n            $(this.options.attr).on('click', function (e) {\r\n                this.$popup = $tierPopup;\r\n                this.tierOptions = $(e.target).data('tier-price');\r\n                this.openPopup(e);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Msrp popup\r\n         * @param {Object} ev\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).click();\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Msrp popup\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpPaypalCheckout: function () {\r\n            this.closePopup(this.$popup);\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Tier popup\r\n         *\r\n         * @param {Object} ev\r\n         * @private\r\n         */\r\n        handleTierAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton &&\r\n                this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                $(this.options.addToCartButton).click();\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Tier popup\r\n         *\r\n         * @private\r\n         */\r\n        handleTierPaypalCheckout: function () {\r\n            if (this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open and set up popup\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        openPopup: function (event) {\r\n            var options = this.tierOptions || this.options;\r\n\r\n            this.popUpOptions.position.of = $(event.target);\r\n\r\n            if (!this.wasOpened) {\r\n                this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\r\n                this.$popup.find(this.options.priceLabelId).html(options.realPrice);\r\n                this.wasOpened = true;\r\n            }\r\n            this.$popup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n            this._toggle(this.$popup);\r\n\r\n            if (!this.options.isSaleable) {\r\n                this.$popup.find('form').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle MAP popup visibility\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         * @private\r\n         */\r\n        _toggle: function ($elem) {\r\n            $(document).on('mouseup.msrp touchend.msrp', function (e) {\r\n                if (!$elem.is(e.target) && $elem.has(e.target).length === 0) {\r\n                    this.closePopup($elem);\r\n                }\r\n            }.bind(this));\r\n            $(window).on('resize', function () {\r\n                this.closePopup($elem);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Close MAP information popup\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         */\r\n        closePopup: function ($elem) {\r\n            $elem.dropdownDialog('close');\r\n            $(document).off('mouseup.msrp touchend.msrp');\r\n        },\r\n\r\n        /**\r\n         * Handler for addToCart action\r\n         *\r\n         * @param {Object} e\r\n         */\r\n        _addToCartSubmit: function (e) {\r\n            this.element.trigger('addToCart', this.element);\r\n\r\n            if (this.element.data('stop-processing')) {\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).click();\r\n\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartUrl) {\r\n                $('.mage-dropdown-dialog > .ui-dialog-content').dropdownDialog('close');\r\n            }\r\n\r\n            e.preventDefault();\r\n            $(this.options.cartForm).submit();\r\n        },\r\n\r\n        /**\r\n         * Call on event updatePrice. Proxy to updateMsrpPrice method.\r\n         *\r\n         * @param {Event} event\r\n         * @param {mixed} priceIndex\r\n         * @param {Object} prices\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        onUpdateMsrpPrice: function onUpdateMsrpPrice(event, priceIndex, prices, $priceBox) {\r\n\r\n            var defaultMsrp,\r\n                defaultPrice,\r\n                msrpPrice,\r\n                finalPrice;\r\n\r\n            defaultMsrp = _.chain(prices).map(function (price) {\r\n                return price.msrpPrice.amount;\r\n            }).reject(function (p) {\r\n                return p === null;\r\n            }).max().value();\r\n\r\n            defaultPrice = _.chain(prices).map(function (p) {\r\n                return p.finalPrice.amount;\r\n            }).min().value();\r\n\r\n            if (typeof priceIndex !== 'undefined') {\r\n                msrpPrice = prices[priceIndex].msrpPrice.amount;\r\n                finalPrice = prices[priceIndex].finalPrice.amount;\r\n\r\n                if (msrpPrice === null || msrpPrice <= finalPrice) {\r\n                    this.updateNonMsrpPrice(priceUtils.formatPrice(finalPrice), $priceBox);\r\n                } else {\r\n                    this.updateMsrpPrice(\r\n                        priceUtils.formatPrice(finalPrice),\r\n                        priceUtils.formatPrice(msrpPrice),\r\n                        false,\r\n                        $priceBox);\r\n                }\r\n            } else {\r\n                this.updateMsrpPrice(\r\n                    priceUtils.formatPrice(defaultPrice),\r\n                    priceUtils.formatPrice(defaultMsrp),\r\n                    true,\r\n                    $priceBox);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update prices for configurable product with MSRP enabled\r\n         *\r\n         * @param {String} finalPrice\r\n         * @param {String} msrpPrice\r\n         * @param {Boolean} useDefaultPrice\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        updateMsrpPrice: function (finalPrice, msrpPrice, useDefaultPrice, $priceBox) {\r\n            var options = this.tierOptions || this.options;\r\n\r\n            $(this.options.fallbackPriceContainer, $priceBox).hide();\r\n            $(this.options.displayPriceContainer, $priceBox).show();\r\n            $(this.options.mapInfoLinks, $priceBox).show();\r\n\r\n            if (useDefaultPrice || !this.wasOpened) {\r\n                if (this.$popup) {\r\n                    this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\r\n                    this.$popup.find(this.options.priceLabelId).html(options.realPrice);\r\n                }\r\n\r\n                $(this.options.displayPriceElement, $priceBox).html(msrpPrice);\r\n                this.wasOpened = true;\r\n            }\r\n\r\n            if (!useDefaultPrice) {\r\n                this.$popup.find(this.options.msrpPriceElement).html(msrpPrice);\r\n                this.$popup.find(this.options.priceElement).html(finalPrice);\r\n                $(this.options.displayPriceElement, $priceBox).html(msrpPrice);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display non MAP price for irrelevant products\r\n         *\r\n         * @param {String} price\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        updateNonMsrpPrice: function (price, $priceBox) {\r\n            $(this.options.fallbackPriceElement, $priceBox).html(price);\r\n            $(this.options.displayPriceContainer, $priceBox).hide();\r\n            $(this.options.mapInfoLinks, $priceBox).hide();\r\n            $(this.options.fallbackPriceContainer, $priceBox).show();\r\n        },\r\n\r\n        /**\r\n         * Handler for submit form\r\n         *\r\n         * @private\r\n         */\r\n        _onSubmitForm: function () {\r\n            if ($(this.options.cartForm).valid()) {\r\n                $(this.options.cartButtonId).prop('disabled', true);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return $.mage.addToCart;\r\n});\r\n","Magento_Msrp/js/product/list/columns/msrp-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Catalog/js/product/list/columns/price-box',\r\n    'Magento_Catalog/js/product/addtocart-button',\r\n    'mage/dropdown'\r\n], function ($, _, PriceBox) {\r\n    'use strict';\r\n\r\n    return PriceBox.extend({\r\n        defaults: {\r\n            priceBoxSelector: '[data-role=msrp-price-box]',\r\n            popupTmpl: 'Magento_Msrp/product/item/popup',\r\n            popupTriggerSelector: '[data-role=msrp-popup-trigger]',\r\n            popupSelector: '[data-role=msrp-popup]',\r\n            popupOptions: {\r\n                appendTo: 'body',\r\n                dialogContentClass: 'active',\r\n                closeOnMouseLeave: false,\r\n                autoPosition: true,\r\n                dialogClass: 'popup map-popup-wrapper',\r\n                position: {\r\n                    my: 'left top',\r\n                    collision: 'fit none',\r\n                    at: 'left bottom',\r\n                    within: 'body'\r\n                },\r\n                shadowHinter: 'popup popup-pointer'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create and open popup with Msrp information.\r\n         *\r\n         * @param {Object} data - element data\r\n         * @param {DOMElement} elem - element\r\n         * @param {Event} event - event object\r\n         */\r\n        openPopup: function (data, elem, event) {\r\n            var $elem = $(elem),\r\n                $popup = $elem.find(this.popupSelector),\r\n                $trigger = $elem.find(this.popupTriggerSelector);\r\n\r\n            event.stopPropagation();\r\n\r\n            this.popupOptions.position.of = $trigger;\r\n            this.popupOptions.triggerTarget = $trigger;\r\n\r\n            $popup.dropdownDialog(this.popupOptions)\r\n                  .dropdownDialog('open');\r\n        },\r\n\r\n        /**\r\n         * Set listeners.\r\n         *\r\n         * @param {DOMElement} elem - DOM element\r\n         * @param {Object} data - element data\r\n         */\r\n        initListeners: function (elem, data) {\r\n            var $trigger = $(elem).find(this.popupTriggerSelector);\r\n\r\n            $trigger.on('click', this.openPopup.bind(this, data, elem));\r\n        },\r\n\r\n        /**\r\n         * Check whether we can apply msrp, or should use standard price.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Bool}\r\n         */\r\n        isMsrpApplicable: function (row) {\r\n            return this.getPrice(row)['is_applicable'];\r\n        },\r\n\r\n        /**\r\n         * Retrieve msrp formatted price\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getPrice: function (row) {\r\n            return row['price_info']['extension_attributes'].msrp;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Check if popup with actual price must be shown.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isShowPriceOnGesture: function (row) {\r\n            return this.getPrice(row)['is_shown_price_on_gesture'];\r\n        },\r\n\r\n        /**\r\n         * Get msrp price supporting text.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getMsrpPriceMessage: function (row) {\r\n            return this.getPrice(row)['msrp_message'];\r\n        },\r\n\r\n        /**\r\n         * Get msrp price supporting text, when actual price is hidden.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getExplanationMessage: function (row) {\r\n            return this.getPrice(row)['explanation_message'];\r\n        }\r\n    });\r\n});\r\n","Magento_Msrp/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/minicart/subtotal/totals',\r\n    'underscore'\r\n], function (Component, _) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.displaySubtotal(this.isMsrpApplied(this.cart().items));\r\n            this.cart.subscribe(function (updatedCart) {\r\n\r\n                this.displaySubtotal(this.isMsrpApplied(updatedCart.items));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Determine if subtotal should be hidden.\r\n         * @param {Array} cartItems\r\n         * @return {Boolean}\r\n         */\r\n        isMsrpApplied: function (cartItems) {\r\n            return !_.find(cartItems, function (item) {\r\n                if (_.has(item, 'canApplyMsrp')) {\r\n                    return item.canApplyMsrp;\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/price/adjustment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'mage/translate'\r\n], function (Element, $t) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Tax/price/adjustment',\r\n            taxPriceType: 'final_price',\r\n            taxPriceCssClass: 'price-including-tax',\r\n            bothPrices: 3,\r\n            inclTax: 2,\r\n            exclTax: 1,\r\n            modules: {\r\n                price: '${ $.parentName }'\r\n            },\r\n            listens: {\r\n                price: 'initializePriceAttributes'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initializePriceAttributes();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update parent price.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initializePriceAttributes: function () {\r\n            if (this.displayBothPrices && this.price()) {\r\n                this.price().priceWrapperCssClasses = this.taxPriceCssClass;\r\n                this.price().priceWrapperAttr = {\r\n                    'data-label': $t('Incl. Tax')\r\n                };\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get price tax adjustment.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} tax html\r\n         */\r\n        getTax: function (row) {\r\n            return row['price_info']['extension_attributes']['tax_adjustments']['formatted_prices'][this.taxPriceType];\r\n        },\r\n\r\n        /**\r\n         * Set price tax type.\r\n         *\r\n         * @param {String} priceType\r\n         * @return {Object}\r\n         */\r\n        setPriceType: function (priceType) {\r\n            this.taxPriceType = priceType;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * both price including tax and price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayBothPrices: function () {\r\n            return +this.source.data.displayTaxes === this.bothPrices;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceIncludeTax: function () {\r\n            return +this.source.data.displayTaxes === this.inclTax;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclTax: function () {\r\n            return +this.source.data.displayTaxes === this.exclTax;\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/shipping_method/price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Catalog/js/price-utils'\r\n], function (Component, quote, priceUtils) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Tax/checkout/shipping_method/price'\r\n        },\r\n        isDisplayShippingPriceExclTax: window.checkoutConfig.isDisplayShippingPriceExclTax,\r\n        isDisplayShippingBothPrices: window.checkoutConfig.isDisplayShippingBothPrices,\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Boolean}\r\n         */\r\n        isPriceEqual: function (item) {\r\n            return item['price_excl_tax'] != item['price_incl_tax']; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @param {*} price\r\n         * @return {*|String}\r\n         */\r\n        getFormattedPrice: function (price) {\r\n            //todo add format data\r\n            return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/summary/shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/summary/shipping',\r\n    'Magento_Checkout/js/model/quote'\r\n], function ($, Component, quote) {\r\n    'use strict';\r\n\r\n    var displayMode = window.checkoutConfig.reviewShippingDisplayMode;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            displayMode: displayMode,\r\n            template: 'Magento_Tax/checkout/summary/shipping'\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isBothPricesDisplayed: function () {\r\n            return this.displayMode == 'both'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isIncludingDisplayed: function () {\r\n            return this.displayMode == 'including'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isExcludingDisplayed: function () {\r\n            return this.displayMode == 'excluding'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {*|Boolean}\r\n         */\r\n        isCalculated: function () {\r\n            return this.totals() && this.isFullMode() && quote.shippingMethod() != null;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getIncludingValue: function () {\r\n            var price;\r\n\r\n            if (!this.isCalculated()) {\r\n                return this.notCalculatedMessage;\r\n            }\r\n            price = this.totals()['shipping_incl_tax'];\r\n\r\n            return this.getFormattedPrice(price);\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getExcludingValue: function () {\r\n            var price;\r\n\r\n            if (!this.isCalculated()) {\r\n                return this.notCalculatedMessage;\r\n            }\r\n            price = this.totals()['shipping_amount'];\r\n\r\n            return this.getFormattedPrice(price);\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/summary/grand-total.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Catalog/js/price-utils',\r\n    'Magento_Checkout/js/model/totals'\r\n], function (Component, quote, priceUtils, totals) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isFullTaxSummaryDisplayed: window.checkoutConfig.isFullTaxSummaryDisplayed || false,\r\n            template: 'Magento_Tax/checkout/summary/grand-total'\r\n        },\r\n        totals: quote.getTotals(),\r\n        isTaxDisplayedInGrandTotal: window.checkoutConfig.includeTaxInGrandTotal || false,\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isDisplayed: function () {\r\n            return this.isFullMode();\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValue: function () {\r\n            var price = 0;\r\n\r\n            if (this.totals()) {\r\n                price = totals.getSegment('grand_total').value;\r\n            }\r\n\r\n            return this.getFormattedPrice(price);\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getBaseValue: function () {\r\n            var price = 0;\r\n\r\n            if (this.totals()) {\r\n                price = this.totals()['base_grand_total'];\r\n            }\r\n\r\n            return priceUtils.formatPrice(price, quote.getBasePriceFormat());\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getGrandTotalExclTax: function () {\r\n            var total = this.totals();\r\n\r\n            if (!total) {\r\n                return 0;\r\n            }\r\n\r\n            return this.getFormattedPrice(total['grand_total']);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isBaseGrandTotalDisplayNeeded: function () {\r\n            var total = this.totals();\r\n\r\n            if (!total) {\r\n                return false;\r\n            }\r\n\r\n            return total['base_currency_code'] != total['quote_currency_code']; //eslint-disable-line eqeqeq\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/summary/subtotal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    var displaySubtotalMode = window.checkoutConfig.reviewTotalsDisplayMode;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            displaySubtotalMode: displaySubtotalMode,\r\n            template: 'Magento_Tax/checkout/summary/subtotal'\r\n        },\r\n        totals: quote.getTotals(),\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValue: function () {\r\n            var price = 0;\r\n\r\n            if (this.totals()) {\r\n                price = this.totals().subtotal;\r\n            }\r\n\r\n            return this.getFormattedPrice(price);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isBothPricesDisplayed: function () {\r\n            return this.displaySubtotalMode == 'both'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isIncludingTaxDisplayed: function () {\r\n            return this.displaySubtotalMode == 'including'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValueInclTax: function () {\r\n            var price = 0;\r\n\r\n            if (this.totals()) {\r\n                price = this.totals()['subtotal_incl_tax'];\r\n            }\r\n\r\n            return this.getFormattedPrice(price);\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/summary/tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/totals',\r\n    'mage/translate',\r\n    'underscore'\r\n], function (ko, Component, quote, totals, $t, _) {\r\n    'use strict';\r\n\r\n    var isTaxDisplayedInGrandTotal = window.checkoutConfig.includeTaxInGrandTotal,\r\n        isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\r\n        isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed,\r\n        taxAmount = 0,\r\n        rates = 0;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isTaxDisplayedInGrandTotal: isTaxDisplayedInGrandTotal,\r\n            notCalculatedMessage: $t('Not yet calculated'),\r\n            template: 'Magento_Tax/checkout/summary/tax'\r\n        },\r\n        totals: quote.getTotals(),\r\n        isFullTaxSummaryDisplayed: isFullTaxSummaryDisplayed,\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        ifShowValue: function () {\r\n            if (this.isFullMode() && this.getPureValue() == 0) { //eslint-disable-line eqeqeq\r\n                return isZeroTaxDisplayed;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        ifShowDetails: function () {\r\n            if (!this.isFullMode()) {\r\n                return false;\r\n            }\r\n\r\n            return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         */\r\n        getPureValue: function () {\r\n            var amount = 0,\r\n                taxTotal;\r\n\r\n            if (this.totals()) {\r\n                taxTotal = totals.getSegment('tax');\r\n\r\n                if (taxTotal) {\r\n                    amount = taxTotal.value;\r\n                }\r\n            }\r\n\r\n            return amount;\r\n        },\r\n\r\n        /**\r\n         * @return {*|Boolean}\r\n         */\r\n        isCalculated: function () {\r\n            return this.totals() && this.isFullMode() && totals.getSegment('tax') != null;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getValue: function () {\r\n            var amount;\r\n\r\n            if (!this.isCalculated()) {\r\n                return this.notCalculatedMessage;\r\n            }\r\n            amount = totals.getSegment('tax').value;\r\n\r\n            return this.getFormattedPrice(amount);\r\n        },\r\n\r\n        /**\r\n         * @param {*} amount\r\n         * @return {*|String}\r\n         */\r\n        formatPrice: function (amount) {\r\n            return this.getFormattedPrice(amount);\r\n        },\r\n\r\n        /**\r\n         * @param {*} parent\r\n         * @param {*} percentage\r\n         * @return {*|String}\r\n         */\r\n        getTaxAmount: function (parent, percentage) {\r\n            var totalPercentage = 0;\r\n\r\n            taxAmount = parent.amount;\r\n            rates = parent.rates;\r\n            _.each(rates, function (rate) {\r\n                totalPercentage += parseFloat(rate.percent);\r\n            });\r\n\r\n            return this.getFormattedPrice(this.getPercentAmount(taxAmount, totalPercentage, percentage));\r\n        },\r\n\r\n        /**\r\n         * @param {*} amount\r\n         * @param {*} totalPercentage\r\n         * @param {*} percentage\r\n         * @return {*|String}\r\n         */\r\n        getPercentAmount: function (amount, totalPercentage, percentage) {\r\n            return parseFloat(amount * percentage / totalPercentage);\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getDetails: function () {\r\n            var taxSegment = totals.getSegment('tax');\r\n\r\n            if (taxSegment && taxSegment['extension_attributes']) {\r\n                return taxSegment['extension_attributes']['tax_grandtotal_details'];\r\n            }\r\n\r\n            return [];\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/summary/item/details/subtotal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/item/details/subtotal'\r\n], function (subtotal) {\r\n    'use strict';\r\n\r\n    var displayPriceMode = window.checkoutConfig.reviewItemPriceDisplayMode || 'including';\r\n\r\n    return subtotal.extend({\r\n        defaults: {\r\n            displayPriceMode: displayPriceMode,\r\n            template: 'Magento_Tax/checkout/summary/item/details/subtotal'\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isPriceInclTaxDisplayed: function () {\r\n            return displayPriceMode == 'both' || displayPriceMode == 'including'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isPriceExclTaxDisplayed: function () {\r\n            return displayPriceMode == 'both' || displayPriceMode == 'excluding'; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @param {Object} quoteItem\r\n         * @return {*|String}\r\n         */\r\n        getValueInclTax: function (quoteItem) {\r\n            return this.getFormattedPrice(quoteItem['row_total_incl_tax']);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} quoteItem\r\n         * @return {*|String}\r\n         */\r\n        getValueExclTax: function (quoteItem) {\r\n            return this.getFormattedPrice(quoteItem['row_total']);\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/cart/totals/shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/summary/shipping',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @override\r\n         */\r\n        isCalculated: function () {\r\n            return !!quote.shippingMethod();\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        getShippingMethodTitle: function () {\r\n            return '(' + this._super() + ')';\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/cart/totals/grand-total.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/summary/grand-total'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @override\r\n         */\r\n        isDisplayed: function () {\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/cart/totals/tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/summary/tax',\r\n    'Magento_Checkout/js/model/totals'\r\n], function (Component, totals) {\r\n    'use strict';\r\n\r\n    var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\r\n        isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @override\r\n         */\r\n        ifShowValue: function () {\r\n            if (this.getPureValue() === 0) {\r\n                return isZeroTaxDisplayed;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        ifShowDetails: function () {\r\n            return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        isCalculated: function () {\r\n            return this.totals() && totals.getSegment('tax') !== null;\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (ko, Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        displaySubtotal: ko.observable(true),\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.cart = customerData.get('cart');\r\n        }\r\n    });\r\n});\r\n","Magento_Multishipping/js/multi-shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery-ui-modules/widget'\r\n], function ($, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.multiShipping', {\r\n        options: {\r\n            itemsQty: 0,\r\n            addNewAddressBtn: 'button[data-role=\"add-new-address\"]', // Add a new multishipping address.\r\n            addNewAddressFlag: '#add_new_address_flag', // Hidden input field with value 0 or 1.\r\n            canContinueBtn: 'button[data-role=\"can-continue\"]', // Continue (update quantity or go to shipping).\r\n            canContinueFlag: '#can_continue_flag' // Hidden input field with value 0 or 1.\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers to click events for corresponding buttons.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._prepareCartData();\r\n            $(this.options.addNewAddressBtn).on('click', $.proxy(this._addNewAddress, this));\r\n            $(this.options.canContinueBtn).on('click', $.proxy(this._canContinue, this));\r\n        },\r\n\r\n        /**\r\n         * Takes cart items qty from current cart data and compare it with current items qty\r\n         * Reloads cart data if cart items qty is wrong\r\n         * @private\r\n         */\r\n        _prepareCartData: function () {\r\n            var cartData = customerData.get('cart');\r\n\r\n            if (cartData()['summary_count'] !== this.options.itemsQty) {\r\n                customerData.reload(['cart'], false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new address. Set the hidden input field and submit the form. Then enter a new shipping address.\r\n         * @private\r\n         */\r\n        _addNewAddress: function () {\r\n            $(this.options.addNewAddressFlag).val(1);\r\n            this.element.submit();\r\n        },\r\n\r\n        /**\r\n         * Can the user continue to the next step? The data-flag attribute holds either 0 (no) or 1 (yes).\r\n         * @private\r\n         * @param {Event} event - Click event on the corresponding button.\r\n         */\r\n        _canContinue: function (event) {\r\n            $(this.options.canContinueFlag).val(parseInt($(event.currentTarget).data('flag'), 10));\r\n        }\r\n    });\r\n\r\n    return $.mage.multiShipping;\r\n});\r\n","Magento_Multishipping/js/overview.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.orderOverview', {\r\n        options: {\r\n            opacity: 0.5, // CSS opacity for the 'Place Order' button when it's clicked and then disabled.\r\n            pleaseWaitLoader: 'span.please-wait', // 'Submitting order information...' Ajax loader.\r\n            placeOrderSubmit: 'button[type=\"submit\"]', // The 'Place Order' button.\r\n            agreements: '.checkout-agreements' // Container for all of the checkout agreements and terms/conditions\r\n        },\r\n\r\n        /**\r\n         * Bind a submit handler to the form.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('submit', $.proxy(this._showLoader, this));\r\n        },\r\n\r\n        /**\r\n         * Verify that all agreements and terms/conditions are checked. Show the Ajax loader. Disable\r\n         * the submit button (i.e. Place Order).\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _showLoader: function () {\r\n            if ($(this.options.agreements).find('input[type=\"checkbox\"]:not(:checked)').length > 0) {\r\n                return false;\r\n            }\r\n            this.element.find(this.options.pleaseWaitLoader).show().end()\r\n                .find(this.options.placeOrderSubmit).prop('disabled', true).css('opacity', this.options.opacity);\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    return $.mage.orderOverview;\r\n});\r\n","Magento_Multishipping/js/payment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.payment', {\r\n        options: {\r\n            continueSelector: '#payment-continue',\r\n            methodsContainer: '#payment-methods',\r\n            minBalance: 0,\r\n            tmpl: '<input id=\"hidden-free\" type=\"hidden\" name=\"payment[method]\" value=\"free\">'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.element.find('dd [name^=\"payment[\"]').prop('disabled', true).end()\r\n                .on('click', this.options.continueSelector, $.proxy(this._submitHandler, this))\r\n                .on('updateCheckoutPrice', $.proxy(function (event, data) {\r\n                    //updating the checkoutPrice\r\n                    if (data.price) {\r\n                        this.options.checkoutPrice += data.price;\r\n                    }\r\n\r\n                    //updating total price\r\n                    if (data.totalPrice) {\r\n                        data.totalPrice = this.options.checkoutPrice;\r\n                    }\r\n\r\n                    if (this.options.checkoutPrice <= this.options.minBalance) {\r\n                        // Add free input field, hide and disable unchecked\r\n                        // checkbox payment method and all radio button payment methods\r\n                        this._disablePaymentMethods();\r\n                    } else {\r\n                        // Remove free input field, show all payment method\r\n                        this._enablePaymentMethods();\r\n                    }\r\n                }, this))\r\n                .on('click', 'dt input:radio', $.proxy(this._paymentMethodHandler, this));\r\n\r\n            if (this.options.checkoutPrice < this.options.minBalance) {\r\n                this._disablePaymentMethods();\r\n            } else {\r\n                this._enablePaymentMethods();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display payment details when payment method radio button is checked\r\n         * @private\r\n         * @param {EventObject} e\r\n         */\r\n        _paymentMethodHandler: function (e) {\r\n            var element = $(e.target),\r\n                parentsDl = element.closest('dl');\r\n\r\n            parentsDl.find('dt input:radio').prop('checked', false);\r\n            parentsDl.find('dd').addClass('no-display').end()\r\n                .find('.items').hide()\r\n                .find('[name^=\"payment[\"]').prop('disabled', true);\r\n            element.prop('checked', true).parent()\r\n                .next('dd').removeClass('no-display')\r\n                .find('.items').show().find('[name^=\"payment[\"]').prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * make sure one payment method is selected\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _validatePaymentMethod: function () {\r\n            var methods = this.element.find('[name^=\"payment[\"]'),\r\n                isValid = false;\r\n\r\n            if (methods.length === 0) {\r\n                alert({\r\n                    content: $.mage.__('We can\\'t complete your order because you don\\'t have a payment method set up.')\r\n                });\r\n            } else if (this.options.checkoutPrice <= this.options.minBalance) {\r\n                isValid = true;\r\n            } else if (methods.filter('input:radio:checked').length) {\r\n                isValid = true;\r\n            } else {\r\n                alert({\r\n                    content: $.mage.__('Please choose a payment method.')\r\n                });\r\n            }\r\n\r\n            return isValid;\r\n        },\r\n\r\n        /**\r\n         * Disable and enable payment methods\r\n         * @private\r\n         */\r\n        _disablePaymentMethods: function () {\r\n            var tmpl = mageTemplate(this.options.tmpl, {\r\n                data: {}\r\n            });\r\n\r\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', true).end()\r\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', true).parent().hide();\r\n            this.element.find('[name=\"payment[method]\"][value=\"free\"]').parent('dt').remove();\r\n            this.element.find(this.options.methodsContainer).hide().find('[name^=\"payment[\"]').prop('disabled', true);\r\n\r\n            $(tmpl).appendTo(this.element);\r\n        },\r\n\r\n        /**\r\n         * Enable and enable payment methods\r\n         * @private\r\n         */\r\n        _enablePaymentMethods: function () {\r\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', false).end()\r\n                .find('dt input:radio:checked').trigger('click').end()\r\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', false).parent().show();\r\n            this.element.find(this.options.methodsContainer).show();\r\n        },\r\n\r\n        /**\r\n         * Returns checked payment method.\r\n         *\r\n         * @private\r\n         */\r\n        _getSelectedPaymentMethod: function () {\r\n            return this.element.find('input[name=\\'payment[method]\\']:checked');\r\n        },\r\n\r\n        /**\r\n         * Validate  before form submit\r\n         * @private\r\n         * @param {EventObject} e\r\n         */\r\n        _submitHandler: function (e) {\r\n            var currentMethod,\r\n                submitButton;\r\n\r\n            e.preventDefault();\r\n\r\n            if (this._validatePaymentMethod()) {\r\n                currentMethod = this._getSelectedPaymentMethod();\r\n                submitButton = currentMethod.parent().next('dd').find('button[type=submit]');\r\n\r\n                if (submitButton.length) {\r\n                    submitButton.first().trigger('click');\r\n                } else {\r\n                    this.element.submit();\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.payment;\r\n});\r\n","Magento_Cookie/js/require-cookie.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/mage',\r\n    'mage/translate'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.requireCookie', {\r\n        options: {\r\n            event: 'click',\r\n            noCookieUrl: 'enable-cookies',\r\n            triggers: ['.action.login', '.action.submit'],\r\n            isRedirectCmsPage: true\r\n        },\r\n\r\n        /**\r\n         * Constructor\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var events = {};\r\n\r\n            $.each(this.options.triggers, function (index, value) {\r\n                events['click ' + value] = '_checkCookie';\r\n            });\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * This method set the url for the redirect.\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _checkCookie: function (event) {\r\n            if (navigator.cookieEnabled) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n\r\n            if (this.options.isRedirectCmsPage) {\r\n                window.location = this.options.noCookieUrl;\r\n            } else {\r\n                alert({\r\n                    content: $.mage.__('Cookies are disabled in your browser.')\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.requireCookie;\r\n});\r\n","Magento_Cookie/js/notices.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/cookies'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.cookieNotices', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if ($.mage.cookies.get(this.options.cookieName)) {\r\n                this.element.hide();\r\n            } else {\r\n                this.element.show();\r\n            }\r\n            $(this.options.cookieAllowButtonSelector).on('click', $.proxy(function () {\r\n                var cookieExpires = new Date(new Date().getTime() + this.options.cookieLifetime * 1000);\r\n\r\n                $.mage.cookies.set(this.options.cookieName, JSON.stringify(this.options.cookieValue), {\r\n                    expires: cookieExpires\r\n                });\r\n\r\n                if ($.mage.cookies.get(this.options.cookieName)) {\r\n                    this.element.hide();\r\n                    $(document).trigger('user:allowed:save:cookie');\r\n                } else {\r\n                    window.location.href = this.options.noCookiesUrl;\r\n                }\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.cookieNotices;\r\n});\r\n","Magento_Cookie/js/jquery.storageapi.extended.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery/jquery.cookie',\r\n    'jquery/jquery.storageapi.min'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     *\r\n     * @param {Object} storage\r\n     * @private\r\n     */\r\n    function _extend(storage) {\r\n        $.extend(storage, {\r\n            _secure: window.cookiesConfig ? window.cookiesConfig.secure : false,\r\n\r\n            /**\r\n             * Set value under name\r\n             * @param {String} name\r\n             * @param {String} value\r\n             * @param {Object} [options]\r\n             */\r\n            setItem: function (name, value, options) {\r\n                var _default = {\r\n                    expires: this._expires,\r\n                    path: this._path,\r\n                    domain: this._domain,\r\n                    secure: this._secure\r\n                };\r\n\r\n                $.cookie(this._prefix + name, value, $.extend(_default, options || {}));\r\n            },\r\n\r\n            /**\r\n             * Set default options\r\n             * @param {Object} c\r\n             * @returns {storage}\r\n             */\r\n            setConf: function (c) {\r\n                if (c.path) {\r\n                    this._path = c.path;\r\n                }\r\n\r\n                if (c.domain) {\r\n                    this._domain = c.domain;\r\n                }\r\n\r\n                if (c.expires) {\r\n                    this._expires = c.expires;\r\n                }\r\n\r\n                if (typeof c.secure !== 'undefined') {\r\n                    this._secure = c.secure;\r\n                }\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (window.cookieStorage) {\r\n        _extend(window.cookieStorage);\r\n    }\r\n});\r\n"}
}});
