require.config({"config": {
        "jsbuild":{"Magento_Ui/js/lib/validation/rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './utils',\r\n    'moment',\r\n    'tinycolor',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, _, utils, moment, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param {String} s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = '0123456789',\r\n            w = '',\r\n            i, j, k, m, c, a, x;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n\r\n            if (v.indexOf(x, 0) !== -1) {\r\n                w += x;\r\n            }\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n\r\n        return c % 10 === 0;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    return _.mapObject({\r\n        'min_text_length': [\r\n            function (value, params) {\r\n                return _.isUndefined(value) || value.length === 0 || value.length >= +params;\r\n            },\r\n            $.mage.__('Please enter more or equal than {0} symbols.')\r\n        ],\r\n        'max_text_length': [\r\n            function (value, params) {\r\n                return !_.isUndefined(value) && value.length <= +params;\r\n            },\r\n            $.mage.__('Please enter less or equal than {0} symbols.')\r\n        ],\r\n        'max-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        'min-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        'range-words': [\r\n            function (value, params) {\r\n                var match = utils.stripHtml(value).match(/\\b\\w+\\b/g) || [];\r\n\r\n                return utils.isEmpty(value) || match.length >= params[0] &&\r\n                    match.length <= params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        'letters-with-basic-punc': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z\\-.,()\\u0027\\u0022\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        'alphanumeric': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        'letters-only': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        'no-whitespace': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        'no-marginal-whitespace': [\r\n            function (value) {\r\n                return !/^\\s+|\\s+$/i.test(value);\r\n            },\r\n            $.mage.__('No marginal white space please')\r\n        ],\r\n        'zip-range': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        'integer': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        'vinUS': [\r\n            function (value) {\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (value.length !== 17) {\r\n                    return false;\r\n                }\r\n                var i, n, d, f, cd, cdv,//eslint-disable-line vars-on-top\r\n                    LL = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],//eslint-disable-line max-len\r\n                    VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],\r\n                    FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n                    rs = 0;\r\n\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = value.slice(i, i + 1);\r\n\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {//eslint-disable-line max-depth\r\n                            if (d.toUpperCase() === LL[n]) {//eslint-disable-line max-depth\r\n                                d = VL[n];\r\n                                d *= f;\r\n\r\n                                if (isNaN(cdv) && n === 8) {//eslint-disable-line max-depth\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n                cd = rs % 11;\r\n\r\n                if (cd === 10) {\r\n                    cd = 'X';\r\n                }\r\n\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        'dateITA': [\r\n            function (value) {\r\n                var check = false,\r\n                    re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\r\n                    adata, gg, mm, aaaa, xdata;\r\n\r\n                if (re.test(value)) {\r\n                    adata = value.split('/');\r\n                    gg = parseInt(adata[0], 10);\r\n                    mm = parseInt(adata[1], 10);\r\n                    aaaa = parseInt(adata[2], 10);\r\n                    xdata = new Date(aaaa, mm - 1, gg);\r\n\r\n                    if (xdata.getFullYear() === aaaa &&\r\n                        xdata.getMonth() === mm - 1 &&\r\n                        xdata.getDate() === gg\r\n                    ) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n\r\n                return check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        'dateNL': [\r\n            function (value) {\r\n                return /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            $.mage.__('Vul hier een geldige datum in.')\r\n        ],\r\n        'time': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        'time12h': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\s[AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        'phoneUS': [\r\n            function (value) {\r\n                value = value.replace(/\\s+/g, '');\r\n\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'phoneUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'mobileUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 && value.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        'stripped-min-length': [\r\n            function (value, param) {\r\n                return _.isUndefined(value) || value.length === 0 || utils.stripHtml(value).length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n        'email2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        'url2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n        'credit-card-types': [\r\n            function (value, param) {\r\n                var validTypes;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, '');\r\n                validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'ipv4': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        'ipv6': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n        'pattern': [\r\n            function (value, param) {\r\n                return utils.isEmpty(value) || new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        'validate-no-html-tags': [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        'validate-select': [\r\n            function (value) {\r\n                return value !== 'none' && value != null && value.length !== 0;\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        'validate-no-empty': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        'validate-alphanum-with-spaces': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9 ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        'validate-data': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-street': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        'validate-phoneStrict': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-phoneLax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-fax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        'validate-email': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-emailSender': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[\\S ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = $.trim(value);\r\n\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-admin-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = $.trim(value);\r\n\r\n                if (pass.length === 0) {\r\n                    return true;\r\n                }\r\n\r\n                if (!/[a-z]/i.test(value) || !/[0-9]/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        'validate-customer-password': [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    counter = 0,\r\n                    passwordMinLength = $(elm).data('password-min-length'),\r\n                    passwordMinCharacterSets = $(elm).data('password-min-character-sets'),\r\n                    pass = $.trim(v),\r\n                    result = pass.length >= passwordMinLength;\r\n\r\n                if (result === false) {\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                if (pass.match(/\\d+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets);//eslint-disable-line max-len\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        'validate-url': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = (value || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        'validate-clean-url': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        'validate-xml-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        'validate-ssn': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        'validate-zip-us': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        'validate-date-au': [\r\n            function (value) {\r\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/,\r\n                    d;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (utils.isEmpty(value) || !regex.test(value)) {\r\n                    return false;\r\n                }\r\n                d = new Date(value.replace(regex, '$2/$1/$3'));\r\n\r\n                return parseInt(RegExp.$2, 10) === 1 + d.getMonth() &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        'validate-currency-dollar': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        'validate-not-negative-number': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        'validate-zero-or-greater': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value >= 0;\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        'validate-greater-than-zero': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n\r\n                return !isNaN(value) && value > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        'validate-css-length': [\r\n            function (value) {\r\n                if (value !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        'validate-number': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    !isNaN(utils.parseNumber(value)) &&\r\n                    /^\\s*-?\\d*(?:[.,|'|\\s]\\d+)*(?:[.,|'|\\s]\\d{2})?-?\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-integer': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid integer in this field.')\r\n        ],\r\n        'validate-number-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-positive-percent-decimal': [\r\n            function (value) {\r\n                var numValue;\r\n\r\n                if (utils.isEmptyNoTrim(value) || !/^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                return utils.isBetween(numValue, 0.01, 100);\r\n            },\r\n            $.mage.__('Please enter a valid percentage discount value greater than 0.')\r\n        ],\r\n        'validate-digits': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !/[^\\d]/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-digits-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-range': [\r\n            function (value) {\r\n                var minValue, maxValue, ranges;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](value)) {\r\n                    minValue = maxValue = utils.parseNumber(value);\r\n                } else {\r\n                    ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(value);\r\n\r\n                    if (ranges) {\r\n                        minValue = utils.parseNumber(ranges[1]);\r\n                        maxValue = utils.parseNumber(ranges[2]);\r\n\r\n                        if (minValue > maxValue) {//eslint-disable-line max-depth\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-alpha': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        'validate-code': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z]+[a-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only lowercase letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-alphanum': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-not-number-first': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[^0-9-\\.].*$/.test(value.trim());\r\n            },\r\n            $.mage.__('First character must be letter.')\r\n        ],\r\n        'validate-date': [\r\n            function (value, params, additionalParams) {\r\n                var test = moment(value, additionalParams.dateFormat);\r\n\r\n                return utils.isEmptyNoTrim(value) || test.isValid();\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n        ],\r\n        'validate-date-range': [\r\n            function (value, params) {\r\n                var fromDate = $('input[name*=\"' + params + '\"]').val();\r\n\r\n                return moment.utc(value).unix() >= moment.utc(fromDate).unix() || isNaN(moment.utc(value).unix());\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        'validate-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')//eslint-disable-line max-len\r\n        ],\r\n        'validate-zip-international': [\r\n\r\n            /*function(v) {\r\n            // @TODO: Cleanup\r\n            return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n            }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        'validate-state': [\r\n            function (value) {\r\n                return value !== 0;\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        'less-than-equals-to': [\r\n            function (value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) <= parseFloat(params);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value less than or equal to {0}.')\r\n        ],\r\n        'greater-than-equals-to': [\r\n            function (value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) >= parseFloat(params);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value greater than or equal to {0}.')\r\n        ],\r\n        'validate-emails': [\r\n            function (value) {\r\n                var validRegexp, emails, i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                validRegexp = /^[a-z0-9\\._-]{1,30}@([a-z0-9_-]{1,30}\\.){1,5}[a-z]{2,4}$/i;\r\n                emails = value.split(/[\\s\\n\\,]+/g);\r\n\r\n                for (i = 0; i < emails.length; i++) {\r\n                    if (!validRegexp.test(emails[i].strip())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-cc-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10.\r\n             *\r\n             * @param {String} value - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-cc-ukss': [\r\n\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled.\r\n             *\r\n             * @param {String} value - input field value\r\n             * @return {*}\r\n             */\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'checked': [\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (value) {\r\n                if (value.length) {\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (value) {\r\n                var isValid = true,\r\n                    values = value.split(','),\r\n                    i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return isValid;\r\n                }\r\n\r\n                for (i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-new-password': [\r\n            function (value) {\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (utils.isEmpty(value) && value !== '') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, params) {\r\n                var validator = this,\r\n                    result = false,\r\n                    // obtain values for validation\r\n                    qty = utils.parseNumber(value),\r\n                    isMinAllowedValid = typeof params.minAllowed === 'undefined' ||\r\n                        qty >= utils.parseNumber(params.minAllowed),\r\n                    isMaxAllowedValid = typeof params.maxAllowed === 'undefined' ||\r\n                        qty <= utils.parseNumber(params.maxAllowed),\r\n                    isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' ||\r\n                        qty % utils.parseNumber(params.qtyIncrements) === 0;\r\n\r\n                result = qty > 0;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('Please enter a quantity greater than 0.');//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMinAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The fewest you may purchase is %1.').replace('%1', params.minAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMaxAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The maximum you may purchase is %1.').replace('%1', params.maxAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isQtyIncrementsValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('You can buy this product only in quantities of %1 at a time.').replace('%1', params.qtyIncrements);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.itemQtyErrorMessage;\r\n            }\r\n        ],\r\n        'equalTo': [\r\n            function (value, param) {\r\n                return value === $(param).val();\r\n            },\r\n            $.validator.messages.equalTo\r\n        ],\r\n        'validate-file-type': [\r\n            function (name, types) {\r\n                var extension = name.split('.').pop().toLowerCase();\r\n\r\n                if (types && typeof types === 'string') {\r\n                    types = types.split(' ');\r\n                }\r\n\r\n                return !types || !types.length || ~types.indexOf(extension);\r\n            },\r\n            $.mage.__('We don\\'t recognize or support this file extension type.')\r\n        ],\r\n        'validate-max-size': [\r\n            function (size, maxSize) {\r\n                return maxSize === false || size < maxSize;\r\n            },\r\n            $.mage.__('File you are trying to upload exceeds maximum file size limit.')\r\n        ],\r\n        'validate-if-tag-script-exist': [\r\n            function (value) {\r\n                return !value || (/<script\\b[^>]*>([\\s\\S]*?)<\\/script>$/ig).test(value);\r\n            },\r\n            $.mage.__('Please use tag SCRIPT with SRC attribute or with proper content to include JavaScript to the document.')//eslint-disable-line max-len\r\n        ],\r\n        'date_range_min': [\r\n            function (value, minValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() >= minValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'date_range_max': [\r\n            function (value, maxValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() <= maxValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'validate-color': [\r\n            function (value) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return tinycolor(value).isValid();\r\n            },\r\n            $.mage.__('Wrong color format. Please specify color in HEX, RGBa, HSVa, HSLa or use color name.')\r\n        ],\r\n        'blacklist-url': [\r\n            function (value, param) {\r\n                return new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('This link is not allowed.')\r\n        ],\r\n        'validate-dob': [\r\n            function (value, param, params) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return moment.utc(value, params.dateFormat).isSameOrBefore(moment.utc());\r\n            },\r\n            $.mage.__('The Date of Birth should not be greater than today.')\r\n        ]\r\n    }, function (data) {\r\n        return {\r\n            handler: data[0],\r\n            message: data[1]\r\n        };\r\n    });\r\n});\r\n","Magento_Ui/js/lib/validation/utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var utils = {\r\n        /**\r\n         * Check if string is empty with trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || value == null || value.length === 0 || /^\\s+$/.test(value);\r\n        },\r\n\r\n        /**\r\n         * Check if string is empty no trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmptyNoTrim: function (value) {\r\n            return value === '' || value == null || value.length === 0;\r\n        },\r\n\r\n        /**\r\n         * Checks if {value} is between numbers {from} and {to}.\r\n         *\r\n         * @param {String} value\r\n         * @param {String} from\r\n         * @param {String} to\r\n         * @return {Boolean}\r\n         */\r\n        isBetween: function (value, from, to) {\r\n            return (from === null || from === '' || value >= utils.parseNumber(from)) &&\r\n                   (to === null || to === '' || value <= utils.parseNumber(to));\r\n        },\r\n\r\n        /**\r\n         * Parse price string.\r\n         *\r\n         * @param {String} value\r\n         * @return {Number}\r\n         */\r\n        parseNumber: function (value) {\r\n            var isDot, isComa;\r\n\r\n            if (typeof value !== 'string') {\r\n                return parseFloat(value);\r\n            }\r\n            isDot = value.indexOf('.');\r\n            isComa = value.indexOf(',');\r\n\r\n            if (isDot !== -1 && isComa !== -1) {\r\n                if (isComa > isDot) {\r\n                    value = value.replace('.', '').replace(',', '.');\r\n                } else {\r\n                    value = value.replace(',', '');\r\n                }\r\n            } else if (isComa !== -1) {\r\n                value = value.replace(',', '.');\r\n            }\r\n\r\n            return parseFloat(value);\r\n        },\r\n\r\n        /**\r\n         * Removes HTML tags and space characters, numbers and punctuation.\r\n         *\r\n         * @param {String} value -  Value being stripped.\r\n         * @return {String}\r\n         */\r\n        stripHtml: function (value) {\r\n            return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n        }\r\n    };\r\n\r\n    return utils;\r\n});\r\n","Magento_Ui/js/lib/registry/registry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n/* global WeakMap */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var privateData = new WeakMap();\r\n\r\n    /**\r\n     * Extracts private item storage associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Object}\r\n     */\r\n    function getItems(container) {\r\n        return privateData.get(container).items;\r\n    }\r\n\r\n    /**\r\n     * Extracts private requests array associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Array}\r\n     */\r\n    function getRequests(container) {\r\n        return privateData.get(container).requests;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function used for convenient access to the elements.\r\n     * See 'async' method for examples of usage and comparison\r\n     * with a regular 'get' method.\r\n     *\r\n     * @param {(String|Object|Function)} name - Key of the requested element.\r\n     * @param {Registry} registry - Instance of a registry\r\n     *      where to search for the element.\r\n     * @param {(Function|String)} [method] - Optional callback function\r\n     *      or a name of the elements' method which\r\n     *      will be invoked when element is available in registry.\r\n     * @returns {*}\r\n     */\r\n    function async(name, registry, method) {\r\n        var args = _.toArray(arguments).slice(3);\r\n\r\n        if (_.isString(method)) {\r\n            registry.get(name, function (component) {\r\n                component[method].apply(component, args);\r\n            });\r\n        } else if (_.isFunction(method)) {\r\n            registry.get(name, method);\r\n        } else if (!args.length) {\r\n            return registry.get(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks that every property of the query object\r\n     * is present and equal to the corresponding\r\n     * property in target object.\r\n     * Note that non-strict comparison is used.\r\n     *\r\n     * @param {Object} query - Query object.\r\n     * @param {Object} target - Target object.\r\n     * @returns {Boolean}\r\n     */\r\n    function compare(query, target) {\r\n        var matches = true,\r\n            index,\r\n            keys,\r\n            key;\r\n\r\n        if (!_.isObject(query) || !_.isObject(target)) {\r\n            return false;\r\n        }\r\n\r\n        keys = Object.getOwnPropertyNames(query);\r\n        index = keys.length;\r\n\r\n        while (matches && index--) {\r\n            key = keys[index];\r\n\r\n            /* eslint-disable eqeqeq */\r\n            if (target[key] != query[key]) {\r\n                matches = false;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     * Explodes incoming string into object if\r\n     * string is defined as a set of key = value pairs.\r\n     *\r\n     * @param {(String|*)} query - String to be processed.\r\n     * @returns {Object|*} Either created object or an unmodified incoming\r\n     *      value if conversion was not possible.\r\n     * @example Sample conversions.\r\n     *      'key = value, key2 = value2'\r\n     *      => {key: 'value', key2: 'value2'}\r\n     */\r\n    function explode(query) {\r\n        var result = {},\r\n            index,\r\n            data;\r\n\r\n        if (typeof query !== 'string' || !~query.indexOf('=')) {\r\n            return query;\r\n        }\r\n\r\n        query = query.split(',');\r\n        index = query.length;\r\n\r\n        while (index--) {\r\n            data = query[index].split('=');\r\n\r\n            result[data[0].trim()] = data[1].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extracts items from the provided data object\r\n     * which matches specified search criteria.\r\n     *\r\n     * @param {Object} data - Data object where to perform a lookup.\r\n     * @param {(String|Object|Function)} query - Search criteria.\r\n     * @param {Boolean} findAll - Flag that defines whether to\r\n     *      search for all applicable items or to stop on a first found entry.\r\n     * @returns {Array|Object|*}\r\n     */\r\n    function find(data, query, findAll) {\r\n        var iterator,\r\n            item;\r\n\r\n        query = explode(query);\r\n\r\n        if (typeof query === 'string') {\r\n            item = data[query];\r\n\r\n            if (findAll) {\r\n                return item ? [item] : [];\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        iterator = !_.isFunction(query) ?\r\n            compare.bind(null, query) :\r\n            query;\r\n\r\n        return findAll ?\r\n            _.filter(data, iterator) :\r\n            _.find(data, iterator);\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Registry() {\r\n        var data = {\r\n            items: {},\r\n            requests: []\r\n        };\r\n\r\n        this._updateRequests = _.debounce(this._updateRequests.bind(this), 10);\r\n        privateData.set(this, data);\r\n    }\r\n\r\n    Registry.prototype = {\r\n        constructor: Registry,\r\n\r\n        /**\r\n         * Retrieves item from registry which matches specified search criteria.\r\n         *\r\n         * @param {(Object|String|Function|Array)} query - Search condition (see examples).\r\n         * @param {Function} [callback] - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {*}\r\n         *\r\n         * @example Requesting item by it's name.\r\n         *      var obj = {index: 'test', sample: true};\r\n         *\r\n         *      registry.set('first', obj);\r\n         *      registry.get('first') === obj;\r\n         *      => true\r\n         *\r\n         * @example Requesting item with a specific properties.\r\n         *      registry.get('sample = 1, index = test') === obj;\r\n         *      => true\r\n         *      registry.get('sample = 0, index = foo') === obj;\r\n         *      => false\r\n         *\r\n         * @example Declaring search criteria as an object.\r\n         *      registry.get({sample: true}) === obj;\r\n         *      => true;\r\n         *\r\n         * @example Providing custom search handler.\r\n         *      registry.get(function (item) { return item.sample === true; }) === obj;\r\n         *      => true\r\n         *\r\n         * @example Sample asynchronous request declaration.\r\n         *      registry.get('index = test', function (item) {});\r\n         *\r\n         * @example Requesting multiple elements.\r\n         *      registry.set('second', {index: 'test2'});\r\n         *      registry.get(['first', 'second'], function (first, second) {});\r\n         */\r\n        get: function (query, callback) {\r\n            if (typeof callback !== 'function') {\r\n                return find(getItems(this), query);\r\n            }\r\n\r\n            this._addRequest(query, callback);\r\n        },\r\n\r\n        /**\r\n         * Sets provided item to the registry.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @param {*} item - Item's data.\r\n         * returns {Registry} Chainable.\r\n         */\r\n        set: function (id, item) {\r\n            getItems(this)[id] = item;\r\n\r\n            this._updateRequests();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified item from registry.\r\n         * Note that search query is not applicable.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        remove: function (id) {\r\n            delete getItems(this)[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves a collection of elements that match\r\n         * provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Array} Found elements.\r\n         */\r\n        filter: function (query) {\r\n            return find(getItems(this), query, true);\r\n        },\r\n\r\n        /**\r\n         * Checks that at least one element in collection\r\n         * matches provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Boolean}\r\n         */\r\n        has: function (query) {\r\n            return !!this.get(query);\r\n        },\r\n\r\n        /**\r\n         * Checks that registry contains a provided item.\r\n         *\r\n         * @param {*} item - Item to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        contains: function (item) {\r\n            return _.contains(getItems(this), item);\r\n        },\r\n\r\n        /**\r\n         * Extracts identifier of an item if it's present in registry.\r\n         *\r\n         * @param {*} item - Item whose identifier will be extracted.\r\n         * @returns {String|Undefined}\r\n         */\r\n        indexOf: function (item) {\r\n            return _.findKey(getItems(this), function (elem) {\r\n                return item === elem;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Same as a 'get' method except that it returns\r\n         * a promise object instead of invoking provided callback.\r\n         *\r\n         * @param {(String|Function|Object|Array)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        promise: function (query) {\r\n            var defer    = $.Deferred(),\r\n                callback = defer.resolve.bind(defer);\r\n\r\n            this.get(query, callback);\r\n\r\n            return defer.promise();\r\n        },\r\n\r\n        /**\r\n         * Creates a wrapper function over the provided search query\r\n         * in order to provide somehow more convenient access to the\r\n         * registry's items.\r\n         *\r\n         * @param {(String|Object|Function)} query - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Function}\r\n         *\r\n         * @example Comparison with a 'get' method on retrieving items.\r\n         *      var module = registry.async('name');\r\n         *\r\n         *      module();\r\n         *      => registry.get('name');\r\n         *\r\n         * @example Asynchronous request.\r\n         *      module(function (component) {});\r\n         *      => registry.get('name', function (component) {});\r\n         *\r\n         * @example Requesting item and invoking it's method with specified parameters.\r\n         *      module('trigger', true);\r\n         *      => registry.get('name', function (component) {\r\n         *          component.trigger(true);\r\n         *      });\r\n         */\r\n        async: function (query) {\r\n            return async.bind(null, query, this);\r\n        },\r\n\r\n        /**\r\n         * Creates new instance of a Registry.\r\n         *\r\n         * @returns {Registry} New instance.\r\n         */\r\n        create: function () {\r\n            return new Registry;\r\n        },\r\n\r\n        /**\r\n         * Adds new request to the queue or resolves it immediately\r\n         * if all of the required items are available.\r\n         *\r\n         * @private\r\n         * @param {(Object|String|Function|Array)} queries - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @param {Function} callback - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {Registry}\r\n         */\r\n        _addRequest: function (queries, callback) {\r\n            var request;\r\n\r\n            if (!Array.isArray(queries)) {\r\n                queries = queries ? [queries] : [];\r\n            }\r\n\r\n            request = {\r\n                queries: queries.map(explode),\r\n                callback: callback\r\n            };\r\n\r\n            this._canResolve(request) ?\r\n                this._resolveRequest(request) :\r\n                getRequests(this).push(request);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates requests list resolving applicable items.\r\n         *\r\n         * @private\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _updateRequests: function () {\r\n            getRequests(this)\r\n                .filter(this._canResolve, this)\r\n                .forEach(this._resolveRequest, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resolves provided request invoking it's callback\r\n         * with items specified in query parameters.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _resolveRequest: function (request) {\r\n            var requests = getRequests(this),\r\n                items    = request.queries.map(this.get, this),\r\n                index    = requests.indexOf(request);\r\n\r\n            request.callback.apply(null, items);\r\n\r\n            if (~index) {\r\n                requests.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided request can be resolved.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Boolean}\r\n         */\r\n        _canResolve: function (request) {\r\n            var queries = request.queries;\r\n\r\n            return queries.every(this.has, this);\r\n        }\r\n    };\r\n\r\n    return new Registry;\r\n});\r\n","Magento_Ui/js/lib/core/events.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap, Map*/\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    var eventsMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns events map or a specific event\r\n     * data associated with a provided object.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} [name] - Name of the event.\r\n     * @returns {Map|Array|Boolean}\r\n     */\r\n    function getEvents(obj, name) {\r\n        var events = eventsMap.get(obj);\r\n\r\n        if (!events) {\r\n            return false;\r\n        }\r\n\r\n        return name ? events.get(name) : events;\r\n    }\r\n\r\n    /**\r\n     * Adds new event handler.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} ns - Callback namespace.\r\n     * @param {Function} callback - Event callback.\r\n     * @param {String} name - Name of the event.\r\n     */\r\n    function addHandler(obj, ns, callback, name) {\r\n        var events      = getEvents(obj),\r\n            observable,\r\n            data;\r\n\r\n        observable = !ko.isObservable(obj[name]) ?\r\n            ko.getObservable(obj, name) :\r\n            obj[name];\r\n\r\n        if (observable) {\r\n            observable.subscribe(callback);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!events) {\r\n            events = new Map();\r\n\r\n            eventsMap.set(obj, events);\r\n        }\r\n\r\n        data = {\r\n            callback: callback,\r\n            ns: ns\r\n        };\r\n\r\n        events.has(name) ?\r\n            events.get(name).push(data) :\r\n            events.set(name, [data]);\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callbacks with a specified arguments.\r\n     *\r\n     * @param {Array} handlers\r\n     * @param {Array} args\r\n     * @returns {Boolean}\r\n     */\r\n    function trigger(handlers, args) {\r\n        var bubble = true,\r\n            callback;\r\n\r\n        handlers.forEach(function (handler) {\r\n            callback = handler.callback;\r\n\r\n            if (callback.apply(null, args) === false) {\r\n                bubble = false;\r\n            }\r\n        });\r\n\r\n        return bubble;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Calls callback when name event is triggered.\r\n         * @param  {String}   events\r\n         * @param  {Function} callback\r\n         * @param  {Function} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        on: function (events, callback, ns) {\r\n            var iterator;\r\n\r\n            if (arguments.length < 2) {\r\n                ns = callback;\r\n            }\r\n\r\n            iterator = addHandler.bind(null, this, ns);\r\n\r\n            _.isObject(events) ?\r\n                _.each(events, iterator) :\r\n                iterator(callback, events);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removed callback from listening to target event\r\n         * @param  {String} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        off: function (ns) {\r\n            var storage = getEvents(this);\r\n\r\n            if (!storage) {\r\n                return this;\r\n            }\r\n\r\n            storage.forEach(function (handlers, name) {\r\n                handlers = handlers.filter(function (handler) {\r\n                    return !ns ? false : handler.ns !== ns;\r\n                });\r\n\r\n                handlers.length ?\r\n                    storage.set(name, handlers) :\r\n                    storage.delete(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers event and executes all attached callbacks.\r\n         *\r\n         * @param {String} name - Name of the event to be triggered.\r\n         * @returns {Boolean}\r\n         */\r\n        trigger: function (name) {\r\n            var handlers,\r\n                args;\r\n\r\n            handlers = getEvents(this, name),\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (!handlers || !name) {\r\n                return true;\r\n            }\r\n\r\n            return trigger(handlers, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/class.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/utils/wrapper'\r\n], function (_, utils, wrapper) {\r\n    'use strict';\r\n\r\n    var Class;\r\n\r\n    /**\r\n     * Returns property of an object if\r\n     * it's his own property.\r\n     *\r\n     * @param {Object} obj - Object whose property should be retrieved.\r\n     * @param {String} prop - Name of the property.\r\n     * @returns {*} Value of the property or false.\r\n     */\r\n    function getOwn(obj, prop) {\r\n        return _.isObject(obj) && obj.hasOwnProperty(prop) && obj[prop];\r\n    }\r\n\r\n    /**\r\n     * Creates constructor function which allows\r\n     * initialization without usage of a 'new' operator.\r\n     *\r\n     * @param {Object} protoProps - Prototypal properties of a new constructor.\r\n     * @param {Function} constructor\r\n     * @returns {Function} Created constructor.\r\n     */\r\n    function createConstructor(protoProps, constructor) {\r\n        var UiClass = constructor;\r\n\r\n        if (!UiClass) {\r\n\r\n            /**\r\n             * Default constructor function.\r\n             */\r\n            UiClass = function () {\r\n                var obj = this;\r\n\r\n                if (!_.isObject(obj) || Object.getPrototypeOf(obj) !== UiClass.prototype) {\r\n                    obj = Object.create(UiClass.prototype);\r\n                }\r\n\r\n                obj.initialize.apply(obj, arguments);\r\n\r\n                return obj;\r\n            };\r\n        }\r\n\r\n        UiClass.prototype = protoProps;\r\n        UiClass.prototype.constructor = UiClass;\r\n\r\n        return UiClass;\r\n    }\r\n\r\n    Class = createConstructor({\r\n\r\n        /**\r\n         * Entry point to the initialization of constructor's instance.\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initialize: function (options) {\r\n            this.initConfig(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recursively extends data specified in constructors' 'defaults'\r\n         * property with provided options object. Evaluates resulting\r\n         * object using string templates (see: mage/utils/template.js).\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initConfig: function (options) {\r\n            var defaults    = this.constructor.defaults,\r\n                config      = utils.extend({}, defaults, options || {}),\r\n                ignored     = config.ignoreTmpls || {},\r\n                cached      = utils.omit(config, ignored);\r\n\r\n            config = utils.template(config, this, false, true);\r\n\r\n            _.each(cached, function (value, key) {\r\n                utils.nested(config, key, value);\r\n            });\r\n\r\n            return _.extend(this, config);\r\n        }\r\n    });\r\n\r\n    _.extend(Class, {\r\n        defaults: {\r\n            ignoreTmpls: {\r\n                templates: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates new constructor based on a current prototype properties,\r\n         * extending them with properties specified in 'exender' object.\r\n         *\r\n         * @param {Object} [extender={}]\r\n         * @returns {Function} New constructor.\r\n         */\r\n        extend: function (extender) {\r\n            var parent      = this,\r\n                parentProto = parent.prototype,\r\n                childProto  = Object.create(parentProto),\r\n                child       = createConstructor(childProto, getOwn(extender, 'constructor')),\r\n                defaults;\r\n\r\n            extender = extender || {};\r\n            defaults = extender.defaults;\r\n\r\n            delete extender.defaults;\r\n\r\n            _.each(extender, function (method, name) {\r\n                childProto[name] = wrapper.wrapSuper(parentProto[name], method);\r\n            });\r\n\r\n            child.defaults = utils.extend({}, parent.defaults || {});\r\n\r\n            if (defaults) {\r\n                utils.extend(child.defaults, defaults);\r\n                extender.defaults = defaults;\r\n            }\r\n\r\n            return _.extend(child, {\r\n                __super__:  parentProto,\r\n                extend:     parent.extend\r\n            });\r\n        }\r\n    });\r\n\r\n    return Class;\r\n});\r\n","Magento_Ui/js/lib/core/collection.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiElement'\r\n], function (_, utils, registry, Element) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes non plain object items from the specified array.\r\n     *\r\n     * @param {Array} container - Array whose value should be filtered.\r\n     * @returns {Array}\r\n     */\r\n    function compact(container) {\r\n        return container.filter(utils.isObject);\r\n    }\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/collection',\r\n            _elems: [],\r\n            ignoreTmpls: {\r\n                childDefaults: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Model} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    elems: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @param {Object} elem - Instance of an element that was added.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a child found by provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Object}\r\n         */\r\n        getChild: function (index) {\r\n            return _.findWhere(this.elems(), {\r\n                index: index\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Requests specified components to insert\r\n         * them into 'elems' array starting from provided position.\r\n         *\r\n         * @param {(String|Array)} elems - Name of the component to insert.\r\n         * @param {Number} [position=-1] - Position at which to insert elements.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        insertChild: function (elems, position) {\r\n            var container   = this._elems,\r\n                insert      = this._insert.bind(this),\r\n                update;\r\n\r\n            if (!Array.isArray(elems)) {\r\n                elems = [elems];\r\n            }\r\n\r\n            elems.map(function (item) {\r\n                return item.elem ?\r\n                    utils.insert(item.elem, container, item.position) :\r\n                    utils.insert(item, container, position);\r\n            }).forEach(function (item) {\r\n                if (item === true) {\r\n                    update = true;\r\n                } else if (_.isString(item)) {\r\n                    registry.get(item, insert);\r\n                } else if (utils.isObject(item)) {\r\n                    insert(item);\r\n                }\r\n            });\r\n\r\n            if (update) {\r\n                this._updateCollection();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified child from collection.\r\n         *\r\n         * @param {(Object|String)} elem - Child or index of a child to be removed.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        removeChild: function (elem, skipUpdate) {\r\n            if (_.isString(elem)) {\r\n                elem = this.getChild(elem);\r\n            }\r\n\r\n            if (elem) {\r\n                utils.remove(this._elems, elem);\r\n\r\n                if (!skipUpdate) {\r\n                    this._updateCollection();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection children with its' elements.\r\n         */\r\n        destroyChildren: function () {\r\n            this.elems.each(function (elem) {\r\n                elem.destroy(true);\r\n            });\r\n\r\n            this._updateCollection();\r\n        },\r\n\r\n        /**\r\n         * Clear data. Call method \"clear\"\r\n         * in child components\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var elems = this.elems();\r\n\r\n            _.each(elems, function (elem) {\r\n                if (_.isFunction(elem.clear)) {\r\n                    elem.clear();\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified child exists in collection.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Boolean}\r\n         */\r\n        hasChild: function (index) {\r\n            return !!this.getChild(index);\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified child\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestChild: function (index) {\r\n            var name = this.formChildName(index);\r\n\r\n            return this.requestModule(name);\r\n        },\r\n\r\n        /**\r\n         * Creates complete child name based on a provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {String}\r\n         */\r\n        formChildName: function (index) {\r\n            return this.name + '.' + index;\r\n        },\r\n\r\n        /**\r\n         * Retrieves requested region.\r\n         * Creates region if it was not created yet\r\n         *\r\n         * @returns {ObservableArray}\r\n         */\r\n        getRegion: function (name) {\r\n            var regions = this.regions = this.regions || {};\r\n\r\n            if (!regions[name]) {\r\n                regions[name] = [];\r\n\r\n                this.observe.call(regions, name);\r\n            }\r\n\r\n            return regions[name];\r\n        },\r\n\r\n        /**\r\n         * Checks if the specified region has any elements\r\n         * associated with it.\r\n         *\r\n         * @param {String} name\r\n         * @returns {Boolean}\r\n         */\r\n        regionHasElements: function (name) {\r\n            var region = this.getRegion(name);\r\n\r\n            return region().length > 0;\r\n        },\r\n\r\n        /**\r\n         * Replaces specified regions' data with a provided one.\r\n         * Creates region if it was not created yet.\r\n         *\r\n         * @param {Array} items - New regions' data.\r\n         * @param {String} name - Name of the region.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        updateRegion: function (items, name) {\r\n            this.getRegion(name)(items);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection along with its' elements.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.elems.each('destroy');\r\n        },\r\n\r\n        /**\r\n         * Inserts provided component into 'elems' array at a specified position.\r\n         * @private\r\n         *\r\n         * @param {Object} elem - Element to insert.\r\n         */\r\n        _insert: function (elem) {\r\n            var index = this._elems.indexOf(elem.name);\r\n\r\n            if (~index) {\r\n                this._elems[index] = elem;\r\n            }\r\n\r\n            this._updateCollection()\r\n                .initElement(elem);\r\n        },\r\n\r\n        /**\r\n         * Synchronizes multiple elements arrays with a core '_elems' container.\r\n         * Performs elemets grouping by theirs 'displayArea' property.\r\n         * @private\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        _updateCollection: function () {\r\n            var _elems = compact(this._elems),\r\n                grouped;\r\n\r\n            grouped = _elems.filter(function (elem) {\r\n                return elem.displayArea && _.isString(elem.displayArea);\r\n            });\r\n            grouped = _.groupBy(grouped, 'displayArea');\r\n\r\n            _.each(grouped, this.updateRegion, this);\r\n\r\n            _.each(this.regions, function (items) {\r\n                var hasObsoleteComponents = items().length && !_.intersection(_elems, items()).length;\r\n\r\n                if (hasObsoleteComponents) {\r\n                    items.removeAll();\r\n                }\r\n            });\r\n\r\n            this.elems(_elems);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Tries to call specified method of a current component,\r\n         * otherwise delegates attempt to its' children.\r\n         *\r\n         * @param {String} target - Name of the method.\r\n         * @param {...*} parameters - Arguments that will be passed to method.\r\n         * @returns {*} Result of the method calls.\r\n         */\r\n        delegate: function (target) {\r\n            var args = _.toArray(arguments);\r\n\r\n            target = this[target];\r\n\r\n            if (_.isFunction(target)) {\r\n                return target.apply(this, args.slice(1));\r\n            }\r\n\r\n            return this._delegate(args);\r\n        },\r\n\r\n        /**\r\n         * Calls 'delegate' method of all of it's children components.\r\n         * @private\r\n         *\r\n         * @param {Array} args - An array of arguments to pass to the next delegation call.\r\n         * @returns {Array} An array of delegation results.\r\n         */\r\n        _delegate: function (args) {\r\n            var result;\r\n\r\n            result = this.elems.map(function (elem) {\r\n                var target;\r\n\r\n                if (!_.isFunction(elem.delegate)) {\r\n                    target = elem[args[0]];\r\n\r\n                    if (_.isFunction(target)) {\r\n                        return target.apply(elem, args.slice(1));\r\n                    }\r\n                } else {\r\n                    return elem.delegate.apply(elem, args);\r\n                }\r\n            });\r\n\r\n            return _.flatten(result);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/core/storage/local.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiEvents'\r\n], function (_, registry, utils, EventsBus) {\r\n    'use strict';\r\n\r\n    var root = 'appData',\r\n        localStorage,\r\n        hasSupport,\r\n        storage;\r\n\r\n    /**\r\n     * Flag which indicates whether localStorage is supported.\r\n     */\r\n    hasSupport = (function () {\r\n        var key = '_storageSupported';\r\n\r\n        try {\r\n            localStorage = window.localStorage;\r\n            localStorage.setItem(key, 'true');\r\n\r\n            if (localStorage.getItem(key) === 'true') {\r\n                localStorage.removeItem(key);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    if (!hasSupport) {\r\n        localStorage = {\r\n            _data: {},\r\n\r\n            /**\r\n             * Sets value of the specified item.\r\n             *\r\n             * @param {String} key - Key of the property.\r\n             * @param {*} value - Properties' value.\r\n             */\r\n            setItem: function (key, value) {\r\n                this._data[key] = value + '';\r\n            },\r\n\r\n            /**\r\n             * Retrieves specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be retrieved.\r\n             */\r\n            getItem: function (key) {\r\n                return this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be removed.\r\n             */\r\n            removeItem: function (key) {\r\n                delete this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes all items.\r\n             */\r\n            clear: function () {\r\n                this._data = {};\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Extracts and parses data stored in localStorage by the\r\n     * key specified in 'root' variable.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function getRoot() {\r\n        var data = localStorage.getItem(root),\r\n            result = {};\r\n\r\n        if (!_.isNull(data) && typeof data != 'undefined') {\r\n            result = JSON.parse(data);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Writes provided data to the localStorage.\r\n     *\r\n     * @param {*} data - Data to be stored.\r\n     */\r\n    function setRoot(data) {\r\n        localStorage.setItem(root, JSON.stringify(data));\r\n    }\r\n\r\n    /**\r\n     * Provides methods to work with a localStorage\r\n     * as a single nested structure.\r\n     */\r\n    storage = _.extend({\r\n\r\n        /**\r\n         * Retrieves value of the specified property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         *\r\n         * @example Retrieving data.\r\n         *      localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"three\"}\r\n         *          '\r\n         *      storage.get('one.two')\r\n         *      => \"three\"\r\n         *\r\n         *      storage.get('one')\r\n         *      => {\"two\": \"three\"}\r\n         */\r\n        get: function (path) {\r\n            var data = getRoot();\r\n\r\n            return utils.nested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Sets specified data to the localStorage.\r\n         *\r\n         * @param {String} path - Path of the property.\r\n         * @param {*} value - Value of the property.\r\n         *\r\n         * @example Setting data.\r\n         *      storage.set('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"four\"}\r\n         *          '\r\n         */\r\n        set: function (path, value) {\r\n            var data = getRoot();\r\n\r\n            utils.nested(data, path, value);\r\n\r\n            setRoot(data);\r\n        },\r\n\r\n        /**\r\n         * Removes specified data from the localStorage.\r\n         *\r\n         * @param {String} path - Path to the property that should be removed.\r\n         *\r\n         * @example Removing data.\r\n         *      storage.remove('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {}\r\n         *          '\r\n         */\r\n        remove: function (path) {\r\n            var data = getRoot();\r\n\r\n            utils.nestedRemove(data, path);\r\n\r\n            setRoot(data);\r\n        }\r\n    }, EventsBus);\r\n\r\n    registry.set('localStorage', storage);\r\n\r\n    return storage;\r\n});\r\n","Magento_Ui/js/lib/core/element/element.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiEvents',\r\n    'uiClass',\r\n    './links',\r\n    '../storage/local'\r\n], function (ko, _, utils, registry, Events, Class, links) {\r\n    'use strict';\r\n\r\n    var Element;\r\n\r\n    /**\r\n     * Creates observable property using knockouts'\r\n     * 'observableArray' or 'observable' methods,\r\n     * depending on a type of 'value' parameter.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function observable(obj, key, value) {\r\n        var method = Array.isArray(value) ? 'observableArray' : 'observable';\r\n\r\n        if (_.isFunction(obj[key]) && !ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        if (ko.isObservable(value)) {\r\n            value = value();\r\n        }\r\n\r\n        ko.isObservable(obj[key]) ?\r\n            obj[key](value) :\r\n            obj[key] = ko[method](value);\r\n    }\r\n\r\n    /**\r\n     * Creates observable property using 'track' method.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function accessor(obj, key, value) {\r\n        if (_.isFunction(obj[key]) || ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        obj[key] = value;\r\n\r\n        if (!ko.es5.isTracked(obj, key)) {\r\n            ko.track(obj, [key]);\r\n        }\r\n    }\r\n\r\n    Element = _.extend({\r\n        defaults: {\r\n            _requested: {},\r\n            containers: [],\r\n            exports: {},\r\n            imports: {},\r\n            links: {},\r\n            listens: {},\r\n            name: '',\r\n            ns: '${ $.name.split(\".\")[0] }',\r\n            provider: '',\r\n            registerNodes: true,\r\n            source: null,\r\n            statefull: {},\r\n            template: '',\r\n            tracks: {},\r\n            storageConfig: {\r\n                provider: 'localStorage',\r\n                namespace: '${ $.name }',\r\n                path: '${ $.storageConfig.provider }:${ $.storageConfig.namespace }'\r\n            },\r\n            maps: {\r\n                imports: {},\r\n                exports: {}\r\n            },\r\n            modules: {\r\n                storage: '${ $.storageConfig.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes model instance.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable()\r\n                .initModules()\r\n                .initStatefull()\r\n                .initLinks()\r\n                .initUnique();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            _.each(this.tracks, function (enabled, key) {\r\n                if (enabled) {\r\n                    this.track(key);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Parses 'modules' object and creates\r\n         * async wrappers for specified components.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initModules: function () {\r\n            _.each(this.modules, function (name, property) {\r\n                if (name) {\r\n                    this[property] = this.requestModule(name);\r\n                }\r\n            }, this);\r\n\r\n            if (!_.isFunction(this.source)) {\r\n                this.source = registry.get(this.provider);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when current element was injected to another component.\r\n         *\r\n         * @param {Object} parent - Instance of a 'parent' component.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initContainer: function (parent) {\r\n            this.containers.push(parent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes statefull properties\r\n         * based on the keys of 'statefull' object.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initStatefull: function () {\r\n            _.each(this.statefull, function (path, key) {\r\n                if (path) {\r\n                    this.setStatefull(key, path);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes links between properties.\r\n         *\r\n         * @returns {Element} Chainbale.\r\n         */\r\n        initLinks: function () {\r\n            return this.setListeners(this.listens)\r\n                       .setLinks(this.links, 'imports')\r\n                       .setLinks(this.links, 'exports')\r\n                       .setLinks(this.exports, 'exports')\r\n                       .setLinks(this.imports, 'imports');\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners of the unique property.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initUnique: function () {\r\n            var update = this.onUniqueUpdate.bind(this),\r\n                uniqueNs = this.uniqueNs;\r\n\r\n            this.hasUnique = this.uniqueProp && uniqueNs;\r\n\r\n            if (this.hasUnique) {\r\n                this.source.on(uniqueNs, update, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Makes specified property to be stored automatically.\r\n         *\r\n         * @param {String} key - Name of the property\r\n         *      that will be stored.\r\n         * @param {String} [path=key] - Path to the property in storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setStatefull: function (key, path) {\r\n            var link = {};\r\n\r\n            path        = !_.isString(path) || !path ? key : path;\r\n            link[key]   = this.storageConfig.path + '.' + path;\r\n\r\n            this.setLinks(link, 'imports')\r\n                .setLinks(link, 'exports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates property specified in uniqueNs\r\n         * if elements' unique property is set to 'true'.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setUnique: function () {\r\n            var property = this.uniqueProp;\r\n\r\n            if (this[property]()) {\r\n                this.source.set(this.uniqueNs, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified component\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} name - Name of requested component.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestModule: function (name) {\r\n            var requested = this._requested;\r\n\r\n            if (!requested[name]) {\r\n                requested[name] = registry.async(name);\r\n            }\r\n\r\n            return requested[name];\r\n        },\r\n\r\n        /**\r\n         * Returns path to elements' template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTemplate: function () {\r\n            return this.template;\r\n        },\r\n\r\n        /**\r\n         * Checks if template was specified for an element.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasTemplate: function () {\r\n            return !!this.template;\r\n        },\r\n\r\n        /**\r\n         * Returns value of the nested property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {*} Value of the property.\r\n         */\r\n        get: function (path) {\r\n            return utils.nested(this, path);\r\n        },\r\n\r\n        /**\r\n         * Sets provided value as a value of the specified nested property.\r\n         * Triggers changes notifications, if value has mutated.\r\n         *\r\n         * @param {String} path - Path to property.\r\n         * @param {*} value - New value of the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        set: function (path, value) {\r\n            var data = this.get(path),\r\n                diffs;\r\n\r\n            diffs = !_.isFunction(data) && !this.isTracked(path) ?\r\n                utils.compare(data, value, path) :\r\n                false;\r\n\r\n            utils.nested(this, path, value);\r\n\r\n            if (diffs) {\r\n                this._notifyChanges(diffs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from the object.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        remove: function (path) {\r\n            var data = utils.nested(this, path),\r\n                diffs;\r\n\r\n            if (_.isUndefined(data) || _.isFunction(data)) {\r\n                return this;\r\n            }\r\n\r\n            diffs = utils.compare(data, undefined, path);\r\n\r\n            utils.nestedRemove(this, path);\r\n\r\n            this._notifyChanges(diffs);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates observable properties for the current object.\r\n         *\r\n         * If 'useTrack' flag is set to 'true' then each property will be\r\n         * created with a ES5 get/set accessor descriptors, instead of\r\n         * making them an observable functions.\r\n         * See 'knockout-es5' library for more information.\r\n         *\r\n         * @param {Boolean} [useAccessors=false] - Whether to create an\r\n         *      observable function or to use property accesessors.\r\n         * @param {(Object|String|Array)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         *\r\n         * @example Sample declaration and equivalent knockout methods.\r\n         *      this.key = 'value';\r\n         *      this.array = ['value'];\r\n         *\r\n         *      this.observe(['key', 'array']);\r\n         *      =>\r\n         *          this.key = ko.observable('value');\r\n         *          this.array = ko.observableArray(['value']);\r\n         *\r\n         * @example Another syntaxes of the previous example.\r\n         *      this.observe({\r\n         *          key: 'value',\r\n         *          array: ['value']\r\n         *      });\r\n         */\r\n        observe: function (useAccessors, properties) {\r\n            var model = this,\r\n                trackMethod;\r\n\r\n            if (typeof useAccessors !== 'boolean') {\r\n                properties   = useAccessors;\r\n                useAccessors = false;\r\n            }\r\n\r\n            trackMethod = useAccessors ? accessor : observable;\r\n\r\n            if (_.isString(properties)) {\r\n                properties = properties.split(' ');\r\n            }\r\n\r\n            if (Array.isArray(properties)) {\r\n                properties.forEach(function (key) {\r\n                    trackMethod(model, key, model[key]);\r\n                });\r\n            } else if (typeof properties === 'object') {\r\n                _.each(properties, function (value, key) {\r\n                    trackMethod(model, key, value);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates call to 'observe' method but\r\n         * with a predefined 'useAccessors' flag.\r\n         *\r\n         * @param {(String|Array|Object)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        track: function (properties) {\r\n            this.observe(true, properties);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified property is tracked.\r\n         *\r\n         * @param {String} property - Property to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isTracked: function (property) {\r\n            return ko.es5.isTracked(this, property);\r\n        },\r\n\r\n        /**\r\n         * Invokes subscribers for the provided changes.\r\n         *\r\n         * @param {Object} diffs - Object with changes descriptions.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _notifyChanges: function (diffs) {\r\n            diffs.changes.forEach(function (change) {\r\n                this.trigger(change.path, change.value, change);\r\n            }, this);\r\n\r\n            _.each(diffs.containers, function (changes, name) {\r\n                var value = utils.nested(this, name);\r\n\r\n                this.trigger(name, value, changes);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts all stored data and sets it to element.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        restore: function () {\r\n            var ns = this.storageConfig.namespace,\r\n                storage = this.storage();\r\n\r\n            if (storage) {\r\n                utils.extend(this, storage.get(ns));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Stores value of the specified property in components' storage module.\r\n         *\r\n         * @param {String} property\r\n         * @param {*} [data=this[property]]\r\n         * @returns {Element} Chainable.\r\n         */\r\n        store: function (property, data) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            if (arguments.length < 2) {\r\n                data = this.get(property);\r\n            }\r\n\r\n            this.storage('set', path, data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts specified property from storage.\r\n         *\r\n         * @param {String} [property] - Name of the property\r\n         *      to be extracted. If not specified then all of the\r\n         *      stored will be returned.\r\n         * @returns {*}\r\n         */\r\n        getStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property),\r\n                storage = this.storage(),\r\n                data;\r\n\r\n            if (storage) {\r\n                data = storage.get(path);\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Removes stored property.\r\n         *\r\n         * @param {String} property - Property to be removed from storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        removeStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            this.storage('remove', path);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         */\r\n        destroy: function (skipUpdate) {\r\n            this._dropHandlers()\r\n                ._clearRefs(skipUpdate);\r\n        },\r\n\r\n        /**\r\n         * Removes events listeners.\r\n         * @private\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _dropHandlers: function () {\r\n            this.off();\r\n\r\n            if (_.isFunction(this.source)) {\r\n                this.source().off(this.name);\r\n            } else if (this.source) {\r\n                this.source.off(this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes all references to current instance and\r\n         * calls 'destroy' method on all of its' children.\r\n         * @private\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _clearRefs: function (skipUpdate) {\r\n            registry.remove(this.name);\r\n\r\n            this.containers.forEach(function (parent) {\r\n                parent.removeChild(this, skipUpdate);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides 'EventsBus.trigger' method to implement events bubbling.\r\n         *\r\n         * @param {...*} arguments - Any number of arguments that should be passed to the events' handler.\r\n         * @returns {Boolean} False if event bubbling was canceled.\r\n         */\r\n        bubble: function () {\r\n            var args = _.toArray(arguments),\r\n                bubble = this.trigger.apply(this, args),\r\n                result;\r\n\r\n            if (!bubble) {\r\n                return false;\r\n            }\r\n\r\n            this.containers.forEach(function (parent) {\r\n                result = parent.bubble.apply(parent, args);\r\n\r\n                if (result === false) {\r\n                    bubble = false;\r\n                }\r\n            });\r\n\r\n            return !!bubble;\r\n        },\r\n\r\n        /**\r\n         * Callback which fires when property under uniqueNs has changed.\r\n         */\r\n        onUniqueUpdate: function (name) {\r\n            var active = name === this.name,\r\n                property = this.uniqueProp;\r\n\r\n            this[property](active);\r\n        },\r\n\r\n        /**\r\n         * Clean data form data source.\r\n         *\r\n         * @returns {Element}\r\n         */\r\n        cleanData: function () {\r\n            if (this.source && this.source.componentType === 'dataSource') {\r\n                if (this.elems) {\r\n                    _.each(this.elems(), function (val) {\r\n                        val.cleanData();\r\n                    });\r\n                } else {\r\n                    this.source.remove(this.dataScope);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Fallback data.\r\n         */\r\n        cacheData: function () {\r\n            this.cachedComponent = utils.copy(this);\r\n        },\r\n\r\n        /**\r\n         * Update configuration in component.\r\n         *\r\n         * @param {*} oldValue\r\n         * @param {*} newValue\r\n         * @param {String} path - path to value.\r\n         * @returns {Element}\r\n         */\r\n        updateConfig: function (oldValue, newValue, path) {\r\n            var names = path.split('.'),\r\n                index = _.lastIndexOf(names, 'config') + 1;\r\n\r\n            names = names.splice(index, names.length - index).join('.');\r\n            this.set(names, newValue);\r\n\r\n            return this;\r\n        }\r\n    }, Events, links);\r\n\r\n    return Class.extend(Element);\r\n});\r\n","Magento_Ui/js/lib/core/element/links.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry'\r\n], function (ko, _, utils, registry) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse provided data.\r\n     *\r\n     * @param {String} placeholder\r\n     * @param {String} data\r\n     * @param {String} direction\r\n     * @returns {Boolean|Object}\r\n     */\r\n    function parseData(placeholder, data, direction) {\r\n        if (typeof data !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        data = data.split(':');\r\n\r\n        if (!data[0]) {\r\n            return false;\r\n        }\r\n\r\n        if (!data[1]) {\r\n            data[1] = data[0];\r\n            data[0] = placeholder;\r\n        }\r\n\r\n        return {\r\n            target: data[0],\r\n            property: data[1],\r\n            direction: direction\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if value not empty.\r\n     *\r\n     * @param {*} value\r\n     * @returns {Boolean}\r\n     */\r\n    function notEmpty(value) {\r\n        return typeof value !== 'undefined' && value != null;\r\n    }\r\n\r\n    /**\r\n     * Update value for linked component.\r\n     *\r\n     * @param {Object} data\r\n     * @param {Object} owner\r\n     * @param {Object} target\r\n     * @param {*} value\r\n     */\r\n    function updateValue(data, owner, target, value) {\r\n        var component = target.component,\r\n            property = target.property,\r\n            linked = data.linked;\r\n\r\n        if (data.mute) {\r\n            return;\r\n        }\r\n\r\n        if (linked) {\r\n            linked.mute = true;\r\n        }\r\n\r\n        if (owner.component !== target.component) {\r\n            value = data.inversionValue ? !utils.copy(value) : utils.copy(value);\r\n        }\r\n\r\n        component.set(property, value, owner);\r\n\r\n        if (linked) {\r\n            linked.mute = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get value form owner component property.\r\n     *\r\n     * @param {Object} owner\r\n     * @returns {*}\r\n     */\r\n    function getValue(owner) {\r\n        var component = owner.component,\r\n            property = owner.property;\r\n\r\n        return component.get(property);\r\n    }\r\n\r\n    /**\r\n     * Format provided params to object.\r\n     *\r\n     * @param {String} ownerComponent\r\n     * @param {String} targetComponent\r\n     * @param {String} ownerProp\r\n     * @param {String} targetProp\r\n     * @param {String} direction\r\n     * @returns {Object}\r\n     */\r\n    function form(ownerComponent, targetComponent, ownerProp, targetProp, direction) {\r\n        var result,\r\n            tmp;\r\n\r\n        result = {\r\n            owner: {\r\n                component: ownerComponent,\r\n                property: ownerProp\r\n            },\r\n            target: {\r\n                component: targetComponent,\r\n                property: targetProp\r\n            }\r\n        };\r\n\r\n        if (direction === 'exports') {\r\n            tmp = result.owner;\r\n            result.owner = result.target;\r\n            result.target = tmp;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Set data to linked property.\r\n     *\r\n     * @param {Object} map\r\n     * @param {Object} data\r\n     */\r\n    function setLinked(map, data) {\r\n        var match;\r\n\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        match = _.findWhere(map, {\r\n            linked: false,\r\n            target: data.target,\r\n            property: data.property\r\n        });\r\n\r\n        if (match) {\r\n            match.linked = data;\r\n            data.linked = match;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set data by direction.\r\n     *\r\n     * @param {Object} maps\r\n     * @param {String} property\r\n     * @param {Object} data\r\n     */\r\n    function setData(maps, property, data) {\r\n        var direction   = data.direction,\r\n            map         = maps[direction];\r\n\r\n        data.linked = false;\r\n\r\n        (map[property] = map[property] || []).push(data);\r\n\r\n        direction = direction === 'imports' ? 'exports' : 'imports';\r\n\r\n        setLinked(maps[direction][property], data);\r\n    }\r\n\r\n    /**\r\n     * Set links for components.\r\n     *\r\n     * @param {String} target\r\n     * @param {String} owner\r\n     * @param {Object} data\r\n     * @param {String} property\r\n     * @param {Boolean} immediate\r\n     */\r\n    function setLink(target, owner, data, property, immediate) {\r\n        var direction = data.direction,\r\n            formated = form(target, owner, data.property, property, direction),\r\n            callback,\r\n            value;\r\n\r\n        owner = formated.owner;\r\n        target = formated.target;\r\n\r\n        callback = updateValue.bind(null, data, owner, target);\r\n\r\n        owner.component.on(owner.property, callback, target.component.name);\r\n\r\n        if (immediate) {\r\n            value = getValue(owner);\r\n\r\n            if (notEmpty(value)) {\r\n                updateValue(data, owner, target, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transfer data between components.\r\n     *\r\n     * @param {Object} owner\r\n     * @param {Object} data\r\n     */\r\n    function transfer(owner, data) {\r\n        var args = _.toArray(arguments);\r\n\r\n        if (data.target.substr(0, 1) === '!') {\r\n            data.target = data.target.substr(1);\r\n            data.inversionValue = true;\r\n        }\r\n\r\n        if (owner.name === data.target) {\r\n            args.unshift(owner);\r\n\r\n            setLink.apply(null, args);\r\n        } else {\r\n            registry.get(data.target, function (target) {\r\n                args.unshift(target);\r\n\r\n                setLink.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Assign listeners.\r\n         *\r\n         * @param {Object} listeners\r\n         * @returns {Object} Chainable\r\n         */\r\n        setListeners: function (listeners) {\r\n            var owner = this,\r\n                data;\r\n\r\n            _.each(listeners, function (callbacks, sources) {\r\n                sources = sources.split(' ');\r\n                callbacks = callbacks.split(' ');\r\n\r\n                sources.forEach(function (target) {\r\n                    callbacks.forEach(function (callback) {//eslint-disable-line max-nested-callbacks\r\n                        data = parseData(owner.name, target, 'imports');\r\n\r\n                        if (data) {\r\n                            setData(owner.maps, callback, data);\r\n                            transfer(owner, data, callback);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set links in provided direction.\r\n         *\r\n         * @param {Object} links\r\n         * @param {String} direction\r\n         * @returns {Object} Chainable\r\n         */\r\n        setLinks: function (links, direction) {\r\n            var owner = this,\r\n                property,\r\n                data;\r\n\r\n            for (property in links) {\r\n                if (links.hasOwnProperty(property)) {\r\n                    data = parseData(owner.name, links[property], direction);\r\n\r\n                    if (data) {//eslint-disable-line max-depth\r\n                        setData(owner.maps, property, data);\r\n                        transfer(owner, data, property, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Loads all available knockout bindings, sets custom template engine, initializes knockout on page */\r\n\r\ndefine([\r\n    'ko',\r\n    './template/engine',\r\n    'knockoutjs/knockout-es5',\r\n    './bindings/bootstrap',\r\n    './extender/observable_array',\r\n    './extender/bound-nodes',\r\n    'domReady!'\r\n], function (ko, templateEngine) {\r\n    'use strict';\r\n\r\n    ko.uid = 0;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n    ko.applyBindings();\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/bound-nodes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/utils/wrapper',\r\n    'uiEvents'\r\n], function (ko, _, wrapper, Events) {\r\n    'use strict';\r\n\r\n    var nodesMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns a array of nodes associated with a specified model.\r\n     *\r\n     * @param {Object} model\r\n     * @returns {Undefined|Array}\r\n     */\r\n    function getBounded(model) {\r\n        return nodesMap.get(model);\r\n    }\r\n\r\n    /**\r\n     * Removes specified node to models' associations list, if it's\r\n     * a root node (node is not a descendant of any previously added nodes).\r\n     * Triggers 'addNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function addBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            isRoot;\r\n\r\n        if (!nodes) {\r\n            nodesMap.set(model, [node]);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n\r\n            return;\r\n        }\r\n\r\n        isRoot = nodes.every(function (bounded) {\r\n            return !bounded.contains(node);\r\n        });\r\n\r\n        if (isRoot) {\r\n            nodes.push(node);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes specified node from models' associations list.\r\n     * Triggers 'removeNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            index;\r\n\r\n        if (!nodes) {\r\n            return;\r\n        }\r\n\r\n        index = nodes.indexOf(node);\r\n\r\n        if (~index) {\r\n            nodes.splice(index, 0);\r\n\r\n            Events.trigger.call(model, 'removeNode', node);\r\n        }\r\n\r\n        if (!nodes.length) {\r\n            nodesMap.delete(model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns node's first sibling of 'element' type within the common component scope\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {*} data\r\n     * @returns {HTMLElement}\r\n     */\r\n    function getElement(node, data) {\r\n        var elem;\r\n\r\n        while (node.nextElementSibling) {\r\n            node = node.nextElementSibling;\r\n\r\n            if (node.nodeType === 1 && ko.dataFor(node) === data) {\r\n                elem = node;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    wrapper.extend(ko, {\r\n\r\n        /**\r\n         * Extends knockouts' 'applyBindings'\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'applyBindings' method.\r\n         * @param {Object} ctx\r\n         * @param {HTMLElement} node - Original 'applyBindings' method.\r\n         */\r\n        applyBindings: function (orig, ctx, node) {\r\n            var result = orig(),\r\n                data = ctx && (ctx.$data || ctx);\r\n\r\n            if (node && node.nodeType === 8) {\r\n                node = getElement(node, data);\r\n            }\r\n\r\n            if (!node || node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            if (data && data.registerNodes) {\r\n                addBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Extends knockouts' cleanNode\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'cleanNode' method.\r\n         * @param {HTMLElement} node - Original 'cleanNode' method.\r\n         */\r\n        cleanNode: function (orig, node) {\r\n            var result = orig(),\r\n                data;\r\n\r\n            if (node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            data = ko.dataFor(node);\r\n\r\n            if (data && data.registerNodes) {\r\n                removeBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return {\r\n\r\n        /**\r\n         * Returns root nodes associated with a model. If callback is provided,\r\n         * will iterate through all of the present nodes triggering callback\r\n         * for each of it. Also it will subscribe to the 'addNode' event.\r\n         *\r\n         * @param {Object} model\r\n         * @param {Function} [callback]\r\n         * @returns {Array|Undefined}\r\n         */\r\n        get: function (model, callback) {\r\n            var nodes = getBounded(model) || [];\r\n\r\n            if (!_.isFunction(callback)) {\r\n                return nodes;\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                callback(node);\r\n            });\r\n\r\n            this.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to adding of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        add: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('addNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to removal of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        remove: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('removeNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Removes subscriptions from the model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        off: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            Events.off.apply(model, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/observable_array.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Iterator function.\r\n     *\r\n     * @param {String} callback\r\n     * @param {Array} args\r\n     * @param {Object} elem\r\n     * @returns {*}\r\n     */\r\n    function iterator(callback, args, elem) {\r\n        callback = elem[callback];\r\n\r\n        if (_.isFunction(callback)) {\r\n            return callback.apply(elem, args);\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function.\r\n     *\r\n     * @param {String} method\r\n     * @returns {Function}\r\n     */\r\n    function wrapper(method) {\r\n        return function (iteratee) {\r\n            var callback = iteratee,\r\n                elems = this(),\r\n                args = _.toArray(arguments);\r\n\r\n            if (_.isString(iteratee)) {\r\n                callback = iterator.bind(null, iteratee, args.slice(1));\r\n\r\n                args.unshift(callback);\r\n            }\r\n\r\n            args.unshift(elems);\r\n\r\n            return _[method].apply(_, args);\r\n        };\r\n    }\r\n\r\n    _.extend(ko.observableArray.fn, {\r\n        each: wrapper('each'),\r\n\r\n        map: wrapper('map'),\r\n\r\n        filter: wrapper('filter'),\r\n\r\n        some: wrapper('some'),\r\n\r\n        every: wrapper('every'),\r\n\r\n        groupBy: wrapper('groupBy'),\r\n\r\n        sortBy: wrapper('sortBy'),\r\n\r\n        /**\r\n         * Wrapper for underscore findWhere function.\r\n         *\r\n         * @param {Object} properties\r\n         * @return {Object}\r\n         */\r\n        findWhere: function (properties) {\r\n            return _.findWhere(this(), properties);\r\n        },\r\n\r\n        /**\r\n         * Wrapper for underscore contains function.\r\n         *\r\n         * @param {*} value\r\n         * @return {Boolean}\r\n         */\r\n        contains: function (value) {\r\n            return _.contains(this(), value);\r\n        },\r\n\r\n        /**\r\n         * Inverse contains call.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasNo: function () {\r\n            return !this.contains.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Getter for length property.\r\n         *\r\n         * @return {Number}\r\n         */\r\n        getLength: function () {\r\n            return this().length;\r\n        },\r\n\r\n        /**\r\n         * Create object with keys that gets from each object property.\r\n         *\r\n         * @return {Object}\r\n         */\r\n        indexBy: function (key) {\r\n            return _.indexBy(this(), key);\r\n        },\r\n\r\n        /**\r\n         * Returns a copy of the array with all instances of the values removed.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        without: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.without.apply(_, args);\r\n        },\r\n\r\n        /**\r\n         * Returns the first element of an array.\r\n         *\r\n         * @return {*}\r\n         */\r\n        first: function () {\r\n            return _.first(this());\r\n        },\r\n\r\n        /**\r\n         * Returns the last element of an array\r\n         *\r\n         * @return {*}\r\n         */\r\n        last: function () {\r\n            return _.last(this());\r\n        },\r\n\r\n        /**\r\n         * Iterate and pick provided properties.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        pluck: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.pluck.apply(_, args);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './loader'\r\n], function ($, _, loader) {\r\n    'use strict';\r\n\r\n    var colonReg       = /\\\\:/g,\r\n        renderedTemplatePromises = {},\r\n        attributes     = {},\r\n        elements       = {},\r\n        globals        = [],\r\n        renderer,\r\n        preset;\r\n\r\n    renderer = {\r\n\r\n        /**\r\n         * Loads template by provided path and\r\n         * than converts it's content to html.\r\n         *\r\n         * @param {String} tmplPath - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         * @alias getRendered\r\n         */\r\n        render: function (tmplPath) {\r\n            var cachedPromise = renderedTemplatePromises[tmplPath];\r\n\r\n            if (!cachedPromise) {\r\n                cachedPromise = renderedTemplatePromises[tmplPath] = loader\r\n                    .loadTemplate(tmplPath)\r\n                    .then(renderer.parseTemplate);\r\n            }\r\n\r\n            return cachedPromise;\r\n        },\r\n\r\n        /**\r\n         * @ignore\r\n         */\r\n        getRendered: function (tmplPath) {\r\n            return renderer.render(tmplPath);\r\n        },\r\n\r\n        /**\r\n         * Parses provided string as html content\r\n         * and returns an array of DOM elements.\r\n         *\r\n         * @param {String} html - String to be processed.\r\n         * @returns {Array}\r\n         */\r\n        parseTemplate: function (html) {\r\n            var fragment = document.createDocumentFragment();\r\n\r\n            $(fragment).append(html);\r\n\r\n            return renderer.normalize(fragment);\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes and nodes of provided DOM element.\r\n         *\r\n         * @param {HTMLElement} content - Element to be processed.\r\n         * @returns {Array} An array of content's child nodes.\r\n         */\r\n        normalize: function (content) {\r\n            globals.forEach(function (handler) {\r\n                handler(content);\r\n            });\r\n\r\n            return _.toArray(content.childNodes);\r\n        },\r\n\r\n        /**\r\n         * Adds new global content handler.\r\n         *\r\n         * @param {Function} handler - Function which will be invoked for\r\n         *      an every content passed to 'normalize' method.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addGlobal: function (handler) {\r\n            if (!_.contains(globals, handler)) {\r\n                globals.push(handler);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified global content handler.\r\n         *\r\n         * @param {Function} handler - Handler to be removed.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeGlobal: function (handler) {\r\n            var index = globals.indexOf(handler);\r\n\r\n            if (~index) {\r\n                globals.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addAttribute: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.attribute\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            attributes[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeAttribute: function (id) {\r\n            delete attributes[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addNode: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.node\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            elements[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeNode: function (id) {\r\n            delete elements[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided DOM element is a custom node.\r\n         *\r\n         * @param {HTMLElement} node - Node to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomNode: function (node) {\r\n            return _.some(elements, function (elem) {\r\n                return elem.name.toUpperCase() === node.tagName;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes of a content's child nodes.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processAttributes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(attributes, function (attr) {\r\n                var attrName = attr.name,\r\n                    nodes    = content.querySelectorAll('[' + attrName + ']'),\r\n                    handler  = attr.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute(attrName);\r\n\r\n                    return handler(node, data, attr) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processAttributes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processes custom nodes of a provided content.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processNodes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(elements, function (element) {\r\n                var nodes   = content.querySelectorAll(element.name),\r\n                    handler = element.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute('args');\r\n\r\n                    return handler(node, data, element) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processNodes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wraps provided string in curly braces if it's necessary.\r\n         *\r\n         * @param {String} args - String to be wrapped.\r\n         * @returns {String} Wrapped string.\r\n         */\r\n        wrapArgs: function (args) {\r\n            if (~args.indexOf('\\\\:')) {\r\n                args = args.replace(colonReg, ':');\r\n            } else if (~args.indexOf(':') && !~args.indexOf('}')) {\r\n                args = '{' + args + '}';\r\n            }\r\n\r\n            return args;\r\n        },\r\n\r\n        /**\r\n         * Wraps child nodes of provided DOM element\r\n         * with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node whose children should be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"><span/></div>\r\n         *      wrapChildren(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <div id=\"example\">\r\n         *      <!-- ko foreach: data -->\r\n         *          <span></span>\r\n         *      <!-- /ko -->\r\n         *      </div>\r\n         */\r\n        wrapChildren: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.prepend(tag.open);\r\n            $node.append(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Wraps specified node with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"></div>\r\n         *      wrapNode(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div id=\"example\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapNode: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.before(tag.open);\r\n            $node.after(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Creates knockouts' comment tag for the provided binding.\r\n         *\r\n         * @param {String} binding - Name of the binding.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @returns {Object} Object with an open and close comment elements.\r\n         */\r\n        createComment: function (binding, data) {\r\n            return {\r\n                open: document.createComment(' ko ' + binding + ': ' + data + ' '),\r\n                close: document.createComment(' /ko ')\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.handlers = {\r\n\r\n        /**\r\n         * Basic node handler. Replaces custom nodes\r\n         * with a corresponding knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data\r\n         * @param {Object} element\r\n         * @returns {Boolean} True\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <with args=\"model\">\r\n         *          <span/>\r\n         *      </with>\r\n         *      =>\r\n         *      <!-- ko with: model-->\r\n         *          <span/>\r\n         *      <!-- /ko -->\r\n         */\r\n        node: function (node, data, element) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, element.binding, data);\r\n            $(node).replaceWith(node.childNodes);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Base attribute handler. Replaces custom attributes with\r\n         * a corresponding knockouts' data binding.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <div text=\"label\"></div>\r\n         *      =>\r\n         *      <div data-bind=\"text: label\"></div>\r\n         */\r\n        attribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.bindings.add(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        },\r\n\r\n        /**\r\n         * Wraps provided node with a knockouts' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node that will be wrapped.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example\r\n         *      <div outereach=\"data\" class=\"test\"></div>\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div class=\"test\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapAttribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        }\r\n    };\r\n\r\n    renderer.bindings = {\r\n\r\n        /**\r\n         * Appends binding string to the current\r\n         * 'data-bind' attribute of provided node.\r\n         *\r\n         * @param {HTMLElement} node - DOM element whose 'data-bind' attribute will be extended.\r\n         * @param {String} name - Name of a binding.\r\n         * @param {String} data - Data associated with the binding.\r\n         */\r\n        add: function (node, name, data) {\r\n            var bindings = this.get(node);\r\n\r\n            if (bindings) {\r\n                bindings += ', ';\r\n            }\r\n\r\n            bindings += name;\r\n\r\n            if (data) {\r\n                bindings += ': ' + data;\r\n            }\r\n\r\n            this.set(node, bindings);\r\n        },\r\n\r\n        /**\r\n         * Extracts value of a 'data-bind' attribute from provided node.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute to be extracted.\r\n         * @returns {String}\r\n         */\r\n        get: function (node) {\r\n            return node.getAttribute('data-bind') || '';\r\n        },\r\n\r\n        /**\r\n         * Sets 'data-bind' attribute of the specified node\r\n         * to the provided value.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute will be altered.\r\n         * @param {String} bindings - New value of 'data-bind' attribute.\r\n         */\r\n        set: function (node, bindings) {\r\n            node.setAttribute('data-bind', bindings);\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addGlobal(renderer.processAttributes)\r\n        .addGlobal(renderer.processNodes);\r\n\r\n    /**\r\n     * Collection of default binding conversions.\r\n     */\r\n    preset = {\r\n        nodes: _.object([\r\n            'if',\r\n            'text',\r\n            'with',\r\n            'scope',\r\n            'ifnot',\r\n            'foreach',\r\n            'component'\r\n        ], Array.prototype),\r\n        attributes: _.object([\r\n            'css',\r\n            'attr',\r\n            'html',\r\n            'with',\r\n            'text',\r\n            'click',\r\n            'event',\r\n            'submit',\r\n            'enable',\r\n            'disable',\r\n            'options',\r\n            'visible',\r\n            'template',\r\n            'hasFocus',\r\n            'textInput',\r\n            'component',\r\n            'uniqueName',\r\n            'optionsText',\r\n            'optionsValue',\r\n            'checkedValue',\r\n            'selectedOptions'\r\n        ], Array.prototype)\r\n    };\r\n\r\n    _.extend(preset.attributes, {\r\n        if: renderer.handlers.wrapAttribute,\r\n        ifnot: renderer.handlers.wrapAttribute,\r\n        innerif: {\r\n            binding: 'if'\r\n        },\r\n        innerifnot: {\r\n            binding: 'ifnot'\r\n        },\r\n        outereach: {\r\n            binding: 'foreach',\r\n            handler: renderer.handlers.wrapAttribute\r\n        },\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n        value: {\r\n            name: 'ko-value'\r\n        },\r\n        style: {\r\n            name: 'ko-style'\r\n        },\r\n        checked: {\r\n            name: 'ko-checked'\r\n        },\r\n        disabled: {\r\n            name: 'ko-disabled',\r\n            binding: 'disable'\r\n        },\r\n        focused: {\r\n            name: 'ko-focused',\r\n            binding: 'hasFocus'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' attribute handler function. Wraps child elements\r\n         * of a node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'render' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapChildren(node, 'template', data);\r\n            node.removeAttribute('render');\r\n        }\r\n    });\r\n\r\n    _.extend(preset.nodes, {\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' node handler function.\r\n         * Replaces node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'args' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, 'template', data);\r\n            $(node).replaceWith(node.childNodes);\r\n        }\r\n    });\r\n\r\n    _.each(preset.attributes, function (data, id) {\r\n        renderer.addAttribute(id, data);\r\n    });\r\n\r\n    _.each(preset.nodes, function (data, id) {\r\n        renderer.addNode(id, data);\r\n    });\r\n\r\n    return renderer;\r\n});\r\n","Magento_Ui/js/lib/knockout/template/loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var licenseRegExp   = /<!--[\\s\\S]*?-->/,\r\n        defaultPlugin   = 'text',\r\n        defaultExt      = 'html';\r\n\r\n    /**\r\n     * Checks of provided string contains a file extension.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasFileExtension(str) {\r\n        return !!~str.indexOf('.') && !!str.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string contains a requirejs's plugin reference.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPlugin(str) {\r\n        return !!~str.indexOf('!');\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string is a full path to the file.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isFullPath(str) {\r\n        return !!~str.indexOf('://');\r\n    }\r\n\r\n    /**\r\n     * Removes license comment from the provided string.\r\n     *\r\n     * @param {String} content - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function removeLicense(content) {\r\n        return content.replace(licenseRegExp, function (match) {\r\n            return ~match.indexOf('/**') ? '' : match;\r\n        });\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to extract template by provided path from\r\n         * a DOM element and falls back to a file loading if\r\n         * none of the DOM nodes was found.\r\n         *\r\n         * @param {String} path - Path to the template or a DOM selector.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadTemplate: function (path) {\r\n            var content = this.loadFromNode(path),\r\n                defer;\r\n\r\n            if (content) {\r\n                defer = $.Deferred();\r\n\r\n                defer.resolve(content);\r\n\r\n                return defer.promise();\r\n            }\r\n\r\n            return this.loadFromFile(path);\r\n        },\r\n\r\n        /**\r\n         * Loads template from external file by provided\r\n         * path, which will be preliminary formatted.\r\n         *\r\n         * @param {String} path - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadFromFile: function (path) {\r\n            var loading = $.Deferred();\r\n\r\n            path = this.formatPath(path);\r\n\r\n            require([path], function (template) {\r\n                template = removeLicense(template);\r\n                loading.resolve(template);\r\n            }, function (err) {\r\n                loading.reject(err);\r\n            });\r\n\r\n            return loading.promise();\r\n        },\r\n\r\n        /**\r\n         * Attempts to extract content of a node found by provided selector.\r\n         *\r\n         * @param {String} selector - Node's selector (not necessary valid).\r\n         * @returns {String|Boolean} If specified node doesn't exists\r\n         *      'false' will be returned, otherwise returns node's content.\r\n         */\r\n        loadFromNode: function (selector) {\r\n            var node;\r\n\r\n            try {\r\n                node =\r\n                    document.getElementById(selector) ||\r\n                    document.querySelector(selector);\r\n\r\n                return node ? node.innerHTML : false;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adds requirejs's plugin and file extension to\r\n         * to the provided string if it's necessary.\r\n         *\r\n         * @param {String} path - Path to be processed.\r\n         * @returns {String} Formatted path.\r\n         */\r\n        formatPath: function (path) {\r\n            var result = path;\r\n\r\n            if (!hasPlugin(path)) {\r\n                result = defaultPlugin + '!' + result;\r\n            }\r\n\r\n            if (isFullPath(path)) {\r\n                return result;\r\n            }\r\n\r\n            if (!hasFileExtension(path)) {\r\n                result += '.' + defaultExt;\r\n            }\r\n\r\n            return result.replace(/^([^\\/]+)/g, '$1/template');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/template/engine.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    './observable_source',\r\n    './renderer',\r\n    '../../logger/console-logger'\r\n], function ($, ko, _, Source, renderer, consoleLogger) {\r\n    'use strict';\r\n\r\n    var RemoteTemplateEngine,\r\n        NativeTemplateEngine = ko.nativeTemplateEngine,\r\n        sources = {};\r\n\r\n    /**\r\n     * Remote template engine class. Is used to be able to load remote templates via knockout template binding.\r\n     */\r\n    RemoteTemplateEngine = function () {\r\n        // Instance reference for closure.\r\n        var engine = this,\r\n        // Decorate the builtin Knockout \"template\" binding to track synchronous template renders.\r\n        origUpdate = ko.bindingHandlers.template.update;\r\n\r\n        /**\r\n         * Counter to track the number of currently running render tasks (both synchronous and asynchronous).\r\n         * @type {Number}\r\n         * @private\r\n         */\r\n        this._rendersOutstanding = 0;\r\n\r\n        /**\r\n         * Use a jQuery object as an event bus (but any event emitter with on/off/emit methods could work)\r\n         * @type {jQuery}\r\n         * @private\r\n         */\r\n        this._events = $(this);\r\n\r\n        /**\r\n         * Rendered templates\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._templatesRendered = {};\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Decorate update method\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Object} allBindings\r\n         * @param {Object} viewModel\r\n         * @param {ko.bindingContext} bindingContext\r\n         * @returns {*}\r\n         */\r\n        ko.bindingHandlers.template.update = function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            /*eslint-enable no-unused-vars*/\r\n            var options = ko.utils.peekObservable(valueAccessor()),\r\n                templateName,\r\n                isSync,\r\n                updated;\r\n\r\n            if (typeof options === 'object') {\r\n                if (options.templateEngine && options.templateEngine !== engine) {\r\n                    return origUpdate.apply(this, arguments);\r\n                }\r\n\r\n                if (!options.name) {\r\n                    consoleLogger.error('Could not find template name', options);\r\n                }\r\n                templateName = options.name;\r\n            } else if (typeof options === 'string') {\r\n                templateName = options;\r\n            } else {\r\n                consoleLogger.error('Could not build a template binding', options);\r\n            }\r\n            engine._trackRender(templateName);\r\n            isSync = engine._hasTemplateLoaded(templateName);\r\n            updated = origUpdate.apply(this, arguments);\r\n\r\n            if (isSync) {\r\n                engine._releaseRender(templateName, 'sync');\r\n            }\r\n\r\n            return updated;\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Creates unique template identifier based on template name and it's extenders (optional)\r\n     * @param  {String} templateName\r\n     * @return {String} - unique template identifier\r\n     */\r\n    function createTemplateIdentifier(templateName) {\r\n        return templateName;\r\n    }\r\n\r\n    RemoteTemplateEngine.prototype = new NativeTemplateEngine;\r\n    RemoteTemplateEngine.prototype.constructor = RemoteTemplateEngine;\r\n\r\n    /**\r\n     * When an asynchronous render task begins, increment the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._trackRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName] !== undefined ?\r\n            this._templatesRendered[templateName] : 0;\r\n\r\n        this._rendersOutstanding++;\r\n        this._templatesRendered[templateName] = rendersForTemplate + 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * When an asynchronous render task ends, decrement the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._releaseRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName];\r\n\r\n        this._rendersOutstanding--;\r\n        this._templatesRendered[templateName] = rendersForTemplate - 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * Check to see if renders are complete and trigger events for listeners.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._resolveRenderWaits = function () {\r\n        if (this._rendersOutstanding === 0) {\r\n            this._events.triggerHandler('finishrender');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a promise for the end of the current run of renders, both sync and async.\r\n     * @return {jQueryPromise} - promise that resolves when render completes\r\n     */\r\n    RemoteTemplateEngine.prototype.waitForFinishRender = function () {\r\n        var defer = $.Deferred();\r\n\r\n        this._events.one('finishrender', defer.resolve);\r\n\r\n        return defer.promise();\r\n    };\r\n\r\n    /**\r\n     * Returns true if this template has already been asynchronously loaded and will be synchronously rendered.\r\n     * @param {String} templateName\r\n     * @returns {Boolean}\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._hasTemplateLoaded = function (templateName) {\r\n        // Sources object will have cached template once makeTemplateSource has run\r\n        return sources.hasOwnProperty(templateName);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Caches template after it's unique name and renders in once.\r\n     * If template name is not typeof string, delegates work to knockout.templateSources.anonymousTemplate.\r\n     * @param  {*} template\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @returns {TemplateSource} Object with methods 'nodes' and 'data'.\r\n     */\r\n    RemoteTemplateEngine.prototype.makeTemplateSource = function (template, templateDocument, options, bindingContext) {\r\n        var engine = this,\r\n            source,\r\n            templateId;\r\n\r\n        if (typeof template === 'string') {\r\n            templateId = createTemplateIdentifier(template);\r\n            source = sources[templateId];\r\n\r\n            if (!source) {\r\n                source = new Source(template);\r\n                source.requestedBy = bindingContext.$data.name;\r\n                sources[templateId] = source;\r\n\r\n                consoleLogger.info('templateStartLoading', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n\r\n                renderer.render(template).then(function (rendered) {\r\n                    consoleLogger.info('templateLoadedFromServer', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                    source.nodes(rendered);\r\n                    engine._releaseRender(templateId, 'async');\r\n                }).fail(function () {\r\n                    consoleLogger.error('templateLoadingFail', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (source.requestedBy !== bindingContext.$data.name) {\r\n                consoleLogger.info('templateLoadedFromCache', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n            }\r\n\r\n            return source;\r\n        } else if (template.nodeType === 1 || template.nodeType === 8) {\r\n            source = new ko.templateSources.anonymousTemplate(template);\r\n\r\n            return source;\r\n        }\r\n\r\n        throw new Error('Unknown template type: ' + template);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Should return array of html elements.\r\n     * @param  {TemplateSource} templateSource - object with methods 'nodes' and 'data'.\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplateSource = function (templateSource) {\r\n        var nodes = templateSource.nodes();\r\n\r\n        return ko.utils.cloneNodes(nodes);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Created in order to invoke makeTemplateSource method with custom set of params.\r\n     * @param  {*} template - template identifier\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplate = function (template, bindingContext, options, templateDocument) {\r\n        var templateSource = this.makeTemplateSource(template, templateDocument, options, bindingContext);\r\n\r\n        return this.renderTemplateSource(templateSource);\r\n    };\r\n\r\n    return new RemoteTemplateEngine;\r\n});\r\n","Magento_Ui/js/lib/knockout/template/observable_source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * Is being used by knockout template engine to store template to.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initializes templateName, _data, nodes properties.\r\n         *\r\n         * @param  {template} template - identifier of template\r\n         */\r\n        initialize: function (template) {\r\n            this.templateName = template;\r\n            this._data = {};\r\n            this.nodes = ko.observable([]);\r\n        },\r\n\r\n        /**\r\n         * Data setter. If only one arguments passed, returns corresponding value.\r\n         * Else, writes into it.\r\n         * @param  {String} key - key to write to or to read from\r\n         * @param  {*} value\r\n         * @return {*} - if 1 arg provided, Returns _data[key] property\r\n         */\r\n        data: function (key, value) {\r\n            if (arguments.length === 1) {\r\n                return this._data[key];\r\n            }\r\n\r\n            this._data[key] = value;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/autoselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer'\r\n], function (ko, $, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * 'Focus' event handler.\r\n     *\r\n     * @param {EventObject} e\r\n     */\r\n    function onFocus(e) {\r\n        e.target.select();\r\n    }\r\n\r\n    ko.bindingHandlers.autoselect = {\r\n\r\n        /**\r\n         * Adds event handler which automatically\r\n         * selects inputs' element text when field gets focused.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var enabled = ko.unwrap(valueAccessor());\r\n\r\n            if (enabled !== false) {\r\n                $(element).on('focus', onFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('autoselect');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bind-html.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main',\r\n    '../template/renderer'\r\n], function (ko, _, mage, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set html to node element.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {Function} html - Observable html content.\r\n     */\r\n    function setHtml(el, html) {\r\n        ko.utils.emptyDomNode(el);\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if (!_.isNull(html) && !_.isUndefined(html)) {\r\n            if (!_.isString(html)) {\r\n                html = html.toString();\r\n            }\r\n\r\n            el.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply bindings and call magento attributes parser.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {ko.bindingContext} ctx - Instance of ko.bindingContext, passed to binding initially.\r\n     */\r\n    function applyComponents(el, ctx) {\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n        ko.applyBindingsToDescendants(ctx, el);\r\n        mage.apply();\r\n    }\r\n\r\n    ko.bindingHandlers.bindHtml = {\r\n        /**\r\n         * Scope binding's init method.\r\n         *\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding.\r\n         * Set html to node element, apply bindings and call magento attributes parser.\r\n         *\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            setHtml(el, valueAccessor());\r\n            applyComponents(el, bindingContext);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('bindHtml');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/resizable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiRegistry',\r\n    'underscore',\r\n    '../template/renderer',\r\n    'jquery-ui-modules/resizable'\r\n], function (ko, $, async, registry, _, renderer) {\r\n    'use strict';\r\n\r\n    var sizeOptions = [\r\n            'minHeight',\r\n            'maxHeight',\r\n            'minWidth',\r\n            'maxWidth'\r\n        ],\r\n\r\n        handles = {\r\n            height: '.ui-resizable-s, .ui-resizable-n',\r\n            width: '.ui-resizable-w, .ui-resizable-e'\r\n        };\r\n\r\n    /**\r\n     * Recalcs visibility of handles, width and height of resizable based on content\r\n     * @param {HTMLElement} element\r\n     */\r\n    function adjustSize(element) {\r\n        var maxHeight,\r\n            maxWidth;\r\n\r\n        element = $(element);\r\n        maxHeight = element.resizable('option').maxHeight;\r\n        maxWidth = element.resizable('option').maxWidth;\r\n\r\n        if (maxHeight && element.height() > maxHeight) {\r\n            element.height(maxHeight + 1);\r\n            $(handles.height).hide();\r\n        } else {\r\n            $(handles.height).show();\r\n        }\r\n\r\n        if (maxWidth && element.width() > maxWidth) {\r\n            element.width(maxWidth + 1);\r\n            $(handles.width).hide();\r\n        } else {\r\n            $(handles.width).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recalcs allowed min, max width and height based on configured selectors\r\n     * @param {Object} sizeConstraints\r\n     * @param {String} componentName\r\n     * @param {HTMLElement} element\r\n     * @param {Boolean} hasWidthUpdate\r\n     */\r\n    function recalcAllowedSize(sizeConstraints, componentName, element, hasWidthUpdate) {\r\n        var size;\r\n\r\n        element = $(element);\r\n\r\n        if (!element.data('resizable')) {\r\n            return;\r\n        }\r\n\r\n        if (!hasWidthUpdate) {\r\n            element.css('width', 'auto');\r\n        }\r\n\r\n        _.each(sizeConstraints, function (selector, key) {\r\n            async.async({\r\n                component: componentName,\r\n                selector: selector\r\n            }, function (elem) {\r\n                size = key.indexOf('Height') !== -1 ? $(elem).outerHeight(true) : $(elem).outerWidth(true);\r\n\r\n                if (element.data('resizable')) {\r\n                    element.resizable('option', key, size + 1);\r\n                }\r\n            });\r\n        }, this);\r\n\r\n        adjustSize(element);\r\n    }\r\n\r\n    /**\r\n     * Preprocess config to separate options,\r\n     * which must be processed further before applying\r\n     *\r\n     * @param {Object} config\r\n     * @param {Object} viewModel\r\n     * @param {*} element\r\n     * @return {Object} config\r\n     */\r\n    function processConfig(config, viewModel, element) {\r\n        var sizeConstraint,\r\n            sizeConstraints = {},\r\n            recalc,\r\n            hasWidthUpdate;\r\n\r\n        if (_.isEmpty(config)) {\r\n            return {};\r\n        }\r\n        _.each(sizeOptions, function (key) {\r\n            sizeConstraint = config[key];\r\n\r\n            if (sizeConstraint && !_.isNumber(sizeConstraint)) {\r\n                sizeConstraints[key] = sizeConstraint;\r\n                delete config[key];\r\n            }\r\n        });\r\n        hasWidthUpdate =  _.some(sizeConstraints, function (value, key) {\r\n            return key.indexOf('Width') !== -1;\r\n        });\r\n\r\n        recalc = recalcAllowedSize.bind(null, sizeConstraints, viewModel.name, element, hasWidthUpdate);\r\n        config.start = recalc;\r\n        $(window).on('resize.resizable', recalc);\r\n        registry.get(viewModel.provider).on('reloaded', recalc);\r\n\r\n        return config;\r\n    }\r\n\r\n    ko.bindingHandlers.resizable = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = processConfig(valueAccessor(), viewModel, element);\r\n\r\n            $(element).resizable(config);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('resizable');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/mage-init.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main'\r\n], function (ko, _, mage) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.mageInit = {\r\n        /**\r\n         * Initializes components assigned to HTML elements.\r\n         *\r\n         * @param {HTMLElement} el\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var data = valueAccessor();\r\n\r\n            _.each(data, function (config, component) {\r\n                mage.applyFor(el, config, component);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/tooltip.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/tooltip/tooltip.html',\r\n    '../template/renderer'\r\n], function ($, ko, _, template, tooltipTmpl, renderer) {\r\n    'use strict';\r\n\r\n    var tooltip,\r\n        defaults,\r\n        positions,\r\n        transformProp,\r\n        checkedPositions = {},\r\n        iterator = 0,\r\n        previousTooltip,\r\n        tooltipData,\r\n        positionData = {},\r\n        tooltipsCollection = {},\r\n        isTouchDevice = (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n        CLICK_EVENT = (function () {\r\n            return isTouchDevice ? 'touchstart' : 'click';\r\n        })();\r\n\r\n    defaults = {\r\n        tooltipWrapper: '[data-tooltip=tooltip-wrapper]',\r\n        tooltipContentBlock: 'data-tooltip-content',\r\n        closeButtonClass: 'action-close',\r\n        tailClass: 'data-tooltip-tail',\r\n        action: 'hover',\r\n        delay: 300,\r\n        track: false,\r\n        step: 20,\r\n        position: 'top',\r\n        closeButton: false,\r\n        showed: false,\r\n        strict: true,\r\n        center: false,\r\n        closeOnScroll: true\r\n    };\r\n\r\n    tooltipData = {\r\n        tooltipClasses: '',\r\n        trigger: false,\r\n        timeout: 0,\r\n        element: false,\r\n        event: false,\r\n        targetElement: {},\r\n        showed: false,\r\n        currentID: 0\r\n    };\r\n\r\n    /**\r\n     * Polyfill for css transform\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.createElement('div').style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform !== 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] !== 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    positions = {\r\n\r\n        /*eslint max-depth: [0, 0]*/\r\n\r\n        map: {\r\n            horizontal: {\r\n                s: 'w',\r\n                p: 'left'\r\n            },\r\n            vertical: {\r\n                s: 'h',\r\n                p: 'top'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        top: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'vertical', '_bottom', 'top', 'right');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        left: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'horizontal', '_right', 'left', 'top');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        bottom: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'vertical', '_top', 'bottom', 'left');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        right: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'horizontal', '_left', 'right', 'bottom');\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _topLeftChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : s.elementPosition,\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] - s.tooltipSize[map[direction].s] - config.step >\r\n                s.scrollPosition[map[direction].p]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] -\r\n                    config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _bottomRightChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : {\r\n                    top: s.elementPosition.top + s.elementSize.h,\r\n                    left: s.elementPosition.left + s.elementSize.w\r\n                },\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] + s.tooltipSize[map[direction].s] + config.step <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] + config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip if tooltip does not fit in window\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        positionCenter: function (s, data) {\r\n            data = positions._positionCenter(s, data, 'horizontal', positions.map);\r\n            data = positions._positionCenter(s, data, 'vertical', positions.map);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip side\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _positionCenter: function (s, data, direction, map) {\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n                data.position[map[direction].p] = (s.windowSize[map[direction].s] -\r\n                    s.tooltipSize[map[direction].s]) / 2 + s.scrollPosition[map[direction].p];\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Normalize horizontal or vertical position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalize: function (s, data, config, delegate, map, direction) {\r\n            var startPosition = !config.center ? s.eventPosition : {\r\n                    left: s.elementPosition.left + s.elementSize.w / 2,\r\n                    top: s.elementPosition.top + s.elementSize.h / 2\r\n                },\r\n                depResult;\r\n\r\n            if (startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2 >\r\n                s.scrollPosition[map[direction].p] && startPosition[map[direction].p] +\r\n                s.tooltipSize[map[direction].s] / 2 <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                data.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2;\r\n            } else {\r\n\r\n                /*eslint-disable no-lonely-if*/\r\n                if (!checkedPositions[delegate]) {\r\n                    depResult = positions[delegate].apply(null, arguments);\r\n\r\n                    if (depResult.hasOwnProperty('className')) {\r\n                        data = depResult;\r\n                    } else {\r\n                        data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                    }\r\n                } else {\r\n                    data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Calc tail position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} startPosition - start position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalizeTail: function (s, data, config, delegate, map, direction, startPosition) {\r\n            data.tail = {};\r\n\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n\r\n                if (\r\n                    startPosition[map[direction].p] >\r\n                    s.windowSize[map[direction].s] / 2 + s.scrollPosition[map[direction].p]\r\n                ) {\r\n                    data.position[map[direction].p] = s.windowSize[map[direction].s] +\r\n                        s.scrollPosition[map[direction].p] - s.tooltipSize[map[direction].s];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                } else {\r\n                    data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                }\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tail[map[direction].p] = s.eventPosition[map[direction].p] - s.windowSize[map[direction].s] / 2;\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        }\r\n    };\r\n\r\n    tooltip = {\r\n\r\n        /**\r\n         * Set new tooltip to tooltipCollection, save config, and add unic id\r\n         *\r\n         * @param {Object} config - tooltip config\r\n         * @returns {String} tooltip id\r\n         */\r\n        setTooltip: function (config) {\r\n            var property = 'id-' + iterator;\r\n\r\n            tooltipsCollection[property] = config;\r\n            iterator++;\r\n\r\n            return property;\r\n        },\r\n\r\n        /**\r\n         * Get tooltip config by id\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip config\r\n         */\r\n        getTooltip: function (id) {\r\n            return tooltipsCollection[id];\r\n        },\r\n\r\n        /**\r\n         * Set content to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} bindingCtx - tooltip context\r\n         * @param {Object} event - action event\r\n         */\r\n        setContent: function (tooltipElement, viewModel, id, bindingCtx, event) {\r\n            var html = $(tooltipElement).html(),\r\n                config = tooltip.getTooltip(id),\r\n                body = $('body');\r\n\r\n            tooltipData.currentID = id;\r\n            tooltipData.trigger = $(event.currentTarget);\r\n            tooltip.setTargetData(event);\r\n            body.on('mousemove.setTargetData', tooltip.setTargetData);\r\n            tooltip.clearTimeout(id);\r\n\r\n            tooltipData.timeout = _.delay(function () {\r\n                body.off('mousemove.setTargetData', tooltip.setTargetData);\r\n\r\n                if (tooltipData.trigger[0] === tooltipData.targetElement) {\r\n                    tooltip.destroy(id);\r\n                    event.stopPropagation();\r\n                    tooltipElement = tooltip.createTooltip(id);\r\n                    tooltipElement.find('.' + defaults.tooltipContentBlock).append(html);\r\n                    tooltipElement.applyBindings(bindingCtx);\r\n                    tooltip.setHandlers(id);\r\n                    tooltip.setPosition(tooltipElement, id);\r\n                    previousTooltip = id;\r\n                }\r\n\r\n            }, config.delay);\r\n        },\r\n\r\n        /**\r\n         * Set position to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setPosition: function (tooltipElement, id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            tooltip.sizeData = {\r\n                windowSize: {\r\n                    h: $(window).outerHeight(),\r\n                    w: $(window).outerWidth()\r\n                },\r\n                scrollPosition: {\r\n                    top: $(window).scrollTop(),\r\n                    left: $(window).scrollLeft()\r\n                },\r\n                tooltipSize: {\r\n                    h: tooltipElement.outerHeight(),\r\n                    w: tooltipElement.outerWidth()\r\n                },\r\n                elementSize: {\r\n                    h: tooltipData.trigger.outerHeight(),\r\n                    w: tooltipData.trigger.outerWidth()\r\n                },\r\n                elementPosition: tooltipData.trigger.offset(),\r\n                eventPosition: this.getEventPosition(tooltipData.event)\r\n            };\r\n\r\n            _.extend(positionData, positions[config.position](tooltip.sizeData));\r\n            tooltipElement.css(positionData.position);\r\n            tooltipElement.addClass(positionData.className);\r\n            tooltip._setTooltipSize(positionData, tooltipElement);\r\n            tooltip._setTailPosition(positionData, tooltipElement);\r\n            checkedPositions = {};\r\n        },\r\n\r\n        /**\r\n         * Check position data and change tooltip size if needs\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTooltipSize: function (data, tooltipElement) {\r\n            if (data.tooltipSize) {\r\n                data.tooltipSize.w ?\r\n                    tooltipElement.css('width', data.tooltipSize.w) :\r\n                    tooltipElement.css('height', data.tooltipSize.h);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check position data and set position to tail\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTailPosition: function (data, tooltipElement) {\r\n            var tail,\r\n                tailMargin;\r\n\r\n            if (data.tail) {\r\n                tail = tooltipElement.find('.' + defaults.tailClass);\r\n\r\n                if (data.tail.left) {\r\n                    tailMargin = parseInt(tail.css('margin-left'), 10);\r\n                    tail.css('margin-left', tailMargin + data.tail.left);\r\n                } else {\r\n                    tailMargin = parseInt(tail.css('margin-top'), 10);\r\n                    tail.css('margin-top', tailMargin + data.tail.top);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves position for tooltip\r\n         *\r\n         * @param {Object} event\r\n         * @returns {Object}\r\n         */\r\n        getEventPosition: function (event) {\r\n            var position = {\r\n                left: event.originalEvent && event.originalEvent.pageX || 0,\r\n                top: event.originalEvent && event.originalEvent.pageY || 0\r\n            };\r\n\r\n            if (position.left === 0 && position.top === 0) {\r\n                _.extend(position, event.target.getBoundingClientRect());\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        /**\r\n         * Close tooltip if action happened outside handler and tooltip element\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} event - action event\r\n         */\r\n        outerClick: function (id, event) {\r\n            var tooltipElement = $(event.target).parents(defaults.tooltipWrapper)[0],\r\n                isTrigger = event.target === tooltipData.trigger[0] || $.contains(tooltipData.trigger[0], event.target);\r\n\r\n            if (tooltipData.showed && tooltipElement !== tooltipData.element[0] && !isTrigger) {\r\n                tooltip.destroy(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse keydown event and if event trigger is escape key - close tooltip\r\n         *\r\n         * @param {Object} event - action event\r\n         */\r\n        keydownHandler: function (event) {\r\n            if (tooltipData.showed && event.keyCode === 27) {\r\n                tooltip.destroy(tooltipData.currentID);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change tooltip position when track is enabled\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        track: function (event) {\r\n            var inequality = {},\r\n                map = positions.map,\r\n                translate = {\r\n                    left: 'translateX',\r\n                    top: 'translateY'\r\n                },\r\n                eventPosition = {\r\n                    left: event.pageX,\r\n                    top: event.pageY\r\n                },\r\n                tooltipSize = {\r\n                    w: tooltipData.element.outerWidth(),\r\n                    h: tooltipData.element.outerHeight()\r\n                },\r\n                direction = positionData.side === 'bottom' || positionData.side === 'top' ? 'horizontal' : 'vertical';\r\n\r\n            inequality[map[direction].p] = eventPosition[map[direction].p] - (positionData.position[map[direction].p] +\r\n                tooltipSize[map[direction].s] / 2);\r\n\r\n            if (positionData.position[map[direction].p] + inequality[map[direction].p] +\r\n                tooltip.sizeData.tooltipSize[map[direction].s] >\r\n                tooltip.sizeData.windowSize[map[direction].s] + tooltip.sizeData.scrollPosition[map[direction].p] ||\r\n                inequality[map[direction].p] + positionData.position[map[direction].p] <\r\n                tooltip.sizeData.scrollPosition[map[direction].p]) {\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltipData.element[0].style[transformProp] = translate[map[direction].p] +\r\n                '(' + inequality[map[direction].p] + 'px)';\r\n        },\r\n\r\n        /**\r\n         * Set handlers to tooltip\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setHandlers: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.track) {\r\n                tooltipData.trigger.on('mousemove.track', tooltip.track);\r\n            }\r\n\r\n            if (config.action === 'click') {\r\n                $(window).on(CLICK_EVENT + '.outerClick', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            if (config.closeButton) {\r\n                $('.' + config.closeButtonClass).on('click.closeButton', tooltip.destroy.bind(null, id));\r\n            }\r\n\r\n            if (config.closeOnScroll) {\r\n                document.addEventListener('scroll', tooltip.destroy, true);\r\n                $(window).on('scroll.tooltip', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            $(window).on('keydown.tooltip', tooltip.keydownHandler);\r\n            $(window).on('resize.outerClick', tooltip.outerClick.bind(null, id));\r\n        },\r\n\r\n        /**\r\n         * Toggle tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         */\r\n        toggleTooltip: function (tooltipElement, viewModel, id) {\r\n            if (previousTooltip === id && tooltipData.showed) {\r\n                tooltip.destroy(id);\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltip.setContent.apply(null, arguments);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Create tooltip and append to DOM\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip element\r\n         */\r\n        createTooltip: function (id) {\r\n            var body = $('body'),\r\n                config = tooltip.getTooltip(id);\r\n\r\n            $(template(tooltipTmpl, {\r\n                data: config\r\n            })).appendTo(body);\r\n\r\n            tooltipData.showed = true;\r\n            tooltipData.element = $(config.tooltipWrapper);\r\n\r\n            return tooltipData.element;\r\n        },\r\n\r\n        /**\r\n         * Check action and clean timeout\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        clearTimeout: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.action === 'hover') {\r\n                clearTimeout(tooltipData.timeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check previous tooltip\r\n         */\r\n        checkPreviousTooltip: function () {\r\n            if (!tooltipData.timeout) {\r\n                tooltip.destroy();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy tooltip instance\r\n         */\r\n        destroy: function () {\r\n            if (tooltipData.element) {\r\n                tooltipData.element.remove();\r\n                tooltipData.showed = false;\r\n            }\r\n\r\n            positionData = {};\r\n            tooltipData.timeout = false;\r\n            tooltip.removeHandlers();\r\n        },\r\n\r\n        /**\r\n         * Remove tooltip handlers\r\n         */\r\n        removeHandlers: function () {\r\n            $('.' + defaults.closeButtonClass).off('click.closeButton');\r\n            tooltipData.trigger.off('mousemove.track');\r\n            document.removeEventListener('scroll', tooltip.destroy, true);\r\n            $(window).off('scroll.tooltip');\r\n            $(window).off(CLICK_EVENT + '.outerClick');\r\n            $(window).off('keydown.tooltip');\r\n            $(window).off('resize.outerClick');\r\n        },\r\n\r\n        /**\r\n         * Set target element\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        setTargetData: function (event) {\r\n            tooltipData.event = event;\r\n\r\n            //TODO: bug chrome v.49; Link to issue https://bugs.chromium.org/p/chromium/issues/detail?id=161464\r\n            if (event.timeStamp - (tooltipData.timestamp || 0) < 1) {\r\n                return;\r\n            }\r\n\r\n            if (event.type === 'mousemove') {\r\n                tooltipData.targetElement = event.target;\r\n            } else {\r\n                tooltipData.targetElement = event.currentTarget;\r\n                tooltipData.timestamp = event.timeStamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Merged user config with defaults configuration\r\n         *\r\n         * @param {Object} config - user config\r\n         * @returns {Object} merged config\r\n         */\r\n        processingConfig: function (config) {\r\n            return _.extend({}, defaults, config);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.tooltip = {\r\n\r\n        /**\r\n         * Initialize tooltip\r\n         *\r\n         * @param {Object} elem - tooltip DOM element\r\n         * @param {Function} valueAccessor - ko observable property, tooltip data\r\n         * @param {Object} allBindings - all bindings on current element\r\n         * @param {Object} viewModel - current element viewModel\r\n         * @param {Object} bindingCtx - current element binding context\r\n         */\r\n        init: function (elem, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var config = tooltip.processingConfig(valueAccessor()),\r\n                $parentScope = config.parentScope ? $(config.parentScope) : $(elem).parent(),\r\n                tooltipId;\r\n\r\n            $(elem).addClass('hidden');\r\n\r\n            if (isTouchDevice) {\r\n                config.action = 'click';\r\n            }\r\n            tooltipId = tooltip.setTooltip(config);\r\n\r\n            if (config.action === 'hover') {\r\n                $parentScope.on(\r\n                    'mouseenter',\r\n                    config.trigger,\r\n                    tooltip.setContent.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n                $parentScope.on(\r\n                    'mouseleave',\r\n                    config.trigger,\r\n                    tooltip.checkPreviousTooltip.bind(null, tooltipId)\r\n                );\r\n            } else if (config.action === 'click') {\r\n                $parentScope.on(\r\n                    'click',\r\n                    config.trigger,\r\n                    tooltip.toggleTooltip.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n            }\r\n\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('tooltip');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/optgroup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'mageUtils'\r\n    ], function (ko, utils) {\r\n    'use strict';\r\n\r\n    var captionPlaceholder = {},\r\n        optgroupTmpl = '<optgroup label=\"${ $.label }\"></optgroup>',\r\n        nbspRe = /&nbsp;/g,\r\n        optionsText,\r\n        optionsValue,\r\n        optionTitle;\r\n\r\n    ko.bindingHandlers.optgroup = {\r\n        /**\r\n         * @param {*} element\r\n         * @returns {Object}\r\n         */\r\n        init: function (element) {\r\n            if (ko.utils.tagNameLower(element) !== 'select') {\r\n                throw new Error('options binding applies only to SELECT elements');\r\n            }\r\n\r\n            // Remove all existing <option>s.\r\n            while (element.length > 0) {\r\n                element.remove(0);\r\n            }\r\n\r\n            // Ensures that the binding processor doesn't try to bind the options\r\n            return {\r\n                'controlsDescendantBindings': true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} valueAccessor\r\n         * @param {*} allBindings\r\n         */\r\n        update: function (element, valueAccessor, allBindings) {\r\n            var selectWasPreviouslyEmpty = element.length === 0,\r\n                previousScrollTop = !selectWasPreviouslyEmpty && element.multiple ? element.scrollTop : null,\r\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                arrayToDomNodeChildrenOptions = {},\r\n                captionValue,\r\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                filteredArray,\r\n                previousSelectedValues,\r\n                itemUpdate = false,\r\n                callback = setSelectionCallback,//eslint-disable-line no-use-before-define\r\n                nestedOptionsLevel = -1;\r\n\r\n            optionsText = ko.utils.unwrapObservable(allBindings.get('optionsText')) || 'text';\r\n            optionsValue = ko.utils.unwrapObservable(allBindings.get('optionsValue')) || 'value';\r\n            optionTitle = optionsText + 'title';\r\n\r\n            if (element.multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(\r\n                    selectedOptions(),//eslint-disable-line no-use-before-define\r\n                    ko.selectExtensions.readValue\r\n                );\r\n            } else {\r\n                previousSelectedValues = element.selectedIndex >= 0 ?\r\n                    [ko.selectExtensions.readValue(element.options[element.selectedIndex])] :\r\n                    [];\r\n            }\r\n\r\n            if (unwrappedArray) {\r\n                if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\r\n                    unwrappedArray = [unwrappedArray];\r\n                }\r\n\r\n                // Filter out any entries marked as destroyed\r\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function (item) {\r\n                    if (item && !item.label) {\r\n                        return false;\r\n                    }\r\n\r\n                    return includeDestroyed ||\r\n                        item === undefined ||\r\n                        item === null ||\r\n                        !ko.utils.unwrapObservable(item._destroy);\r\n                });\r\n                filteredArray.map(recursivePathBuilder, null);//eslint-disable-line no-use-before-define\r\n            }\r\n\r\n            /**\r\n             * @param {*} option\r\n             */\r\n            arrayToDomNodeChildrenOptions.beforeRemove = function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n            if (allBindings.has('optionsAfterRender')) {\r\n\r\n                /**\r\n                 * @param {*} arrayEntry\r\n                 * @param {*} newOptions\r\n                 */\r\n                callback = function (arrayEntry, newOptions) {\r\n                    setSelectionCallback(arrayEntry, newOptions);//eslint-disable-line no-use-before-define\r\n                    ko.dependencyDetection.ignore(\r\n                        allBindings.get('optionsAfterRender'),\r\n                        null,\r\n                        [newOptions[0],\r\n                        arrayEntry !== captionPlaceholder ? arrayEntry : undefined]\r\n                    );\r\n                };\r\n            }\r\n\r\n            filteredArray = formatOptions(filteredArray);//eslint-disable-line no-use-before-define\r\n            ko.utils.setDomNodeChildrenFromArrayMapping(\r\n                element,\r\n                filteredArray,\r\n                optionNodeFromArray,//eslint-disable-line no-use-before-define\r\n                arrayToDomNodeChildrenOptions,\r\n                callback\r\n            );\r\n\r\n            ko.dependencyDetection.ignore(function () {\r\n                var selectionChanged;\r\n\r\n                if (allBindings.get('valueAllowUnset') && allBindings.has('value')) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    ko.selectExtensions.writeValue(\r\n                        element,\r\n                        ko.utils.unwrapObservable(allBindings.get('value')),\r\n                        true /* allowUnset */\r\n                    );\r\n                } else {\r\n                    // Determine if the selection has changed as a result of updating the options list\r\n                    if (element.multiple) {\r\n                        // For a multiple-select box, compare the new selection count to the previous one\r\n                        // But if nothing was selected before, the selection can't have changed\r\n                        selectionChanged = previousSelectedValues.length &&\r\n                            selectedOptions().length < //eslint-disable-line no-use-before-define\r\n                            previousSelectedValues.length;\r\n                    } else {\r\n                        // For a single-select box, compare the current value to the previous value\r\n                        // But if nothing was selected before or nothing is selected now,\r\n                        // just look for a change in selection\r\n                        selectionChanged = previousSelectedValues.length && element.selectedIndex >= 0 ?\r\n                            ko.selectExtensions.readValue(element.options[element.selectedIndex]) !==\r\n                            previousSelectedValues[0] : previousSelectedValues.length || element.selectedIndex >= 0;\r\n                    }\r\n\r\n                    // Ensure consistency between model value and selected option.\r\n                    // If the dropdown was changed so that selection is no longer the same,\r\n                    // notify the value or selectedOptions binding.\r\n                    if (selectionChanged) {\r\n                        ko.utils.triggerEvent(element, 'change');\r\n                    }\r\n                }\r\n            });\r\n\r\n            /*eslint-enable max-len, no-use-before-define*/\r\n\r\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\r\n                element.scrollTop = previousScrollTop;\r\n            }\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            function selectedOptions() {\r\n                return ko.utils.arrayFilter(element.options, function (node) {\r\n                    return node.selected;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @param {*} object\r\n             * @param {*} predicate\r\n             * @param {*} defaultValue\r\n             * @returns {*}\r\n             */\r\n            function applyToObject(object, predicate, defaultValue) {\r\n                var predicateType = typeof predicate;\r\n\r\n                if (predicateType === 'function') {   // run it against the data value\r\n                    return predicate(object);\r\n                } else if (predicateType === 'string') { // treat it as a property name on the data value\r\n                    return object[predicate];\r\n                }\r\n\r\n                return defaultValue;\r\n            }\r\n\r\n            /**\r\n             * @param {*} obj\r\n             */\r\n            function recursivePathBuilder(obj) {\r\n\r\n                obj[optionTitle] = (this && this[optionTitle] ? this[optionTitle] + '/' : '') + obj[optionsText].trim();\r\n\r\n                if (Array.isArray(obj[optionsValue])) {\r\n                    obj[optionsValue].map(recursivePathBuilder, obj);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {Array} arrayEntry\r\n             * @param {*} oldOptions\r\n             * @returns {*[]}\r\n             */\r\n            function optionNodeFromArray(arrayEntry, oldOptions) {\r\n                var option;\r\n\r\n                if (oldOptions.length) {\r\n                    previousSelectedValues = oldOptions[0].selected ?\r\n                        [ko.selectExtensions.readValue(oldOptions[0])] : [];\r\n                    itemUpdate = true;\r\n                }\r\n\r\n                if (arrayEntry === captionPlaceholder) { // empty value, label === caption\r\n                    option = element.ownerDocument.createElement('option');\r\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                    ko.selectExtensions.writeValue(option, undefined);\r\n                } else if (typeof arrayEntry[optionsValue] === 'undefined') { // empty value === optgroup\r\n                    if (arrayEntry.__disableTmpl) {\r\n                        option = '<optgroup label=\"' + arrayEntry[optionsText] + '\"></optgroup>';\r\n                    } else {\r\n                        option = utils.template(optgroupTmpl, {\r\n                            label: arrayEntry[optionsText],\r\n                            title: arrayEntry[optionsText + 'title']\r\n                        });\r\n                    }\r\n                    option = ko.utils.parseHtmlFragment(option)[0];\r\n\r\n                } else {\r\n                    option = element.ownerDocument.createElement('option');\r\n                    option.setAttribute('data-title', arrayEntry[optionsText + 'title']);\r\n                    ko.selectExtensions.writeValue(option, arrayEntry[optionsValue]);\r\n                    ko.utils.setTextContent(option, arrayEntry[optionsText]);\r\n                }\r\n\r\n                return [option];\r\n            }\r\n\r\n            /**\r\n             * @param {*} newOptions\r\n             */\r\n            function setSelectionCallback(newOptions) {\r\n                var isSelected;\r\n\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                if (previousSelectedValues.length && newOptions.value) {\r\n                    isSelected = ko.utils.arrayIndexOf(\r\n                        previousSelectedValues,\r\n                        ko.selectExtensions.readValue(newOptions.value)\r\n                    ) >= 0;\r\n\r\n                    ko.utils.setOptionNodeSelectionState(newOptions.value, isSelected);\r\n\r\n                    // If this option was changed from being selected during a single-item update, notify the change\r\n                    if (itemUpdate && !isSelected) {\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, 'change']);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {*} string\r\n             * @param {Number} times\r\n             * @returns {Array}\r\n             */\r\n            function strPad(string, times) {\r\n                return (new Array(times + 1)).join(string);\r\n            }\r\n\r\n            /**\r\n             * @param {*} options\r\n             * @returns {Array}\r\n             */\r\n            function formatOptions(options) {\r\n                var res = [];\r\n\r\n                nestedOptionsLevel++;\r\n\r\n                if (!nestedOptionsLevel) { // zero level\r\n                    // If caption is included, add it to the array\r\n                    if (allBindings.has('optionsCaption')) {\r\n                        captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                        // If caption value is null or undefined, don't show a caption\r\n                        if (//eslint-disable-line max-depth\r\n                            captionValue !== null &&\r\n                            captionValue !== undefined &&\r\n                            captionValue !== false\r\n                        ) {\r\n                            res.push(captionPlaceholder);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ko.utils.arrayForEach(options, function (option) {\r\n                    var value = applyToObject(option, optionsValue, option),\r\n                        label = applyToObject(option, optionsText, value) || '',\r\n                        disabled = applyToObject(option, 'disabled', false) || false,\r\n                        obj = {},\r\n                        space = '\\u2007\\u2007\\u2007';\r\n\r\n                    obj[optionTitle] = applyToObject(option, optionsText + 'title', value);\r\n\r\n                    if (disabled) {\r\n                        obj.disabled = disabled;\r\n                    }\r\n\r\n                    if (option.hasOwnProperty('__disableTmpl')) {\r\n                        obj.__disableTmpl = option.__disableTmpl;\r\n                    }\r\n\r\n                    label = label.replace(nbspRe, '').trim();\r\n\r\n                    if (Array.isArray(value)) {\r\n                        obj[optionsText] = strPad('&nbsp;', nestedOptionsLevel * 4) + label;\r\n                        res.push(obj);\r\n                        res = res.concat(formatOptions(value));\r\n                    } else {\r\n                        obj[optionsText] = strPad(space, nestedOptionsLevel * 2) + label;\r\n                        obj[optionsValue] = value;\r\n                        res.push(obj);\r\n                    }\r\n                });\r\n                nestedOptionsLevel--;\r\n\r\n                return res;\r\n            }\r\n        }\r\n    };\r\n    ko.bindingHandlers.selectedOptions.after.push('optgroup');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/range.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var isTouchDevice = !_.isUndefined(document.ontouchstart),\r\n        sliderFn = 'slider',\r\n        sliderModule = 'jquery-ui-modules/slider';\r\n\r\n    if (isTouchDevice) {\r\n        sliderFn = 'touchSlider';\r\n        sliderModule = 'mage/touch-slider';\r\n    }\r\n\r\n    ko.bindingHandlers.range = {\r\n\r\n        /**\r\n         * Initializes binding and a slider update.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config  = valueAccessor(),\r\n                value   = config.value;\r\n\r\n            _.extend(config, {\r\n                value: value(),\r\n\r\n                /**\r\n                 * Callback which is being called when sliders' value changes.\r\n                 *\r\n                 * @param {Event} event\r\n                 * @param {Object} ui\r\n                 */\r\n                slide: function (event, ui) {\r\n                    value(ui.value);\r\n                }\r\n            });\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn](config);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates sliders' plugin configuration.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor();\r\n\r\n            config.value = ko.unwrap(config.value);\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn]('option', config);\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('range');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/simple-checked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.simpleChecked = {\r\n        'after': ['attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'simpleChecked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                updateView,\r\n                updateModel;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * Updates checked observable\r\n             */\r\n            updateModel = function () {\r\n                var  modelValue = ko.dependencyDetection.ignore(valueAccessor),\r\n                    isChecked = element.checked;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (modelValue.peek() === isChecked) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue(isChecked);\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                element.checked = !!modelValue;\r\n            };\r\n\r\n            ko.utils.registerEventHandler(element, 'change', updateModel);\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.simpleChecked = true;\r\n\r\n    renderer.addAttribute('simpleChecked');\r\n    renderer.addAttribute('simple-checked', {\r\n        binding: 'simpleChecked'\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/datepicker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates datepicker binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate'\r\n], function (ko, _, $, $t) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        dateFormat: 'mm\\/dd\\/yyyy',\r\n        showsTime: false,\r\n        timeFormat: null,\r\n        buttonImage: null,\r\n        buttonImageOnly: null,\r\n        buttonText: $t('Select Date')\r\n    };\r\n\r\n    ko.bindingHandlers.datepicker = {\r\n        /**\r\n         * Initializes calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * For more info about options take a look at \"mage/calendar\" and jquery.ui.datepicker widget.\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                observable,\r\n                options = {};\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['mage/calendar'], function () {\r\n                $(el).calendar(options);\r\n\r\n                ko.utils.registerEventHandler(el, 'change', function () {\r\n                    observable(this.value);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Update calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * @param {HTMLElement} element - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                $element = $(element),\r\n                observable,\r\n                options = {},\r\n                newVal;\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['moment', 'mage/utils/misc', 'mage/calendar'], function (moment, utils) {\r\n                if (_.isEmpty(observable())) {\r\n                    newVal = null;\r\n                } else {\r\n                    newVal = moment(\r\n                        observable(),\r\n                        utils.convertToMomentFormat(\r\n                            options.dateFormat + (options.showsTime ? ' ' + options.timeFormat : '')\r\n                        )\r\n                    ).toDate();\r\n                }\r\n\r\n                $element.datepicker('setDate', newVal);\r\n                $element.blur();\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/after-render.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.afterRender = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var callback = valueAccessor();\r\n\r\n            if (typeof callback === 'function') {\r\n                callback.call(viewModel, element, viewModel);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('afterRender');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/i18n.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'module',\r\n    '../template/renderer',\r\n    'mage/translate'\r\n], function ($, ko, module, renderer) {\r\n    'use strict';\r\n\r\n    var locations = {\r\n            'legend': 'Caption for the fieldset element',\r\n            'label': 'Label for an input element.',\r\n            'button': 'Push button',\r\n            'a': 'Link label',\r\n            'b': 'Bold text',\r\n            'strong': 'Strong emphasized text',\r\n            'i': 'Italic text',\r\n            'em': 'Emphasized text',\r\n            'u': 'Underlined text',\r\n            'sup': 'Superscript text',\r\n            'sub': 'Subscript text',\r\n            'span': 'Span element',\r\n            'small': 'Smaller text',\r\n            'big': 'Bigger text',\r\n            'address': 'Contact information',\r\n            'blockquote': 'Long quotation',\r\n            'q': 'Short quotation',\r\n            'cite': 'Citation',\r\n            'caption': 'Table caption',\r\n            'abbr': 'Abbreviated phrase',\r\n            'acronym': 'An acronym',\r\n            'var': 'Variable part of a text',\r\n            'dfn': 'Term',\r\n            'strike': 'Strikethrough text',\r\n            'del': 'Deleted text',\r\n            'ins': 'Inserted text',\r\n            'h1': 'Heading level 1',\r\n            'h2': 'Heading level 2',\r\n            'h3': 'Heading level 3',\r\n            'h4': 'Heading level 4',\r\n            'h5': 'Heading level 5',\r\n            'h6': 'Heading level 6',\r\n            'center': 'Centered text',\r\n            'select': 'List options',\r\n            'img': 'Image',\r\n            'input': 'Form element'\r\n        },\r\n\r\n        /**\r\n         * Generates [data-translate] attribute's value\r\n         * @param {Object} translationData\r\n         * @param {String} location\r\n         */\r\n        composeTranslateAttr = function (translationData, location) {\r\n            var obj = [{\r\n                'shown': translationData.shown,\r\n                'translated': translationData.translated,\r\n                'original': translationData.original,\r\n                'location': locations[location] || 'Text'\r\n            }];\r\n\r\n            return JSON.stringify(obj);\r\n        },\r\n\r\n        /**\r\n         * Sets text for the element\r\n         * @param {Object} el\r\n         * @param {String} text\r\n         */\r\n        setText = function (el, text) {\r\n            $(el).text(text);\r\n        },\r\n\r\n        /**\r\n         * Sets [data-translate] attribute for the element\r\n         * @param {Object} el - The element which is binded\r\n         * @param {String} original - The original value of the element\r\n         */\r\n        setTranslateProp = function (el, original) {\r\n            var location = $(el).prop('tagName').toLowerCase(),\r\n                translated = $.mage.__(original),\r\n                translationData = {\r\n                    shown: translated,\r\n                    translated: translated,\r\n                    original: original\r\n                },\r\n                translateAttr = composeTranslateAttr(translationData, location);\r\n\r\n            $(el).attr('data-translate', translateAttr);\r\n\r\n            setText(el, translationData.shown);\r\n        },\r\n\r\n        /**\r\n         * Checks if node represents ko virtual node (nodeType === 8, nodeName === '#comment').\r\n         *\r\n         * @param {HTMLElement} node\r\n         * @returns {Boolean}\r\n         */\r\n        isVirtualElement = function (node) {\r\n            return node.nodeType === 8;\r\n        },\r\n\r\n        /**\r\n        * Checks if it's real DOM element\r\n        * in case of virtual element, returns span wrapper\r\n        * @param {Object} el\r\n        * @param {bool} isUpdate\r\n        * @return {Object} el\r\n        */\r\n        getRealElement = function (el, isUpdate) {\r\n            if (isVirtualElement(el)) {\r\n                if (isUpdate) {\r\n                    return $(el).next('span');\r\n                }\r\n\r\n                return $('<span/>').insertAfter(el);\r\n            }\r\n\r\n            return el;\r\n        },\r\n\r\n        /**\r\n         * execute i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         * @param {bool} isUpdate\r\n         */\r\n        execute = function (element, valueAccessor, isUpdate) {\r\n            var original = ko.unwrap(valueAccessor() || ''),\r\n                el = getRealElement(element, isUpdate),\r\n                inlineTranslation = (module.config() || {}).inlineTranslation;\r\n\r\n            if (inlineTranslation) {\r\n                setTranslateProp(el, original);\r\n            } else {\r\n                setText(el, $.mage.__(original));\r\n            }\r\n        };\r\n\r\n    /**\r\n     * i18n binding\r\n     * @property {Function}  init\r\n     * @property {Function}  update\r\n     */\r\n    ko.bindingHandlers.i18n = {\r\n\r\n        /**\r\n         * init i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            execute(element, valueAccessor);\r\n        },\r\n\r\n        /**\r\n         * update i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            execute(element, valueAccessor, true);\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.i18n = true;\r\n\r\n    renderer\r\n        .addNode('translate', {\r\n            binding: 'i18n'\r\n        })\r\n        .addAttribute('translate', {\r\n            binding: 'i18n'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/fadeVisible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko'\r\n], function ($, ko) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.fadeVisible = {\r\n        /**\r\n         * Initially set the element to be instantly visible/hidden depending on the value.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            // Use \"unwrapObservable\" so we can handle values that may or may not be observable\r\n            $(element).toggle(ko.unwrap(value));\r\n        },\r\n\r\n        /**\r\n         * Whenever the value subsequently changes, slowly fade the element in or out.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/outer_click.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates outerClick binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        onlyIfVisible: true\r\n    };\r\n\r\n    /**\r\n     * Checks if element sis visible.\r\n     *\r\n     * @param {Element} el\r\n     * @returns {Boolean}\r\n     */\r\n    function isVisible(el) {\r\n        var style = window.getComputedStyle(el),\r\n            visibility = {\r\n                display: 'none',\r\n                visibility: 'hidden',\r\n                opacity: '0'\r\n            },\r\n            visible = true;\r\n\r\n        _.each(visibility, function (val, key) {\r\n            if (style[key] === val) {\r\n                visible = false;\r\n            }\r\n        });\r\n\r\n        return visible;\r\n    }\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element,\r\n     * invokes specified in configuration callback.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} config\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, config, e) {\r\n        var target = e.target,\r\n            callback = config.callback;\r\n\r\n        if (container === target || container.contains(target)) {\r\n            return;\r\n        }\r\n\r\n        if (config.onlyIfVisible) {\r\n            if (!_.isNull(container.offsetParent) && isVisible(container)) {\r\n                callback();\r\n            }\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {(Object|Function)} [options={}]\r\n     * @returns {Object}\r\n     */\r\n    function buildConfig(options) {\r\n        var config = {};\r\n\r\n        if (_.isFunction(options)) {\r\n            options = {\r\n                callback: options\r\n            };\r\n        } else if (!_.isObject(options)) {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend(config, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.outerClick = {\r\n\r\n        /**\r\n         * Initializes outer click binding.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config = buildConfig(valueAccessor()),\r\n                outerClick = onOuterClick.bind(null, element, config),\r\n                isTouchDevice = typeof document.ontouchstart !== 'undefined';\r\n\r\n            if (isTouchDevice) {\r\n                $(document).on('touchstart', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('touchstart', outerClick);\r\n                });\r\n            } else {\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('outerClick');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/keyboard.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.keyboard = {\r\n\r\n        /**\r\n         * Attaches keypress handlers to element\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         * @param  {Object} allBindings - all bindings object\r\n         * @param  {Object} viewModel - reference to viewmodel\r\n         */\r\n        init: function (el, valueAccessor, allBindings, viewModel) {\r\n            var map = valueAccessor();\r\n\r\n            ko.utils.registerEventHandler(el, 'keyup', function (e) {\r\n                var callback = map[e.keyCode];\r\n\r\n                if (callback) {\r\n                    return callback.call(viewModel, e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('keyboard');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/staticChecked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.staticChecked = {\r\n        'after': ['value', 'attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'checked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor, allBindings) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                isValueArray,\r\n                oldElemValue,\r\n                useCheckedValue,\r\n                checkedValue,\r\n                updateModel,\r\n                updateView;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            checkedValue = ko.pureComputed(function () {\r\n                if (allBindings.has('checkedValue')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                } else if (allBindings.has('value')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                }\r\n\r\n                return element.value;\r\n            });\r\n\r\n            isValueArray = isCheckbox && ko.utils.unwrapObservable(valueAccessor()) instanceof Array;\r\n            oldElemValue = isValueArray ? checkedValue() : undefined;\r\n            useCheckedValue = isRadio || isValueArray;\r\n\r\n            /**\r\n             * Updates values array if it's necessary.\r\n             */\r\n            updateModel = function () {\r\n                var isChecked = element.checked,\r\n                    elemValue = useCheckedValue ? checkedValue() : isChecked,\r\n                    modelValue;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n\r\n                if (isValueArray) {\r\n                    if (oldElemValue !== elemValue) {\r\n                        oldElemValue = elemValue;\r\n                    } else {\r\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\r\n                    }\r\n                } else {\r\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state.\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                if (isValueArray) {\r\n                    element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n                } else if (isCheckbox) {\r\n                    element.checked = modelValue;\r\n                } else {\r\n                    element.checked = checkedValue() === modelValue;\r\n                }\r\n            };\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            ko.utils.registerEventHandler(element, 'click', updateModel);\r\n\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.staticChecked = true;\r\n\r\n    renderer.addAttribute('staticChecked');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var collapsible,\r\n        defaults;\r\n\r\n    defaults = {\r\n        closeOnOuter: true,\r\n        onTarget: false,\r\n        openClass: '_active',\r\n        as: '$collapsible'\r\n    };\r\n\r\n    collapsible = {\r\n\r\n        /**\r\n         * Sets 'opened' property to true.\r\n         */\r\n        open: function () {\r\n            this.opened(true);\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' property to false.\r\n         */\r\n        close: function () {\r\n            this.opened(false);\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         */\r\n        toggle: function () {\r\n            this.opened(!this.opened());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element, closes collapsible model.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} model\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, model, e) {\r\n        var target = e.target;\r\n\r\n        if (target !== container && !container.contains(target)) {\r\n            model.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates 'css' binding which toggles\r\n     * class specified in 'name' parameter.\r\n     *\r\n     * @param {Object} model\r\n     * @param {String} name\r\n     * @returns {Object}\r\n     */\r\n    function getClassBinding(model, name) {\r\n        var binding = {};\r\n\r\n        binding[name] = model.opened;\r\n\r\n        return {\r\n            css: binding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {Object} [options={}]\r\n     * @returns {Object} Complete instance configuration.\r\n     */\r\n    function buildConfig(options) {\r\n        if (typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend({}, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.collapsible = {\r\n\r\n        /**\r\n         * Initializes 'collapsible' binding.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var $collapsible = Object.create(collapsible),\r\n                config = buildConfig(valueAccessor()),\r\n                outerClick,\r\n                bindings;\r\n\r\n            _.bindAll($collapsible, 'open', 'close', 'toggle');\r\n\r\n            $collapsible.opened = ko.observable(!!config.opened);\r\n\r\n            bindingCtx[config.as] = $collapsible;\r\n\r\n            if (config.closeOnOuter) {\r\n                outerClick = onOuterClick.bind(null, element, $collapsible);\r\n\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n\r\n            if (config.openClass) {\r\n                bindings = getClassBinding($collapsible, config.openClass);\r\n\r\n                ko.applyBindingsToNode(element, bindings, bindingCtx);\r\n            }\r\n\r\n            if (config.onTarget) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n\r\n            if (viewModel && _.isFunction(viewModel.on)) {\r\n                viewModel.on({\r\n                    close:          $collapsible.close,\r\n                    open:           $collapsible.open,\r\n                    toggleOpened:   $collapsible.toggle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.closeCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which closes associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.close);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.openCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which opens associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.open);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.toggleCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which toggles associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addAttribute('collapsible')\r\n        .addAttribute('openCollapsible')\r\n        .addAttribute('closeCollapsible')\r\n        .addAttribute('toggleCollapsible');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var renderer = require('../template/renderer');\r\n\r\n    renderer.addAttribute('repeat', renderer.handlers.wrapAttribute);\r\n\r\n    renderer.addAttribute('outerfasteach', {\r\n        binding: 'fastForEach',\r\n        handler: renderer.handlers.wrapAttribute\r\n    });\r\n\r\n    renderer\r\n        .addNode('repeat')\r\n        .addNode('fastForEach');\r\n\r\n    return {\r\n        resizable:      require('./resizable'),\r\n        i18n:           require('./i18n'),\r\n        scope:          require('./scope'),\r\n        range:          require('./range'),\r\n        mageInit:       require('./mage-init'),\r\n        keyboard:       require('./keyboard'),\r\n        optgroup:       require('./optgroup'),\r\n        afterRender:     require('./after-render'),\r\n        autoselect:     require('./autoselect'),\r\n        datepicker:     require('./datepicker'),\r\n        outerClick:     require('./outer_click'),\r\n        fadeVisible:    require('./fadeVisible'),\r\n        collapsible:    require('./collapsible'),\r\n        staticChecked:  require('./staticChecked'),\r\n        simpleChecked:  require('./simple-checked'),\r\n        bindHtml:       require('./bind-html'),\r\n        tooltip:        require('./tooltip'),\r\n        repeat:         require('knockoutjs/knockout-repeat'),\r\n        fastForEach:    require('knockoutjs/knockout-fast-foreach'),\r\n        colorPicker:    require('./color-picker')\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/color-picker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer',\r\n    'spectrum',\r\n    'tinycolor'\r\n], function (ko, $, renderer, spectrum, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Change color picker status to be enabled or disabled\r\n     *\r\n     * @param {HTMLElement} element - Element to apply colorpicker enable/disable status to.\r\n     * @param {Object} viewModel - Object, which represents view model binded to el.\r\n     */\r\n    function changeColorPickerStateBasedOnViewModel(element, viewModel) {\r\n        $(element).spectrum(viewModel.disabled() ? 'disable' : 'enable');\r\n    }\r\n\r\n    ko.bindingHandlers.colorPicker = {\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor(),\r\n\r\n                /** change value */\r\n                changeValue = function (value) {\r\n                    if (value == null) {\r\n                        value = '';\r\n                    }\r\n                    config.value(value.toString());\r\n                };\r\n\r\n            config.change = changeValue;\r\n\r\n            config.hide = changeValue;\r\n\r\n            /** show value */\r\n            config.show = function () {\r\n                if (!viewModel.focused()) {\r\n                    viewModel.focused(true);\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            $(element).spectrum(config);\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         *\r\n         * @param {HTMLElement} element - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to element.\r\n         */\r\n        update: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor();\r\n\r\n            /** Initialise value as empty if it is undefined when color picker input is reset **/\r\n            if (config.value() === undefined) {\r\n                config.value('');\r\n            }\r\n\r\n            if (tinycolor(config.value()).isValid() || config.value() === '') {\r\n                $(element).spectrum('set', config.value());\r\n\r\n                if (config.value() !== '') {\r\n                    config.value($(element).spectrum('get').toString());\r\n                }\r\n            }\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('colorPicker');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/scope.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates scope binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'uiRegistry',\r\n    'mage/translate',\r\n    '../template/renderer',\r\n    'jquery',\r\n    '../../logger/console-logger'\r\n], function (ko, registry, $t, renderer, $, consoleLogger) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates child context with passed component param as $data. Extends context with $t helper.\r\n     * Applies bindings to descendant nodes.\r\n     * @param {HTMLElement} el - element to apply bindings to.\r\n     * @param {ko.bindingContext} bindingContext - instance of ko.bindingContext, passed to binding initially.\r\n     * @param {Promise} promise - instance of jQuery promise\r\n     * @param {Object} component - component instance to attach to new context\r\n     */\r\n    function applyComponents(el, bindingContext, promise, component) {\r\n        promise.resolve();\r\n        component = bindingContext.createChildContext(component);\r\n\r\n        ko.utils.extend(component, {\r\n            $t: $t\r\n        });\r\n\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n\r\n        ko.applyBindingsToDescendants(component, el);\r\n    }\r\n\r\n    ko.bindingHandlers.scope = {\r\n\r\n        /**\r\n         * Scope binding's init method.\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var component = valueAccessor(),\r\n                promise = $.Deferred(),\r\n                apply = applyComponents.bind(this, el, bindingContext, promise),\r\n                loggerUtils = consoleLogger.utils;\r\n\r\n            if (typeof component === 'string') {\r\n                loggerUtils.asyncLog(\r\n                    promise,\r\n                    {\r\n                        data: {\r\n                            component: component\r\n                        },\r\n                        messages: loggerUtils.createMessages(\r\n                            'requestingComponent',\r\n                            'requestingComponentIsLoaded',\r\n                            'requestingComponentIsFailed'\r\n                        )\r\n                    }\r\n                );\r\n\r\n                registry.get(component, apply);\r\n            } else if (typeof component === 'function') {\r\n                component(apply);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.scope = true;\r\n\r\n    renderer\r\n        .addNode('scope')\r\n        .addAttribute('scope', {\r\n            name: 'ko-scope'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/view/utils/bindings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided  value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Removes from the provided array all non-root nodes located inside\r\n     * of the comment element as long as the closing comment tags.\r\n     *\r\n     * @param {(Array|ArrayLike)} nodes - An array of nodes to be processed.\r\n     * @returns {Array}\r\n     */\r\n    function normalize(nodes) {\r\n        var result;\r\n\r\n        nodes   = _.toArray(nodes);\r\n        result  = nodes.slice();\r\n\r\n        nodes.forEach(function (node) {\r\n            if (node.nodeType === 8) {\r\n                result = !ko.virtualElements.hasBindingValue(node) ?\r\n                    _.without(result, node) :\r\n                    _.difference(result, ko.virtualElements.childNodes(node));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extends binding context of each item in the collection.\r\n     *\r\n     * @param {...Object} extenders - Multiple extender objects to be applied to the context.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.extendCtx = function () {\r\n        var nodes       = normalize(this),\r\n            extenders   = _.toArray(arguments);\r\n\r\n        nodes.forEach(function (node) {\r\n            var ctx  = ko.contextFor(node),\r\n                data = [ctx].concat(extenders);\r\n\r\n            _.extend.apply(_, data);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Evaluates bindings specified in each DOM element of collection.\r\n     *\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.applyBindings = function (ctx) {\r\n        var nodes = normalize(this),\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            ko.applyBindings(nodeCtx, node);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Adds specified bindings to each DOM element in\r\n     * collection and evaluates them with provided context.\r\n     *\r\n     * @param {(Object|Function)} data - Either bindings object or a function\r\n     *      which returns bindings data for each element in collection.\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.bindings = function (data, ctx) {\r\n        var nodes    = normalize(this),\r\n            bindings = data,\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            if (_.isFunction(data)) {\r\n                bindings = data(nodeCtx, node);\r\n            }\r\n\r\n            ko.applyBindingsToNode(node, bindings, nodeCtx);\r\n        });\r\n\r\n        return this;\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/dom-observer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'domReady!'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var counter = 1,\r\n        watchers,\r\n        globalObserver,\r\n        disabledNodes = [];\r\n\r\n    watchers = {\r\n        selectors: {},\r\n        nodes: {}\r\n    };\r\n\r\n    /**\r\n     * Checks if node represents an element node (nodeType === 1).\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Boolean}\r\n     */\r\n    function isElementNode(node) {\r\n        return node.nodeType === 1;\r\n    }\r\n\r\n    /**\r\n     * Extracts all child descendant\r\n     * elements of a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Array}\r\n     */\r\n    function extractChildren(node) {\r\n        var children = node.querySelectorAll('*');\r\n\r\n        return _.toArray(children);\r\n    }\r\n\r\n    /**\r\n     * Extracts node identifier. If ID is not specified,\r\n     * then it will be created for the provided node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Number}\r\n     */\r\n    function getNodeId(node) {\r\n        var id = node._observeId;\r\n\r\n        if (!id) {\r\n            id = node._observeId = counter++;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Invokes callback passing node to it.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function trigger(node, data) {\r\n        var id = getNodeId(node),\r\n            ids = data.invoked;\r\n\r\n        if (_.contains(ids, id)) {\r\n            return;\r\n        }\r\n\r\n        data.callback(node);\r\n        data.invoked.push(id);\r\n    }\r\n\r\n    /**\r\n     * Adds node to the observer list.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object}\r\n     */\r\n    function createNodeData(node) {\r\n        var nodes   = watchers.nodes,\r\n            id      = getNodeId(node);\r\n\r\n        nodes[id] = nodes[id] || {};\r\n\r\n        return nodes[id];\r\n    }\r\n\r\n    /**\r\n     * Returns data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object|Undefined}\r\n     */\r\n    function getNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        return watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Removes data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        delete watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Adds removal listener for a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function addRemovalListener(node, data) {\r\n        var nodeData = createNodeData(node);\r\n\r\n        (nodeData.remove = nodeData.remove || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Adds listener for the nodes which matches specified selector.\r\n     *\r\n     * @param {String} selector - CSS selector.\r\n     * @param {Object} data\r\n     */\r\n    function addSelectorListener(selector, data) {\r\n        var storage = watchers.selectors;\r\n\r\n        (storage[selector] = storage[selector] || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with an added node.\r\n     * Adds listeners for the node removal.\r\n     *\r\n     * @param {HTMLElement} node - Added node.\r\n     */\r\n    function processAdded(node) {\r\n        _.each(watchers.selectors, function (listeners, selector) {\r\n            listeners.forEach(function (data) {\r\n                if (!data.ctx.contains(node) || !$(node, data.ctx).is(selector)) {\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'add') {\r\n                    trigger(node, data);\r\n                } else if (data.type === 'remove') {\r\n                    addRemovalListener(node, data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with a removed node.\r\n     *\r\n     * @param {HTMLElement} node - Removed node.\r\n     */\r\n    function processRemoved(node) {\r\n        var nodeData    = getNodeData(node),\r\n            listeners   = nodeData && nodeData.remove;\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        listeners.forEach(function (data) {\r\n            trigger(node, data);\r\n        });\r\n\r\n        removeNodeData(node);\r\n    }\r\n\r\n    /**\r\n     * Removes all non-element nodes from provided array\r\n     * and appends to it descendant elements.\r\n     *\r\n     * @param {Array} nodes\r\n     * @returns {Array}\r\n     */\r\n    function formNodesList(nodes) {\r\n        var result = [],\r\n            children;\r\n\r\n        nodes = _.toArray(nodes).filter(isElementNode);\r\n\r\n        nodes.forEach(function (node) {\r\n            result.push(node);\r\n\r\n            children = extractChildren(node);\r\n            result   = result.concat(children);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Collects all removed and added nodes from\r\n     * mutation records into separate arrays\r\n     * while removing duplicates between both types of changes.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Object} Object with 'removed' and 'added' nodes arrays.\r\n     */\r\n    function formChangesLists(mutations) {\r\n        var removed = [],\r\n            added = [];\r\n\r\n        mutations.forEach(function (record) {\r\n            removed = removed.concat(_.toArray(record.removedNodes));\r\n            added   = added.concat(_.toArray(record.addedNodes));\r\n        });\r\n\r\n        removed = removed.filter(function (node) {\r\n            var addIndex = added.indexOf(node),\r\n                wasAdded = !!~addIndex;\r\n\r\n            if (wasAdded) {\r\n                added.splice(addIndex, 1);\r\n            }\r\n\r\n            return !wasAdded;\r\n        });\r\n\r\n        return {\r\n            removed: formNodesList(removed),\r\n            added: formNodesList(added)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Verify if the DOM node is a child of a defined disabled node, if so we shouldn't observe provided mutation.\r\n     *\r\n     * @param {Object} mutation - a single mutation\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutation(mutation) {\r\n        var isDisabled;\r\n\r\n        if (disabledNodes.length > 0) {\r\n            // Iterate through the disabled nodes and determine if this mutation is occurring inside one of them\r\n            isDisabled = _.find(disabledNodes, function (node) {\r\n                return node === mutation.target || $.contains(node, mutation.target);\r\n            });\r\n\r\n            // If we find a matching node we should not observe the mutation\r\n            return !isDisabled;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should we observe these mutations? Check the first and last mutation to determine if this is a disabled mutation,\r\n     * we check both the first and last in case one has been removed from the DOM during the process of the mutation.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutations(mutations) {\r\n        var firstMutation,\r\n            lastMutation;\r\n\r\n        if (mutations.length > 0) {\r\n            firstMutation = mutations[0];\r\n            lastMutation = mutations[mutations.length - 1];\r\n\r\n            return shouldObserveMutation(firstMutation) && shouldObserveMutation(lastMutation);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    globalObserver = new MutationObserver(function (mutations) {\r\n        var changes;\r\n\r\n        if (shouldObserveMutations(mutations)) {\r\n            changes = formChangesLists(mutations);\r\n\r\n            changes.removed.forEach(processRemoved);\r\n            changes.added.forEach(processAdded);\r\n        }\r\n    });\r\n\r\n    globalObserver.observe(document.body, {\r\n        subtree: true,\r\n        childList: true\r\n    });\r\n\r\n    return {\r\n        /**\r\n         * Disable a node from being observed by the mutations, you may want to disable specific aspects of the\r\n         * application which are heavy on DOM changes. The observer running on some actions could cause significant\r\n         * delays and degrade the performance of that specific part of the application exponentially.\r\n         *\r\n         * @param {HTMLElement} node - a HTML node within the document\r\n         */\r\n        disableNode: function (node) {\r\n            disabledNodes.push(node);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the appearance of nodes that matches provided\r\n         * selector and which are inside of the provided context. Callback will be\r\n         * also invoked on elements which a currently present.\r\n         *\r\n         * @param {String} selector - CSS selector.\r\n         * @param {Function} callback - Function that will invoked when node appears.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        get: function (selector, callback, ctx) {\r\n            var data,\r\n                nodes;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'add',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            nodes = $(selector, data.ctx).toArray();\r\n\r\n            nodes.forEach(function (node) {\r\n                trigger(node, data);\r\n            });\r\n\r\n            addSelectorListener(selector, data);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the nodes removal.\r\n         *\r\n         * @param {(jQueryObject|HTMLElement|Array|String)} selector\r\n         * @param {Function} callback - Function that will invoked when node is removed.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        remove: function (selector, callback, ctx) {\r\n            var nodes = [],\r\n                data;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'remove',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            if (typeof selector === 'object') {\r\n                nodes = !_.isUndefined(selector.length) ?\r\n                    _.toArray(selector) :\r\n                    [selector];\r\n            } else if (_.isString(selector)) {\r\n                nodes = $(selector, ctx).toArray();\r\n\r\n                addSelectorListener(selector, data);\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                addRemovalListener(node, data);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes listeners.\r\n         *\r\n         * @param {String} selector\r\n         * @param {Function} [fn]\r\n         */\r\n        off: function (selector, fn) {\r\n            var selectors = watchers.selectors,\r\n                listeners = selectors[selector];\r\n\r\n            if (selector && !fn) {\r\n                delete selectors[selector];\r\n            } else if (listeners && fn) {\r\n                selectors[selector] = listeners.filter(function (data) {\r\n                    return data.callback !== fn;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/raf.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global WeakMap */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var processMap = new WeakMap(),\r\n        origRaf,\r\n        raf;\r\n\r\n    origRaf = window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.onRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (callback) {\r\n            if (typeof callback != 'function') {\r\n                throw new Error('raf argument \"callback\" must be of type function');\r\n            }\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n\r\n    /**\r\n     * Creates new process object or extracts the\r\n     * the existing one.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Object}\r\n     */\r\n    function getProcess(id, fps) {\r\n        var process = processMap.get(id);\r\n\r\n        if (!process) {\r\n            process = {};\r\n            processMap.set(id, process);\r\n        }\r\n\r\n        if (process.fps !== fps) {\r\n            process.fps        = fps;\r\n            process.interval   = 1000 / fps;\r\n            process.update     = Date.now();\r\n        }\r\n\r\n        return process;\r\n    }\r\n\r\n    /**\r\n     * Proxy method which delegates call to the 'requestAnimationFrame'\r\n     * function and optionally can keep track of the FPS with which\r\n     * provided function is called.\r\n     *\r\n     * @param {Function} callback - Callback function to be passed to 'requestAnimationFrame'.\r\n     * @param {Number} [fps] - If specified, will update FPS counter for the provided function.\r\n     * @returns {Number|Boolean} ID of request or a flag which indicates\r\n     *      whether callback fits specified FPS.\r\n     */\r\n    raf = function (callback, fps) {\r\n        var rafId = origRaf(callback);\r\n\r\n        return fps ? raf.tick(callback, fps) : rafId;\r\n    };\r\n\r\n    /**\r\n     * Updates FPS counter for the specified process\r\n     * and returns a flag which indicates whether\r\n     * counter value is equal or greater than the required FPS.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Boolean}\r\n     */\r\n    raf.tick = function (id, fps) {\r\n        var process  = getProcess(id, fps),\r\n            now      = Date.now(),\r\n            delta    = now - process.update,\r\n            interval = process.interval;\r\n\r\n        if (fps >= 60 || delta >= interval) {\r\n            process.update = now - delta % interval;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return raf;\r\n});\r\n","Magento_Ui/js/lib/view/utils/async.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry',\r\n    './dom-observer',\r\n    'Magento_Ui/js/lib/knockout/extender/bound-nodes',\r\n    './bindings'\r\n], function (ko, $, _, registry, domObserver, boundedNodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Parses provided string and extracts\r\n     * component, context and selector data from it.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {Object} Data retrieved from string.\r\n     *\r\n     * @example Sample format.\r\n     *      '{{component}}:{{ctx}} -> {{selector}}'\r\n     *\r\n     *      component - Name of component.\r\n     *      ctx - Selector of the root node upon which component is binded.\r\n     *      selector - Selector of DOM elements located\r\n     *          inside of a previously specified context.\r\n     */\r\n    function parseSelector(str) {\r\n        var data    = str.trim().split('->'),\r\n            result  = {},\r\n            componentData;\r\n\r\n        if (data.length === 1) {\r\n            if (!~data[0].indexOf(':')) {\r\n                result.selector = data[0];\r\n            } else {\r\n                componentData = data[0];\r\n            }\r\n        } else {\r\n            componentData   = data[0];\r\n            result.selector = data[1];\r\n        }\r\n\r\n        if (componentData) {\r\n            componentData = componentData.split(':');\r\n\r\n            result.component = componentData[0];\r\n            result.ctx = componentData[1];\r\n        }\r\n\r\n        _.each(result, function (value, key) {\r\n            result[key] = value.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Internal method used to normalize argumnets passed\r\n     * to 'async' module methods.\r\n     *\r\n     * @param {(String|Objetc)} selector\r\n     * @param {(HTMLElement|Object|String)} [ctx]\r\n     * @returns {Object}\r\n     */\r\n    function parseData(selector, ctx) {\r\n        var data = {};\r\n\r\n        if (arguments.length === 2) {\r\n            data.selector = selector;\r\n\r\n            if (isDomElement(ctx)) {\r\n                data.ctx = ctx;\r\n            } else {\r\n                data.component = ctx;\r\n                data.ctx = '*';\r\n            }\r\n        } else {\r\n            data = _.isString(selector) ?\r\n                parseSelector(selector) :\r\n                selector;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Creates promise that will be resolved\r\n     * when requested component is registred.\r\n     *\r\n     * @param {String} name - Name of component.\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function waitComponent(name) {\r\n        var deffer = $.Deferred();\r\n\r\n        if (_.isString(name)) {\r\n            registry.get(name, function (component) {\r\n                deffer.resolve(component);\r\n            });\r\n        } else {\r\n            deffer.resolve(name);\r\n        }\r\n\r\n        return deffer.promise();\r\n    }\r\n\r\n    /**\r\n     * Creates listener for the nodes binded to provided component.\r\n     *\r\n     * @param {Object} data - Listener data.\r\n     * @param {Object} component - Associated with nodes component.\r\n     */\r\n    function setRootListener(data, component) {\r\n        boundedNodes.get(component, function (root) {\r\n            if (!$(root).is(data.ctx || '*')) {\r\n                return;\r\n            }\r\n\r\n            data.selector ?\r\n                domObserver.get(data.selector, data.fn, root) :\r\n                data.fn(root);\r\n        });\r\n    }\r\n\r\n    /*eslint-disable no-unused-vars*/\r\n    /**\r\n     * Sets listener for the appearance of elements which\r\n     * matches specified selector data.\r\n     *\r\n     * @param {(String|Object)} selector - Valid css selector or a string\r\n     *      in format acceptable by 'parseSelector' method or an object with\r\n     *      'component', 'selector' and 'ctx' properties.\r\n     * @param {(HTMLElement|Object|String)} [ctx] - Optional context parameter\r\n     *      which might be a DOM element, component instance or components' name.\r\n     * @param {Function} fn - Callback that will be invoked\r\n     *      when required DOM element appears.\r\n     *\r\n     * @example\r\n     *      Creating listener of the 'span' nodes appearance,\r\n     *      located inside of 'div' nodes, which are binded to 'cms_page_listing' component:\r\n     *\r\n     *      $.async('cms_page_listing:div -> span', function (node) {});\r\n     *\r\n     * @example Another syntaxes of the previous example.\r\n     *      $.async({\r\n     *          component: 'cms_page_listing',\r\n     *          ctx: 'div',\r\n     *          selector: 'span'\r\n     *       }, function (node) {});\r\n     *\r\n     * @example Listens for appearance of any child node inside of specified component.\r\n     *      $.async('> *', 'cms_page_lsiting', function (node) {});\r\n     *\r\n     * @example Listens for appearance of 'span' nodes inside of specific context.\r\n     *      $.async('span', document.getElementById('test'), function (node) {});\r\n     */\r\n    $.async = function (selector, ctx, fn) {\r\n        var args = _.toArray(arguments),\r\n            data = parseData.apply(null, _.initial(args));\r\n\r\n        data.fn = _.last(args);\r\n\r\n        if (data.component) {\r\n            waitComponent(data.component)\r\n                .then(setRootListener.bind(null, data));\r\n        } else {\r\n            domObserver.get(data.selector, data.fn, data.ctx);\r\n        }\r\n    };\r\n\r\n    /*eslint-enable no-unused-vars*/\r\n\r\n    _.extend($.async, {\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Returns collection of elements found by provided selector data.\r\n         *\r\n         * @param {(String|Object)} selector - See 'async' definition.\r\n         * @param {(HTMLElement|Object|String)} [ctx] - See 'async' definition.\r\n         * @returns {Array} An array of DOM elements.\r\n         */\r\n        get: function (selector, ctx) {\r\n            var data        = parseData.apply(null, arguments),\r\n                component   = data.component,\r\n                nodes;\r\n\r\n            if (!component) {\r\n                return $(data.selector, data.ctx).toArray();\r\n            } else if (_.isString(component)) {\r\n                component = registry.get(component);\r\n            }\r\n\r\n            if (!component) {\r\n                return [];\r\n            }\r\n\r\n            nodes = boundedNodes.get(component);\r\n            nodes = $(nodes).filter(data.ctx).toArray();\r\n\r\n            return data.selector ?\r\n                $(data.selector, nodes).toArray() :\r\n                nodes;\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n\r\n        /**\r\n         * Sets removal listener of the specified nodes.\r\n         *\r\n         * @param {(HTMLElement|Array|ArrayLike)} nodes - Nodes whose removal to track.\r\n         * @param {Function} fn - Callback that will be invoked when node is removed.\r\n         */\r\n        remove: function (nodes, fn) {\r\n            domObserver.remove(nodes, fn);\r\n        },\r\n\r\n        parseSelector: parseSelector\r\n    });\r\n\r\n    return $;\r\n});\r\n","Magento_Ui/js/form/button-adapter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiClass',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry'\r\n], function (Class, $, _, registry) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initialize actions and adapter.\r\n         *\r\n         * @param {Object} config\r\n         * @param {Element} elem\r\n         * @returns {Object}\r\n         */\r\n        initialize: function (config, elem) {\r\n            return this._super()\r\n                .initActions()\r\n                .initAdapter(elem);\r\n        },\r\n\r\n        /**\r\n         * Creates callback from declared actions.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initActions: function () {\r\n            var callbacks = [];\r\n\r\n            _.each(this.actions, function (action) {\r\n                callbacks.push({\r\n                    action: registry.async(action.targetName),\r\n                    args: _.union([action.actionName], action.params)\r\n                });\r\n            });\r\n\r\n            /**\r\n             * Callback function.\r\n             */\r\n            this.callback = function () {\r\n                _.each(callbacks, function (callback) {\r\n                    callback.action.apply(callback.action, callback.args);\r\n                });\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback handler on button.\r\n         *\r\n         * @param {Element} elem\r\n         */\r\n        initAdapter: function (elem) {\r\n            $(elem).on('click', this.callback);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/adapter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Ui/js/form/adapter/buttons'\r\n], function ($, _, buttons) {\r\n    'use strict';\r\n\r\n    var selectorPrefix = '',\r\n        eventPrefix;\r\n\r\n    /**\r\n     * Initialize listener.\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} action\r\n     */\r\n    function initListener(callback, action) {\r\n        var selector    = selectorPrefix ? selectorPrefix + ' ' + buttons[action] : buttons[action],\r\n            elem        = $(selector)[0];\r\n\r\n        if (!elem) {\r\n            return;\r\n        }\r\n\r\n        if (elem.onclick) {\r\n            elem.onclick = null;\r\n        }\r\n\r\n        $(elem).on('click' + eventPrefix, callback);\r\n    }\r\n\r\n    /**\r\n     * Destroy listener.\r\n     *\r\n     * @param {String} action\r\n     */\r\n    function destroyListener(action) {\r\n        var selector    = selectorPrefix ? selectorPrefix + ' ' + buttons[action] : buttons[action],\r\n            elem        = $(selector)[0];\r\n\r\n        if (!elem) {\r\n            return;\r\n        }\r\n\r\n        if (elem.onclick) {\r\n            elem.onclick = null;\r\n        }\r\n\r\n        $(elem).off('click' + eventPrefix);\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attaches events handlers.\r\n         *\r\n         * @param {Object} handlers\r\n         * @param {String} selectorPref\r\n         * @param {String} eventPref\r\n         */\r\n        on: function (handlers, selectorPref, eventPref) {\r\n            selectorPrefix = selectorPrefix || selectorPref;\r\n            eventPrefix = eventPref;\r\n            _.each(handlers, initListener);\r\n            selectorPrefix = '';\r\n        },\r\n\r\n        /**\r\n         * Removes events handlers.\r\n         *\r\n         * @param {Object} handlers\r\n         * @param {String} eventPref\r\n         */\r\n        off: function (handlers, eventPref) {\r\n            eventPrefix = eventPref;\r\n            _.each(handlers, destroyListener);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/form/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    './client',\r\n    'mageUtils'\r\n], function (_, Element, Client, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            clientConfig: {\r\n                urls: {\r\n                    save: '${ $.submit_url }',\r\n                    beforeSave: '${ $.validate_url }'\r\n                }\r\n            },\r\n            ignoreTmpls: {\r\n                data: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initClient();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes client component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initClient: function () {\r\n            this.client = new Client(this.clientConfig);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Saves currently available data.\r\n         *\r\n         * @param {Object} [options] - Addtitional request options.\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        save: function (options) {\r\n            var data = this.get('data');\r\n\r\n            this.client.save(data, options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update data that stored in provider.\r\n         *\r\n         * @param {Boolean} isProvider\r\n         * @param {Object} newData\r\n         * @param {Object} oldData\r\n         *\r\n         * @returns {Provider}\r\n         */\r\n        updateConfig: function (isProvider, newData, oldData) {\r\n            if (isProvider === true) {\r\n                this.setData(oldData, newData, this);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *  Set data to provider based on current data.\r\n         *\r\n         * @param {Object} oldData\r\n         * @param {Object} newData\r\n         * @param {Provider} current\r\n         * @param {String} parentPath\r\n         */\r\n        setData: function (oldData, newData, current, parentPath) {\r\n            _.each(newData, function (val, key) {\r\n                if (_.isObject(val) || _.isArray(val)) {\r\n                    this.setData(oldData[key], val, current[key], utils.fullPath(parentPath, key));\r\n                } else if (val != oldData[key] && oldData[key] == current[key]) {//eslint-disable-line eqeqeq\r\n                    this.set(utils.fullPath(parentPath, key), val);\r\n                }\r\n            }, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/switcher.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (_, registry, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            rules: []\r\n        },\r\n\r\n        /**\r\n         * Initializes instance of a DataSwitcher.\r\n         *\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initRules();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initRules: function () {\r\n            this.rules.forEach(this.initRule, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule definition.\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initRule: function (rule) {\r\n            var handler = this.onValueChange.bind(this, rule);\r\n\r\n            if (!rule.target) {\r\n                rule.target = this.target;\r\n            }\r\n\r\n            if (!rule.property) {\r\n                rule.property = this.property;\r\n            }\r\n\r\n            registry.get(rule.target, function (target) {\r\n                this.applyRule(rule, target.get(rule.property));\r\n                target.on(rule.property, handler);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule definition.\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        addRule: function (rule) {\r\n            this.rules.push(rule);\r\n            this.initRule(rule);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule object.\r\n         * @param {*} value - Current value associated with a rule.\r\n         */\r\n        applyRule: function (rule, value) {\r\n            var actions = rule.actions;\r\n\r\n            //TODO Refactor this logic in scope of MAGETWO-48585\r\n            /* eslint-disable eqeqeq */\r\n            if (rule.value != value) {\r\n                return;\r\n            } else if (rule.strict) {\r\n                return;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n            actions.forEach(this.applyAction, this);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} action - Action object.\r\n         */\r\n        applyAction: function (action) {\r\n            registry.get(action.target, function (target) {\r\n                var callback = target[action.callback];\r\n\r\n                callback.apply(target, action.params || []);\r\n            });\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rules object.\r\n         * @param {*} value - Current value associated with a rule.\r\n         */\r\n        onValueChange: function (rule, value) {\r\n            this.applyRule(rule, value);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'rjsResolver',\r\n    './adapter',\r\n    'uiCollection',\r\n    'mageUtils',\r\n    'jquery',\r\n    'Magento_Ui/js/core/app',\r\n    'mage/validation'\r\n], function (_, loader, resolver, adapter, Collection, utils, $, app) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Format params\r\n     *\r\n     * @param {Object} params\r\n     * @returns {Array}\r\n     */\r\n    function prepareParams(params) {\r\n        var result = '?';\r\n\r\n        _.each(params, function (value, key) {\r\n            result += key + '=' + value + '&';\r\n        });\r\n\r\n        return result.slice(0, -1);\r\n    }\r\n\r\n    /**\r\n     * Collect form data.\r\n     *\r\n     * @param {Array} items\r\n     * @returns {Object}\r\n     */\r\n    function collectData(items) {\r\n        var result = {},\r\n            name;\r\n\r\n        items = Array.prototype.slice.call(items);\r\n\r\n        items.forEach(function (item) {\r\n            switch (item.type) {\r\n                case 'checkbox':\r\n                    result[item.name] = +!!item.checked;\r\n                    break;\r\n\r\n                case 'radio':\r\n                    if (item.checked) {\r\n                        result[item.name] = item.value;\r\n                    }\r\n                    break;\r\n\r\n                case 'select-multiple':\r\n                    name = item.name.substring(0, item.name.length - 2); //remove [] from the name ending\r\n                    result[name] = _.pluck(item.selectedOptions, 'value');\r\n                    break;\r\n\r\n                default:\r\n                    result[item.name] = item.value;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Makes ajax request\r\n     *\r\n     * @param {Object} params\r\n     * @param {Object} data\r\n     * @param {String} url\r\n     * @returns {*}\r\n     */\r\n    function makeRequest(params, data, url) {\r\n        var save = $.Deferred();\r\n\r\n        data = utils.serialize(data);\r\n        data['form_key'] = window.FORM_KEY;\r\n\r\n        if (!url) {\r\n            save.resolve();\r\n        }\r\n\r\n        $('body').trigger('processStart');\r\n\r\n        $.ajax({\r\n            url: url + prepareParams(params),\r\n            data: data,\r\n            dataType: 'json',\r\n\r\n            /**\r\n             * Success callback.\r\n             * @param {Object} resp\r\n             * @returns {Boolean}\r\n             */\r\n            success: function (resp) {\r\n                if (resp.ajaxExpired) {\r\n                    window.location.href = resp.ajaxRedirect;\r\n                }\r\n\r\n                if (!resp.error) {\r\n                    save.resolve(resp);\r\n\r\n                    return true;\r\n                }\r\n\r\n                $('body').notification('clear');\r\n                $.each(resp.messages, function (key, message) {\r\n                    $('body').notification('add', {\r\n                        error: resp.error,\r\n                        message: message,\r\n\r\n                        /**\r\n                         * Inserts message on page\r\n                         * @param {String} msg\r\n                         */\r\n                        insertMethod: function (msg) {\r\n                            $('.page-main-actions').after(msg);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Complete callback.\r\n             */\r\n            complete: function () {\r\n                $('body').trigger('processStop');\r\n            }\r\n        });\r\n\r\n        return save.promise();\r\n    }\r\n\r\n    /**\r\n     * Check if fields is valid.\r\n     *\r\n     * @param {Array}items\r\n     * @returns {Boolean}\r\n     */\r\n    function isValidFields(items) {\r\n        var result = true;\r\n\r\n        _.each(items, function (item) {\r\n            if (!$.validator.validateSingleElement(item)) {\r\n                result = false;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            additionalFields: [],\r\n            additionalInvalid: false,\r\n            selectorPrefix: '.page-content',\r\n            messagesClass: 'messages',\r\n            errorClass: '.admin__field._error',\r\n            eventPrefix: '.${ $.index }',\r\n            ajaxSave: false,\r\n            ajaxSaveType: 'default',\r\n            imports: {\r\n                reloadUrl: '${ $.provider}:reloadUrl'\r\n            },\r\n            listens: {\r\n                selectorPrefix: 'destroyAdapter initAdapter',\r\n                '${ $.name }.${ $.reloadItem }': 'params.set reload'\r\n            },\r\n            exports: {\r\n                selectorPrefix: '${ $.provider }:client.selectorPrefix',\r\n                messagesClass: '${ $.provider }:client.messagesClass'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initAdapter();\r\n\r\n            resolver(this.hideLoader, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe([\r\n                    'responseData',\r\n                    'responseStatus'\r\n                ]);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.selector = '[data-form-part=' + this.namespace + ']';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize adapter handlers.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initAdapter: function () {\r\n            adapter.on({\r\n                'reset': this.reset.bind(this),\r\n                'save': this.save.bind(this, true, {}),\r\n                'saveAndContinue': this.save.bind(this, false, {})\r\n            }, this.selectorPrefix, this.eventPrefix);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroy adapter handlers.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        destroyAdapter: function () {\r\n            adapter.off([\r\n                'reset',\r\n                'save',\r\n                'saveAndContinue'\r\n            ], this.eventPrefix);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hide loader.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        hideLoader: function () {\r\n            loader.get(this.name).hide();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate and save form.\r\n         *\r\n         * @param {String} redirect\r\n         * @param {Object} data\r\n         */\r\n        save: function (redirect, data) {\r\n            this.validate();\r\n\r\n            if (!this.additionalInvalid && !this.source.get('params.invalid')) {\r\n                this.setAdditionalData(data)\r\n                    .submit(redirect);\r\n            } else {\r\n                this.focusInvalid();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Tries to set focus on first invalid form field.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        focusInvalid: function () {\r\n            var invalidField = _.find(this.delegate('checkInvalid'));\r\n\r\n            if (!_.isUndefined(invalidField) && _.isFunction(invalidField.focused)) {\r\n                invalidField.focused(true);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set additional data to source before form submit and after validation.\r\n         *\r\n         * @param {Object} data\r\n         * @returns {Object}\r\n         */\r\n        setAdditionalData: function (data) {\r\n            _.each(data, function (value, name) {\r\n                this.source.set('data.' + name, value);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Submits form\r\n         *\r\n         * @param {String} redirect\r\n         */\r\n        submit: function (redirect) {\r\n            var additional = collectData(this.additionalFields),\r\n                source = this.source;\r\n\r\n            _.each(additional, function (value, name) {\r\n                source.set('data.' + name, value);\r\n            });\r\n\r\n            source.save({\r\n                redirect: redirect,\r\n                ajaxSave: this.ajaxSave,\r\n                ajaxSaveType: this.ajaxSaveType,\r\n                response: {\r\n                    data: this.responseData,\r\n                    status: this.responseStatus\r\n                },\r\n                attributes: {\r\n                    id: this.namespace\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validates each element and returns true, if all elements are valid.\r\n         */\r\n        validate: function () {\r\n            this.additionalFields = document.querySelectorAll(this.selector);\r\n            this.source.set('params.invalid', false);\r\n            this.source.trigger('data.validate');\r\n            this.set('additionalInvalid', !isValidFields(this.additionalFields));\r\n        },\r\n\r\n        /**\r\n         * Trigger reset form data.\r\n         */\r\n        reset: function () {\r\n            this.source.trigger('data.reset');\r\n            $('[data-bind*=datepicker]').val('');\r\n        },\r\n\r\n        /**\r\n         * Trigger overload form data.\r\n         */\r\n        overload: function () {\r\n            this.source.trigger('data.overload');\r\n        },\r\n\r\n        /**\r\n         * Updates data from server.\r\n         */\r\n        reload: function () {\r\n            makeRequest(this.params, this.data, this.reloadUrl).then(function (data) {\r\n                app(data, true);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/client.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiClass'\r\n], function ($, _, utils, Class) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Before save validate request.\r\n     *\r\n     * @param {Object} data\r\n     * @param {String} url\r\n     * @param {String} selectorPrefix\r\n     * @param {String} messagesClass\r\n     * @returns {*}\r\n     */\r\n    function beforeSave(data, url, selectorPrefix, messagesClass) {\r\n        var save = $.Deferred();\r\n\r\n        data = utils.serialize(utils.filterFormData(data));\r\n        data['form_key'] = window.FORM_KEY;\r\n\r\n        if (!url || url === 'undefined') {\r\n            return save.resolve();\r\n        }\r\n\r\n        $('body').trigger('processStart');\r\n\r\n        $.ajax({\r\n            url: url,\r\n            data: data,\r\n\r\n            /**\r\n             * Success callback.\r\n             * @param {Object} resp\r\n             * @returns {Boolean}\r\n             */\r\n            success: function (resp) {\r\n                if (!resp.error) {\r\n                    save.resolve();\r\n\r\n                    return true;\r\n                }\r\n\r\n                $('body').notification('clear');\r\n                $.each(resp.messages || [resp.message] || [], function (key, message) {\r\n                    $('body').notification('add', {\r\n                        error: resp.error,\r\n                        message: message,\r\n\r\n                        /**\r\n                         * Insert method.\r\n                         *\r\n                         * @param {String} msg\r\n                         */\r\n                        insertMethod: function (msg) {\r\n                            var $wrapper = $('<div/>').addClass(messagesClass).html(msg);\r\n\r\n                            $('.page-main-actions', selectorPrefix).after($wrapper);\r\n                            $('html, body').animate({\r\n                                scrollTop: $('.page-main-actions', selectorPrefix).offset().top\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Complete callback.\r\n             */\r\n            complete: function () {\r\n                $('body').trigger('processStop');\r\n            }\r\n        });\r\n\r\n        return save.promise();\r\n    }\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Assembles data and submits it using 'utils.submit' method\r\n         */\r\n        save: function (data, options) {\r\n            var url = this.urls.beforeSave,\r\n                save = this._save.bind(this, data, options);\r\n\r\n            beforeSave(data, url, this.selectorPrefix, this.messagesClass).then(save);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Save data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} options\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _save: function (data, options) {\r\n            var url = this.urls.save;\r\n\r\n            $('body').trigger('processStart');\r\n            options = options || {};\r\n\r\n            if (!options.redirect) {\r\n                url += 'back/edit';\r\n            }\r\n\r\n            if (options.ajaxSave) {\r\n                utils.ajaxSubmit({\r\n                    url: url,\r\n                    data: data\r\n                }, options);\r\n\r\n                $('body').trigger('processStop');\r\n\r\n                return this;\r\n            }\r\n\r\n            utils.submit({\r\n                url: url,\r\n                data: data\r\n            }, options.attributes);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/adapter/buttons.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        'reset': '#reset',\r\n        'save': '#save',\r\n        'saveAndContinue': '#save_and_continue'\r\n    };\r\n});\r\n","Magento_Ui/js/form/element/boolean.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            checked: false,\r\n            links: {\r\n                checked: 'value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {*|void|Element}\r\n         */\r\n        initObservable: function () {\r\n            return this._super()\r\n                    .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Converts provided value to boolean.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        normalizeData: function () {\r\n            return !!+this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls 'onUpdate' method of parent, if value is defined and instance's\r\n         *     'unique' property set to true, calls 'setUnique' method\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './abstract',\r\n    'uiLayout'\r\n], function (_, utils, registry, Abstract, layout) {\r\n    'use strict';\r\n\r\n    var inputNode = {\r\n        parent: '${ $.$data.parentName }',\r\n        component: 'Magento_Ui/js/form/element/abstract',\r\n        template: '${ $.$data.template }',\r\n        provider: '${ $.$data.provider }',\r\n        name: '${ $.$data.index }_input',\r\n        dataScope: '${ $.$data.customEntry }',\r\n        customScope: '${ $.$data.customScope }',\r\n        sortOrder: {\r\n            after: '${ $.$data.name }'\r\n        },\r\n        displayArea: 'body',\r\n        label: '${ $.$data.label }'\r\n    };\r\n\r\n    /**\r\n     * Parses incoming options, considers options with undefined value property\r\n     *     as caption\r\n     *\r\n     * @param  {Array} nodes\r\n     * @return {Object}\r\n     */\r\n    function parseOptions(nodes, captionValue) {\r\n        var caption,\r\n            value;\r\n\r\n        nodes = _.map(nodes, function (node) {\r\n            value = node.value;\r\n\r\n            if (value === null || value === captionValue) {\r\n                if (_.isUndefined(caption)) {\r\n                    caption = node.label;\r\n                }\r\n            } else {\r\n                return node;\r\n            }\r\n        });\r\n\r\n        return {\r\n            options: _.compact(nodes),\r\n            caption: _.isString(caption) ? caption : false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Recursively loops over data to find non-undefined, non-array value\r\n     *\r\n     * @param  {Array} data\r\n     * @return {*} - first non-undefined value in array\r\n     */\r\n    function findFirst(data) {\r\n        var value;\r\n\r\n        data.some(function (node) {\r\n            value = node.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                value = findFirst(value);\r\n            }\r\n\r\n            return !_.isUndefined(value);\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Recursively set to object item like value and item.value like key.\r\n     *\r\n     * @param {Array} data\r\n     * @param {Object} result\r\n     * @returns {Object}\r\n     */\r\n    function indexOptions(data, result) {\r\n        var value;\r\n\r\n        result = result || {};\r\n\r\n        data.forEach(function (item) {\r\n            value = item.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                indexOptions(value, result);\r\n            } else {\r\n                result[value] = item;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            customName: '${ $.parentName }.${ $.index }_input',\r\n            elementTmpl: 'ui/form/element/select',\r\n            caption: '',\r\n            options: []\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults, extends config with formatted values\r\n         *     and options, and invokes initialize method of AbstractElement class.\r\n         *     If instance's 'customEntry' property is set to true, calls 'initInput'\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.customEntry) {\r\n                registry.get(this.name, this.initInput.bind(this));\r\n            }\r\n\r\n            if (this.filterBy) {\r\n                this.initFilter();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent, initializes 'options' and 'initialOptions'\r\n         *     properties, calls 'setOptions' passing options to it\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            this.initialOptions = this.options;\r\n\r\n            this.observe('options caption')\r\n                .setOptions(this.options());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set link for filter.\r\n         *\r\n         * @returns {Object} Chainable\r\n         */\r\n        initFilter: function () {\r\n            var filter = this.filterBy;\r\n\r\n            this.filter(this.default, filter.field);\r\n            this.setLinks({\r\n                filter: filter.target\r\n            }, 'imports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates input from template, renders it via renderer.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initInput: function () {\r\n            layout([utils.template(inputNode, this)]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Matches specified value with existing options\r\n         * or, if value is not specified, returns value of the first option.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function () {\r\n            var value = this._super(),\r\n                option;\r\n\r\n            if (value !== '') {\r\n                option = this.getOption(value);\r\n\r\n                return option && option.value;\r\n            }\r\n\r\n            if (!this.caption()) {\r\n                return findFirst(this.options);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return item[field] === value || item.value === '';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        },\r\n\r\n        /**\r\n         * Change visibility for input.\r\n         *\r\n         * @param {Boolean} isVisible\r\n         */\r\n        toggleInput: function (isVisible) {\r\n            registry.get(this.customName, function (input) {\r\n                input.setVisible(isVisible);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sets 'data' to 'options' observable array, if instance has\r\n         * 'customEntry' property set to true, calls 'setHidden' method\r\n         *  passing !options.length as a parameter\r\n         *\r\n         * @param {Array} data\r\n         * @returns {Object} Chainable\r\n         */\r\n        setOptions: function (data) {\r\n            var captionValue = this.captionValue || '',\r\n                result = parseOptions(data, captionValue),\r\n                isVisible;\r\n\r\n            this.indexedOptions = indexOptions(result.options);\r\n\r\n            this.options(result.options);\r\n\r\n            if (!this.caption()) {\r\n                this.caption(result.caption);\r\n            }\r\n\r\n            if (this.customEntry) {\r\n                isVisible = !!result.options.length;\r\n\r\n                this.setVisible(isVisible);\r\n                this.toggleInput(!isVisible);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processes preview for option by it's value, and sets the result\r\n         * to 'preview' observable\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        getPreview: function () {\r\n            var value = this.value(),\r\n                option = this.indexedOptions[value],\r\n                preview = option ? option.label : '';\r\n\r\n            this.preview(preview);\r\n\r\n            return preview;\r\n        },\r\n\r\n        /**\r\n         * Get option from indexedOptions list.\r\n         *\r\n         * @param {Number} value\r\n         * @returns {Object} Chainable\r\n         */\r\n        getOption: function (value) {\r\n            return this.indexedOptions[value];\r\n        },\r\n\r\n        /**\r\n         * Select first available option\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var value = this.caption() ? '' : findFirst(this.options);\r\n\r\n            this.value(value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isUndefined(this.value()) && !this.default) {\r\n                this.clear();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/website.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            customerId: null,\r\n            isGlobalScope: 0\r\n        },\r\n\r\n        /**\r\n         * Website component constructor.\r\n         * @returns {exports}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.customerId || this.isGlobalScope) {\r\n                this.disable(true);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/textarea.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            cols: 15,\r\n            rows: 2,\r\n            elementTmpl: 'ui/form/element/textarea'\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/region.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select',\r\n    'Magento_Checkout/js/model/default-post-code-resolver'\r\n], function (_, registry, Select, defaultPostCodeResolver) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            skipValidation: false,\r\n            imports: {\r\n                countryOptions: '${ $.parentName }.country_id:indexedOptions',\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method called every time country selector's value gets changed.\r\n         * Updates all validations and requirements for certain country.\r\n         * @param {String} value - Selected country ID.\r\n         */\r\n        update: function (value) {\r\n            var isRegionRequired,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = _.isObject(this.countryOptions) && this.countryOptions[value];\r\n\r\n            if (!option) {\r\n                return;\r\n            }\r\n\r\n            defaultPostCodeResolver.setUseDefaultPostCode(!option['is_zipcode_optional']);\r\n\r\n            if (option['is_region_visible'] === false) {\r\n                // Hide select and corresponding text input field if region must not be shown for selected country.\r\n                this.setVisible(false);\r\n\r\n                if (this.customEntry) { // eslint-disable-line max-depth\r\n                    this.toggleInput(false);\r\n                }\r\n            }\r\n\r\n            isRegionRequired = !this.skipValidation && !!option['is_region_required'];\r\n\r\n            if (!isRegionRequired) {\r\n                this.error(false);\r\n            }\r\n\r\n            this.required(isRegionRequired);\r\n            this.validation['required-entry'] = isRegionRequired;\r\n\r\n            registry.get(this.customName, function (input) {\r\n                input.required(isRegionRequired);\r\n                input.validation['required-entry'] = isRegionRequired;\r\n                input.validation['validate-not-number-first'] = !this.options().length;\r\n            }.bind(this));\r\n        }\r\n    });\r\n});\r\n\r\n","Magento_Ui/js/form/element/abstract.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiElement',\r\n    'Magento_Ui/js/lib/validation/validator'\r\n], function (_, utils, layout, Element, validator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            preview: '',\r\n            focused: false,\r\n            required: false,\r\n            disabled: false,\r\n            valueChangedByUser: false,\r\n            elementTmpl: 'ui/form/element/input',\r\n            tooltipTpl: 'ui/form/element/helper/tooltip',\r\n            fallbackResetTpl: 'ui/form/element/helper/fallback-reset',\r\n            'input_type': 'input',\r\n            placeholder: false,\r\n            description: '',\r\n            labelVisible: true,\r\n            label: '',\r\n            error: '',\r\n            warn: '',\r\n            notice: '',\r\n            customScope: '',\r\n            default: '',\r\n            isDifferedFromDefault: false,\r\n            showFallbackReset: false,\r\n            additionalClasses: {},\r\n            isUseDefault: '',\r\n            serviceDisabled: false,\r\n            valueUpdate: false, // ko binding valueUpdate\r\n\r\n            switcherConfig: {\r\n                component: 'Magento_Ui/js/form/switcher',\r\n                name: '${ $.name }_switcher',\r\n                target: '${ $.name }',\r\n                property: 'value'\r\n            },\r\n            listens: {\r\n                visible: 'setPreview',\r\n                value: 'setDifferedFromDefault',\r\n                '${ $.provider }:data.reset': 'reset',\r\n                '${ $.provider }:data.overload': 'overload',\r\n                '${ $.provider }:${ $.customScope ? $.customScope + \".\" : \"\"}data.validate': 'validate',\r\n                'isUseDefault': 'toggleUseDefault'\r\n            },\r\n            ignoreTmpls: {\r\n                value: true\r\n            },\r\n\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'reset');\r\n\r\n            this._super()\r\n                .setInitialValue()\r\n                ._setClasses()\r\n                .initSwitcher();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if component has error.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        checkInvalid: function () {\r\n            return this.error() && this.error().length ? this : null;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            var rules = this.validation = this.validation || {};\r\n\r\n            this._super();\r\n\r\n            this.observe('error disabled focused preview visible value warn notice isDifferedFromDefault')\r\n                .observe('isUseDefault serviceDisabled')\r\n                .observe({\r\n                    'required': !!rules['required-entry']\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var uid = utils.uniqueid(),\r\n                name,\r\n                valueUpdate,\r\n                scope;\r\n\r\n            this._super();\r\n\r\n            scope = this.dataScope.split('.');\r\n            name = scope.length > 1 ? scope.slice(1) : scope;\r\n\r\n            valueUpdate = this.showFallbackReset ? 'afterkeydown' : this.valueUpdate;\r\n\r\n            _.extend(this, {\r\n                uid: uid,\r\n                noticeId: 'notice-' + uid,\r\n                errorId: 'error-' + uid,\r\n                inputName: utils.serializeName(name.join('.')),\r\n                valueUpdate: valueUpdate\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes switcher element instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initSwitcher: function () {\r\n            if (this.switcherConfig.enabled) {\r\n                layout([this.switcherConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets initial value of the element and subscribes to it's changes.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            this.initialValue = this.getInitialValue();\r\n\r\n            if (this.value.peek() !== this.initialValue) {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.on('value', this.onUpdate.bind(this));\r\n            this.isUseDefault(this.disabled());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses;\r\n\r\n            if (_.isString(additional)) {\r\n                this.additionalClasses = {};\r\n\r\n                if (additional.trim().length) {\r\n                    additional = additional.trim().split(' ');\r\n\r\n                    additional.forEach(function (name) {\r\n                        if (name.length) {\r\n                            this.additionalClasses[name] = true;\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                _required: this.required,\r\n                _error: this.error,\r\n                _warn: this.warn,\r\n                _disabled: this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets initial value of element\r\n         *\r\n         * @returns {*} Elements' value.\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.value(), this.default],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                if (v !== null && v !== undefined) {\r\n                    value = v;\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return this.normalizeData(value);\r\n        },\r\n\r\n        /**\r\n         * Sets 'value' as 'hidden' property's value, triggers 'toggle' event,\r\n         * sets instance's hidden identifier in params storage based on\r\n         * 'value'.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setVisible: function (isVisible) {\r\n            this.visible(isVisible);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        show: function () {\r\n            this.visible(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hide element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        hide: function () {\r\n            this.visible(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        disable: function () {\r\n            this.disabled(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        enable: function () {\r\n            this.disabled(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {(String|Object)} rule\r\n         * @param {(Object|Boolean)} [options]\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setValidation: function (rule, options) {\r\n            var rules = utils.copy(this.validation),\r\n                changed;\r\n\r\n            if (_.isObject(rule)) {\r\n                _.extend(this.validation, rule);\r\n            } else {\r\n                this.validation[rule] = options;\r\n            }\r\n\r\n            changed = !utils.compare(rules, this.validation).equal;\r\n\r\n            if (changed) {\r\n                this.required(!!rules['required-entry']);\r\n                this.validate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns unwrapped preview observable.\r\n         *\r\n         * @returns {String} Value of the preview observable.\r\n         */\r\n        getPreview: function () {\r\n            return this.value();\r\n        },\r\n\r\n        /**\r\n         * Checks if element has addons\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasAddons: function () {\r\n            return this.addbefore || this.addafter;\r\n        },\r\n\r\n        /**\r\n         * Checks if element has service setting\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasService: function () {\r\n            return this.service && this.service.template;\r\n        },\r\n\r\n        /**\r\n         * Defines if value has changed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasChanged: function () {\r\n            var notEqual = this.value() !== this.initialValue;\r\n\r\n            return !this.visible() ? false : notEqual;\r\n        },\r\n\r\n        /**\r\n         * Checks if 'value' is not empty.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !utils.isEmpty(this.value());\r\n        },\r\n\r\n        /**\r\n         * Sets value observable to initialValue property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        reset: function () {\r\n            this.value(this.initialValue);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets current state as initial.\r\n         */\r\n        overload: function () {\r\n            this.setInitialValue();\r\n            this.bubble('update', this.hasChanged());\r\n        },\r\n\r\n        /**\r\n         * Clears 'value' property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.value('');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts values like 'null' or 'undefined' to an empty string.\r\n         *\r\n         * @param {*} value - Value to be processed.\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function (value) {\r\n            return utils.isEmpty(value) ? '' : value;\r\n        },\r\n\r\n        /**\r\n         * Validates itself by it's validation rules using validator object.\r\n         * If validation of a rule did not pass, writes it's message to\r\n         * 'error' observable property.\r\n         *\r\n         * @returns {Object} Validate information.\r\n         */\r\n        validate: function () {\r\n            var value = this.value(),\r\n                result = validator(this.validation, value, this.validationParams),\r\n                message = !this.disabled() && this.visible() ? result.message : '',\r\n                isValid = this.disabled() || !this.visible() || result.passed;\r\n\r\n            this.error(message);\r\n            this.error.valueHasMutated();\r\n            this.bubble('error', message);\r\n\r\n            //TODO: Implement proper result propagation for form\r\n            if (this.source && !isValid) {\r\n                this.source.set('params.invalid', true);\r\n            }\r\n\r\n            return {\r\n                valid: isValid,\r\n                target: this\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Callback that fires when 'value' property is updated.\r\n         */\r\n        onUpdate: function () {\r\n            this.bubble('update', this.hasChanged());\r\n\r\n            this.validate();\r\n        },\r\n\r\n        /**\r\n         * Restore value to default\r\n         */\r\n        restoreToDefault: function () {\r\n            this.value(this.default);\r\n            this.focused(true);\r\n        },\r\n\r\n        /**\r\n         * Update whether value differs from default value\r\n         */\r\n        setDifferedFromDefault: function () {\r\n            var value = typeof this.value() != 'undefined' && this.value() !== null ? this.value() : '',\r\n                defaultValue = typeof this.default != 'undefined' && this.default !== null ? this.default : '';\r\n\r\n            this.isDifferedFromDefault(value !== defaultValue);\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} state\r\n         */\r\n        toggleUseDefault: function (state) {\r\n            this.disabled(state);\r\n\r\n            if (this.source && this.hasService()) {\r\n                this.source.set('data.use_default.' + this.index, Number(state));\r\n            }\r\n        },\r\n\r\n        /**\r\n         *  Callback when value is changed by user\r\n         */\r\n        userChanges: function () {\r\n            this.valueChangedByUser = true;\r\n        },\r\n\r\n        /**\r\n         * Returns correct id for 'aria-describedby' accessibility attribute\r\n         *\r\n         * @returns {Boolean|String}\r\n         */\r\n        getDescriptionId: function () {\r\n            var id = false;\r\n\r\n            if (this.error()) {\r\n                id = this.errorId;\r\n            } else if (this.notice()) {\r\n                id = this.noticeId;\r\n            }\r\n\r\n            return id;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/text.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiElement',\r\n    'mageUtils'\r\n], function (Element, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            error: '',\r\n            uid: utils.uniqueid(),\r\n            disabled: false,\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Has service\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasService: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Has addons\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasAddons: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('disabled visible value');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-use-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isUseDefault: false,\r\n            isUseConfig: false,\r\n            listens: {\r\n                'isUseConfig': 'toggleElement',\r\n                'isUseDefault': 'toggleElement'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n\r\n            return this\r\n                ._super()\r\n                .observe('isUseConfig');\r\n        },\r\n\r\n        /**\r\n         * Toggle element\r\n         */\r\n        toggleElement: function () {\r\n            this.disabled(this.isUseDefault() || this.isUseConfig());\r\n\r\n            if (this.source) {\r\n                this.source.set('data.use_default.' + this.index, Number(this.isUseDefault()));\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-toggle-notice.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (SingleCheckbox) {\r\n    'use strict';\r\n\r\n    return SingleCheckbox.extend({\r\n        defaults: {\r\n            notices: [],\r\n            tracks: {\r\n                notice: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Choose notice on initialization\r\n         *\r\n         * @returns {*|void|Element}\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .chooseNotice();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Choose notice function\r\n         *\r\n         * @returns void\r\n         */\r\n        chooseNotice: function () {\r\n            var checkedNoticeNumber = Number(this.checked());\r\n\r\n            this.notice = this.notices[checkedNoticeNumber];\r\n        },\r\n\r\n        /**\r\n         * Choose notice on update\r\n         *\r\n         * @returns void\r\n         */\r\n        onUpdate: function () {\r\n            this._super();\r\n            this.chooseNotice();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/url-input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiLayout',\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (_, layout, $t, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            linkedElement: {},\r\n            settingTemplate: 'ui/form/element/urlInput/setting',\r\n            typeSelectorTemplate: 'ui/form/element/urlInput/typeSelector',\r\n            options: [],\r\n            linkedElementInstances: {},\r\n            //checkbox\r\n            isDisplayAdditionalSettings: true,\r\n            settingValue: false,\r\n            settingLabel: $t('Open in new tab'),\r\n            tracks: {\r\n                linkedElement: true\r\n            },\r\n            baseLinkSetting: {\r\n                namePrefix: '${$.name}.',\r\n                dataScopePrefix: '${$.dataScope}.',\r\n                provider: '${$.provider}'\r\n            },\r\n            urlTypes: {},\r\n            listens: {\r\n                settingValue: 'checked',\r\n                disabled: 'hideLinkedElement',\r\n                linkType: 'createChildUrlInputComponent'\r\n            },\r\n            links: {\r\n                linkType: '${$.provider}:${$.dataScope}.type',\r\n                settingValue: '${$.provider}:${$.dataScope}.setting'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var processedLinkTypes = {},\r\n                baseLinkType = this.constructor.defaults.baseLinkSetting;\r\n\r\n            _.each(config.urlTypes, function (linkSettingsArray, linkName) {\r\n                //add link name by link type\r\n                linkSettingsArray.name = baseLinkType.namePrefix + linkName;\r\n                linkSettingsArray.dataScope = baseLinkType.dataScopePrefix + linkName;\r\n                linkSettingsArray.type = linkName;\r\n                linkSettingsArray.disabled = config.disabled;\r\n                linkSettingsArray.visible = config.visible;\r\n                processedLinkTypes[linkName] = {};\r\n                _.extend(processedLinkTypes[linkName], baseLinkType, linkSettingsArray);\r\n            });\r\n            _.extend(this.constructor.defaults.urlTypes, processedLinkTypes);\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('componentTemplate options value linkType settingValue checked isDisplayAdditionalSettings')\r\n                .setOptions();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set options to select based on link types configuration\r\n         *\r\n         * @return {Object}\r\n         */\r\n        setOptions: function () {\r\n            var result = [];\r\n\r\n            _.each(this.urlTypes, function (option, key) {\r\n                result.push({\r\n                    value: key,\r\n                    label: option.label,\r\n                    sortOrder: option.sortOrder || 0\r\n                });\r\n            });\r\n\r\n            //sort options by sortOrder\r\n            result.sort(function (a, b) {\r\n                return a.sortOrder > b.sortOrder ? 1 : -1;\r\n            });\r\n\r\n            this.options(result);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        setPreview: function (visible) {\r\n            this.linkedElement().visible(visible);\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @param {Boolean} disabled\r\n         */\r\n        hideLinkedElement: function (disabled) {\r\n            this.linkedElement().disabled(disabled);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        destroy: function () {\r\n            _.each(this.linkedElementInstances, function (value) {\r\n                value().destroy();\r\n            });\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Create child component by value\r\n         *\r\n         * @param {String} value\r\n         * @return void\r\n         */\r\n        createChildUrlInputComponent: function (value) {\r\n            var elementConfig;\r\n\r\n            if (!_.isEmpty(value) && _.isUndefined(this.linkedElementInstances[value])) {\r\n                elementConfig = this.urlTypes[value];\r\n                layout([elementConfig]);\r\n                this.linkedElementInstances[value] = this.requestModule(elementConfig.name);\r\n            }\r\n            this.linkedElement = this.linkedElementInstances[value];\r\n\r\n        },\r\n\r\n        /**\r\n         * Returns linked element to display related field in template\r\n         * @return String\r\n         */\r\n        getLinkedElementName: function () {\r\n            return this.linkedElement;\r\n        },\r\n\r\n        /**\r\n         * Add ability to choose check box by clicking on label\r\n         */\r\n        checkboxClick: function () {\r\n            if (!this.disabled()) {\r\n                this.settingValue(!this.settingValue());\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'moment',\r\n    'mageUtils',\r\n    './abstract',\r\n    'moment-timezone-with-data'\r\n], function (moment, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            options: {},\r\n\r\n            storeTimeZone: 'UTC',\r\n\r\n            validationParams: {\r\n                dateFormat: '${ $.outputDateFormat }'\r\n            },\r\n\r\n            /**\r\n             * Format of date that comes from the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            inputDateFormat: 'y-MM-dd',\r\n\r\n            /**\r\n             * Format of date that should be sent to the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            outputDateFormat: 'MM/dd/y',\r\n\r\n            /**\r\n             * Date/time format that is used to display date in\r\n             * the input field.\r\n             *\r\n             * @type {String}\r\n             */\r\n            pickerDateTimeFormat: '',\r\n\r\n            pickerDefaultDateFormat: 'MM/dd/y', // ICU Date Format\r\n            pickerDefaultTimeFormat: 'h:mm a', // ICU Time Format\r\n\r\n            elementTmpl: 'ui/form/element/date',\r\n\r\n            /**\r\n             * Format needed by moment timezone for conversion\r\n             */\r\n            timezoneFormat: 'YYYY-MM-DD HH:mm',\r\n\r\n            listens: {\r\n                'value': 'onValueChange',\r\n                'shiftedValue': 'onShiftedValueChange'\r\n            },\r\n\r\n            /**\r\n             * Date/time value shifted to corresponding timezone\r\n             * according to this.storeTimeZone property. This value\r\n             * will be sent to the server.\r\n             *\r\n             * @type {String}\r\n             */\r\n            shiftedValue: ''\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            if (!this.options.dateFormat) {\r\n                this.options.dateFormat = this.pickerDefaultDateFormat;\r\n            }\r\n\r\n            if (!this.options.timeFormat) {\r\n                this.options.timeFormat = this.pickerDefaultTimeFormat;\r\n            }\r\n\r\n            this.prepareDateTimeFormats();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this._super().observe(['shiftedValue']);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getPreview: function () {\r\n            return this.shiftedValue();\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be displayed\r\n         * in the input field.\r\n         *\r\n         * @param {String} value\r\n         */\r\n        onValueChange: function (value) {\r\n            var shiftedValue;\r\n\r\n            if (value) {\r\n                if (this.options.showsTime) {\r\n                    shiftedValue = moment.tz(value, 'UTC').tz(this.storeTimeZone);\r\n                } else {\r\n                    shiftedValue = moment(value, this.outputDateFormat);\r\n                }\r\n\r\n                if (!shiftedValue.isValid()) {\r\n                    shiftedValue = moment(value, this.inputDateFormat);\r\n                }\r\n                shiftedValue = shiftedValue.format(this.pickerDateTimeFormat);\r\n            } else {\r\n                shiftedValue = '';\r\n            }\r\n\r\n            if (shiftedValue !== this.shiftedValue()) {\r\n                this.shiftedValue(shiftedValue);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be sent\r\n         * to the server.\r\n         *\r\n         * @param {String} shiftedValue\r\n         */\r\n        onShiftedValueChange: function (shiftedValue) {\r\n            var value,\r\n                formattedValue,\r\n                momentValue;\r\n\r\n            if (shiftedValue) {\r\n                momentValue = moment(shiftedValue, this.pickerDateTimeFormat);\r\n\r\n                if (this.options.showsTime) {\r\n                    formattedValue = moment(momentValue).format(this.timezoneFormat);\r\n                    value = moment.tz(formattedValue, this.storeTimeZone).tz('UTC').toISOString();\r\n                } else {\r\n                    value = momentValue.format(this.outputDateFormat);\r\n                }\r\n            } else {\r\n                value = '';\r\n            }\r\n\r\n            if (value !== this.value()) {\r\n                this.value(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and converts all date/time formats to be compatible\r\n         * with moment.js library.\r\n         */\r\n        prepareDateTimeFormats: function () {\r\n            this.pickerDateTimeFormat = this.options.dateFormat;\r\n\r\n            if (this.options.showsTime) {\r\n                this.pickerDateTimeFormat += ' ' + this.options.timeFormat;\r\n            }\r\n\r\n            this.pickerDateTimeFormat = utils.convertToMomentFormat(this.pickerDateTimeFormat);\r\n\r\n            if (this.options.dateFormat) {\r\n                this.outputDateFormat = this.options.dateFormat;\r\n            }\r\n\r\n            this.inputDateFormat = utils.convertToMomentFormat(this.inputDateFormat);\r\n            this.outputDateFormat = utils.convertToMomentFormat(this.outputDateFormat);\r\n\r\n            this.validationParams.dateFormat = this.outputDateFormat;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/post-code.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './abstract'\r\n], function (_, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            imports: {\r\n                countryOptions: '${ $.parentName }.country_id:indexedOptions',\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            /**\r\n             * equalityComparer function\r\n             *\r\n             * @returns boolean.\r\n             */\r\n            this.value.equalityComparer = function (oldValue, newValue) {\r\n                return !oldValue && !newValue || oldValue === newValue;\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Method called every time country selector's value gets changed.\r\n         * Updates all validations and requirements for certain country.\r\n         * @param {String} value - Selected country ID.\r\n         */\r\n        update: function (value) {\r\n            var isZipCodeOptional,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = _.isObject(this.countryOptions) && this.countryOptions[value];\r\n\r\n            if (!option) {\r\n                return;\r\n            }\r\n\r\n            isZipCodeOptional = !!option['is_zipcode_optional'];\r\n\r\n            if (isZipCodeOptional) {\r\n                this.error(false);\r\n            }\r\n\r\n            this.validation['required-entry'] = !isZipCodeOptional;\r\n            this.required(!isZipCodeOptional);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/wysiwyg.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'wysiwygAdapter',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'ko',\r\n    './abstract',\r\n    'mage/adminhtml/events',\r\n    'Magento_Variable/variables'\r\n], function (wysiwyg, $, _, ko, Abstract, varienGlobalEvents) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        currentWysiwyg: undefined,\r\n        defaults: {\r\n            elementSelector: 'textarea',\r\n            suffixRegExpPattern: '${ $.wysiwygUniqueSuffix }',\r\n            $wysiwygEditorButton: '',\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            },\r\n            template: 'ui/form/field',\r\n            elementTmpl: 'ui/form/element/wysiwyg',\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false,\r\n            listens: {\r\n                disabled: 'setDisabled'\r\n            }\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initNodeListener();\r\n\r\n            $.async({\r\n                component: this,\r\n                selector: 'button'\r\n            }, function (element) {\r\n                this.$wysiwygEditorButton = this.$wysiwygEditorButton ?\r\n                    this.$wysiwygEditorButton.add($(element)) : $(element);\r\n            }.bind(this));\r\n\r\n            // disable editor completely after initialization is field is disabled\r\n            varienGlobalEvents.attachEventHandler('wysiwygEditorInitialized', function () {\r\n                if (!_.isUndefined(window.tinyMceEditors)) {\r\n                    this.currentWysiwyg = window.tinyMceEditors[this.wysiwygId];\r\n                }\r\n\r\n                if (this.disabled()) {\r\n                    this.setDisabled(true);\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var pattern = config.suffixRegExpPattern || this.constructor.defaults.suffixRegExpPattern;\r\n\r\n            pattern = pattern.replace(/\\$/g, '\\\\$&');\r\n            config.content = config.content.replace(new RegExp(pattern, 'g'), this.getUniqueSuffix(config));\r\n            this._super();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Build unique id based on name, underscore separated.\r\n         *\r\n         * @param {Object} config\r\n         */\r\n        getUniqueSuffix: function (config) {\r\n            return config.name.replace(/(\\.|-)/g, '_');\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n            wysiwyg.removeEvents(this.wysiwygId);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('value');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initNodeListener: function () {\r\n            $.async({\r\n                component: this,\r\n                selector: this.elementSelector\r\n            }, this.setElementNode.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setElementNode: function (node) {\r\n            $(node).bindings({\r\n                value: this.value\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set disabled property to wysiwyg component\r\n         *\r\n         * @param {Boolean} disabled\r\n         */\r\n        setDisabled: function (disabled) {\r\n            if (this.$wysiwygEditorButton && disabled) {\r\n                this.$wysiwygEditorButton.prop('disabled', 'disabled');\r\n            } else if (this.$wysiwygEditorButton) {\r\n                this.$wysiwygEditorButton.removeProp('disabled');\r\n            }\r\n\r\n            /* eslint-disable no-undef */\r\n            if (!_.isUndefined(this.currentWysiwyg) && this.currentWysiwyg.activeEditor()) {\r\n                this.currentWysiwyg.setEnabledStatus(!disabled);\r\n                this.currentWysiwyg.getPluginButtons().prop('disabled', disabled);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'underscore',\r\n    'mage/translate'\r\n], function (AbstractField, _, $t) {\r\n    'use strict';\r\n\r\n    return AbstractField.extend({\r\n        defaults: {\r\n            template: 'ui/form/components/single/field',\r\n            checked: false,\r\n            initialChecked: false,\r\n            multiple: false,\r\n            prefer: 'checkbox', // 'radio' | 'checkbox' | 'toggle'\r\n            valueMap: {},\r\n\r\n            templates: {\r\n                radio: 'ui/form/components/single/radio',\r\n                checkbox: 'ui/form/components/single/checkbox',\r\n                toggle: 'ui/form/components/single/switcher'\r\n            },\r\n\r\n            listens: {\r\n                'checked': 'onCheckedChanged',\r\n                'value': 'onExtendedValueChanged'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function (config) {\r\n            this._super();\r\n\r\n            if (!config.elementTmpl) {\r\n                if (!this.prefer && !this.multiple) {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'radio') {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'checkbox') {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                } else if (this.prefer === 'toggle') {\r\n                    this.elementTmpl = this.templates.toggle;\r\n                } else {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                }\r\n            }\r\n\r\n            if (this.prefer === 'toggle' && _.isEmpty(this.toggleLabels)) {\r\n                this.toggleLabels = {\r\n                    'on': $t('Yes'),\r\n                    'off': $t('No')\r\n                };\r\n            }\r\n\r\n            if (typeof this.default === 'undefined' || this.default === null) {\r\n                this.default = '';\r\n            }\r\n\r\n            if (typeof this.value === 'undefined' || this.value === null) {\r\n                this.value = _.isEmpty(this.valueMap) || this.default !== '' ? this.default : this.valueMap.false;\r\n                this.initialValue = this.value;\r\n            } else {\r\n                this.initialValue = this.value;\r\n            }\r\n\r\n            if (this.multiple && !_.isArray(this.value)) {\r\n                this.value = []; // needed for correct observable assignment\r\n            }\r\n\r\n            this.initialChecked = this.checked;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Get true/false key from valueMap by value.\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean|undefined}\r\n         */\r\n        getReverseValueMap: function getReverseValueMap(value) {\r\n            var bool = false;\r\n\r\n            _.some(this.valueMap, function (iValue, iBool) {\r\n                if (iValue === value) {\r\n                    bool = iBool === 'true';\r\n\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return bool;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isEmpty(this.valueMap)) {\r\n                this.on('value', this.onUpdate.bind(this));\r\n            } else {\r\n                this._super();\r\n                this.checked(this.getReverseValueMap(this.value()));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle dataScope changes for checkbox / radio button.\r\n         *\r\n         * @param {*} newExportedValue\r\n         */\r\n        onExtendedValueChanged: function (newExportedValue) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldChecked = this.checked.peek(),\r\n                oldValue = this.initialValue,\r\n                newChecked;\r\n\r\n            if (this.multiple) {\r\n                newChecked = newExportedValue.indexOf(oldValue) !== -1;\r\n            } else if (isMappedUsed) {\r\n                newChecked = this.getReverseValueMap(newExportedValue);\r\n            } else if (typeof newExportedValue === 'boolean') {\r\n                newChecked = newExportedValue;\r\n            } else {\r\n                newChecked = newExportedValue === oldValue;\r\n            }\r\n\r\n            if (newChecked !== oldChecked) {\r\n                this.checked(newChecked);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle checked state changes for checkbox / radio button.\r\n         *\r\n         * @param {Boolean} newChecked\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldValue = this.initialValue,\r\n                newValue;\r\n\r\n            if (isMappedUsed) {\r\n                newValue = this.valueMap[newChecked];\r\n            } else {\r\n                newValue = oldValue;\r\n            }\r\n\r\n            if (!this.multiple && newChecked) {\r\n                this.value(newValue);\r\n            } else if (!this.multiple && !newChecked) {\r\n                if (typeof newValue === 'boolean') {\r\n                    this.value(newChecked);\r\n                } else if (newValue === this.value.peek()) {\r\n                    this.value('');\r\n                }\r\n\r\n                if (isMappedUsed) {\r\n                    this.value(newValue);\r\n                }\r\n            } else if (this.multiple && newChecked && this.value.indexOf(newValue) === -1) {\r\n                this.value.push(newValue);\r\n            } else if (this.multiple && !newChecked && this.value.indexOf(newValue) !== -1) {\r\n                this.value.splice(this.value.indexOf(newValue), 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            if (this.multiple && this.initialChecked) {\r\n                this.value.push(this.initialValue);\r\n            } else if (this.multiple && !this.initialChecked) {\r\n                this.value.splice(this.value.indexOf(this.initialValue), 1);\r\n            } else {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            if (this.multiple) {\r\n                this.value([]);\r\n            } else {\r\n                this.value('');\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/image-uploader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global Base64 */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/validation/validator',\r\n    'Magento_Ui/js/form/element/file-uploader',\r\n    'mage/adminhtml/browser'\r\n], function ($, _, utils, uiAlert, validator, Element, browser) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        /**\r\n         * {@inheritDoc}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            // Listen for file deletions from the media browser\r\n            $(window).on('fileDeleted.mediabrowser', this.onDeleteFile.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Assign uid for media gallery\r\n         *\r\n         * @return {ImageUploader} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var mediaGalleryUid = utils.uniqueid();\r\n\r\n            this._super();\r\n\r\n            _.extend(this, {\r\n                mediaGalleryUid: mediaGalleryUid\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add file event callback triggered from media gallery\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        addFileFromMediaGallery: function (imageUploader, e) {\r\n            var $buttonEl = $(e.target),\r\n                fileSize = $buttonEl.data('size'),\r\n                fileMimeType = $buttonEl.data('mime-type'),\r\n                filePathname = $buttonEl.val(),\r\n                fileBasename = filePathname.split('/').pop();\r\n\r\n            this.addFile({\r\n                type: fileMimeType,\r\n                name: fileBasename,\r\n                size: fileSize,\r\n                url: filePathname\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Open the media browser dialog\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        openMediaBrowserDialog: function (imageUploader, e) {\r\n            var $buttonEl = $(e.target),\r\n                openDialogUrl = this.mediaGallery.openDialogUrl +\r\n                'target_element_id/' + $buttonEl.attr('id') +\r\n                '/store/' + this.mediaGallery.storeId +\r\n                '/type/image/?isAjax=true';\r\n\r\n            if (this.mediaGallery.initialOpenSubpath) {\r\n                openDialogUrl += '&current_tree_path=' + Base64.idEncode(this.mediaGallery.initialOpenSubpath);\r\n            }\r\n\r\n            browser.openDialog(\r\n                openDialogUrl,\r\n                null,\r\n                null,\r\n                this.mediaGallery.openDialogTitle,\r\n                {\r\n                    targetElementId: $buttonEl.attr('id')\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.event} e\r\n         * @param {Object} data\r\n         * @returns {Object} Chainables\r\n         */\r\n        onDeleteFile: function (e, data) {\r\n            var fileId = this.getFileId(),\r\n                deletedFileIds = data.ids;\r\n\r\n            if (fileId && $.inArray(fileId, deletedFileIds) > -1) {\r\n                this.clear();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {@inheritDoc}\r\n         */\r\n        clear: function () {\r\n            this.value([]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets the ID of the file used if set\r\n         *\r\n         * @return {String|Null} ID\r\n         */\r\n        getFileId: function () {\r\n            return this.hasData() ? this.value()[0].id : null;\r\n        },\r\n\r\n        /**\r\n         * Trigger native browser file upload UI via clicking on 'Upload' button\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        triggerImageUpload: function (imageUploader, e) {\r\n            $(e.target).closest('.file-uploader').find('input[type=\"file\"]').click();\r\n        },\r\n\r\n        /**\r\n         * Get list of file extensions allowed in comma delimited format\r\n         *\r\n         * @return {String}\r\n         */\r\n        getAllowedFileExtensionsInCommaDelimitedFormat: function () {\r\n            var allowedExtensions = this.allowedExtensions.toUpperCase().split(' ');\r\n\r\n            // if jpg and jpeg in allowed extensions, remove jpeg from list\r\n            if (allowedExtensions.indexOf('JPG') !== -1 && allowedExtensions.indexOf('JPEG') !== -1) {\r\n                allowedExtensions.splice(allowedExtensions.indexOf('JPEG'), 1);\r\n            }\r\n\r\n            return allowedExtensions.join(', ');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/country.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            imports: {\r\n                update: '${ $.parentName }.website_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var result, defaultCountry, defaultValue;\r\n\r\n            if (!field) { //validate field, if we are on update\r\n                field = this.filterBy.field;\r\n            }\r\n\r\n            this._super(value, field);\r\n            result = _.filter(this.initialOptions, function (item) {\r\n\r\n                if (item[field]) {\r\n                    return ~item[field].indexOf(value);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            this.setOptions(result);\r\n            this.reset();\r\n\r\n            if (!this.value()) {\r\n                defaultCountry = _.filter(result, function (item) {\r\n                    return item['is_default'] && _.contains(item['is_default'], value);\r\n                });\r\n\r\n                if (defaultCountry.length) {\r\n                    defaultValue = defaultCountry.shift();\r\n                    this.value(defaultValue.value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n","Magento_Ui/js/form/element/color-picker-palette.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return [\r\n        [\r\n            'rgb(0,0,0)', 'rgb(52,52,52)', 'rgb(83,83,83)', 'rgb(135,135,135)', 'rgb(193,193,193)',\r\n            'rgb(234,234,234)', 'rgb(240,240,240)', 'rgb(255,255,255)'\r\n        ],\r\n        [\r\n            'rgb(252,0,9)', 'rgb(253,135,10)', 'rgb(255,255,13)', 'rgb(35,255,9)', 'rgb(33,255,255)',\r\n            'rgb(0,0,254)', 'rgb(132,0,254)', 'rgb(251,0,255)'\r\n        ],\r\n        [\r\n            'rgb(240,192,194)', 'rgb(251,223,194)', 'rgb(255,241,193)', 'rgb(210,230,201)',\r\n            'rgb(199,217,220)', 'rgb(197,219,240)', 'rgb(208,200,227)', 'rgb(229,199,212)'\r\n        ],\r\n        [\r\n            'rgb(228,133,135)', 'rgb(246,193,139)', 'rgb(254,225,136)', 'rgb(168,208,152)',\r\n            'rgb(146,184,190)', 'rgb(143,184,227)', 'rgb(165,148,204)', 'rgb(202,147,175)'\r\n        ],\r\n        [\r\n            'rgb(214,78,83)', 'rgb(243,163,88)', 'rgb(254,211,83)', 'rgb(130,187,106)',\r\n            'rgb(99,149,159)', 'rgb(93,150,211)', 'rgb(123,100,182)', 'rgb(180,100,142)'\r\n        ],\r\n        [\r\n            'rgb(190,0,5)', 'rgb(222,126,44)', 'rgb(236,183,39)', 'rgb(89,155,61)', 'rgb(55,110,123)',\r\n            'rgb(49,112,185)', 'rgb(83,55,150)', 'rgb(147,55,101)'\r\n        ],\r\n        [\r\n            'rgb(133,0,3)', 'rgb(163,74,10)', 'rgb(177,127,7)', 'rgb(45,101,23)', 'rgb(18,62,74)',\r\n            'rgb(14,62,129)', 'rgb(40,15,97)', 'rgb(95,16,55)'\r\n        ],\r\n        [\r\n            'rgb(81,0,1)', 'rgb(100,48,7)', 'rgb(107,78,3)', 'rgb(31,63,16)',\r\n            'rgb(13,39,46)', 'rgb(10,40,79)', 'rgb(24,12,59)', 'rgb(59,10,36)'\r\n        ]\r\n    ];\r\n});\r\n","Magento_Ui/js/form/element/checkbox-set.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './abstract'\r\n], function (_, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            template: 'ui/form/element/checkbox-set',\r\n            multiple: false,\r\n            multipleScopeValue: null\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.value = this.normalizeData(this.value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initLinks: function () {\r\n            var scope = this.source.get(this.dataScope);\r\n\r\n            this.multipleScopeValue = this.multiple && _.isArray(scope) ? utils.copy(scope) : undefined;\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            var value = this.multiple ? [] : '';\r\n\r\n            this.value(value);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            return _.isArray(value) ? utils.copy(value) : [];\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.multipleScopeValue, this.default, this.value.peek(), []],\r\n                value;\r\n\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v));\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * Returns labels which matches current value.\r\n         *\r\n         * @returns {String|Array}\r\n         */\r\n        getPreview: function () {\r\n            var option;\r\n\r\n            if (!this.multiple) {\r\n                option = this.getOption(this.value());\r\n\r\n                return option ? option.label : '';\r\n            }\r\n\r\n            return this.value.map(function (value) {\r\n                return this.getOption(value).label;\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Returns option object associated with provided value.\r\n         *\r\n         * @param {String} value\r\n         * @returns {Object}\r\n         */\r\n        getOption: function (value) {\r\n            return _.findWhere(this.options, {\r\n                value: value\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return this.multiple ?\r\n                !utils.equalArrays(value, initial) :\r\n                this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/media.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mageUtils',\r\n    './abstract'\r\n], function (utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            links: {\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes file component.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initFormId();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines form ID with which file input will be associated.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initFormId: function () {\r\n            var namespace;\r\n\r\n            if (this.formId) {\r\n                return this;\r\n            }\r\n\r\n            namespace   = this.name.split('.');\r\n            this.formId = namespace[0];\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/multiselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './select'\r\n], function (_, utils, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            size: 5,\r\n            elementTmpl: 'ui/form/element/multiselect',\r\n            listens: {\r\n                value: 'setDifferedFromDefault setPrepareToSendData'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (utils.isEmpty(value)) {\r\n                value = [];\r\n            }\r\n\r\n            return _.isString(value) ? value.split(',') : value;\r\n        },\r\n\r\n        /**\r\n         * Sets the prepared data to dataSource\r\n         * by path, where key is component link to dataSource with\r\n         * suffix \"-prepared-for-send\"\r\n         *\r\n         * @param {Array} data - current component value\r\n         */\r\n        setPrepareToSendData: function (data) {\r\n            if (_.isUndefined(data) || !data.length) {\r\n                data = '';\r\n            }\r\n\r\n            this.source.set(this.dataScope + '-prepared-for-send', data);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [\r\n                    this.normalizeData(this.source.get(this.dataScope)),\r\n                    this.normalizeData(this.default)\r\n                ],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v)) && !_.isEmpty(v);\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return !utils.equalArrays(value, initial);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            this.value([]);\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/color-picker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'Magento_Ui/js/form/element/color-picker-palette'\r\n], function ($t, Abstract, palette) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n\r\n        defaults: {\r\n            colorPickerConfig: {\r\n                chooseText: $t('Apply'),\r\n                cancelText: $t('Cancel'),\r\n                maxSelectionSize: 8,\r\n                clickoutFiresChange: true,\r\n                allowEmpty: true,\r\n                localStorageKey: 'magento.spectrum',\r\n                palette: palette\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.colorPickerConfig.value = this.value;\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/html.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent'\r\n], function ($, _, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false,\r\n            visible:        true,\r\n            template:       'ui/content/content',\r\n            additionalClasses: {},\r\n            ignoreTmpls: {\r\n                content: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls 'initialize' method of\r\n         *     parent, calls 'initAjaxConfig'\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onContainerToggle', 'onDataLoaded');\r\n\r\n            this._super()\r\n                ._setClasses()\r\n                .initAjaxConfig();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' method of parent, initializes observable\r\n         * properties of instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('content loading visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__scope-old': !!additional\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initContainer: function (parent) {\r\n            this._super();\r\n\r\n            parent.on('active', this.onContainerToggle);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes default ajax config on instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initAjaxConfig: function () {\r\n            this.ajaxConfig = {\r\n                url: this.url,\r\n                data: {\r\n                    FORM_KEY: window.FORM_KEY\r\n                },\r\n                success:    this.onDataLoaded\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'loadData' if both 'active' variable and 'shouldLoad'\r\n         * property are truthy\r\n         *\r\n         * @param  {Boolean} active\r\n         */\r\n        onContainerToggle: function (active) {\r\n            if (active && this.shouldLoad()) {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has 'content' property defined.\r\n         *\r\n         * @return {Boolean} [description]\r\n         */\r\n        hasData: function () {\r\n            return !!this.content();\r\n        },\r\n\r\n        /**\r\n         * Defines if instance should load external data\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        shouldLoad: function () {\r\n            return this.url && !this.hasData() && !this.loading();\r\n        },\r\n\r\n        /**\r\n         * Sets loading property to true, makes ajax call\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        loadData: function () {\r\n            this.loading(true);\r\n\r\n            $.ajax(this.ajaxConfig);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Ajax's request success handler. Calls 'updateContent' passing 'data'\r\n         * to it, then sets 'loading' property to false.\r\n         *\r\n         * @param  {String} data\r\n         */\r\n        onDataLoaded: function (data) {\r\n            this.updateContent(data)\r\n                .loading(false);\r\n        },\r\n\r\n        /**\r\n         * Sets incoming data 'content' property's value\r\n         *\r\n         * @param  {String} content\r\n         * @return {Object} - reference to instance\r\n         */\r\n        updateContent: function (content) {\r\n            this.content(content);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiCollection'\r\n], function (_, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            showLabel: true,\r\n            required: false,\r\n            template: 'ui/group/group',\r\n            fieldTemplate: 'ui/form/field',\r\n            breakLine: true,\r\n            validateWholeGroup: false,\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /**\r\n         * Extends this with defaults and config.\r\n         * Then calls initObservable, iniListenes and extractData methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                ._setClasses();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('visible')\r\n                .observe({\r\n                    required: !!+this.required\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__control-grouped': !this.breakLine,\r\n                'admin__control-fields': this.breakLine,\r\n                required:   this.required,\r\n                _error:     this.error,\r\n                _disabled:  this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has only one element.\r\n         * @return {Boolean}\r\n         */\r\n        isSingle: function () {\r\n            return this.elems.getLength() === 1;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has multiple elements.\r\n         * @return {Boolean}\r\n         */\r\n        isMultiple: function () {\r\n            return this.elems.getLength() > 1;\r\n        },\r\n\r\n        /**\r\n         * Returns an array of child components previews.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getPreview: function () {\r\n            return this.elems.map('getPreview');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab_group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/collapsible'\r\n], function (_, Collapsible) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            listens: {\r\n                '${ $.provider }:data.validate': 'onValidate'\r\n            },\r\n            collapsible: false,\r\n            opened: true\r\n        },\r\n\r\n        /**\r\n         * Invokes initElement method of parent class, calls 'initActivation' method\r\n         * passing element to it.\r\n         * @param {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .initActivation(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Activates element if one is first or if one has 'active' propert\r\n         * set to true.\r\n         *\r\n         * @param  {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initActivation: function (elem) {\r\n            var elems   = this.elems(),\r\n                isFirst = !elems.indexOf(elem);\r\n\r\n            if (isFirst || elem.active()) {\r\n                elem.activate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates 'validate' method on element, then reads 'invalid' property\r\n         * of params storage, and if defined, activates element, sets\r\n         * 'allValid' property of instance to false and sets invalid's\r\n         * 'focused' property to true.\r\n         *\r\n         * @param {Object} elem\r\n         */\r\n        validate: function (elem) {\r\n            var result  = elem.delegate('validate'),\r\n                invalid;\r\n\r\n            invalid = _.find(result, function (item) {\r\n                return typeof item !== 'undefined' && !item.valid;\r\n            });\r\n\r\n            if (invalid) {\r\n                elem.activate();\r\n                invalid.target.focused(true);\r\n            }\r\n\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Sets 'allValid' property of instance to true, then calls 'validate' method\r\n         * of instance for each element.\r\n         */\r\n        onValidate: function () {\r\n            this.elems.sortBy(function (elem) {\r\n                return !elem.active();\r\n            }).some(this.validate, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'uiLayout',\r\n    'mageUtils',\r\n    'underscore'\r\n], function (Element, registry, layout, utils, _) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            buttonClasses: {},\r\n            additionalClasses: {},\r\n            displayArea: 'outsideGroup',\r\n            displayAsLink: false,\r\n            elementTmpl: 'ui/form/element/button',\r\n            template: 'ui/form/components/button/simple',\r\n            visible: true,\r\n            disabled: false,\r\n            title: ''\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            return this._super()\r\n                ._setClasses()\r\n                ._setButtonClasses();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe([\r\n                    'visible',\r\n                    'disabled',\r\n                    'title',\r\n                    'childError'\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Performs configured actions\r\n         */\r\n        action: function () {\r\n            this.actions.forEach(this.applyAction, this);\r\n        },\r\n\r\n        /**\r\n         * Apply action on target component,\r\n         * but previously create this component from template if it is not existed\r\n         *\r\n         * @param {Object} action - action configuration\r\n         */\r\n        applyAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = utils.copy(action.params) || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            if (!registry.has(targetName)) {\r\n                this.getFromTemplate(targetName);\r\n            }\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create target component from template\r\n         *\r\n         * @param {Object} targetName - name of component,\r\n         * that supposed to be a template and need to be initialized\r\n         */\r\n        getFromTemplate: function (targetName) {\r\n            var parentName = targetName.split('.'),\r\n                index = parentName.pop(),\r\n                child;\r\n\r\n            parentName = parentName.join('.');\r\n            child = utils.template({\r\n                parent: parentName,\r\n                name: index,\r\n                nodeTemplate: targetName\r\n            });\r\n            layout([child]);\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            if (typeof this.additionalClasses === 'string') {\r\n                if (this.additionalClasses === '') {\r\n                    this.additionalClasses = {};\r\n\r\n                    return this;\r\n                }\r\n\r\n                this.additionalClasses = this.additionalClasses\r\n                    .trim()\r\n                    .split(' ')\r\n                    .reduce(function (classes, name) {\r\n                        classes[name] = true;\r\n\r\n                        return classes;\r\n                    }, {}\r\n                );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'buttonClasses' object.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        _setButtonClasses: function () {\r\n            var additional = this.buttonClasses;\r\n\r\n            if (_.isString(additional)) {\r\n                this.buttonClasses = {};\r\n\r\n                if (additional.trim().length) {\r\n                    additional = additional.trim().split(' ');\r\n\r\n                    additional.forEach(function (name) {\r\n                        if (name.length) {\r\n                            this.buttonClasses[name] = true;\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            _.extend(this.buttonClasses, {\r\n                'action-basic': !this.displayAsLink,\r\n                'action-additional': this.displayAsLink\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/fieldset.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/collapsible',\r\n    'underscore'\r\n], function (Collapsible, _) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            template: 'ui/form/fieldset',\r\n            collapsible: false,\r\n            changed: false,\r\n            loading: false,\r\n            error: false,\r\n            opened: false,\r\n            level: 0,\r\n            visible: true,\r\n            initializeFieldsetDataByDefault: false, /* Data in some fieldsets should be initialized before open */\r\n            disabled: false,\r\n            listens: {\r\n                'opened': 'onVisibilityChange'\r\n            },\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onChildrenUpdate', 'onChildrenError', 'onContentLoading');\r\n\r\n            return this._super()\r\n                ._setClasses();\r\n        },\r\n\r\n        /**\r\n         * Initializes components' configuration.\r\n         *\r\n         * @returns {Fieldset} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this._wasOpened = this.opened || !this.collapsible;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         *\r\n         * @returns {Object} Reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('changed loading error visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls parent's initElement method.\r\n         * Assigns callbacks on various events of incoming element.\r\n         *\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            elem.on({\r\n                'update': this.onChildrenUpdate,\r\n                'loading': this.onContentLoading,\r\n                'error': this.onChildrenError\r\n            });\r\n\r\n            if (this.disabled) {\r\n                try {\r\n                    elem.disabled(true);\r\n                }\r\n                catch (e) {\r\n\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children update.\r\n         * Sets changed property to one incoming.\r\n         *\r\n         * @param  {Boolean} hasChanged\r\n         */\r\n        onChildrenUpdate: function (hasChanged) {\r\n            if (!hasChanged) {\r\n                hasChanged = _.some(this.delegate('hasChanged'));\r\n            }\r\n\r\n            this.bubble('update', hasChanged);\r\n            this.changed(hasChanged);\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__collapsible-block-wrapper': this.collapsible,\r\n                _show: this.opened,\r\n                _hide: !this.opened,\r\n                _disabled: this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler of the \"opened\" property changes.\r\n         *\r\n         * @param {Boolean} isOpened\r\n         */\r\n        onVisibilityChange: function (isOpened) {\r\n            if (!this._wasOpened) {\r\n                this._wasOpened = isOpened;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children validation error.\r\n         * Sets error property to one incoming.\r\n         *\r\n         * @param {String} message - error message.\r\n         */\r\n        onChildrenError: function (message) {\r\n            var hasErrors = false;\r\n\r\n            if (!message) {\r\n                hasErrors = this._isChildrenHasErrors(hasErrors, this);\r\n            }\r\n\r\n            this.error(hasErrors || message);\r\n\r\n            if (hasErrors || message) {\r\n                this.open();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns errors of children if exist\r\n         *\r\n         * @param {Boolean} hasErrors\r\n         * @param {*} container\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _isChildrenHasErrors: function (hasErrors, container) {\r\n            var self = this;\r\n\r\n            if (hasErrors === false && container.hasOwnProperty('elems')) {\r\n                hasErrors = container.elems.some('error');\r\n\r\n                if (hasErrors === false && container.hasOwnProperty('_elems')) {\r\n                    container._elems.forEach(function (child) {\r\n\r\n                        if (hasErrors === false) {\r\n                            hasErrors = self._isChildrenHasErrors(hasErrors, child);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return hasErrors;\r\n        },\r\n\r\n        /**\r\n         * Callback that sets loading property to true.\r\n         */\r\n        onContentLoading: function (isLoading) {\r\n            this.loading(isLoading);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/insert-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './insert',\r\n    'mageUtils',\r\n    'jquery'\r\n], function (Insert, utils, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get page actions element.\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function getPageActions(elem, actionsClass) {\r\n        var el = document.createElement('div');\r\n\r\n        el.innerHTML = elem;\r\n\r\n        return el.getElementsByClassName(actionsClass)[0];\r\n    }\r\n\r\n    /**\r\n     * Return element without page actions toolbar\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function removePageActions(elem, actionsClass) {\r\n        var el = document.createElement('div'),\r\n            actions;\r\n\r\n        el.innerHTML = elem;\r\n        actions = el.getElementsByClassName(actionsClass)[0];\r\n\r\n        if (actions) {\r\n            el.removeChild(actions);\r\n        }\r\n\r\n        return el.innerHTML;\r\n    }\r\n\r\n    return Insert.extend({\r\n        defaults: {\r\n            externalFormName: '${ $.ns }.${ $.ns }',\r\n            pageActionsClass: 'page-actions',\r\n            actionsContainerClass: 'page-main-actions',\r\n            exports: {\r\n                prefix: '${ $.externalFormName }:selectorPrefix'\r\n            },\r\n            imports: {\r\n                toolbarSection: '${ $.toolbarContainer }:toolbarSection',\r\n                prefix: '${ $.toolbarContainer }:rootSelector',\r\n                messagesClass: '${ $.externalFormName }:messagesClass'\r\n            },\r\n            settings: {\r\n                ajax: {\r\n                    ajaxSave: true,\r\n                    exports: {\r\n                        ajaxSave: '${ $.externalFormName }:ajaxSave'\r\n                    },\r\n                    imports: {\r\n                        responseStatus: '${ $.externalFormName }:responseStatus',\r\n                        responseData: '${ $.externalFormName }:responseData'\r\n                    }\r\n                }\r\n            },\r\n            modules: {\r\n                externalForm: '${ $.externalFormName }'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe('responseStatus');\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var defaults = this.constructor.defaults;\r\n\r\n            utils.extend(defaults, defaults.settings[config.formSubmitType] || {});\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc*/\r\n        destroyInserted: function () {\r\n            if (this.isRendered && this.externalForm()) {\r\n                this.externalForm().delegate('destroy');\r\n                this.removeActions();\r\n                this.responseStatus(undefined);\r\n                this.responseData = {};\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onRender: function (data) {\r\n            var actions = getPageActions(data, this.pageActionsClass);\r\n\r\n            if (!data.length) {\r\n                return this;\r\n            }\r\n            data = removePageActions(data, this.pageActionsClass);\r\n            this.renderActions(actions);\r\n            this._super(data);\r\n        },\r\n\r\n        /**\r\n         * Insert actions in toolbar.\r\n         *\r\n         * @param {String} actions\r\n         */\r\n        renderActions: function (actions) {\r\n            var $container = $('<div/>');\r\n\r\n            $container\r\n                .addClass(this.actionsContainerClass)\r\n                .append(actions);\r\n\r\n            this.formHeader = $container;\r\n\r\n            $(this.toolbarSection).append(this.formHeader);\r\n        },\r\n\r\n        /**\r\n         * Remove actions toolbar.\r\n         */\r\n        removeActions: function () {\r\n            $(this.formHeader).siblings('.' + this.messagesClass).remove();\r\n            $(this.formHeader).remove();\r\n            this.formHeader = $();\r\n        },\r\n\r\n        /**\r\n         * Reset external form data.\r\n         */\r\n        resetForm: function () {\r\n            if (this.externalSource()) {\r\n                this.externalSource().trigger('data.reset');\r\n                this.responseStatus(undefined);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/collection.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Ui/js/modal/confirm'\r\n], function (_, utils, registry, Component, layout, confirm) {\r\n    'use strict';\r\n\r\n    var childTemplate = {\r\n        parent: '${ $.$data.name }',\r\n        name: '${ $.$data.childIndex }',\r\n        dataScope: '${ $.name }',\r\n        nodeTemplate: '${ $.$data.name }.${ $.$data.itemTemplate }'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            lastIndex: 0,\r\n            template: 'ui/form/components/collection'\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls initialize of parent\r\n         * class, calls initChildren method.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initChildren();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Activates the incoming child and triggers the update event.\r\n         *\r\n         * @param {Object} elem - Incoming child.\r\n         */\r\n        initElement: function (elem) {\r\n            this._super();\r\n\r\n            elem.activate();\r\n\r\n            this.bubble('update');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Loops over corresponding data in data storage,\r\n         * creates child for each and pushes it's identifier to initialItems array.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            var children = this.source.get(this.dataScope),\r\n                initial = this.initialItems = [];\r\n\r\n            _.each(children, function (item, index) {\r\n                initial.push(index);\r\n                this.addChild(index);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates new item of collection, based on incoming 'index'.\r\n         * If not passed creates one with 'new_' prefix.\r\n         *\r\n         * @param {String|Object} [index] - Index of a child.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        addChild: function (index) {\r\n            this.childIndex = !_.isString(index) ?\r\n                'new_' + this.lastIndex++ :\r\n                index;\r\n\r\n            layout([utils.template(childTemplate, this)]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns true if current set of items differ from initial one,\r\n         * or if some child has been changed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasChanged: function () {\r\n            var initial = this.initialItems,\r\n                current = this.elems.pluck('index'),\r\n                changed = !utils.equalArrays(initial, current);\r\n\r\n            return changed || this.elems.some(function (elem) {\r\n                return _.some(elem.delegate('hasChanged'));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initiates validation of its' children components.\r\n         *\r\n         * @returns {Array} An array of validation results.\r\n         */\r\n        validate: function () {\r\n            var elems;\r\n\r\n            this.allValid = true;\r\n\r\n            elems = this.elems.sortBy(function (elem) {\r\n                return !elem.active();\r\n            });\r\n\r\n            elems = elems.map(this._validate, this);\r\n\r\n            return _.flatten(elems);\r\n        },\r\n\r\n        /**\r\n         * Iterator function for components validation.\r\n         * Activates first invalid child component.\r\n         *\r\n         * @param {Object} elem - Element to run validation on.\r\n         * @returns {Array} An array of validation results.\r\n         */\r\n        _validate: function (elem) {\r\n            var result = elem.delegate('validate'),\r\n                invalid;\r\n\r\n            invalid = _.some(result, function (item) {\r\n                return !item.valid;\r\n            });\r\n\r\n            if (this.allValid && invalid) {\r\n                this.allValid = false;\r\n\r\n                elem.activate();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Creates function that removes element\r\n         * from collection using '_removeChild' method.\r\n         * @param  {Object} elem - Element that should be removed.\r\n         * @deprecated Not used anymore\r\n         */\r\n        removeAddress: function (elem) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.removeMessage,\r\n                actions: {\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        self._removeAddress(elem);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes element from both collection and data storage,\r\n         * activates first element if removed one was active,\r\n         * triggers 'update' event.\r\n         *\r\n         * @param {Object} elem - Element to remove.\r\n         */\r\n        _removeAddress: function (elem) {\r\n            var isActive = elem.active(),\r\n                first;\r\n\r\n            elem.destroy();\r\n\r\n            first = this.elems.first();\r\n\r\n            if (first && isActive) {\r\n                first.activate();\r\n            }\r\n\r\n            this.bubble('update');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/area.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './tab'\r\n], function (_, Tab) {\r\n    'use strict';\r\n\r\n    return Tab.extend({\r\n        defaults: {\r\n            uniqueNs:   'params.activeArea',\r\n            template:   'ui/area',\r\n            changed:    false,\r\n            loading:    false\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onChildrenUpdate', 'onContentLoading');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('changed loading');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls parent's initElement method.\r\n         * Assigns callbacks on various events of incoming element.\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            this._super();\r\n\r\n            elem.on({\r\n                'update':   this.onChildrenUpdate,\r\n                'loading':  this.onContentLoading\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children update.\r\n         * Sets changed property to one incoming.\r\n         * Invokes setActive method if settings\r\n         * contain makeVisible property set to true.\r\n         *\r\n         * @param  {Boolean} hasChanged\r\n         */\r\n        onChildrenUpdate: function (hasChanged) {\r\n            if (!hasChanged) {\r\n                hasChanged = _.some(this.delegate('hasChanged'));\r\n            }\r\n\r\n            this.changed(hasChanged);\r\n        },\r\n\r\n        /**\r\n         * Callback that sets loading property to true.\r\n         */\r\n        onContentLoading: function (isLoading) {\r\n            this.loading(isLoading);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiCollection'\r\n], function (Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            uniqueProp:     'active',\r\n            active:         false,\r\n            wasActivated:   false\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .setUnique();\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('active wasActivated');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets active property to true, then invokes pushParams method.\r\n         */\r\n        activate: function () {\r\n            this.active(true);\r\n            this.wasActivated(true);\r\n\r\n            this.setUnique();\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/collection/item.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    '../tab'\r\n], function (_, utils, Tab) {\r\n    'use strict';\r\n\r\n    var previewConfig = {\r\n        separator: ' ',\r\n        prefix: ''\r\n    };\r\n\r\n    /**\r\n     * Parses incoming data and returns result merged with default preview config\r\n     *\r\n     * @param  {Object|String} data\r\n     * @return {Object}\r\n     */\r\n    function parsePreview(data) {\r\n        if (typeof data == 'string') {\r\n            data = {\r\n                items: data\r\n            };\r\n        }\r\n\r\n        data.items = utils.stringToArray(data.items);\r\n\r\n        return _.defaults(data, previewConfig);\r\n    }\r\n\r\n    return Tab.extend({\r\n        defaults: {\r\n            label: '',\r\n            uniqueNs: 'activeCollectionItem',\r\n            previewTpl: 'ui/form/components/collection/preview'\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls initializes of parent class\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'buildPreview', 'hasPreview');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls initProperties of parent class, initializes properties\r\n         * of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.displayed = [];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class, initializes observable\r\n         * properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    noPreview: true,\r\n                    indexed: {}\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being called when child element has been initialized,\r\n         *     calls initElement of parent class, binds to element's update event,\r\n         *     calls insertToArea and insertToIndexed methods passing element to it\r\n         *\r\n         * @param  {Object} elem\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .insertToIndexed(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds element to observable indexed object of instance\r\n         *\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        insertToIndexed: function (elem) {\r\n            var indexed = this.indexed();\r\n\r\n            indexed[elem.index] = elem;\r\n\r\n            this.indexed(indexed);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * Overrides base method to clear data when this method is called.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n            this._clearData();\r\n        },\r\n\r\n        /**\r\n         * Clears all data associated with component.\r\n         * @private\r\n         *\r\n         * @returns {Item} Chainable.\r\n         */\r\n        _clearData: function () {\r\n            this.source.remove(this.dataScope);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Formats incoming previews array via parsePreview function.\r\n         *\r\n         * @param  {Array} previews\r\n         * @return {Array} - formatted previews\r\n         */\r\n        formatPreviews: function (previews) {\r\n            return previews.map(parsePreview);\r\n        },\r\n\r\n        /**\r\n         * Creates string view of previews\r\n         *\r\n         * @param  {Object} data\r\n         * @return {Strict} - formatted preview string\r\n         */\r\n        buildPreview: function (data) {\r\n            var preview = this.getPreview(data.items),\r\n                prefix = data.prefix;\r\n\r\n            return prefix + preview.join(data.separator);\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has preview for incoming data\r\n         *\r\n         * @param  {Object}  data\r\n         * @return {Boolean}\r\n         */\r\n        hasPreview: function (data) {\r\n            return !!this.getPreview(data.items).length;\r\n        },\r\n\r\n        /**\r\n         * Creates an array of previews for elements specified in incoming\r\n         * items array, calls updatePreview afterwards.\r\n         *\r\n         * @param  {Array} items - An array of element's indexes.\r\n         * @returns {Array} An array of previews.\r\n         */\r\n        getPreview: function (items) {\r\n            var elems = this.indexed(),\r\n                displayed = this.displayed,\r\n                preview;\r\n\r\n            items = items.map(function (index) {\r\n                var elem = elems[index];\r\n\r\n                preview = elem && elem.visible() ? elem.getPreview() : '';\r\n\r\n                preview = Array.isArray(preview) ?\r\n                    _.compact(preview).join(', ') :\r\n                    preview;\r\n\r\n                utils.toggle(displayed, index, !!preview);\r\n\r\n                return preview;\r\n            });\r\n\r\n            this.noPreview(!displayed.length);\r\n\r\n            return _.compact(items);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/modal/alert.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.alert', $.mage.confirm, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: $.mage.__('Attention'),\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function () {\r\n            this.options.actions.always();\r\n            this.element.bind('alertclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).alert(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/prompt.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-prompt-content.html',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, _, template, promptContentTmpl) {\r\n    'use strict';\r\n\r\n    $.widget('mage.prompt', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'prompt',\r\n            promptContentTmpl: promptContentTmpl,\r\n            promptField: '[data-role=\"promptField\"]',\r\n            attributesForm: {},\r\n            attributesField: {},\r\n            value: '',\r\n            validation: false,\r\n            validationRules: [],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Enter key press handler,\r\n                 * submit result and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                enterKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(true);\r\n                        event.preventDefault();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * cancel and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal();\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            },\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal();\r\n                }\r\n            }, {\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this.options.focus = this.options.promptField;\r\n            this.options.validation = this.options.validation && this.options.validationRules.length;\r\n            this.options.outerClickHandler = this.options.outerClickHandler || _.bind(this.closeModal, this, false);\r\n            this._super();\r\n            this.modal.find(this.options.modalContent).append(this.getFormTemplate());\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click',  _.bind(this.closeModal, this, false));\r\n\r\n            if (this.options.validation) {\r\n                this.setValidationClasses();\r\n            }\r\n\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Form template getter.\r\n         *\r\n         * @returns {Object} Form template.\r\n         */\r\n        getFormTemplate: function () {\r\n            var formTemplate,\r\n                formAttr = '',\r\n                inputAttr = '',\r\n                attributeName;\r\n\r\n            for (attributeName in this.options.attributesForm) {\r\n                if (this.options.attributesForm.hasOwnProperty(attributeName)) {\r\n                    formAttr = formAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesForm[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            for (attributeName in this.options.attributesField) {\r\n                if (this.options.attributesField.hasOwnProperty(attributeName)) {\r\n                    inputAttr = inputAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesField[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            formTemplate = $(template(this.options.promptContentTmpl, {\r\n                data: this.options,\r\n                formAttr: formAttr,\r\n                inputAttr: inputAttr\r\n            }));\r\n\r\n            return formTemplate;\r\n        },\r\n\r\n        /**\r\n         * Remove widget\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Validate prompt field\r\n         */\r\n        validate: function () {\r\n            return $.validator.validateSingleElement(this.options.promptField);\r\n        },\r\n\r\n        /**\r\n         * Add validation classes to prompt field\r\n         */\r\n        setValidationClasses: function () {\r\n            this.modal.find(this.options.promptField).attr('class', $.proxy(function (i, val) {\r\n                return val + ' ' + this.options.validationRules.join(' ');\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Open modal window\r\n         */\r\n        openModal: function () {\r\n            this._super();\r\n            this.modal.find(this.options.promptField).val(this.options.value);\r\n        },\r\n\r\n        /**\r\n         * Close modal window\r\n         */\r\n        closeModal: function (result) {\r\n            var value;\r\n\r\n            if (result) {\r\n                if (this.options.validation && !this.validate()) {\r\n                    return false;\r\n                }\r\n\r\n                value = this.modal.find(this.options.promptField).val();\r\n                this.options.actions.confirm.call(this, value);\r\n            } else {\r\n                this.options.actions.cancel.call(this, result);\r\n            }\r\n\r\n            this.options.actions.always();\r\n            this.element.bind('promptclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div class=\"prompt-message\"></div>').html(config.content).prompt(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/modal-component.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiCollection',\r\n    'uiRegistry',\r\n    'underscore',\r\n    './modal'\r\n], function ($, Collection, registry, _) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/modal/modal-component',\r\n            title: '',\r\n            subTitle: '',\r\n            options: {\r\n                modalClass: '',\r\n                title: '',\r\n                subTitle: '',\r\n                buttons: [],\r\n                keyEventHandlers: {}\r\n            },\r\n            valid: true,\r\n            links: {\r\n                title: 'options.title',\r\n                subTitle: 'options.subTitle'\r\n            },\r\n            listens: {\r\n                state: 'onState',\r\n                title: 'setTitle',\r\n                'options.subTitle': 'setSubTitle'\r\n            },\r\n            modalClass: 'modal-component',\r\n            onCancel: 'closeModal'\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'initModal',\r\n                'openModal',\r\n                'closeModal',\r\n                'toggleModal',\r\n                'setPrevValues',\r\n                'validate');\r\n            this.initializeContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes modal configuration\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            return this._super()\r\n                .initSelector()\r\n                .initModalEvents();\r\n        },\r\n\r\n        /**\r\n         * Configure modal selector\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initSelector: function () {\r\n            var modalClass = this.name.replace(/\\./g, '_');\r\n\r\n            this.contentSelector = '.' + this.modalClass;\r\n            this.options.modalClass = this.options.modalClass + ' ' + modalClass;\r\n            this.rootSelector = '.' + modalClass;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure modal keyboard handlers\r\n         * and outer click\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModalEvents: function () {\r\n            this.options.keyEventHandlers.escapeKey = this.options.outerClickHandler = this[this.onCancel].bind(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize modal's content components\r\n         */\r\n        initializeContent: function () {\r\n            $.async({\r\n                component: this.name\r\n            }, this.initModal);\r\n        },\r\n\r\n        /**\r\n         * Init toolbar section so other components will be able to place something in it\r\n         */\r\n        initToolbarSection: function () {\r\n            this.set('toolbarSection', this.modal.data('mage-modal').modal.find('header').get(0));\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe(['state', 'focused']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModal: function (element) {\r\n            if (!this.modal) {\r\n                this.overrideModalButtonCallback();\r\n                this.options.modalCloseBtnHandler = this[this.onCancel].bind(this);\r\n                this.modal = $(element).modal(this.options);\r\n                this.initToolbarSection();\r\n\r\n                if (this.waitCbk) {\r\n                    this.waitCbk();\r\n                    this.waitCbk = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open modal\r\n         */\r\n        openModal: function () {\r\n            if (this.modal) {\r\n                this.state(true);\r\n            } else {\r\n                this.waitCbk = this.openModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal\r\n         */\r\n        closeModal: function () {\r\n            if (this.modal) {\r\n                this.state(false);\r\n            } else {\r\n                this.waitCbk = this.closeModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle modal\r\n         */\r\n        toggleModal: function () {\r\n            if (this.modal) {\r\n                this.state(!this.state());\r\n            } else {\r\n                this.waitCbk = this.toggleModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets title for modal\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            if (this.title !== title) {\r\n                this.title = title;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setTitle', title);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets subTitle for modal\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            if (this.subTitle !== subTitle) {\r\n                this.subTitle = subTitle;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setSubTitle', subTitle);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {Boolean} state\r\n         */\r\n        onState: function (state) {\r\n            if (state) {\r\n                this.modal.modal('openModal');\r\n                this.applyData();\r\n            } else {\r\n                this.modal.modal('closeModal');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate everything validatable in modal\r\n         */\r\n        validate: function (elem) {\r\n            if (typeof elem === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof elem.validate === 'function') {\r\n                this.valid = this.valid & elem.validate().valid;\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.validate, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data from provider\r\n         */\r\n        resetData: function () {\r\n            this.elems().forEach(this.resetValue, this);\r\n        },\r\n\r\n        /**\r\n         * Update 'applied' property with data from modal content\r\n         */\r\n        applyData: function () {\r\n            var applied = {};\r\n\r\n            this.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            this.applied = applied;\r\n        },\r\n\r\n        /**\r\n         * Gather values from modal content\r\n         *\r\n         * @param {Array} applied\r\n         * @param {HTMLElement} elem\r\n         */\r\n        gatherValues: function (applied, elem) {\r\n            if (typeof elem.value === 'function') {\r\n                applied[elem.name] = elem.value();\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set to previous values from modal content\r\n         *\r\n         * @param {HTMLElement} elem\r\n         */\r\n        setPrevValues: function (elem) {\r\n            if (typeof elem.value === 'function') {\r\n                this.modal.focus();\r\n                elem.value(this.applied[elem.name]);\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.setPrevValues, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Triggers some method in every modal child elem, if this method is defined\r\n         *\r\n         * @param {Object} action - action configuration,\r\n         * must contain actionName and targetName and\r\n         * can contain params\r\n         */\r\n        triggerAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = action.params || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Override modal buttons callback placeholders with real callbacks\r\n         */\r\n        overrideModalButtonCallback: function () {\r\n            var buttons = this.options.buttons;\r\n\r\n            if (buttons && buttons.length) {\r\n                buttons.forEach(function (button) {\r\n                    button.click = this.getButtonClickHandler(button.actions);\r\n                }, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate button click handler based on button's 'actions' configuration\r\n         */\r\n        getButtonClickHandler: function (actionsConfig) {\r\n            var actions = actionsConfig.map(\r\n                function (actionConfig) {\r\n                    if (_.isObject(actionConfig)) {\r\n                        return this.triggerAction.bind(this, actionConfig);\r\n                    }\r\n\r\n                    return this[actionConfig] ? this[actionConfig].bind(this) : function () {};\r\n                }, this);\r\n\r\n            return function () {\r\n                actions.forEach(\r\n                    function (action) {\r\n                        action();\r\n                    }\r\n                );\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Cancels changes in modal:\r\n         * returning elems values to the previous state,\r\n         * and close modal\r\n         */\r\n        actionCancel: function () {\r\n            this.elems().forEach(this.setPrevValues, this);\r\n            this.closeModal();\r\n        },\r\n\r\n        /**\r\n         * Accept changes in modal by not preventing them.\r\n         * Can be extended by exporting 'gatherValues' result somewhere\r\n         */\r\n        actionDone: function () {\r\n            this.valid = true;\r\n            this.elems().forEach(this.validate, this);\r\n\r\n            if (this.valid) {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/modal/modal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-popup.html',\r\n    'text!ui/template/modal/modal-slide.html',\r\n    'text!ui/template/modal/modal-custom.html',\r\n    'Magento_Ui/js/lib/key-codes',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'mage/translate'\r\n], function ($, _, template, popupTpl, slideTpl, customTpl, keyCodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Detect browser transition end event.\r\n     * @return {String|undefined} - transition event.\r\n     */\r\n    var transitionEvent =  (function () {\r\n        var transition,\r\n            elementStyle = document.createElement('div').style,\r\n            transitions = {\r\n                'transition': 'transitionend',\r\n                'OTransition': 'oTransitionEnd',\r\n                'MozTransition': 'transitionend',\r\n                'WebkitTransition': 'webkitTransitionEnd'\r\n            };\r\n\r\n        for (transition in transitions) {\r\n            if (elementStyle[transition] !== undefined && transitions.hasOwnProperty(transition)) {\r\n                return transitions[transition];\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Modal Window Widget\r\n     */\r\n    $.widget('mage.modal', {\r\n        options: {\r\n            id: null,\r\n            type: 'popup',\r\n            title: '',\r\n            subTitle: '',\r\n            modalClass: '',\r\n            focus: '[data-role=\"closeBtn\"]',\r\n            autoOpen: false,\r\n            clickableOverlay: true,\r\n            popupTpl: popupTpl,\r\n            slideTpl: slideTpl,\r\n            customTpl: customTpl,\r\n            modalVisibleClass: '_show',\r\n            parentModalClass: '_has-modal',\r\n            innerScrollClass: '_inner-scroll',\r\n            responsive: false,\r\n            innerScroll: false,\r\n            modalTitle: '[data-role=\"title\"]',\r\n            modalSubTitle: '[data-role=\"subTitle\"]',\r\n            modalBlock: '[data-role=\"modal\"]',\r\n            modalCloseBtn: '[data-role=\"closeBtn\"]',\r\n            modalContent: '[data-role=\"content\"]',\r\n            modalAction: '[data-role=\"action\"]',\r\n            focusableScope: '[data-role=\"focusable-scope\"]',\r\n            focusableStart: '[data-role=\"focusable-start\"]',\r\n            focusableEnd: '[data-role=\"focusable-end\"]',\r\n            appendTo: 'body',\r\n            wrapperClass: 'modals-wrapper',\r\n            overlayClass: 'modals-overlay',\r\n            responsiveClass: 'modal-slide',\r\n            trigger: '',\r\n            modalLeftMargin: 45,\r\n            closeText: $.mage.__('Close'),\r\n            buttons: [{\r\n                text: $.mage.__('Ok'),\r\n                class: '',\r\n                attr: {},\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates modal widget.\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                'keyEventSwitcher',\r\n                '_tabSwitcher',\r\n                'closeModal'\r\n            );\r\n\r\n            this.options.id = this.uuid;\r\n            this.options.transitionEvent = transitionEvent;\r\n            this._createWrapper();\r\n            this._renderModal();\r\n            this._createButtons();\r\n\r\n            if (this.options.trigger) {\r\n                $(document).on('click', this.options.trigger, _.bind(this.toggleModal, this));\r\n            }\r\n            this._on(this.modal.find(this.options.modalCloseBtn), {\r\n                'click': this.options.modalCloseBtnHandler ? this.options.modalCloseBtnHandler : this.closeModal\r\n            });\r\n            this._on(this.element, {\r\n                'openModal': this.openModal,\r\n                'closeModal': this.closeModal\r\n            });\r\n            this.options.autoOpen ? this.openModal() : false;\r\n        },\r\n\r\n        /**\r\n         * Returns element from modal node.\r\n         * @return {Object} - element.\r\n         */\r\n        _getElem: function (elem) {\r\n            return this.modal.find(elem);\r\n        },\r\n\r\n        /**\r\n         * Gets visible modal count.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleCount: function () {\r\n            var modals = this.modalWrapper.find(this.options.modalBlock);\r\n\r\n            return modals.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Gets count of visible modal by slide type.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleSlideCount: function () {\r\n            var elems = this.modalWrapper.find('[data-type=\"slide\"]');\r\n\r\n            return elems.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Listener key events.\r\n         * Call handler function if it exists\r\n         */\r\n        keyEventSwitcher: function (event) {\r\n            var key = keyCodes[event.keyCode];\r\n\r\n            if (this.options.keyEventHandlers.hasOwnProperty(key)) {\r\n                this.options.keyEventHandlers[key].apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set title for modal.\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            var $title = this.modal.find(this.options.modalTitle),\r\n                $subTitle = this.modal.find(this.options.modalSubTitle);\r\n\r\n            $title.text(title);\r\n            $title.append($subTitle);\r\n        },\r\n\r\n        /**\r\n         * Set sub title for modal.\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            this.options.subTitle = subTitle;\r\n            this.modal.find(this.options.modalSubTitle).html(subTitle);\r\n        },\r\n\r\n        /**\r\n         * Toggle modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        toggleModal: function () {\r\n            if (this.options.isOpen === true) {\r\n                this.closeModal();\r\n            } else {\r\n                this.openModal();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        openModal: function () {\r\n            this.options.isOpen = true;\r\n            this.focussedElement = document.activeElement;\r\n            this._createOverlay();\r\n            this._setActive();\r\n            this._setKeyListener();\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._setFocus, this, 'end', 'opened'));\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._trigger, this, 'opened'));\r\n            this.modal.addClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                this._trigger('opened');\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         *\r\n         *  @param {String} type - can be \"opened\" or false\r\n         *      If type is \"opened\" - looks to \"this.options.focus\"\r\n         *      property and sets focus\r\n         */\r\n        _setFocus: function (position, type) {\r\n            var focusableElements,\r\n                infelicity;\r\n\r\n            if (type === 'opened' && this.options.focus) {\r\n                this.modal.find($(this.options.focus)).focus();\r\n            } else if (type === 'opened' && !this.options.focus) {\r\n                this.modal.find(this.options.focusableScope).focus();\r\n            } else if (position === 'end') {\r\n                this.modal.find(this.options.modalCloseBtn).focus();\r\n            } else if (position === 'start') {\r\n                infelicity = 2; //Constant for find last focusable element\r\n                focusableElements = this.modal.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set events listener when modal is opened.\r\n         */\r\n        _setKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).bind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).bind('focusin', this._tabSwitcher);\r\n            this.modal.bind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Remove events listener when modal is closed.\r\n         */\r\n        _removeKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).unbind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).unbind('focusin', this._tabSwitcher);\r\n            this.modal.unbind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Switcher for focus event.\r\n         * @param {Object} e - event\r\n         */\r\n        _tabSwitcher: function (e) {\r\n            var target = $(e.target);\r\n\r\n            if (target.is(this.options.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(this.options.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        closeModal: function () {\r\n            var that = this;\r\n\r\n            this._removeKeyListener();\r\n            this.options.isOpen = false;\r\n            this.modal.one(this.options.transitionEvent, function () {\r\n                that._close();\r\n            });\r\n            this.modal.removeClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                that._close();\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Helper for closeModal function.\r\n         */\r\n        _close: function () {\r\n            var trigger = _.bind(this._trigger, this, 'closed', this.modal);\r\n\r\n            $(this.focussedElement).focus();\r\n            this._destroyOverlay();\r\n            this._unsetActive();\r\n            _.defer(trigger, this);\r\n        },\r\n\r\n        /**\r\n         * Set z-index and margin for modal and overlay.\r\n         */\r\n        _setActive: function () {\r\n            var zIndex = this.modal.zIndex(),\r\n                baseIndex = zIndex + this._getVisibleCount();\r\n\r\n            if (this.modal.data('active')) {\r\n                return;\r\n            }\r\n\r\n            this.modal.data('active', true);\r\n\r\n            this.overlay.zIndex(++baseIndex);\r\n            this.prevOverlayIndex = this.overlay.zIndex();\r\n            this.modal.zIndex(this.overlay.zIndex() + 1);\r\n\r\n            if (this._getVisibleSlideCount()) {\r\n                this.modal.css('marginLeft', this.options.modalLeftMargin * this._getVisibleSlideCount());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Unset styles for modal and set z-index for previous modal.\r\n         */\r\n        _unsetActive: function () {\r\n            this.modal.removeAttr('style');\r\n            this.modal.data('active', false);\r\n\r\n            if (this.overlay) {\r\n                this.overlay.zIndex(this.prevOverlayIndex - 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates wrapper to hold all modals.\r\n         */\r\n        _createWrapper: function () {\r\n            this.modalWrapper = $(this.options.appendTo).find('.' + this.options.wrapperClass);\r\n\r\n            if (!this.modalWrapper.length) {\r\n                this.modalWrapper = $('<div></div>')\r\n                    .addClass(this.options.wrapperClass)\r\n                    .appendTo(this.options.appendTo);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Compile template and append to wrapper.\r\n         */\r\n        _renderModal: function () {\r\n            $(template(\r\n                this.options[this.options.type + 'Tpl'],\r\n                {\r\n                    data: this.options\r\n                })).appendTo(this.modalWrapper);\r\n            this.modal = this.modalWrapper.find(this.options.modalBlock).last();\r\n            this.element.appendTo(this._getElem(this.options.modalContent));\r\n\r\n            if (this.element.is(':hidden')) {\r\n                this.element.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates buttons pane.\r\n         */\r\n        _createButtons: function () {\r\n            this.buttons = this._getElem(this.options.modalAction);\r\n            _.each(this.options.buttons, function (btn, key) {\r\n                var button = this.buttons[key];\r\n\r\n                if (btn.attr) {\r\n                    $(button).attr(btn.attr);\r\n                }\r\n\r\n                if (btn.class) {\r\n                    $(button).addClass(btn.class);\r\n                }\r\n\r\n                if (!btn.click) {\r\n                    btn.click = this.closeModal;\r\n                }\r\n                $(button).on('click', _.bind(btn.click, this));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Creates overlay, append it to wrapper, set previous click event on overlay.\r\n         */\r\n        _createOverlay: function () {\r\n            var events,\r\n                outerClickHandler = this.options.outerClickHandler || this.closeModal;\r\n\r\n            this.overlay = $('.' + this.options.overlayClass);\r\n\r\n            if (!this.overlay.length) {\r\n                $(this.options.appendTo).addClass(this.options.parentModalClass);\r\n                this.overlay = $('<div></div>')\r\n                    .addClass(this.options.overlayClass)\r\n                    .appendTo(this.modalWrapper);\r\n            }\r\n            events = $._data(this.overlay.get(0), 'events');\r\n            events ? this.prevOverlayHandler = events.click[0].handler : false;\r\n            this.options.clickableOverlay ? this.overlay.unbind().on('click', outerClickHandler) : false;\r\n        },\r\n\r\n        /**\r\n         * Destroy overlay.\r\n         */\r\n        _destroyOverlay: function () {\r\n            if (this._getVisibleCount()) {\r\n                this.overlay.unbind().on('click', this.prevOverlayHandler);\r\n            } else {\r\n                $(this.options.appendTo).removeClass(this.options.parentModalClass);\r\n                this.overlay.remove();\r\n                this.overlay = null;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.modal;\r\n});\r\n","Magento_Ui/js/modal/confirm.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/translate',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, _, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.confirm', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: '',\r\n            focus: '.action-accept',\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $t('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }, {\r\n                text: $t('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event, true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this._super();\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click', _.bind(this.closeModal, this));\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Remove modal window.\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Open modal window.\r\n         */\r\n        openModal: function () {\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function (event, result) {\r\n            result = result || false;\r\n\r\n            if (result) {\r\n                this.options.actions.confirm(event);\r\n            } else {\r\n                this.options.actions.cancel(event);\r\n            }\r\n            this.options.actions.always(event);\r\n            this.element.bind('confirmclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).confirm(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/modalToggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, el) {\r\n        var widget,\r\n            content;\r\n\r\n        if (config.contentSelector) {\r\n            content = $(config.contentSelector);\r\n        } else if (config.content) {\r\n            content = $('<div />').html(config.content);\r\n        } else {\r\n            content = $('<div />');\r\n        }\r\n\r\n        widget = content.modal(config);\r\n\r\n        $(el).on(config.toggleEvent, function () {\r\n            var state = widget.data('mage-modal').options.isOpen;\r\n\r\n            if (state) {\r\n                widget.modal('closeModal');\r\n            } else {\r\n                widget.modal('openModal');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return widget;\r\n    };\r\n});\r\n","Magento_Ui/js/model/messageList.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './messages'\r\n], function (Messages) {\r\n    'use strict';\r\n\r\n    return new Messages();\r\n});\r\n","Magento_Ui/js/model/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this.errorMessages = ko.observableArray([]);\r\n            this.successMessages = ko.observableArray([]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add  message to list.\r\n         * @param {Object} messageObj\r\n         * @param {Object} type\r\n         * @returns {Boolean}\r\n         */\r\n        add: function (messageObj, type) {\r\n            var expr = /([%])\\w+/g,\r\n                message;\r\n\r\n            if (!messageObj.hasOwnProperty('parameters')) {\r\n                this.clear();\r\n                type.push(messageObj.message);\r\n\r\n                return true;\r\n            }\r\n            message = messageObj.message.replace(expr, function (varName) {\r\n                varName = varName.substr(1);\r\n\r\n                if (!isNaN(varName)) {\r\n                    varName--;\r\n                }\r\n\r\n                if (messageObj.parameters.hasOwnProperty(varName)) {\r\n                    return messageObj.parameters[varName];\r\n                }\r\n\r\n                return messageObj.parameters.shift();\r\n            });\r\n            this.clear();\r\n            type.push(message);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Add success message.\r\n         *\r\n         * @param {Object} message\r\n         * @return {*|Boolean}\r\n         */\r\n        addSuccessMessage: function (message) {\r\n            return this.add(message, this.successMessages);\r\n        },\r\n\r\n        /**\r\n         * Add error message.\r\n         *\r\n         * @param {Object} message\r\n         * @return {*|Boolean}\r\n         */\r\n        addErrorMessage: function (message) {\r\n            return this.add(message, this.errorMessages);\r\n        },\r\n\r\n        /**\r\n         * Get error messages.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getErrorMessages: function () {\r\n            return this.errorMessages;\r\n        },\r\n\r\n        /**\r\n         * Get success messages.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getSuccessMessages: function () {\r\n            return this.successMessages;\r\n        },\r\n\r\n        /**\r\n         * Checks if an instance has stored messages.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasMessages: function () {\r\n            return this.errorMessages().length > 0 || this.successMessages().length > 0;\r\n        },\r\n\r\n        /**\r\n         * Removes stored messages.\r\n         */\r\n        clear: function () {\r\n            this.errorMessages.removeAll();\r\n            this.successMessages.removeAll();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/core/app.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    './renderer/types',\r\n    './renderer/layout',\r\n    '../lib/knockout/bootstrap'\r\n], function (types, layout) {\r\n    'use strict';\r\n\r\n    return function (data, merge) {\r\n        types.set(data.types);\r\n        layout(data.components, undefined, true, merge);\r\n    };\r\n});\r\n","Magento_Ui/js/core/renderer/types.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mageUtils'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    var store = {};\r\n\r\n    /**\r\n     * Flatten a nested data.\r\n     *\r\n     * @param {Object} data\r\n     * @returns {Object}\r\n     */\r\n    function flatten(data) {\r\n        var extender = data.extends || [],\r\n            result = {};\r\n\r\n        extender = utils.stringToArray(extender);\r\n\r\n        extender.push(data);\r\n\r\n        extender.forEach(function (item) {\r\n            if (_.isString(item)) {\r\n                item = store[item] || {};\r\n            }\r\n\r\n            utils.extend(result, item);\r\n        });\r\n\r\n        delete result.extends;\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Set types to store object.\r\n         *\r\n         * @param {Object} types\r\n         */\r\n        set: function (types) {\r\n            types = types || {};\r\n\r\n            utils.extend(store, types);\r\n\r\n            _.each(types, function (data, type) {\r\n                store[type] = flatten(data);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get type from store object.\r\n         *\r\n         * @param {String} type\r\n         * @returns {*|{}}\r\n         */\r\n        get: function (type) {\r\n            return store[type] || {};\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/core/renderer/layout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './types',\r\n    '../../lib/logger/console-logger'\r\n], function (_, $, utils, registry, types, consoleLogger) {\r\n    'use strict';\r\n\r\n    var templates = registry.create(),\r\n        layout = {},\r\n        cachedConfig = {};\r\n\r\n    /**\r\n     * Build name from parent name and node name\r\n     *\r\n     * @param {Object} parent\r\n     * @param {Object} node\r\n     * @param {String} [name]\r\n     * @returns {String}\r\n     */\r\n    function getNodeName(parent, node, name) {\r\n        var parentName = parent && parent.name;\r\n\r\n        if (typeof name !== 'string') {\r\n            name = node.name || name;\r\n        }\r\n\r\n        return utils.fullPath(parentName, name);\r\n    }\r\n\r\n    /**\r\n     * Get node type from node or parent.\r\n     *\r\n     * @param {Object} parent\r\n     * @param {Object} node\r\n     * @returns {String}\r\n     */\r\n    function getNodeType(parent, node) {\r\n        return node.type || parent && parent.childType;\r\n    }\r\n\r\n    /**\r\n     * Get data scope based on parent data scope and node data scope.\r\n     *\r\n     * @param {Object} parent\r\n     * @param {Object} node\r\n     * @returns {String}\r\n     */\r\n    function getDataScope(parent, node) {\r\n        var dataScope = node.dataScope,\r\n            parentScope = parent && parent.dataScope;\r\n\r\n        return !utils.isEmpty(parentScope) ?\r\n            !utils.isEmpty(dataScope) ?\r\n                parentScope + '.' + dataScope :\r\n                parentScope :\r\n            dataScope || '';\r\n    }\r\n\r\n    /**\r\n     * Load node dependencies on other instances.\r\n     *\r\n     * @param {Object} node\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function loadDeps(node) {\r\n        var loaded = $.Deferred(),\r\n            loggerUtils = consoleLogger.utils;\r\n\r\n        if (node.deps) {\r\n            consoleLogger.utils.asyncLog(\r\n                loaded,\r\n                {\r\n                    data: {\r\n                        component: node.name,\r\n                        deps: node.deps\r\n                    },\r\n                    messages: loggerUtils.createMessages(\r\n                        'depsStartRequesting',\r\n                        'depsFinishRequesting',\r\n                        'depsLoadingFail'\r\n                    )\r\n                }\r\n            );\r\n        }\r\n\r\n        registry.get(node.deps, function (deps) {\r\n            node.provider = node.extendProvider ? deps && deps.name : node.provider;\r\n            loaded.resolve(node);\r\n        });\r\n\r\n        return loaded.promise();\r\n    }\r\n\r\n    /**\r\n     * Load node component file via requirejs.\r\n     *\r\n     * @param {Object} node\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function loadSource(node) {\r\n        var loaded = $.Deferred(),\r\n            source = node.component;\r\n\r\n        consoleLogger.info('componentStartLoading', {\r\n            component: node.component\r\n        });\r\n\r\n        require([source], function (constr) {\r\n            consoleLogger.info('componentFinishLoading', {\r\n                component: node.component\r\n            });\r\n            loaded.resolve(node, constr);\r\n        }, function () {\r\n            consoleLogger.error('componentLoadingFail', {\r\n                component: node.component\r\n            });\r\n        });\r\n\r\n        return loaded.promise();\r\n    }\r\n\r\n    /**\r\n     * Create a new component instance and set it to the registry.\r\n     *\r\n     * @param {Object} node\r\n     * @param {Function} Constr\r\n     */\r\n    function initComponent(node, Constr) {\r\n        var component = new Constr(_.omit(node, 'children'));\r\n\r\n        consoleLogger.info('componentStartInitialization', {\r\n            component: node.component,\r\n            componentName: node.name\r\n        });\r\n\r\n        registry.set(node.name, component);\r\n    }\r\n\r\n    /**\r\n     * Application entry point.\r\n     *\r\n     * @param {Object} nodes\r\n     * @param {Object} parent\r\n     * @param {Boolean} cached\r\n     * @param {Boolean} merge\r\n     * @returns {Boolean|undefined}\r\n     */\r\n    function run(nodes, parent, cached, merge) {\r\n        if (_.isBoolean(merge) && merge) {\r\n            layout.merge(nodes);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (cached) {\r\n            cachedConfig[_.keys(nodes)[0]] = JSON.parse(JSON.stringify(nodes));\r\n        }\r\n\r\n        _.each(nodes || [], layout.iterator.bind(layout, parent));\r\n    }\r\n\r\n    _.extend(layout, {\r\n        /**\r\n         * Determines if node ready to be added or process it.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object|String} node\r\n         */\r\n        iterator: function (parent, node) {\r\n            var action = _.isString(node) ?\r\n                this.addChild :\r\n                this.process;\r\n\r\n            action.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Prepare component.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object} node\r\n         * @param {String} name\r\n         * @returns {Object}\r\n         */\r\n        process: function (parent, node, name) {\r\n            if (!parent && node.parent) {\r\n                return this.waitParent(node, name);\r\n            }\r\n\r\n            if (node.nodeTemplate) {\r\n                return this.waitTemplate.apply(this, arguments);\r\n            }\r\n\r\n            node = this.build.apply(this, arguments);\r\n\r\n            if (!registry.has(node.name)) {\r\n                this.addChild(parent, node)\r\n                    .manipulate(node)\r\n                    .initComponent(node);\r\n            }\r\n\r\n            if (node) {\r\n                run(node.children, node);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Detailed processing of component config.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object} node\r\n         * @param {String} name\r\n         * @returns {Boolean|Object}\r\n         */\r\n        build: function (parent, node, name) {\r\n            var defaults    = parent && parent.childDefaults || {},\r\n                children    = this.filterDisabledChildren(node.children),\r\n                type        = getNodeType(parent, node),\r\n                dataScope   = getDataScope(parent, node),\r\n                component,\r\n                extendDeps  = true,\r\n                nodeName;\r\n\r\n            node.children = false;\r\n            node.extendProvider = true;\r\n\r\n            if (node.config && node.config.provider || node.provider) {\r\n                node.extendProvider = false;\r\n            }\r\n\r\n            if (node.config && node.config.deps || node.deps) {\r\n                extendDeps = false;\r\n            }\r\n\r\n            node = utils.extend({\r\n            }, types.get(type), defaults, node);\r\n\r\n            nodeName = getNodeName(parent, node, name);\r\n\r\n            if (registry.has(nodeName)) {\r\n                component = registry.get(nodeName);\r\n                component.children = children;\r\n\r\n                return component;\r\n            }\r\n\r\n            if (extendDeps && parent && parent.deps && type) {\r\n                node.deps = parent.deps;\r\n            }\r\n\r\n            _.extend(node, node.config || {}, {\r\n                index: node.name || name,\r\n                name: nodeName,\r\n                dataScope: dataScope,\r\n                parentName: utils.getPart(nodeName, -2),\r\n                parentScope: utils.getPart(dataScope, -2)\r\n            });\r\n\r\n            node.children = children;\r\n            node.componentType = node.type;\r\n\r\n            delete node.type;\r\n            delete node.config;\r\n\r\n            if (children) {\r\n                node.initChildCount = _.size(children);\r\n            }\r\n\r\n            if (node.isTemplate) {\r\n                node.isTemplate = false;\r\n\r\n                templates.set(node.name, node);\r\n                registry.get(node.parentName, function (parentComp) {\r\n                    parentComp.childTemplate = node;\r\n                });\r\n\r\n                return false;\r\n            }\r\n\r\n            if (node.componentDisabled === true) {\r\n                return false;\r\n            }\r\n\r\n            return node;\r\n        },\r\n\r\n        /**\r\n         * Filter out all disabled components.\r\n         *\r\n         * @param {Object} children\r\n         * @returns {*}\r\n         */\r\n        filterDisabledChildren: function (children) {\r\n            var cIds;\r\n\r\n            //cleanup children config.componentDisabled = true\r\n            if (children && typeof children === 'object') {\r\n                cIds = Object.keys(children);\r\n\r\n                if (cIds) {\r\n                    _.each(cIds, function (cId) {\r\n                        if (typeof children[cId] === 'object' &&\r\n                            children[cId].hasOwnProperty('config') &&\r\n                            typeof children[cId].config === 'object' &&\r\n                            children[cId].config.hasOwnProperty('componentDisabled') &&\r\n                            children[cId].config.componentDisabled === true) {\r\n                            delete children[cId];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return children;\r\n        },\r\n\r\n        /**\r\n         * Init component.\r\n         *\r\n         * @param {Object} node\r\n         * @returns {Object}\r\n         */\r\n        initComponent: function (node) {\r\n            if (!node.component) {\r\n                return this;\r\n            }\r\n\r\n            loadDeps(node)\r\n                .then(loadSource)\r\n                .done(initComponent);\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    _.extend(layout, {\r\n        /**\r\n         * Loading component marked as isTemplate.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object} node\r\n         * @returns {Object}\r\n         */\r\n        waitTemplate: function (parent, node) {\r\n            var args = _.toArray(arguments);\r\n\r\n            templates.get(node.nodeTemplate, function () {\r\n                this.applyTemplate.apply(this, args);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Waiting for parent component and process provided component.\r\n         *\r\n         * @param {Object} node\r\n         * @param {String} name\r\n         * @returns {Object}\r\n         */\r\n        waitParent: function (node, name) {\r\n            var process = this.process.bind(this);\r\n\r\n            registry.get(node.parent, function (parent) {\r\n                process(parent, node, name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processing component marked as isTemplate.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object} node\r\n         * @param {String} name\r\n         */\r\n        applyTemplate: function (parent, node, name) {\r\n            var template = templates.get(node.nodeTemplate);\r\n\r\n            node = utils.extend({}, template, node);\r\n\r\n            delete node.nodeTemplate;\r\n\r\n            this.process(parent, node, name);\r\n        }\r\n    });\r\n\r\n    _.extend(layout, {\r\n        /**\r\n         * Determines inserting strategy.\r\n         *\r\n         * @param {Object} node\r\n         * @returns {Object}\r\n         */\r\n        manipulate: function (node) {\r\n            var name = node.name;\r\n\r\n            if (node.appendTo) {\r\n                this.insert(name, node.appendTo, -1);\r\n            }\r\n\r\n            if (node.prependTo) {\r\n                this.insert(name, node.prependTo, 0);\r\n            }\r\n\r\n            if (node.insertTo) {\r\n                this.insertTo(name, node.insertTo);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Insert component to provide target and position.\r\n         *\r\n         * @param {Object|String} item\r\n         * @param {Object} target\r\n         * @param {Number} position\r\n         * @returns {Object}\r\n         */\r\n        insert: function (item, target, position) {\r\n            registry.get(target, function (container) {\r\n                container.insertChild(item, position);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Insert component into multiple targets.\r\n         *\r\n         * @param {Object} item\r\n         * @param {Array} targets\r\n         * @returns {Object}\r\n         */\r\n        insertTo: function (item, targets) {\r\n            _.each(targets, function (info, target) {\r\n                this.insert(item, target, info.position);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add provided child to parent.\r\n         *\r\n         * @param {Object} parent\r\n         * @param {Object|String} child\r\n         * @returns {Object}\r\n         */\r\n        addChild: function (parent, child) {\r\n            var name;\r\n\r\n            if (parent && parent.component) {\r\n                name = child.name || child;\r\n\r\n                this.insert(name, parent.name, child.sortOrder);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Merge components configuration with cached configuration.\r\n         *\r\n         * @param {Array} components\r\n         */\r\n        merge: function (components) {\r\n            var cachedKey = _.keys(components)[0],\r\n                compared = utils.compare(cachedConfig[cachedKey], components),\r\n                remove = this.filterComponents(this.getByProperty(compared.changes, 'type', 'remove'), true),\r\n                update = this.getByProperty(compared.changes, 'type', 'update'),\r\n                dataSources = this.getDataSources(components),\r\n                names, index, name, component;\r\n\r\n            _.each(dataSources, function (val, key) {\r\n                name = key.replace(/\\.children|\\.config/g, '');\r\n                component = registry.get(name);\r\n\r\n                component.cacheData();\r\n                component.updateConfig(\r\n                    true,\r\n                    this.getFullConfig(key, components),\r\n                    this.getFullConfig(key, cachedConfig[cachedKey])\r\n                );\r\n            }, this);\r\n\r\n            _.each(remove, function (val) {\r\n                component = registry.get(val.path);\r\n\r\n                if (component) {\r\n                    component.destroy();\r\n                }\r\n            });\r\n\r\n            update = _.compact(_.filter(update, function (val) {\r\n                return !_.isEqual(val.oldValue, val.value);\r\n            }));\r\n\r\n            _.each(update, function (val) {\r\n                names = val.path.split('.');\r\n                index = Math.max(_.lastIndexOf(names, 'config'), _.lastIndexOf(names, 'children') + 2);\r\n                name = _.without(names.splice(0, index), 'children', 'config').join('.');\r\n                component = registry.get(name);\r\n\r\n                if (val.name === 'sortOrder' && component) {\r\n                    registry.get(component.parentName).insertChild(component, val.value);\r\n                } else if (component) {\r\n                    component.updateConfig(\r\n                        val.oldValue,\r\n                        val.value,\r\n                        val.path\r\n                    );\r\n                }\r\n            }, this);\r\n\r\n            run(components, undefined, true);\r\n        },\r\n\r\n        /**\r\n         * Recursive dataSource assignment.\r\n         *\r\n         * @param {Object} config\r\n         * @param {String} parentPath\r\n         * @returns {Object}\r\n         */\r\n        getDataSources: function (config, parentPath) {\r\n            var dataSources = {},\r\n                key, obj;\r\n\r\n            /* eslint-disable no-loop-func, max-depth */\r\n            for (key in config) {\r\n                if (config.hasOwnProperty(key)) {\r\n                    if (\r\n                        key === 'type' &&\r\n                        config[key] === 'dataSource' &&\r\n                        config.hasOwnProperty('config')\r\n                    ) {\r\n                        dataSources[parentPath + '.config'] = config.config;\r\n                    } else if (_.isObject(config[key])) {\r\n                        obj = this.getDataSources(config[key], utils.fullPath(parentPath, key));\r\n\r\n                        _.each(obj, function (value, path) {\r\n                            dataSources[path] = value;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* eslint-enable no-loop-func, max-depth */\r\n\r\n            return dataSources;\r\n        },\r\n\r\n        /**\r\n         * Configuration getter.\r\n         *\r\n         * @param {String} path\r\n         * @param {Object} config\r\n         * @returns {Boolean|Object}\r\n         */\r\n        getFullConfig: function (path, config) {\r\n            var index;\r\n\r\n            path = path.split('.');\r\n            index = _.lastIndexOf(path, 'config');\r\n\r\n            if (!~index) {\r\n                return false;\r\n            }\r\n            path = path.splice(0, index);\r\n\r\n            _.each(path, function (val) {\r\n                config = config[val];\r\n            });\r\n\r\n            return config.config;\r\n        },\r\n\r\n        /**\r\n         * Filter data by property and value.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} prop\r\n         * @param {*} propValue\r\n         */\r\n        getByProperty: function (data, prop, propValue) {\r\n            return _.filter(data, function (value) {\r\n                return value[prop] === propValue;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Filter components.\r\n         *\r\n         * @param {Array} data\r\n         * @param {Boolean} splitPath\r\n         * @param {Number} index\r\n         * @param {String} separator\r\n         * @param {String} keyName\r\n         * @returns {Array}\r\n         */\r\n        filterComponents: function (data, splitPath, index, separator, keyName) {\r\n            var result = [],\r\n                names, length;\r\n\r\n            index = -2;\r\n            separator = '.' || separator;\r\n            keyName = 'children' || keyName;\r\n\r\n            _.each(data, function (val) {\r\n                names = val.path.split(separator);\r\n                length  = names.length;\r\n\r\n                if (names[length + index] === keyName) {\r\n                    val.path = splitPath ? _.without(names, keyName).join(separator) : val.path;\r\n                    result.push(val);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return run;\r\n});\r\n","Magento_Ui/js/view/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    '../model/messageList',\r\n    'jquery-ui-modules/effect-blind'\r\n], function (ko, $, Component, globalMessages) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Ui/messages',\r\n            selector: '[data-role=checkout-messages]',\r\n            isHidden: false,\r\n            hideTimeout: 5000,\r\n            hideSpeed: 500,\r\n            listens: {\r\n                isHidden: 'onHiddenChange'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, messageContainer) {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            this.messageContainer = messageContainer || config.messageContainer || globalMessages;\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('isHidden');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks visibility.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isVisible: function () {\r\n            return this.isHidden(this.messageContainer.hasMessages());\r\n        },\r\n\r\n        /**\r\n         * Remove all messages.\r\n         */\r\n        removeAll: function () {\r\n            this.messageContainer.clear();\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} isHidden\r\n         */\r\n        onHiddenChange: function (isHidden) {\r\n            // Hide message block if needed\r\n            if (isHidden) {\r\n                setTimeout(function () {\r\n                    $(this.selector).hide('blind', {}, this.hideSpeed);\r\n                }.bind(this), this.hideTimeout);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/product/view/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.validation', $.mage.validation, {\r\n        options: {\r\n            radioCheckboxClosest: 'ul, ol',\r\n\r\n            /**\r\n             * @param {*} error\r\n             * @param {HTMLElement} element\r\n             */\r\n            errorPlacement: function (error, element) {\r\n                var messageBox,\r\n                    dataValidate;\r\n\r\n                if ($(element).hasClass('datetime-picker')) {\r\n                    element = $(element).parent();\r\n\r\n                    if (element.parent().find('[generated=true].mage-error').length) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (element.attr('data-errors-message-box')) {\r\n                    messageBox = $(element.attr('data-errors-message-box'));\r\n                    messageBox.html(error);\r\n\r\n                    return;\r\n                }\r\n\r\n                dataValidate = element.attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-one-checkbox-required-by-name') > 0) {\r\n                    error.appendTo('#links-advice-container');\r\n                } else if (element.is(':radio, :checkbox')) {\r\n                    element.closest(this.radioCheckboxClosest).after(error);\r\n                } else {\r\n                    element.after(error);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {HTMLElement} element\r\n             * @param {String} errorClass\r\n             */\r\n            highlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').each(function () {\r\n                        $(this).removeClass(errorClass);\r\n\r\n                        if ($(this).val().length === 0) {\r\n                            $(this).addClass(errorClass);\r\n                        }\r\n                    });\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).addClass(errorClass);\r\n                } else {\r\n                    $(element).addClass(errorClass);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {HTMLElement} element\r\n             * @param {String} errorClass\r\n             */\r\n            unhighlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').removeClass(errorClass);\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).removeClass(errorClass);\r\n                } else {\r\n                    $(element).removeClass(errorClass);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n});\r\n","Magento_Catalog/js/upsell-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.upsellProducts', {\r\n        options: {\r\n            elementsSelector: '.item.product'\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.element.data('shuffle')) {\r\n                this._shuffle(this.element.find(this.options.elementsSelector));\r\n            }\r\n            this._showUpsellProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle-weighted')\r\n            );\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Show upsell products according to limit. Shuffle if needed.\r\n         * @param {*} elements\r\n         * @param {Number} limit\r\n         * @param {Boolean} weightedRandom\r\n         * @private\r\n         */\r\n        _showUpsellProducts: function (elements, limit, weightedRandom) {\r\n            var index, weights = [], random = [], weight = 2, shown = 0, $element, currentGroup, prevGroup;\r\n\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n\r\n            if (weightedRandom && limit > 0 && limit < elements.length) {\r\n                for (index = 0; index < limit; index++) {\r\n                    $element = $(elements[index]);\r\n                    if ($element.data('shuffle-group') !== '') {\r\n                        break;\r\n                    }\r\n                    $element.show();\r\n                    shown++;\r\n                }\r\n                limit -= shown;\r\n                for (index = elements.length - 1; index >= 0; index--) {\r\n                    $element = $(elements[index]);\r\n                    currentGroup = $element.data('shuffle-group');\r\n                    if (currentGroup !== '') {\r\n                        weights.push([index, Math.log(weight)]);\r\n                        if (typeof prevGroup !== 'undefined' && prevGroup !== currentGroup) {\r\n                            weight += 2;\r\n                        }\r\n                        prevGroup = currentGroup;\r\n                    }\r\n                }\r\n\r\n                if (weights.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                for (index = 0; index < weights.length; index++) {\r\n                    random.push([weights[index][0], Math.pow(Math.random(), 1 / weights[index][1])]);\r\n                }\r\n\r\n                random.sort(function(a, b) {\r\n                    a = a[1];\r\n                    b = b[1];\r\n                    return a < b ? 1 : (a > b ? -1 : 0);\r\n                });\r\n                index = 0;\r\n                while (limit) {\r\n                    $(elements[random[index][0]]).show();\r\n                    limit--;\r\n                    index++\r\n                }\r\n                return;\r\n            }\r\n\r\n            for (index = 0; index < limit; index++) {\r\n                $(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Shuffle an array\r\n         * @param elements\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(elements){ //v1.0\r\n            var parent, child, lastSibling;\r\n            if (elements.length) {\r\n                parent = $(elements[0]).parent();\r\n            }\r\n            while (elements.length) {\r\n                child = elements.splice(Math.floor(Math.random() *  elements.length), 1)[0];\r\n                lastSibling = parent.find('[data-shuffle-group=\"' + $(child).data('shuffle-group') + '\"]').last();\r\n                lastSibling.after(child);\r\n            }\r\n        }\r\n\r\n        /* jscs:disable */\r\n        /* eslint:disable */\r\n    });\r\n\r\n    return $.mage.upsellProducts;\r\n});\r\n","Magento_Catalog/js/price-option-date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'priceUtils',\r\n    'priceOptions',\r\n    'jquery-ui-modules/widget'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n            fromSelector: 'form',\r\n            dropdownsSelector: '[data-role=calendar-dropdown]'\r\n        },\r\n        optionHandler = {};\r\n\r\n    optionHandler.optionHandlers = {};\r\n\r\n    /**\r\n     * Custom handler for Date-with-Dropdowns option type.\r\n     * @param  {jQuery} siblings\r\n     * @return {Function} function that return object { optionHash : optionAdditionalPrice }\r\n     */\r\n    function onCalendarDropdownChange(siblings) {\r\n        return function (element, optionConfig) {\r\n            var changes = {},\r\n                optionId = utils.findOptionId(element),\r\n                overhead = optionConfig[optionId].prices,\r\n                isNeedToUpdate = true,\r\n                optionHash = 'price-option-calendar-' + optionId;\r\n\r\n            siblings.each(function (index, el) {\r\n                isNeedToUpdate = isNeedToUpdate && !!$(el).val();\r\n            });\r\n\r\n            overhead = isNeedToUpdate ? overhead : {};\r\n            changes[optionHash] = overhead;\r\n\r\n            return changes;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns number of days for special month and year\r\n     * @param  {Number} month\r\n     * @param  {Number} year\r\n     * @return {Number}\r\n     */\r\n    function getDaysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    /**\r\n     * Adjusts the number of days in the day option element based on which month or year\r\n     * is selected (changed). Adjusts the days to 28, 29, 30, or 31 typically.\r\n     * @param {jQuery} dropdowns\r\n     */\r\n    function onDateChange(dropdowns) {\r\n        var daysNodes,\r\n            curMonth, curYear, expectedDays,\r\n            options, needed,\r\n            month = dropdowns.filter('[data-calendar-role=month]'),\r\n            year = dropdowns.filter('[data-calendar-role=year]');\r\n\r\n        if (month.length && year.length) {\r\n            daysNodes = dropdowns.filter('[data-calendar-role=day]').find('option');\r\n\r\n            curMonth = month.val() || '01';\r\n            curYear = year.val() || '2000';\r\n            expectedDays = getDaysInMonth(curMonth, curYear);\r\n\r\n            if (daysNodes.length - 1 > expectedDays) { // remove unnecessary option nodes\r\n                daysNodes.each(function (i, e) {\r\n                    if (e.value > expectedDays) {\r\n                        $(e).remove();\r\n                    }\r\n                });\r\n            } else if (daysNodes.length - 1 < expectedDays) { // add missing option nodes\r\n                options = [];\r\n                needed = expectedDays - daysNodes.length + 1;\r\n\r\n                while (needed--) { //eslint-disable-line max-depth\r\n                    options.push(\r\n                        '<option value=\"' + (expectedDays - needed) + '\">' + (expectedDays - needed) + '</option>'\r\n                    );\r\n                }\r\n                $(options.join('')).insertAfter(daysNodes.last());\r\n            }\r\n        }\r\n    }\r\n\r\n    $.widget('mage.priceOptionDate', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * Function-initializer of priceOptionDate widget\r\n         * @private\r\n         */\r\n        _create: function initOptionDate() {\r\n            var field = this.element,\r\n                form = field.closest(this.options.fromSelector),\r\n                dropdowns = $(this.options.dropdownsSelector, field),\r\n                dateOptionId;\r\n\r\n            if (dropdowns.length) {\r\n                dateOptionId = this.options.dropdownsSelector + dropdowns.attr('name');\r\n\r\n                optionHandler.optionHandlers[dateOptionId] = onCalendarDropdownChange(dropdowns);\r\n\r\n                form.priceOptions(optionHandler);\r\n\r\n                dropdowns.data('role', dateOptionId);\r\n                dropdowns.on('change', onDateChange.bind(this, dropdowns));\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionDate;\r\n});\r\n","Magento_Catalog/js/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.compareList', {\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var elem = this.element,\r\n                products = $('thead td', elem),\r\n                headings;\r\n\r\n            if (products.length > this.options.productsInRow) {\r\n                headings = $('<table/>')\r\n                    .addClass('comparison headings data table')\r\n                    .insertBefore(elem.closest('.container'));\r\n\r\n                elem.addClass('scroll');\r\n\r\n                $('th', elem).each(function () {\r\n                    var th = $(this),\r\n                        thCopy = th.clone();\r\n\r\n                    th.animate({\r\n                        top: '+=0'\r\n                    }, 50, function () {\r\n                        var height = th.height();\r\n\r\n                        thCopy.css('height', height)\r\n                            .appendTo(headings)\r\n                            .wrap('<tr />');\r\n                    });\r\n                });\r\n            }\r\n\r\n            $(this.options.windowPrintSelector).on('click', function (e) {\r\n                e.preventDefault();\r\n                window.print();\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.compareList;\r\n});\r\n","Magento_Catalog/js/price-utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var globalPriceFormat = {\r\n        requiredPrecision: 2,\r\n        integerRequired: 1,\r\n        decimalSymbol: ',',\r\n        groupSymbol: ',',\r\n        groupLength: ','\r\n    };\r\n\r\n    /**\r\n     * Repeats {string} {times} times\r\n     * @param  {String} string\r\n     * @param  {Number} times\r\n     * @return {String}\r\n     */\r\n    function stringPad(string, times) {\r\n        return (new Array(times + 1)).join(string);\r\n    }\r\n\r\n    /**\r\n     * Formatter for price amount\r\n     * @param  {Number}  amount\r\n     * @param  {Object}  format\r\n     * @param  {Boolean} isShowSign\r\n     * @return {String}              Formatted value\r\n     */\r\n    function formatPrice(amount, format, isShowSign) {\r\n        var s = '',\r\n            precision, integerRequired, decimalSymbol, groupSymbol, groupLength, pattern, i, pad, j, re, r, am;\r\n\r\n        format = _.extend(globalPriceFormat, format);\r\n\r\n        // copied from price-option.js | Could be refactored with varien/js.js\r\n\r\n        precision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;\r\n        integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;\r\n        decimalSymbol = format.decimalSymbol === undefined ? ',' : format.decimalSymbol;\r\n        groupSymbol = format.groupSymbol === undefined ? '.' : format.groupSymbol;\r\n        groupLength = format.groupLength === undefined ? 3 : format.groupLength;\r\n        pattern = format.pattern || '%s';\r\n\r\n        if (isShowSign === undefined || isShowSign === true) {\r\n            s = amount < 0 ? '-' : isShowSign ? '+' : '';\r\n        } else if (isShowSign === false) {\r\n            s = '';\r\n        }\r\n        pattern = pattern.indexOf('{sign}') < 0 ? s + pattern : pattern.replace('{sign}', s);\r\n\r\n        // we're avoiding the usage of to fixed, and using round instead with the e representation to address\r\n        // numbers like 1.005 = 1.01. Using ToFixed to only provide trailing zeroes in case we have a whole number\r\n        i = parseInt(\r\n                amount = Number(Math.round(Math.abs(+amount || 0) + 'e+' + precision) + ('e-' + precision)),\r\n                10\r\n            ) + '';\r\n        pad = i.length < integerRequired ? integerRequired - i.length : 0;\r\n\r\n        i = stringPad('0', pad) + i;\r\n\r\n        j = i.length > groupLength ? i.length % groupLength : 0;\r\n        re = new RegExp('(\\\\d{' + groupLength + '})(?=\\\\d)', 'g');\r\n\r\n        // replace(/-/, 0) is only for fixing Safari bug which appears\r\n        // when Math.abs(0).toFixed() executed on '0' number.\r\n        // Result is '0.-0' :(\r\n\r\n        am = Number(Math.round(Math.abs(amount - i) + 'e+' + precision) + ('e-' + precision));\r\n        r = (j ? i.substr(0, j) + groupSymbol : '') +\r\n            i.substr(j).replace(re, '$1' + groupSymbol) +\r\n            (precision ? decimalSymbol + am.toFixed(precision).replace(/-/, 0).slice(2) : '');\r\n\r\n        return pattern.replace('%s', r).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n    }\r\n\r\n    /**\r\n     * Deep clone of Object. Doesn't support functions\r\n     * @param {Object} obj\r\n     * @return {Object}\r\n     */\r\n    function objectDeepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Helper to find ID in name attribute\r\n     * @param   {jQuery} element\r\n     * @returns {undefined|String}\r\n     */\r\n    function findOptionId(element) {\r\n        var re, id, name;\r\n\r\n        if (!element) {\r\n            return id;\r\n        }\r\n        name = $(element).attr('name');\r\n\r\n        if (name.indexOf('[') !== -1) {\r\n            re = /\\[([^\\]]+)?\\]/;\r\n        } else {\r\n            re = /_([^\\]]+)?_/; // just to support file-type-option\r\n        }\r\n        id = re.exec(name) && re.exec(name)[1];\r\n\r\n        if (id) {\r\n            return id;\r\n        }\r\n    }\r\n\r\n    return {\r\n        formatPrice: formatPrice,\r\n        deepClone: objectDeepClone,\r\n        strPad: stringPad,\r\n        findOptionId: findOptionId\r\n    };\r\n});\r\n","Magento_Catalog/js/price-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'underscore',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, utils, _, mageTemplate) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceConfig: null,\r\n        prices: {},\r\n        priceTemplate: '<span class=\"price\"><%- data.formatted %></span>'\r\n    };\r\n\r\n    $.widget('mage.priceBox', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * Widget initialisation.\r\n         * Every time when option changed prices also can be changed. So\r\n         * changed options.prices -> changed cached prices -> recalculation -> redraw price box\r\n         */\r\n        _init: function initPriceBox() {\r\n            var box = this.element;\r\n\r\n            box.trigger('updatePrice');\r\n            this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n        },\r\n\r\n        /**\r\n         * Widget creating.\r\n         */\r\n        _create: function createPriceBox() {\r\n            var box = this.element;\r\n\r\n            this.cache = {};\r\n            this._setDefaultsFromPriceConfig();\r\n            this._setDefaultsFromDataSet();\r\n\r\n            box.on('reloadPrice', this.reloadPrice.bind(this));\r\n            box.on('updatePrice', this.onUpdatePrice.bind(this));\r\n            box.trigger('price-box-initialized');\r\n        },\r\n\r\n        /**\r\n         * Call on event updatePrice. Proxy to updatePrice method.\r\n         * @param {Event} event\r\n         * @param {Object} prices\r\n         */\r\n        onUpdatePrice: function onUpdatePrice(event, prices) {\r\n            return this.updatePrice(prices);\r\n        },\r\n\r\n        /**\r\n         * Updates price via new (or additional values).\r\n         * It expects object like this:\r\n         * -----\r\n         *   \"option-hash\":\r\n         *      \"price-code\":\r\n         *         \"amount\": 999.99999,\r\n         *         ...\r\n         * -----\r\n         * Empty option-hash object or empty price-code object treats as zero amount.\r\n         * @param {Object} newPrices\r\n         */\r\n        updatePrice: function updatePrice(newPrices) {\r\n            var prices = this.cache.displayPrices,\r\n                additionalPrice = {},\r\n                pricesCode = [],\r\n                priceValue, origin, finalPrice;\r\n\r\n            this.cache.additionalPriceObject = this.cache.additionalPriceObject || {};\r\n\r\n            if (newPrices) {\r\n                $.extend(this.cache.additionalPriceObject, newPrices);\r\n            }\r\n\r\n            if (!_.isEmpty(additionalPrice)) {\r\n                pricesCode = _.keys(additionalPrice);\r\n            } else if (!_.isEmpty(prices)) {\r\n                pricesCode = _.keys(prices);\r\n            }\r\n\r\n            _.each(this.cache.additionalPriceObject, function (additional) {\r\n                if (additional && !_.isEmpty(additional)) {\r\n                    pricesCode = _.keys(additional);\r\n                }\r\n                _.each(pricesCode, function (priceCode) {\r\n                    priceValue = additional[priceCode] || {};\r\n                    priceValue.amount = +priceValue.amount || 0;\r\n                    priceValue.adjustments = priceValue.adjustments || {};\r\n\r\n                    additionalPrice[priceCode] = additionalPrice[priceCode] || {\r\n                            'amount': 0,\r\n                            'adjustments': {}\r\n                        };\r\n                    additionalPrice[priceCode].amount =  0 + (additionalPrice[priceCode].amount || 0) +\r\n                        priceValue.amount;\r\n                    _.each(priceValue.adjustments, function (adValue, adCode) {\r\n                        additionalPrice[priceCode].adjustments[adCode] = 0 +\r\n                            (additionalPrice[priceCode].adjustments[adCode] || 0) + adValue;\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (_.isEmpty(additionalPrice)) {\r\n                this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n            } else {\r\n                _.each(additionalPrice, function (option, priceCode) {\r\n                    origin = this.options.prices[priceCode] || {};\r\n                    finalPrice = prices[priceCode] || {};\r\n                    option.amount = option.amount || 0;\r\n                    origin.amount = origin.amount || 0;\r\n                    origin.adjustments = origin.adjustments || {};\r\n                    finalPrice.adjustments = finalPrice.adjustments || {};\r\n\r\n                    finalPrice.amount = 0 + origin.amount + option.amount;\r\n                    _.each(option.adjustments, function (pa, paCode) {\r\n                        finalPrice.adjustments[paCode] = 0 + (origin.adjustments[paCode] || 0) + pa;\r\n                    });\r\n                }, this);\r\n            }\r\n\r\n            this.element.trigger('reloadPrice');\r\n        },\r\n\r\n        /*eslint-disable no-extra-parens*/\r\n        /**\r\n         * Render price unit block.\r\n         */\r\n        reloadPrice: function reDrawPrices() {\r\n            var priceFormat = (this.options.priceConfig && this.options.priceConfig.priceFormat) || {},\r\n                priceTemplate = mageTemplate(this.options.priceTemplate);\r\n\r\n            _.each(this.cache.displayPrices, function (price, priceCode) {\r\n                price.final = _.reduce(price.adjustments, function (memo, amount) {\r\n                    return memo + amount;\r\n                }, price.amount);\r\n\r\n                price.formatted = utils.formatPrice(price.final, priceFormat);\r\n\r\n                $('[data-price-type=\"' + priceCode + '\"]', this.element).html(priceTemplate({\r\n                    data: price\r\n                }));\r\n            }, this);\r\n        },\r\n\r\n        /*eslint-enable no-extra-parens*/\r\n        /**\r\n         * Overwrites initial (default) prices object.\r\n         * @param {Object} prices\r\n         */\r\n        setDefault: function setDefaultPrices(prices) {\r\n            this.cache.displayPrices = utils.deepClone(prices);\r\n            this.options.prices = utils.deepClone(prices);\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge of accepted configuration.\r\n         * @param  {Object} options\r\n         * @return {mage.priceBox}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            if ('disabled' in options) {\r\n                this._setOption('disabled', options.disabled);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromDataSet\r\n         */\r\n        _setDefaultsFromDataSet: function _setDefaultsFromDataSet() {\r\n            var box = this.element,\r\n                priceHolders = $('[data-price-type]', box),\r\n                prices = this.options.prices;\r\n\r\n            this.options.productId = box.data('productId');\r\n\r\n            if (_.isEmpty(prices)) {\r\n                priceHolders.each(function (index, element) {\r\n                    var type = $(element).data('priceType'),\r\n                        amount = parseFloat($(element).data('priceAmount'));\r\n\r\n                    if (type && !_.isNaN(amount)) {\r\n                        prices[type] = {\r\n                            amount: amount\r\n                        };\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromPriceConfig\r\n         */\r\n        _setDefaultsFromPriceConfig: function _setDefaultsFromPriceConfig() {\r\n            var config = this.options.priceConfig;\r\n\r\n            if (config && config.prices) {\r\n                this.options.prices = config.prices;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBox;\r\n});\r\n","Magento_Catalog/js/validate-product.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'Magento_Catalog/product/view/validation',\r\n    'catalogAddToCart'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.productValidate', {\r\n        options: {\r\n            bindSubmit: false,\r\n            radioCheckboxClosest: '.nested',\r\n            addToCartButtonSelector: '.action.tocart'\r\n        },\r\n\r\n        /**\r\n         * Uses Magento's validation widget for the form object.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var bindSubmit = this.options.bindSubmit;\r\n\r\n            this.element.validation({\r\n                radioCheckboxClosest: this.options.radioCheckboxClosest,\r\n\r\n                /**\r\n                 * Uses catalogAddToCart widget as submit handler.\r\n                 * @param {Object} form\r\n                 * @returns {Boolean}\r\n                 */\r\n                submitHandler: function (form) {\r\n                    var jqForm = $(form).catalogAddToCart({\r\n                        bindSubmit: bindSubmit\r\n                    });\r\n\r\n                    jqForm.catalogAddToCart('submitForm', jqForm);\r\n\r\n                    return false;\r\n                }\r\n            });\r\n            $(this.options.addToCartButtonSelector).attr('disabled', false);\r\n        }\r\n    });\r\n\r\n    return $.mage.productValidate;\r\n});\r\n","Magento_Catalog/js/price-option-file.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.priceOptionFile', {\r\n        options: {\r\n            fileName: '',\r\n            fileNamed: '',\r\n            fieldNameAction: '',\r\n            changeFileSelector: '',\r\n            deleteFileSelector: ''\r\n        },\r\n\r\n        /**\r\n         * Creates instance of widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.fileDeleteFlag = this.fileChangeFlag = false;\r\n            this.inputField = this.element.find('input[name=' + this.options.fileName + ']')[0];\r\n            this.inputFieldAction = this.element.find('input[name=' + this.options.fieldNameAction + ']')[0];\r\n            this.fileNameSpan = this.element.parent('dd').find('.' + this.options.fileNamed);\r\n\r\n            $(this.options.changeFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileChange();\r\n            }, this));\r\n            $(this.options.deleteFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileDelete();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the current file is being changed or not. If the file is being deleted\r\n         * then the option to change the file is disabled.\r\n         * @private\r\n         */\r\n        _toggleFileChange: function () {\r\n            this.element.toggle();\r\n            this.fileChangeFlag = !this.fileChangeFlag;\r\n\r\n            if (!this.fileDeleteFlag) {\r\n                $(this.inputFieldAction).attr('value', this.fileChangeFlag ? 'save_new' : 'save_old');\r\n                this.inputField.disabled = !this.fileChangeFlag;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the file is to be deleted. When the file is being deleted, the name of\r\n         * the file is decorated with strike-through text and the option to change the file is\r\n         * disabled.\r\n         * @private\r\n         */\r\n        _toggleFileDelete: function () {\r\n            this.fileDeleteFlag = $(this.options.deleteFileSelector + ':checked').val();\r\n            $(this.inputFieldAction).attr('value',\r\n                this.fileDeleteFlag ? '' : this.fileChangeFlag ? 'save_new' : 'save_old');\r\n            this.inputField.disabled = this.fileDeleteFlag || !this.fileChangeFlag;\r\n            this.fileNameSpan.css('text-decoration', this.fileDeleteFlag ? 'line-through' : 'none');\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionFile;\r\n});\r\n","Magento_Catalog/js/gallery.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.gallery', {\r\n        options: {\r\n            minWidth: 300, // Minimum width of the gallery image.\r\n            widthOffset: 90, // Offset added to the width of the gallery image.\r\n            heightOffset: 210, // Offset added to the height of the gallery image.\r\n            closeWindow: 'div.buttons-set a[role=\"close-window\"]' // Selector for closing the gallery popup window.\r\n        },\r\n\r\n        /**\r\n         * Bind click handler for closing the popup window and resize the popup based on the image size.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.options.closeWindow).on('click', function () {\r\n                window.close();\r\n            });\r\n            this._resizeWindow();\r\n        },\r\n\r\n        /**\r\n         * Resize the gallery image popup window based on the image's dimensions.\r\n         * @private\r\n         */\r\n        _resizeWindow: function () {\r\n            var img = this.element,\r\n                width = img.width() < this.options.minWidth ? this.options.minWidth : img.width();\r\n\r\n            window.resizeTo(width + this.options.widthOffset, img.height() + this.options.heightOffset);\r\n        }\r\n    });\r\n\r\n    return $.mage.gallery;\r\n});\r\n","Magento_Catalog/js/storage-manager.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'mageUtils',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/section-config',\r\n    'jquery'\r\n], function (_, Element, utils, storage, sectionConfig, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Flush events, that are clones of the same customer data sections\r\n     * Events listener\r\n     */\r\n    $(document).on('submit', function (event) {\r\n        var sections;\r\n\r\n        if (event.target.method.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(event.target.action);\r\n\r\n            if (sections && window.localStorage) {\r\n                _.each(sections, function (section) {\r\n                    window.localStorage.removeItem(section);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            defaultNamespace: {\r\n                lifetime: 1000\r\n            },\r\n            storagesConfiguration: {\r\n                'recently_viewed_product': {\r\n                    namespace: 'recently_viewed_product',\r\n                    className: 'IdsStorage',\r\n                    lifetime: '${ $.defaultNamespace.lifetime }',\r\n                    requestConfig: {\r\n                        typeId: '${ $.storagesConfiguration.recently_viewed_product.namespace }'\r\n                    },\r\n                    savePrevious: {\r\n                        namespace: '${ $.storagesConfiguration.recently_viewed_product.namespace }' + '_previous',\r\n                        className: '${ $.storagesConfiguration.recently_viewed_product.className }'\r\n                    },\r\n                    allowToSendRequest: 0\r\n                },\r\n                'recently_compared_product': {\r\n                    namespace: 'recently_compared_product',\r\n                    className: 'IdsStorageCompare',\r\n                    provider: 'compare-products',\r\n                    lifetime: '${ $.defaultNamespace.lifetime }',\r\n                    requestConfig: {\r\n                        typeId: '${ $.storagesConfiguration.recently_compared_product.namespace }'\r\n                    },\r\n                    savePrevious: {\r\n                        namespace: '${ $.storagesConfiguration.recently_compared_product.namespace }' + '_previous',\r\n                        className: '${ $.storagesConfiguration.recently_compared_product.className }'\r\n                    },\r\n                    allowToSendRequest: 0\r\n                },\r\n                'product_data_storage': {\r\n                    namespace: 'product_data_storage',\r\n                    className: 'DataStorage',\r\n                    allowToSendRequest: 0,\r\n                    updateRequestConfig: {\r\n                        url: '',\r\n                        method: 'GET',\r\n                        dataType: 'json'\r\n                    }\r\n                }\r\n            },\r\n            requestConfig: {\r\n                method: 'POST',\r\n                dataType: 'json',\r\n                ajaxSaveType: 'default',\r\n                ignoreProcessEvents: true\r\n            },\r\n            requestSent: 0\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .prepareStoragesConfig()\r\n                .initStorages()\r\n                .initStartData()\r\n                .initUpdateStorageDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes storages.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initStorages: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this[name] = storage.createStorage(this.storagesConfiguration[name]);\r\n\r\n                if (this.storagesConfiguration[name].savePrevious) {\r\n                    this[name].previous = storage.createStorage(this.storagesConfiguration[name].savePrevious);\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes start data.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initStartData: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this.updateDataHandler(name, this[name].get());\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare storages congfig.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        prepareStoragesConfig: function () {\r\n            this.storagesNamespace = _.keys(this.storagesConfiguration);\r\n\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this.storagesConfiguration[name].requestConfig = _.extend(\r\n                    utils.copy(this.requestConfig),\r\n                    this.storagesConfiguration[name].requestConfig\r\n                );\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare date in UTC format (in GMT), and calculate unix timestamp based in seconds\r\n         *\r\n         * @returns {Number}\r\n         * @private\r\n         */\r\n        getUtcTime: function () {\r\n            return new Date().getTime() / 1000;\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners to storages \"data\" property.\r\n         */\r\n        initUpdateStorageDataListener: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                if (this[name].data) {\r\n                    this[name].data.subscribe(this.updateDataHandler.bind(this, name));\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Handlers for storages \"data\" property\r\n         */\r\n        updateDataHandler: function (name, data) {\r\n            var previousData = this[name].previous ? this[name].previous.get() : false;\r\n\r\n            if (!_.isEmpty(previousData) &&\r\n                !_.isEmpty(data) &&\r\n                !utils.compare(data, previousData).equal) {\r\n                this[name].set(data);\r\n                this[name].previous.set(data);\r\n                this.sendRequest(name, data);\r\n            } else if (\r\n                _.isEmpty(previousData) &&\r\n                !_.isEmpty(data)\r\n            ) {\r\n                this[name].set(data);\r\n                this.sendRequest(name, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets last updated time\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        getLastUpdate: function (name) {\r\n            return window.localStorage.getItem(this[name].namespace + '_last_update');\r\n        },\r\n\r\n        /**\r\n         * Sets last updated time\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        setLastUpdate: function (name) {\r\n            window.localStorage.setItem(this[name].namespace + '_last_update', this.getUtcTime());\r\n        },\r\n\r\n        /**\r\n         * Request handler\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        requestHandler: function (name) {\r\n            this.setLastUpdate(name);\r\n            this.requestSent = 1;\r\n        },\r\n\r\n        /**\r\n         * Sends request to server to gets data\r\n         *\r\n         * @param {String} name - storage name\r\n         * @param {Object} data - ids\r\n         */\r\n        sendRequest: function (name, data) {\r\n            var params  = utils.copy(this.storagesConfiguration[name].requestConfig),\r\n                url = params.syncUrl,\r\n                typeId = params.typeId;\r\n\r\n            if (this.requestSent || !~~this.storagesConfiguration[name].allowToSendRequest) {\r\n                return;\r\n            }\r\n\r\n            delete params.typeId;\r\n            delete params.url;\r\n\r\n            return utils.ajaxSubmit({\r\n                url: url,\r\n                data: {\r\n                    ids: data,\r\n                    'type_id': typeId\r\n                }\r\n            }, params).done(this.requestHandler.bind(this, name));\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/price-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery-ui-modules/widget'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceHolderSelector: '.price-box', //data-role=\"priceBox\"\r\n        optionsSelector: '.product-custom-option',\r\n        optionConfig: {},\r\n        optionHandlers: {},\r\n        optionTemplate: '<%= data.label %>' +\r\n        '<% if (data.finalPrice.value > 0) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } else if (data.finalPrice.value < 0) { %>' +\r\n        ' <%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd'\r\n    };\r\n\r\n    /**\r\n     * Custom option preprocessor\r\n     * @param  {jQuery} element\r\n     * @param  {Object} optionsConfig - part of config\r\n     * @return {Object}\r\n     */\r\n    function defaultGetOptionValue(element, optionsConfig) {\r\n        var changes = {},\r\n            optionValue = element.val(),\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = optionsConfig[optionId],\r\n            optionHash = optionName;\r\n\r\n        switch (optionType) {\r\n            case 'text':\r\n            case 'textarea':\r\n                changes[optionHash] = optionValue ? optionConfig.prices : {};\r\n                break;\r\n\r\n            case 'radio':\r\n                if (element.is(':checked')) {\r\n                    changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                }\r\n                break;\r\n\r\n            case 'select-one':\r\n                changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = optionName + '##' + optionValueCode;\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? row.prices : {};\r\n                });\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = optionName + '##' + optionValue;\r\n                changes[optionHash] = element.is(':checked') ? optionConfig[optionValue].prices : {};\r\n                break;\r\n\r\n            case 'file':\r\n                // Checking for 'disable' property equal to checking DOMNode with id*=\"change-\"\r\n                changes[optionHash] = optionValue || element.prop('disabled') ? optionConfig.prices : {};\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    $.widget('mage.priceOptions', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            $(this.options.optionsSelector, this.element).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Widget creating method.\r\n         * Triggered once.\r\n         * @private\r\n         */\r\n        _create: function createPriceOptions() {\r\n            var form = this.element,\r\n                options = $(this.options.optionsSelector, form),\r\n                priceBox = $(this.options.priceHolderSelector, $(this.options.optionsSelector).element);\r\n\r\n            if (priceBox.data('magePriceBox') &&\r\n                priceBox.priceBox('option') &&\r\n                priceBox.priceBox('option').priceConfig\r\n            ) {\r\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\r\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                }\r\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n            }\r\n\r\n            this._applyOptionNodeFix(options);\r\n\r\n            options.on('change', this._onOptionChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Custom option change-event handler\r\n         * @param {Event} event\r\n         * @private\r\n         */\r\n        _onOptionChanged: function onOptionChanged(event) {\r\n            var changes,\r\n                option = $(event.target),\r\n                handler = this.options.optionHandlers[option.data('role')];\r\n\r\n            option.data('optionContainer', option.closest(this.options.controlContainer));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(option, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(option, this.options.optionConfig);\r\n            }\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', changes);\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionConfig = config.optionConfig && config.optionConfig[optionId];\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue] ? optionConfig[optionValue].prices : null;\r\n\r\n                    if (prices) {\r\n                        _.each(prices, function (price, type) {\r\n                            var value = +price.amount;\r\n\r\n                            value += _.reduce(price.adjustments, function (sum, x) { //eslint-disable-line\r\n                                return sum + x;\r\n                            }, 0);\r\n                            toTemplate.data[type] = {\r\n                                value: value,\r\n                                formatted: utils.formatPrice(value, format)\r\n                            };\r\n                        });\r\n\r\n                        $option.text(template(toTemplate));\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         * @private\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n            this._super(options);\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptions;\r\n});\r\n","Magento_Catalog/js/related-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.relatedProducts', {\r\n        options: {\r\n            relatedCheckbox: '.related-checkbox', // Class name for a related product's input checkbox.\r\n            relatedProductsCheckFlag: false, // Related products checkboxes are initially unchecked.\r\n            relatedProductsField: '#related-products-field', // Hidden input field that stores related products.\r\n            selectAllMessage: $.mage.__('select all'),\r\n            unselectAllMessage: $.mage.__('unselect all'),\r\n            selectAllLink: '[data-role=\"select-all\"]',\r\n            elementsSelector: '.item.product'\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.options.selectAllLink, this.element).on('click', $.proxy(this._selectAllRelated, this));\r\n            $(this.options.relatedCheckbox, this.element).on('click', $.proxy(this._addRelatedToProduct, this));\r\n\r\n            if (this.element.data('shuffle')) {\r\n                this._shuffle(this.element.find(this.options.elementsSelector));\r\n            }\r\n            this._showRelatedProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle-weighted')\r\n            );\r\n        },\r\n\r\n        /**\r\n         * This method either checks all checkboxes for a product's set of related products (select all)\r\n         * or unchecks them (unselect all).\r\n         * @private\r\n         * @param {jQuery.Event} e - Click event on either the \"select all\" link or the \"unselect all\" link.\r\n         * @return {Boolean} - Prevent default event action and event propagation.\r\n         */\r\n        _selectAllRelated: function (e) {\r\n            var innerHTML = this.options.relatedProductsCheckFlag ?\r\n                this.options.selectAllMessage : this.options.unselectAllMessage;\r\n\r\n            $(e.target).html(innerHTML);\r\n            $(this.options.relatedCheckbox).attr(\r\n                'checked',\r\n                this.options.relatedProductsCheckFlag = !this.options.relatedProductsCheckFlag\r\n            );\r\n            this._addRelatedToProduct();\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * This method iterates through each checkbox for all related products and collects only those products\r\n         * whose checkbox has been checked. The selected related products are stored in a hidden input field.\r\n         * @private\r\n         */\r\n        _addRelatedToProduct: function () {\r\n            $(this.options.relatedProductsField).val(\r\n                $(this.options.relatedCheckbox + ':checked').map(function () {\r\n                    return this.value;\r\n                }).get().join(',')\r\n            );\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Show related products according to limit. Shuffle if needed.\r\n         * @param {*} elements\r\n         * @param {*} limit\r\n         * @param weightedRandom\r\n         * @private\r\n         */\r\n        _showRelatedProducts: function (elements, limit, weightedRandom) {\r\n            var index, weights = [], random = [], weight = 2, shown = 0, $element, currentGroup, prevGroup;\r\n\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n\r\n            if (weightedRandom && limit > 0 && limit < elements.length) {\r\n                for (index = 0; index < limit; index++) {\r\n                    $element = $(elements[index]);\r\n                    if ($element.data('shuffle-group') !== '') {\r\n                        break;\r\n                    }\r\n                    $element.show();\r\n                    shown++;\r\n                }\r\n                limit -= shown;\r\n                for (index = elements.length - 1; index >= 0; index--) {\r\n                    $element = $(elements[index]);\r\n                    currentGroup = $element.data('shuffle-group');\r\n                    if (currentGroup !== '') {\r\n                        weights.push([index, Math.log(weight)]);\r\n                        if (typeof prevGroup !== 'undefined' && prevGroup !== currentGroup) {\r\n                            weight += 2;\r\n                        }\r\n                        prevGroup = currentGroup;\r\n                    }\r\n                }\r\n\r\n                if (weights.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                for (index = 0; index < weights.length; index++) {\r\n                    random.push([weights[index][0], Math.pow(Math.random(), 1 / weights[index][1])]);\r\n                }\r\n\r\n                random.sort(function(a, b) {\r\n                    a = a[1];\r\n                    b = b[1];\r\n                    return a < b ? 1 : (a > b ? -1 : 0);\r\n                });\r\n                index = 0;\r\n                while (limit) {\r\n                    $(elements[random[index][0]]).show();\r\n                    limit--;\r\n                    index++\r\n                }\r\n                return;\r\n            }\r\n\r\n            for (index = 0; index < limit; index++) {\r\n                $(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Shuffle an array\r\n         * @param {Array} elements\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(elements) {\r\n            var parent, child, lastSibling;\r\n            if (elements.length) {\r\n                parent = $(elements[0]).parent();\r\n            }\r\n            while (elements.length) {\r\n                child = elements.splice(Math.floor(Math.random() *  elements.length), 1)[0];\r\n                lastSibling = parent.find('[data-shuffle-group=\"' + $(child).data('shuffle-group') + '\"]').last();\r\n                lastSibling.after(child);\r\n            }\r\n        }\r\n\r\n        /* jscs:disable */\r\n        /* eslint:disable */\r\n    });\r\n\r\n    return $.mage.relatedProducts;\r\n});\r\n","Magento_Catalog/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-ids-resolver',\r\n    'Magento_Catalog/js/product/view/product-info-resolver',\r\n    'jquery-ui-modules/widget'\r\n], function ($, $t, _, idsResolver, productInfoResolver) {\r\n    'use strict';\r\n\r\n    $.widget('mage.catalogAddToCart', {\r\n        options: {\r\n            processStart: null,\r\n            processStop: null,\r\n            bindSubmit: true,\r\n            minicartSelector: '[data-block=\"minicart\"]',\r\n            messagesSelector: '[data-placeholder=\"messages\"]',\r\n            productStatusSelector: '.stock.available',\r\n            addToCartButtonSelector: '.action.tocart',\r\n            addToCartButtonDisabledClass: 'disabled',\r\n            addToCartButtonTextWhileAdding: '',\r\n            addToCartButtonTextAdded: '',\r\n            addToCartButtonTextDefault: '',\r\n            productInfoResolver: productInfoResolver\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if (this.options.bindSubmit) {\r\n                this._bindSubmit();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bindSubmit: function () {\r\n            var self = this;\r\n\r\n            if (this.element.data('catalog-addtocart-initialized')) {\r\n                return;\r\n            }\r\n\r\n            this.element.data('catalog-addtocart-initialized', 1);\r\n            this.element.on('submit', function (e) {\r\n                e.preventDefault();\r\n                self.submitForm($(this));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _redirect: function (url) {\r\n            var urlParts, locationParts, forceReload;\r\n\r\n            urlParts = url.split('#');\r\n            locationParts = window.location.href.split('#');\r\n            forceReload = urlParts[0] === locationParts[0];\r\n\r\n            window.location.assign(url);\r\n\r\n            if (forceReload) {\r\n                window.location.reload();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isLoaderEnabled: function () {\r\n            return this.options.processStart && this.options.processStop;\r\n        },\r\n\r\n        /**\r\n         * Handler for the form 'submit' event\r\n         *\r\n         * @param {jQuery} form\r\n         */\r\n        submitForm: function (form) {\r\n            this.ajaxSubmit(form);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery} form\r\n         */\r\n        ajaxSubmit: function (form) {\r\n            var self = this,\r\n                productIds = idsResolver(form),\r\n                productInfo = self.options.productInfoResolver(form),\r\n                formData;\r\n\r\n            $(self.options.minicartSelector).trigger('contentLoading');\r\n            self.disableAddToCartButton(form);\r\n            formData = new FormData(form[0]);\r\n\r\n            $.ajax({\r\n                url: form.attr('action'),\r\n                data: formData,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                cache: false,\r\n                contentType: false,\r\n                processData: false,\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStart);\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                success: function (res) {\r\n                    var eventData, parameters;\r\n\r\n                    $(document).trigger('ajax:addToCart', {\r\n                        'sku': form.data().productSku,\r\n                        'productIds': productIds,\r\n                        'productInfo': productInfo,\r\n                        'form': form,\r\n                        'response': res\r\n                    });\r\n\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStop);\r\n                    }\r\n\r\n                    if (res.backUrl) {\r\n                        eventData = {\r\n                            'form': form,\r\n                            'redirectParameters': []\r\n                        };\r\n                        // trigger global event, so other modules will be able add parameters to redirect url\r\n                        $('body').trigger('catalogCategoryAddToCartRedirect', eventData);\r\n\r\n                        if (eventData.redirectParameters.length > 0 &&\r\n                            window.location.href.split(/[?#]/)[0] === res.backUrl\r\n                        ) {\r\n                            parameters = res.backUrl.split('#');\r\n                            parameters.push(eventData.redirectParameters.join('&'));\r\n                            res.backUrl = parameters.join('#');\r\n                        }\r\n\r\n                        self._redirect(res.backUrl);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (res.messages) {\r\n                        $(self.options.messagesSelector).html(res.messages);\r\n                    }\r\n\r\n                    if (res.minicart) {\r\n                        $(self.options.minicartSelector).replaceWith(res.minicart);\r\n                        $(self.options.minicartSelector).trigger('contentUpdated');\r\n                    }\r\n\r\n                    if (res.product && res.product.statusText) {\r\n                        $(self.options.productStatusSelector)\r\n                            .removeClass('available')\r\n                            .addClass('unavailable')\r\n                            .find('span')\r\n                            .html(res.product.statusText);\r\n                    }\r\n                    self.enableAddToCartButton(form);\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function (res) {\r\n                    $(document).trigger('ajax:addToCart:error', {\r\n                        'sku': form.data().productSku,\r\n                        'productIds': productIds,\r\n                        'productInfo': productInfo,\r\n                        'form': form,\r\n                        'response': res\r\n                    });\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function (res) {\r\n                    if (res.state() === 'rejected') {\r\n                        location.reload();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} form\r\n         */\r\n        disableAddToCartButton: function (form) {\r\n            var addToCartButtonTextWhileAdding = this.options.addToCartButtonTextWhileAdding || $t('Adding...'),\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n\r\n            addToCartButton.addClass(this.options.addToCartButtonDisabledClass);\r\n            addToCartButton.find('span').text(addToCartButtonTextWhileAdding);\r\n            addToCartButton.attr('title', addToCartButtonTextWhileAdding);\r\n        },\r\n\r\n        /**\r\n         * @param {String} form\r\n         */\r\n        enableAddToCartButton: function (form) {\r\n            var addToCartButtonTextAdded = this.options.addToCartButtonTextAdded || $t('Added'),\r\n                self = this,\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n\r\n            addToCartButton.find('span').text(addToCartButtonTextAdded);\r\n            addToCartButton.attr('title', addToCartButtonTextAdded);\r\n\r\n            setTimeout(function () {\r\n                var addToCartButtonTextDefault = self.options.addToCartButtonTextDefault || $t('Add to Cart');\r\n\r\n                addToCartButton.removeClass(self.options.addToCartButtonDisabledClass);\r\n                addToCartButton.find('span').text(addToCartButtonTextDefault);\r\n                addToCartButton.attr('title', addToCartButtonTextDefault);\r\n            }, 1000);\r\n        }\r\n    });\r\n\r\n    return $.mage.catalogAddToCart;\r\n});\r\n","Magento_Catalog/js/product/learn-more.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Column, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        /**\r\n         * Depends on this option, \"Learn More\" link can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'learn_more', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'mageUtils',\r\n    'uiElement',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Catalog/js/product/view/product-ids-resolver'\r\n], function (_, $, utils, Element, storage, customerData, productResolver) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            identifiersConfig: {\r\n                namespace: ''\r\n            },\r\n            productStorageConfig: {\r\n                namespace: 'product_data_storage',\r\n                customerDataProvider: 'product_data_storage',\r\n                updateRequestConfig: {\r\n                    url: '',\r\n                    method: 'GET',\r\n                    dataType: 'json'\r\n                },\r\n                className: 'DataStorage'\r\n            },\r\n            ids: {},\r\n            listens: {\r\n                ids: 'idsHandler'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initIdsStorage();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe('ids');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes ids storage.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initIdsStorage: function () {\r\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes ids storage handler.\r\n         *\r\n         * @param {Object} idsStorage\r\n         */\r\n        idsStorageHandler: function (idsStorage) {\r\n            this.idsStorage = idsStorage;\r\n            this.productStorage = storage.createStorage(this.productStorageConfig);\r\n            this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\r\n\r\n            if (~~this.idsStorage.allowToSendRequest) {\r\n                customerData.reload([idsStorage.namespace]).done(this._resolveDataByIds.bind(this));\r\n            } else {\r\n                this._resolveDataByIds();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback, which load by ids from ids-storage product data\r\n         *\r\n         * @private\r\n         */\r\n        _resolveDataByIds: function () {\r\n            this.initIdsListener();\r\n            this.idsMerger(\r\n                this.idsStorage.get(),\r\n                this.prepareDataFromCustomerData(customerData.get(this.identifiersConfig.namespace)())\r\n            );\r\n\r\n            if (!_.isEmpty(this.productStorage.data())) {\r\n                this.dataCollectionHandler(this.productStorage.data());\r\n            } else {\r\n                this.productStorage.setIds(this.data.currency, this.data.store, this.ids());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init ids storage listener.\r\n         */\r\n        initIdsListener: function () {\r\n            customerData.get(this.identifiersConfig.namespace).subscribe(function (data) {\r\n                this.idsMerger(this.prepareDataFromCustomerData(data));\r\n            }.bind(this));\r\n            this.idsStorage.data.subscribe(this.idsMerger.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Prepare data from customerData.\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        prepareDataFromCustomerData: function (data) {\r\n            data = data.items ? data.items : data;\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Filter ids by their lifetime in order to show only hot ids :)\r\n         *\r\n         * @param {Object} ids\r\n         * @returns {Array}\r\n         */\r\n        filterIds: function (ids) {\r\n            var _ids = {},\r\n                currentTime = new Date().getTime() / 1000,\r\n                currentProductIds = productResolver($('#product_addtocart_form')),\r\n                productCurrentScope = this.data.productCurrentScope,\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                    window.checkout.websiteId;\r\n\r\n            _.each(ids, function (id, key) {\r\n                if (\r\n                    currentTime - ids[key]['added_at'] < ~~this.idsStorage.lifetime &&\r\n                    !_.contains(currentProductIds, ids[key]['product_id']) &&\r\n                    (!id.hasOwnProperty('scope_id') || ids[key]['scope_id'] === scopeId)\r\n                ) {\r\n                    _ids[id['product_id']] = id;\r\n\r\n                }\r\n            }, this);\r\n\r\n            return _ids;\r\n        },\r\n\r\n        /**\r\n         * Merges id from storage and customer data\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} optionalData\r\n         */\r\n        idsMerger: function (data, optionalData) {\r\n            if (data && optionalData) {\r\n                data = _.extend(data, optionalData);\r\n            }\r\n\r\n            if (!_.isEmpty(data)) {\r\n                this.ids(\r\n                    this.filterIds(_.extend(this.ids(), data))\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Ids update handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        idsHandler: function (data) {\r\n            this.productStorage.setIds(this.data.currency, this.data.store, data);\r\n        },\r\n\r\n        /**\r\n         * Process data\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        processData: function (data) {\r\n            var curData = utils.copy(this.data),\r\n                ids = this.ids();\r\n\r\n            delete data['data_id'];\r\n            data = _.values(data);\r\n\r\n            _.each(data, function (record, index) {\r\n                record._rowIndex = index;\r\n                record['added_at'] = ids[record.id]['added_at'];\r\n            }, this);\r\n\r\n            curData.items = data;\r\n            this.set('data', curData);\r\n        },\r\n\r\n        /**\r\n         * Product storage data handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        dataCollectionHandler: function (data) {\r\n            data = this.filterData(data);\r\n            this.processData(data);\r\n        },\r\n\r\n        /**\r\n         * Filters data from product storage by ids\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        filterData: function (data) {\r\n            var result = {},\r\n                i = 0,\r\n                ids = _.keys(this.ids()),\r\n                length = ids.length;\r\n\r\n            for (i; i < length; i++) {\r\n                if (ids[i] && data[ids[i]]) {\r\n                    result[ids[i]] = data[ids[i]];\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/uenc-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([], function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Check data to JSON.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        function _isJSON(data) {\r\n            try {\r\n                JSON.parse(data);\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         * @param {String} uenc\r\n         *\r\n         * @returns {String}\r\n         */\r\n        function _stringProcessor(data, placeholder, uenc) {\r\n            if (data && ~data.indexOf(placeholder)) {\r\n                return data.replace(placeholder, uenc);\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         * @param {String} uenc\r\n         *\r\n         * @returns {String}\r\n         */\r\n        function _objectProcessor(data, placeholder, uenc) {\r\n            data = JSON.parse(data);\r\n\r\n            if (data.hasOwnProperty('action')) {\r\n                data.action = _stringProcessor(data.action, placeholder, uenc);\r\n            }\r\n\r\n            if (data.hasOwnProperty('data') && data.data.hasOwnProperty('uenc')) {\r\n                data.data.uenc = uenc;\r\n            }\r\n\r\n            return JSON.stringify(data);\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         *\r\n         * @returns {String}\r\n         */\r\n        return function (data, placeholder) {\r\n            var uenc = btoa(window.location.href).replace('+/=', '-_,');\r\n\r\n            placeholder = placeholder || encodeURI('%uenc%');\r\n\r\n            return _isJSON(data) ?\r\n                _objectProcessor(data, placeholder, uenc) :\r\n                _stringProcessor(data, placeholder, uenc);\r\n\r\n        };\r\n    }\r\n);\r\n","Magento_Catalog/js/product/addtocart-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/uenc-processor',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Element, uencProcessor, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            label: ''\r\n        },\r\n\r\n        /**\r\n         * Prepare data, that will be inserted as data-mage-init attribute into button. With help of this attribute\r\n         * Add To * buttons can understand post data and urls\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getDataMageInit: function (row) {\r\n            return '{\"redirectUrl\": { \"url\" : \"'  + uencProcessor(row['add_to_cart_button'].url) + '\"}}';\r\n        },\r\n\r\n        /**\r\n         * Prepare Data-Post data that will be used in data-mage-init\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getDataPost: function (row) {\r\n            return uencProcessor(row['add_to_cart_button']['post_data']);\r\n        },\r\n\r\n        /**\r\n         * Check if product has required options.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        hasRequiredOptions: function (row) {\r\n            return row['add_to_cart_button']['required_options'];\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to cart\" button can be shown or hide\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        isSalable: function (row) {\r\n            return row['is_salable'];\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to cart\" button can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'add_to_cart', 'show_buttons');\r\n        },\r\n\r\n        /**\r\n         * Get button label.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/query-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n        'underscore'\r\n    ], function (_) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * Build query to get id\r\n             *\r\n             * @param {Object} data\r\n             */\r\n            buildQuery: function (data) {\r\n                var filters = [];\r\n\r\n                _.each(data, function (value, key) {\r\n                    filters.push({\r\n                        field: key,\r\n                        value: value,\r\n                        'condition_type': 'in'\r\n                    });\r\n                });\r\n\r\n                return {\r\n                    searchCriteria: {\r\n                        filterGroups: [\r\n                            {\r\n                                filters: filters\r\n                            }\r\n                        ]\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Catalog/js/product/addtocompare-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/uenc-processor',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Column, uencProcessor, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            label: ''\r\n        },\r\n\r\n        /**\r\n         * Prepare Data-Post data that will be used in data-mage-init\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Array}\r\n         */\r\n        getDataPost: function (row) {\r\n            return uencProcessor(row['add_to_compare_button'].url ||\r\n                    row['add_to_compare_button']['post_data']);\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to compare\" button can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'add_to_compare', 'show_buttons');\r\n        },\r\n\r\n        /**\r\n         * Get button label.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/provider-compared.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    './provider',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, Provider, storage, customerData) {\r\n    'use strict';\r\n\r\n    return Provider.extend({\r\n\r\n        /**\r\n         * Ids update handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        idsHandler: function (data) {\r\n            this.productStorage.setIds(this.data.currency, this.data.store, this.dataFilter(data));\r\n        },\r\n\r\n        /**\r\n         * Filters data by provider\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        dataFilter: function (data) {\r\n            var providerData = this.idsStorage.prepareData(customerData.get(this.identifiersConfig.provider)().items),\r\n                result = {},\r\n                productCurrentScope,\r\n                scopeId;\r\n\r\n            if (typeof this.data.productCurrentScope !== 'undefined') {\r\n                productCurrentScope = this.data.productCurrentScope;\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                    productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                        window.checkout.websiteId;\r\n                _.each(data, function (value, key) {\r\n                    if (!providerData[productCurrentScope + '-' + scopeId + '-' + key]) {\r\n                        result[key] = value;\r\n                    }\r\n                });\r\n            } else {\r\n                _.each(data, function (value, key) {\r\n                    if (!providerData[key]) {\r\n                        result[key] = value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Filters data from product storage by ids\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        filterData: function (data) {\r\n            var result = {},\r\n                i = 0,\r\n                ids = _.keys(this.dataFilter(this.ids())),\r\n                length = ids.length;\r\n\r\n            for (i; i < length; i++) {\r\n                if (ids[i] && data[ids[i]]) {\r\n                    result[ids[i]] = data[ids[i]];\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/breadcrumbs.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Theme/js/model/breadcrumb-list'\r\n], function ($, breadcrumbList) {\r\n    'use strict';\r\n\r\n    return function (widget) {\r\n\r\n        $.widget('mage.breadcrumbs', widget, {\r\n            options: {\r\n                categoryUrlSuffix: '',\r\n                useCategoryPathInUrl: false,\r\n                product: '',\r\n                categoryItemSelector: '.category-item',\r\n                menuContainer: '[data-action=\"navigation\"] > ul'\r\n            },\r\n\r\n            /** @inheritdoc */\r\n            _render: function () {\r\n                this._appendCatalogCrumbs();\r\n                this._super();\r\n            },\r\n\r\n            /**\r\n             * Append category and product crumbs.\r\n             *\r\n             * @private\r\n             */\r\n            _appendCatalogCrumbs: function () {\r\n                var categoryCrumbs = this._resolveCategoryCrumbs();\r\n\r\n                categoryCrumbs.forEach(function (crumbInfo) {\r\n                    breadcrumbList.push(crumbInfo);\r\n                });\r\n\r\n                if (this.options.product) {\r\n                    breadcrumbList.push(this._getProductCrumb());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Resolve categories crumbs.\r\n             *\r\n             * @return Array\r\n             * @private\r\n             */\r\n            _resolveCategoryCrumbs: function () {\r\n                var menuItem = this._resolveCategoryMenuItem(),\r\n                    categoryCrumbs = [];\r\n\r\n                if (menuItem !== null && menuItem.length) {\r\n                    categoryCrumbs.unshift(this._getCategoryCrumb(menuItem));\r\n\r\n                    while ((menuItem = this._getParentMenuItem(menuItem)) !== null) {\r\n                        categoryCrumbs.unshift(this._getCategoryCrumb(menuItem));\r\n                    }\r\n                }\r\n\r\n                return categoryCrumbs;\r\n            },\r\n\r\n            /**\r\n             * Returns crumb data.\r\n             *\r\n             * @param {Object} menuItem\r\n             * @return {Object}\r\n             * @private\r\n             */\r\n            _getCategoryCrumb: function (menuItem) {\r\n                return {\r\n                    'name': 'category',\r\n                    'label': menuItem.text(),\r\n                    'link': menuItem.attr('href'),\r\n                    'title': ''\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Returns product crumb.\r\n             *\r\n             * @return {Object}\r\n             * @private\r\n             */\r\n            _getProductCrumb: function () {\r\n                return {\r\n                    'name': 'product',\r\n                    'label': this.options.product,\r\n                    'link': '',\r\n                    'title': ''\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Find parent menu item for current.\r\n             *\r\n             * @param {Object} menuItem\r\n             * @return {Object|null}\r\n             * @private\r\n             */\r\n            _getParentMenuItem: function (menuItem) {\r\n                var classes,\r\n                    classNav,\r\n                    parentClass,\r\n                    parentMenuItem = null;\r\n\r\n                if (!menuItem) {\r\n                    return null;\r\n                }\r\n\r\n                classes = menuItem.parent().attr('class');\r\n                classNav = classes.match(/(nav\\-)[0-9]+(\\-[0-9]+)+/gi);\r\n\r\n                if (classNav) {\r\n                    classNav = classNav[0];\r\n                    parentClass = classNav.substr(0, classNav.lastIndexOf('-'));\r\n\r\n                    if (parentClass.lastIndexOf('-') !== -1) {\r\n                        parentMenuItem = $(this.options.menuContainer).find('.' + parentClass + ' > a');\r\n                        parentMenuItem = parentMenuItem.length ? parentMenuItem : null;\r\n                    }\r\n                }\r\n\r\n                return parentMenuItem;\r\n            },\r\n\r\n            /**\r\n             * Returns category menu item.\r\n             *\r\n             * Tries to resolve category from url or from referrer as fallback and\r\n             * find menu item from navigation menu by category url.\r\n             *\r\n             * @return {Object|null}\r\n             * @private\r\n             */\r\n            _resolveCategoryMenuItem: function () {\r\n                var categoryUrl = this._resolveCategoryUrl(),\r\n                    menu = $(this.options.menuContainer),\r\n                    categoryMenuItem = null;\r\n\r\n                if (categoryUrl && menu.length) {\r\n                    categoryMenuItem = menu.find(\r\n                        this.options.categoryItemSelector +\r\n                        ' > a[href=\"' + categoryUrl + '\"]'\r\n                    );\r\n                }\r\n\r\n                return categoryMenuItem;\r\n            },\r\n\r\n            /**\r\n             * Returns category url.\r\n             *\r\n             * @return {String}\r\n             * @private\r\n             */\r\n            _resolveCategoryUrl: function () {\r\n                var categoryUrl;\r\n\r\n                if (this.options.useCategoryPathInUrl) {\r\n                    // In case category path is used in product url - resolve category url from current url.\r\n                    categoryUrl = window.location.href.split('?')[0];\r\n                    categoryUrl = categoryUrl.substring(0, categoryUrl.lastIndexOf('/')) +\r\n                        this.options.categoryUrlSuffix;\r\n                } else {\r\n                    // In other case - try to resolve it from referrer (without parameters).\r\n                    categoryUrl = document.referrer;\r\n\r\n                    if (categoryUrl.indexOf('?') > 0) {\r\n                        categoryUrl = categoryUrl.substr(0, categoryUrl.indexOf('?'));\r\n                    }\r\n                }\r\n\r\n                return categoryUrl;\r\n            }\r\n        });\r\n\r\n        return $.mage.breadcrumbs;\r\n    };\r\n});\r\n","Magento_Catalog/js/product/name.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Column, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        /**\r\n         * Depends on this option, product name can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'name', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/remaining-characters.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'jquery-ui-modules/widget'\r\n], function ($, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.remainingCharacters', {\r\n        options: {\r\n            remainingText: $t('remaining'),\r\n            tooManyText: $t('too many'),\r\n            errorClass: 'mage-error',\r\n            noDisplayClass: 'no-display'\r\n        },\r\n\r\n        /**\r\n         * Initializes custom option component\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.note = $(this.options.noteSelector);\r\n            this.counter = $(this.options.counterSelector);\r\n\r\n            this.updateCharacterCount();\r\n            this.element.on('change keyup paste', this.updateCharacterCount.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Updates counter message\r\n         */\r\n        updateCharacterCount: function () {\r\n            var length = this.element.val().length,\r\n                diff = this.options.maxLength - length;\r\n\r\n            this.counter.text(this._formatMessage(diff));\r\n            this.counter.toggleClass(this.options.noDisplayClass, length === 0);\r\n            this.note.toggleClass(this.options.errorClass, diff < 0);\r\n        },\r\n\r\n        /**\r\n         * Format remaining characters message\r\n         *\r\n         * @param {int} diff\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _formatMessage: function (diff) {\r\n            var count = Math.abs(diff),\r\n                qualifier = diff < 0 ? this.options.tooManyText : this.options.remainingText;\r\n\r\n            return '(' + count + ' ' + qualifier + ')';\r\n        }\r\n    });\r\n\r\n    return $.mage.remainingCharacters;\r\n});\r\n","Magento_Catalog/js/product/storage/ids-storage-compare.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Catalog/js/product/storage/ids-storage'\r\n], function (_, ko, utils, customerData, idsStorage) {\r\n    'use strict';\r\n\r\n    return _.extend(utils.copy(idsStorage), {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'IdsStorageCompare',\r\n\r\n        /**\r\n         * Initializes class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            if (this.provider) {\r\n                this.providerDataHandler(customerData.get(this.provider)());\r\n                this.initProviderListener();\r\n            }\r\n\r\n            this.initLocalStorage()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes listener for external data provider\r\n         */\r\n        initProviderListener: function () {\r\n            customerData.get(this.provider).subscribe(this.providerDataHandler.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Initializes handler for external data provider update\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        providerDataHandler: function (data) {\r\n            data = data.items || data;\r\n            data = this.prepareData(data);\r\n\r\n            this.add(data);\r\n        },\r\n\r\n        /**\r\n         * Prepares data to correct interface\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object} data\r\n         */\r\n        prepareData: function (data) {\r\n            var result = {},\r\n                scopeId;\r\n\r\n            _.each(data, function (item) {\r\n                if (typeof item.productScope !== 'undefined') {\r\n                    scopeId = item.productScope === 'store' ? window.checkout.storeId :\r\n                        item.productScope === 'group' ? window.checkout.storeGroupId :\r\n                            window.checkout.websiteId;\r\n\r\n                    result[item.productScope + '-' + scopeId + '-' + item.id] = {\r\n                        'added_at': new Date().getTime() / 1000,\r\n                        'product_id': item.id,\r\n                        'scope_id': scopeId\r\n                    };\r\n                } else {\r\n                    result[item.id] = {\r\n                        'added_at': new Date().getTime() / 1000,\r\n                        'product_id': item.id\r\n                    };\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/storage/storage-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'Magento_Catalog/js/product/storage/ids-storage',\r\n    'Magento_Catalog/js/product/storage/data-storage',\r\n    'Magento_Catalog/js/product/storage/ids-storage-compare'\r\n], function ($, _, utils, $t, IdsStorage, DataStore, IdsStorageCompare) {\r\n    'use strict';\r\n\r\n    return (function () {\r\n\r\n        var /**\r\n             * {Object} storages - list of storages\r\n             */\r\n            storages = {},\r\n\r\n            /**\r\n             * {Object} classes - list of classes\r\n             */\r\n            classes = {},\r\n\r\n            /**\r\n             * {Object} prototype - methods that will be added to all storage classes to prototype property.\r\n             */\r\n            prototype = {\r\n\r\n                /**\r\n                 * Sets data to storage\r\n                 *\r\n                 * @param {*} data\r\n                 */\r\n                set: function (data) {\r\n                    if (!utils.compare(data, this.data()).equal) {\r\n                        this.data(data);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Adds some data to current storage data\r\n                 *\r\n                 * @param {*} data\r\n                 */\r\n                add: function (data) {\r\n                    if (!_.isEmpty(data)) {\r\n                        this.data(_.extend(utils.copy(this.data()), data));\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Gets current storage data\r\n                 *\r\n                 * @returns {*} data\r\n                 */\r\n                get: function () {\r\n                    return this.data();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Required properties to storage\r\n             */\r\n            storagesInterface =  {\r\n                data: 'function',\r\n                initialize: 'function',\r\n                namespace: 'string'\r\n            },\r\n\r\n            /**\r\n             * Private service methods\r\n             */\r\n            _private = {\r\n\r\n                /**\r\n                 * Overrides class method and add ability use _super to call parent method\r\n                 *\r\n                 * @param {Object} extensionMethods\r\n                 * @param {Object} originInstance\r\n                 */\r\n                overrideClassMethods: function (extensionMethods, originInstance) {\r\n                    var methodsName = _.keys(extensionMethods),\r\n                        i = 0,\r\n                        length = methodsName.length;\r\n\r\n                    for (i; i < length; i++) {\r\n                        if (_.isFunction(originInstance[methodsName[i]])) {\r\n                            originInstance[methodsName[i]] = extensionMethods[methodsName[i]];\r\n                        }\r\n                    }\r\n\r\n                    return originInstance;\r\n                },\r\n\r\n                /**\r\n                 * Checks is storage implement interface\r\n                 *\r\n                 * @param {Object} classInstance\r\n                 *\r\n                 * @returns {Boolean}\r\n                 */\r\n                isImplementInterface: function (classInstance) {\r\n                    _.each(storagesInterface, function (key, value) {\r\n                        if (typeof classInstance[key] !== value) {\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Subscribers list\r\n             */\r\n            subsctibers = {};\r\n\r\n        (function () {\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[IdsStorage.name] = function (config) {\r\n                _.extend(this, IdsStorage, config);\r\n            };\r\n\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[IdsStorageCompare.name] = function (config) {\r\n                _.extend(this, IdsStorageCompare, config);\r\n            };\r\n\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[DataStore.name] = function (config) {\r\n                _.extend(this, DataStore, config);\r\n            };\r\n\r\n            _.each(classes, function (classItem) {\r\n                classItem.prototype = prototype;\r\n            });\r\n        })();\r\n\r\n        return {\r\n\r\n            /**\r\n             * Creates new storage or returns if storage with declared namespace exist\r\n             *\r\n             * @param {Object} config - storage config\r\n             * @throws {Error}\r\n             * @returns {Object} storage instance\r\n             */\r\n            createStorage: function (config) {\r\n                var instance,\r\n                    initialized;\r\n\r\n                if (storages[config.namespace]) {\r\n                    return storages[config.namespace];\r\n                }\r\n\r\n                instance = new classes[config.className](config);\r\n\r\n                if (_private.isImplementInterface(instance)) {\r\n                    initialized = storages[config.namespace] = instance.initialize();\r\n                    this.processSubscribers(initialized, config);\r\n\r\n                    return initialized;\r\n                }\r\n\r\n                throw new Error('Class ' + config.className + $t('does not implement Storage Interface'));\r\n            },\r\n\r\n            /**\r\n             * Process subscribers\r\n             *\r\n             * Differentiate subscribers by their namespaces: recently_viewed or recently_compared\r\n             * and process callbacks. Callbacks can be add through onStorageInit function\r\n             *\r\n             * @param {Object} initialized\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            processSubscribers: function (initialized, config) {\r\n                if (subsctibers[config.namespace]) {\r\n                    _.each(subsctibers[config.namespace], function (callback) {\r\n                        callback(initialized);\r\n                    });\r\n\r\n                    delete subsctibers[config.namespace];\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Listens storage creating by namespace\r\n             *\r\n             * @param {String} namespace\r\n             * @param {Function} callback\r\n             * @return void\r\n             */\r\n            onStorageInit: function (namespace, callback) {\r\n                if (storages[namespace]) {\r\n                    callback(storages[namespace]);\r\n                } else {\r\n                    subsctibers[namespace] ?\r\n                        subsctibers[namespace].push(callback) :\r\n                        subsctibers[namespace] = [callback];\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Gets storage by namespace\r\n             *\r\n             * @param {String} namespace\r\n             *\r\n             * @returns {Object} storage insance\r\n             */\r\n            getStorage: function (namespace) {\r\n                return storages[namespace];\r\n            }\r\n        };\r\n    })();\r\n});\r\n\r\n","Magento_Catalog/js/product/storage/data-storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'Magento_Catalog/js/product/query-builder',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, utils, queryBuilder, customerData) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Process data from API request\r\n     *\r\n     * @param {Object} data\r\n     * @returns {Object}\r\n     */\r\n    function getParsedDataFromServer(data) {\r\n        var result = {};\r\n\r\n        _.each(data.items, function (item) {\r\n                if (item.id) {\r\n                    result[item.id] = item;\r\n                }\r\n            }\r\n        );\r\n\r\n        return {\r\n            items: result\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set data to localStorage with support check.\r\n     *\r\n     * @param {String} namespace\r\n     * @param {Object} data\r\n     */\r\n    function setLocalStorageItem(namespace, data) {\r\n        try {\r\n            window.localStorage.setItem(namespace, JSON.stringify(data));\r\n        } catch (e) {\r\n            console.warn('localStorage is unavailable - skipping local caching of product data');\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'DataStorage',\r\n        request: {},\r\n        customerDataProvider: 'product_data_storage',\r\n\r\n        /**\r\n         * Initialize class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            this.initLocalStorage()\r\n                .initCustomerDataReloadListener()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener()\r\n                .initProvideStorage()\r\n                .initProviderListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to customer data reload\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initCustomerDataReloadListener: function () {\r\n            $(document).on('customer-data-invalidate', this._flushProductStorage.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Flush product storage\r\n         *\r\n         * @private\r\n         * @return void\r\n         */\r\n        _flushProductStorage: function (event, sections) {\r\n            if (_.isEmpty(sections) || _.contains(sections, 'product_data_storage')) {\r\n                this.localStorage.removeAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to data property\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initDataListener: function () {\r\n            this.data.subscribe(this.dataHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize provider storage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initProvideStorage: function () {\r\n            this.providerHandler(customerData.get(this.customerDataProvider)());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler to update \"data\" property.\r\n         * Sets data to localStorage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        dataHandler: function (data) {\r\n            if (_.isEmpty(data)) {\r\n                this.localStorage.removeAll();\r\n            } else {\r\n                setLocalStorageItem(this.namespace, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler to update data in provider.\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        providerHandler: function (data) {\r\n            var currentData = utils.copy(this.data()),\r\n                ids = _.keys(data.items);\r\n\r\n            if (data.items && ids.length) {\r\n                //we can extend only items\r\n                data = data.items;\r\n                this.data(_.extend(data, currentData));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets data ids\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         */\r\n        setIds: function (currency, store, ids) {\r\n            if (!this.hasInCache(currency, store, ids)) {\r\n                this.loadDataFromServer(currency, store, ids);\r\n            } else {\r\n                this.data.valueHasMutated();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets data from \"data\" property by identifiers\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} productIdentifiers\r\n         *\r\n         * @return {Object} data.\r\n         */\r\n        getDataByIdentifiers: function (currency, store, productIdentifiers) {\r\n            var data = {},\r\n                dataCollection = this.data(),\r\n                id;\r\n\r\n            for (id in productIdentifiers) {\r\n                if (productIdentifiers.hasOwnProperty(id)) {\r\n                    data[id] = dataCollection[id];\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Checks has cached data or not\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasInCache: function (currency, store, ids) {\r\n            var data = this.data(),\r\n                id;\r\n\r\n            for (id in ids) {\r\n                if (!data.hasOwnProperty(id) ||\r\n                    data[id]['currency_code'] !== currency ||\r\n                    ~~data[id]['store_id'] !== ~~store\r\n                ) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Load data from server by ids\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         *\r\n         * @return void\r\n         */\r\n        loadDataFromServer: function (currency, store, ids) {\r\n            var idsArray = _.keys(ids),\r\n                prepareAjaxParams = {\r\n                    'entity_id': idsArray.join(',')\r\n                };\r\n\r\n            if (this.request.sent && this.hasIdsInSentRequest(ids)) {\r\n                return;\r\n            }\r\n\r\n            this.request = {\r\n                sent: true,\r\n                data: ids\r\n            };\r\n\r\n            this.updateRequestConfig.data = queryBuilder.buildQuery(prepareAjaxParams);\r\n            this.updateRequestConfig.data['store_id'] = store;\r\n            this.updateRequestConfig.data['currency_code'] = currency;\r\n            $.ajax(this.updateRequestConfig).done(function (data) {\r\n                this.request = {};\r\n                this.providerHandler(getParsedDataFromServer(data));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Each product page consist product cache data,\r\n         * this function prepare those data to appropriate view, and save it\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        addDataFromPageCache: function (data) {\r\n            this.providerHandler(getParsedDataFromServer(data));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} ids\r\n         * @returns {Boolean}\r\n         */\r\n        hasIdsInSentRequest: function (ids) {\r\n            var sentDataIds,\r\n                currentDataIds;\r\n\r\n            if (this.request.data) {\r\n                sentDataIds = _.keys(this.request.data);\r\n                currentDataIds = _.keys(ids);\r\n\r\n                _.each(currentDataIds, function (id) {\r\n                    if (_.lastIndexOf(sentDataIds, id) === -1) {\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Initialize provider listener\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initProviderListener: function () {\r\n            customerData.get(this.customerDataProvider).subscribe(this.providerHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Caches data from local storage to local scope\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        cachesDataFromLocalStorage: function () {\r\n            this.data(this.getDataFromLocalStorage());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets data from local storage by current namespace\r\n         *\r\n         * @return {Object}.\r\n         */\r\n        getDataFromLocalStorage: function () {\r\n            return this.localStorage.get();\r\n        },\r\n\r\n        /**\r\n         * Initialize localStorage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initLocalStorage: function () {\r\n            this.localStorage = $.initNamespaceStorage(this.namespace).localStorage;\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/js/product/storage/ids-storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set data to localStorage with support check.\r\n     *\r\n     * @param {String} namespace\r\n     * @param {Object} data\r\n     */\r\n    function setLocalStorageItem(namespace, data) {\r\n        try {\r\n            window.localStorage.setItem(namespace, JSON.stringify(data));\r\n        } catch (e) {\r\n            console.warn('localStorage is unavailable - skipping local caching of product data');\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'IdsStorage',\r\n\r\n        /**\r\n         * Initializes class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            this.initCustomerDataReloadListener()\r\n                .initLocalStorage()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets data from local storage by current namespace\r\n         *\r\n         * @return {Object}.\r\n         */\r\n        getDataFromLocalStorage: function () {\r\n            return this.localStorage.get();\r\n        },\r\n\r\n        /**\r\n         * Caches data from local storage to local scope\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        cachesDataFromLocalStorage: function () {\r\n            this.data(this.getDataFromLocalStorage());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize localStorage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initLocalStorage: function () {\r\n            this.localStorage = $.initNamespaceStorage(this.namespace).localStorage;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes listener to \"data\" property\r\n         */\r\n        initDataListener: function () {\r\n            this.data.subscribe(this.internalDataHandler.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to customer data reload\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initCustomerDataReloadListener: function () {\r\n            $(document).on('customer-data-reload', function (event, sections) {\r\n                if ((_.isEmpty(sections) || _.contains(sections, this.namespace)) && ~~this.allowToSendRequest) {\r\n                    this.localStorage.removeAll();\r\n                    this.data();\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes handler to \"data\" property update\r\n         */\r\n        internalDataHandler: function (data) {\r\n            setLocalStorageItem(this.namespace, data);\r\n        },\r\n\r\n        /**\r\n         * Initializes handler to storage update\r\n         */\r\n        externalDataHandler: function (data) {\r\n            data = data.items ? data.items : data;\r\n\r\n            this.set(_.extend(utils.copy(this.data()), data));\r\n        }\r\n    };\r\n});\r\n\r\n","Magento_Catalog/js/product/view/product-info.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Catalog/js/product/view/product-ids-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-ids'\r\n], function (_, productIds) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns id's of products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var idSet = productIds(),\r\n            product = _.findWhere($form.serializeArray(), {\r\n            name: 'product'\r\n        });\r\n\r\n        if (!_.isUndefined(product)) {\r\n            idSet.push(product.value);\r\n        }\r\n\r\n        return _.uniq(idSet);\r\n    };\r\n});\r\n","Magento_Catalog/js/product/view/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'Magento_Catalog/js/product/storage/storage-service'\r\n], function (_, Element, storage) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            identifiersConfig: {\r\n                namespace: 'recently_viewed_product'\r\n            },\r\n            productStorageConfig: {\r\n                namespace: 'product_data_storage',\r\n                updateRequestConfig: {\r\n                    method: 'GET',\r\n                    dataType: 'json'\r\n                },\r\n                className: 'DataStorage'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initIdsStorage()\r\n                .initDataStorage();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init ids storage\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initIdsStorage: function () {\r\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init data storage\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initDataStorage: function () {\r\n            storage.onStorageInit(this.productStorageConfig.namespace, this.dataStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init data storage handler\r\n         *\r\n         * @param {Object} dataStorage - storage instance\r\n         */\r\n        dataStorageHandler: function (dataStorage) {\r\n            this.productStorage = dataStorage;\r\n            this.productStorage.add(this.data.items);\r\n        },\r\n\r\n        /**\r\n         * Init ids storage handler\r\n         *\r\n         * @param {Object} idsStorage - storage instance\r\n         */\r\n        idsStorageHandler: function (idsStorage) {\r\n            this.idsStorage = idsStorage;\r\n            this.idsStorage.add(this.getIdentifiers());\r\n        },\r\n\r\n        /**\r\n         * Gets ids from items\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getIdentifiers: function () {\r\n            var result = {},\r\n                productCurrentScope = this.data.productCurrentScope,\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                    productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                        window.checkout.websiteId;\r\n\r\n            _.each(this.data.items, function (item, key) {\r\n                result[productCurrentScope + '-' + scopeId + '-' + key] = {\r\n                    'added_at': new Date().getTime() / 1000,\r\n                    'product_id': key,\r\n                    'scope_id': scopeId\r\n                };\r\n            }, this);\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/view/product-ids.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Catalog/js/product/view/product-info-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function (_, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns info about products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var product = _.findWhere($form.serializeArray(), {\r\n                name: 'product'\r\n            });\r\n\r\n        if (!_.isUndefined(product)) {\r\n            productInfo().push(\r\n                {\r\n                    'id': product.value\r\n                }\r\n            );\r\n        }\r\n\r\n        return _.uniq(productInfo(), function (item) {\r\n            return item.id;\r\n        });\r\n    };\r\n});\r\n\r\n","Magento_Catalog/js/product/list/column-status-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        /**\r\n         * Check whether we can show column depends on server settings or not\r\n         *\r\n         * @param {Object} source\r\n         * @param {String} attributeCode\r\n         * @param {String} type\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function (source, attributeCode, type) {\r\n            var attributes;\r\n\r\n            if (!source[type]) {\r\n                return false;\r\n            }\r\n\r\n            attributes = source[type].split(',');\r\n\r\n            return _.contains(attributes, attributeCode);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/grid/listing'\r\n], function (ko, _, Listing) {\r\n    'use strict';\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            additionalClasses: '',\r\n            filteredRows: {},\r\n            limit: 5,\r\n            listens: {\r\n                elems: 'filterRowsFromCache',\r\n                '${ $.provider }:data.items': 'filterRowsFromServer'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.filteredRows = ko.observable();\r\n            this.initProductsLimit();\r\n            this.hideLoader();\r\n        },\r\n\r\n        /**\r\n         * Initialize product limit\r\n         * Product limit can be configured through Ui component.\r\n         * Product limit are present in widget form\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initProductsLimit: function () {\r\n            if (this.source['page_size']) {\r\n                this.limit = this.source['page_size'];\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    rows: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sort and filter rows, that are already in magento storage cache\r\n         *\r\n         * @return void\r\n         */\r\n        filterRowsFromCache: function () {\r\n            this._filterRows(this.rows);\r\n        },\r\n\r\n        /**\r\n         * Sort and filter rows, that are come from backend\r\n         *\r\n         * @param {Object} rows\r\n         */\r\n        filterRowsFromServer: function (rows) {\r\n            this._filterRows(rows);\r\n        },\r\n\r\n        /**\r\n         * Filter rows by limit and sort them\r\n         *\r\n         * @param {Array} rows\r\n         * @private\r\n         */\r\n        _filterRows: function (rows) {\r\n            this.filteredRows(_.sortBy(rows, 'added_at').reverse().slice(0, this.limit));\r\n        },\r\n\r\n        /**\r\n         * Can retrieve product url\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getUrl: function (row) {\r\n            return row.url;\r\n        },\r\n\r\n        /**\r\n         * Get product attribute by code.\r\n         *\r\n         * @param {String} code\r\n         * @return {Object}\r\n         */\r\n        getComponentByCode: function (code) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                component;\r\n\r\n            component = _.filter(elems, function (elem) {\r\n                return elem.index === code;\r\n            }, this).pop();\r\n\r\n            return component;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/toolbar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * ProductListToolbarForm Widget - this widget is setting cookie and submitting form according to toolbar controls\r\n     */\r\n    $.widget('mage.productListToolbarForm', {\r\n\r\n        options: {\r\n            modeControl: '[data-role=\"mode-switcher\"]',\r\n            directionControl: '[data-role=\"direction-switcher\"]',\r\n            orderControl: '[data-role=\"sorter\"]',\r\n            limitControl: '[data-role=\"limiter\"]',\r\n            mode: 'product_list_mode',\r\n            direction: 'product_list_dir',\r\n            order: 'product_list_order',\r\n            limit: 'product_list_limit',\r\n            page: 'p',\r\n            modeDefault: 'grid',\r\n            directionDefault: 'asc',\r\n            orderDefault: 'position',\r\n            limitDefault: '9',\r\n            url: '',\r\n            formKey: '',\r\n            post: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._bind(\r\n                $(this.options.modeControl, this.element),\r\n                this.options.mode,\r\n                this.options.modeDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.directionControl, this.element),\r\n                this.options.direction,\r\n                this.options.directionDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.orderControl, this.element),\r\n                this.options.order,\r\n                this.options.orderDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.limitControl, this.element),\r\n                this.options.limit,\r\n                this.options.limitDefault\r\n            );\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _bind: function (element, paramName, defaultValue) {\r\n            if (element.is('select')) {\r\n                element.on('change', {\r\n                    paramName: paramName,\r\n                    'default': defaultValue\r\n                }, $.proxy(this._processSelect, this));\r\n            } else {\r\n                element.on('click', {\r\n                    paramName: paramName,\r\n                    'default': defaultValue\r\n                }, $.proxy(this._processLink, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _processLink: function (event) {\r\n            event.preventDefault();\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                $(event.currentTarget).data('value'),\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _processSelect: function (event) {\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                event.currentTarget.options[event.currentTarget.selectedIndex].value,\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        getUrlParams: function () {\r\n            var decode = window.decodeURIComponent,\r\n                urlPaths = this.options.url.split('?'),\r\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                params = {},\r\n                parameters, i;\r\n\r\n            for (i = 0; i < urlParams.length; i++) {\r\n                parameters = urlParams[i].split('=');\r\n                params[decode(parameters[0])] = parameters[1] !== undefined ?\r\n                    decode(parameters[1].replace(/\\+/g, '%20')) :\r\n                    '';\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        getCurrentLimit: function () {\r\n            return this.getUrlParams()[this.options.limit] || this.options.limitDefault;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        getCurrentPage: function () {\r\n            return this.getUrlParams()[this.options.page] || 1;\r\n        },\r\n\r\n        /**\r\n         * @param {String} paramName\r\n         * @param {*} paramValue\r\n         * @param {*} defaultValue\r\n         */\r\n        changeUrl: function (paramName, paramValue, defaultValue) {\r\n            var urlPaths = this.options.url.split('?'),\r\n                baseUrl = urlPaths[0],\r\n                paramData = this.getUrlParams(),\r\n                currentPage = this.getCurrentPage(),\r\n                form, params, key, input, formKey, newPage;\r\n\r\n            if (currentPage > 1 && paramName === this.options.limit) {\r\n                newPage = Math.floor(this.getCurrentLimit() * (currentPage - 1) / paramValue) + 1;\r\n\r\n                if (newPage > 1) {\r\n                    paramData[this.options.page] = newPage;\r\n                } else {\r\n                    delete paramData[this.options.page];\r\n                }\r\n            }\r\n\r\n            paramData[paramName] = paramValue;\r\n\r\n            if (this.options.post) {\r\n                form = document.createElement('form');\r\n                params = [this.options.mode, this.options.direction, this.options.order, this.options.limit];\r\n\r\n                for (key in paramData) {\r\n                    if (params.indexOf(key) !== -1) { //eslint-disable-line max-depth\r\n                        input = document.createElement('input');\r\n                        input.name = key;\r\n                        input.value = paramData[key];\r\n                        form.appendChild(input);\r\n                        delete paramData[key];\r\n                    }\r\n                }\r\n                formKey = document.createElement('input');\r\n                formKey.name = 'form_key';\r\n                formKey.value = this.options.formKey;\r\n                form.appendChild(formKey);\r\n\r\n                paramData = $.param(paramData);\r\n                baseUrl += paramData.length ? '?' + paramData : '';\r\n\r\n                form.action = baseUrl;\r\n                form.method = 'POST';\r\n                document.body.appendChild(form);\r\n                form.submit();\r\n            } else {\r\n                if (paramValue == defaultValue) { //eslint-disable-line eqeqeq\r\n                    delete paramData[paramName];\r\n                }\r\n\r\n                paramData = $.param(paramData);\r\n                location.href = baseUrl + (paramData.length ? '?' + paramData : '');\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.productListToolbarForm;\r\n});\r\n","Magento_Catalog/js/product/list/columns/final-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection'\r\n], function (_, registry, utils, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: false,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            showMinimalPrice: false,\r\n            showMaximumPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            bodyTmpl: 'Magento_Catalog/product/final_price',\r\n            priceWrapperCssClasses: '',\r\n            priceWrapperAttr: {}\r\n        },\r\n\r\n        /**\r\n         * Get product final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} final price html\r\n         */\r\n        getPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product regular price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} regular price html\r\n         */\r\n        getRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has a price range.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} special price html\r\n         */\r\n        hasSpecialPrice: function (row) {\r\n            return row['price_info']['regular_price'] > row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        isMinimalPrice: function (row) {\r\n            return row['price_info']['minimal_price'] < row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        getMinimalPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product is salable.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isSalable: function (row) {\r\n            return row['is_salable'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum price html\r\n         */\r\n        getMaxPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum regular price html\r\n         */\r\n        getMaxRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal regular price html\r\n         */\r\n        getMinRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get adjustments names and return as string.\r\n         *\r\n         * @return {String} adjustments classes\r\n         */\r\n        getAdjustmentCssClasses: function () {\r\n            return _.pluck(this.getAdjustments(), 'index').join(' ');\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal price amount\r\n         */\r\n        getMinimalPriceAmount: function (row) {\r\n            return row['price_info']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal regular price amount\r\n         */\r\n        getMinimalRegularPriceAmount: function (row) {\r\n            return row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum price amount\r\n         */\r\n        getMaximumPriceAmount: function (row) {\r\n            return row['price_info']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum regular price amount\r\n         */\r\n        getMaximumRegularPriceAmount: function (row) {\r\n            return row['price_info']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if minimal regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMinRegularPrice: function (row) {\r\n            return this.getMinimalPriceAmount(row) < this.getMinimalRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Check if maximum regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMaxRegularPrice: function (row) {\r\n            return this.getMaximumPriceAmount(row) < this.getMaximumRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Get path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get all price adjustments.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getAdjustments: function () {\r\n            var adjustments = this.elems();\r\n\r\n            _.each(adjustments, function (adjustment) {\r\n                adjustment.setPriceType(this.priceType);\r\n                adjustment.source = this.source;\r\n            }, this);\r\n\r\n            return adjustments;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/price-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection',\r\n    'Magento_Catalog/js/product/list/column-status-validator',\r\n    'uiLayout'\r\n], function (ko, _, registry, utils, Collection, columnStatusValidator, layout) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: '',\r\n            hasSpecialPrice: false,\r\n            showMinimalPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            visible: true,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            bodyTmpl: 'Magento_Catalog/product/price/price_box',\r\n            disableAction: false,\r\n            controlVisibility: true,\r\n            sortable: false,\r\n            sorting: false,\r\n            draggable: true,\r\n            fieldClass: {},\r\n            renders: {\r\n                default: {}\r\n            },\r\n            ignoreTmpls: {\r\n                fieldAction: true\r\n            },\r\n            statefull: {\r\n                visible: true,\r\n                sorting: true\r\n            },\r\n            imports: {\r\n                exportSorting: 'sorting'\r\n            },\r\n            listens: {\r\n                elems: ''\r\n            },\r\n            modules: {\r\n                source: '${ $.provider }'\r\n            },\r\n            pricesInit: {}\r\n        },\r\n\r\n        /**\r\n         * Sort prices api\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        sort: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check whether is allowed to render price or not\r\n         *\r\n         * @returns {*}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'price', 'show_attributes');\r\n        },\r\n\r\n        /**\r\n         * Retrieve array of prices, that should be rendered for specific product\r\n         *\r\n         * @param {Array} row\r\n         * @return {Array}\r\n         */\r\n        getPrices: function (row) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                result;\r\n\r\n            //we cant take type of product from row\r\n            this.initPrices(row);\r\n            result = _.filter(elems, function (elem) {\r\n                return elem.productType === row.type;\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Recursive Merging of objects\r\n         *\r\n         * @param {Array} target\r\n         * @param {Array} source\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _deepObjectExtend: function (target, source) {\r\n            var _target = utils.copy(target);\r\n\r\n            _.each(source, function (value, key) {\r\n                if (_.keys(value).length && typeof _target[key] !== 'undefined') {\r\n                    _target[key] = this._deepObjectExtend(_target[key], value);\r\n                } else {\r\n                    _target[key] = value;\r\n                }\r\n            }, this);\r\n\r\n            return _target;\r\n        },\r\n\r\n        /**\r\n         * Init price type box, in cases when product type has custom component or bodyTmpl\r\n         *\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPriceWithCustomMetaData: function (productType) {\r\n            var price = this._deepObjectExtend(\r\n                this.renders.prices['default'],\r\n                this.renders.prices[productType]\r\n            );\r\n\r\n            price.name = productType + '.default';\r\n            price.parent = this.name;\r\n            price.source = this.source;\r\n            price.productType = productType;\r\n            layout([price]);\r\n        },\r\n\r\n        /**\r\n         * Init Prices by product type and add them to layout\r\n         *\r\n         * @param {Array} _priceData\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPricesForProductType: function (_priceData, productType) {\r\n            var prices = [];\r\n\r\n            this._setPriceNamesToPrices(_priceData, productType);\r\n            _.sortBy(_priceData, this._comparePrices);\r\n\r\n            _.each(_priceData, function (priceData) {\r\n                if (!priceData.component) {\r\n                    return;\r\n                }\r\n\r\n                priceData.parent = this.name;\r\n                priceData.provider = this.provider;\r\n                priceData.productType = productType;\r\n                priceData = utils.template(priceData, this);\r\n                prices.push(priceData);\r\n            }, this);\r\n\r\n            layout(prices);\r\n        },\r\n\r\n        /**\r\n         * Init dynamic price components\r\n         *\r\n         * @param {Array} row\r\n         * @returns {void}\r\n         */\r\n        initPrices: function (row) {\r\n            var _priceData = [],\r\n                productType = row.type,\r\n                defaultPrice = this.renders.prices['default'];\r\n\r\n            if (this.pricesInit[productType]) {\r\n                return true;\r\n            }\r\n\r\n            this.pricesInit[productType] = true;\r\n\r\n            if (this.renders.prices[productType] && this._needToApplyCustomTemplate(this.renders.prices[productType])) {\r\n                return this._initPriceWithCustomMetaData(productType);\r\n            }\r\n\r\n            if (this.renders.prices[productType] && this.renders.prices[productType].children) {\r\n                _priceData = this._deepObjectExtend(defaultPrice.children, this.renders.prices[productType].children);\r\n            } else {\r\n                _priceData = defaultPrice.children;\r\n            }\r\n\r\n            return this._initPricesForProductType(_priceData, productType);\r\n        },\r\n\r\n        /**\r\n         * Set name to all price components\r\n         *\r\n         * @param {Array} prices\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _setPriceNamesToPrices: function (prices, productType) {\r\n            _.each(prices, function (price, name) {\r\n                price.priceType = name;\r\n                price.name = name + '.' + productType;\r\n            });\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Sort callback to compare prices by sort order\r\n         *\r\n         * @param {Number} firstPrice\r\n         * @param {Number} secondPrice\r\n         * @returns {Number}\r\n         * @private\r\n         */\r\n        _comparePrices: function (firstPrice, secondPrice) {\r\n            if (firstPrice.sortOrder < secondPrice.sortOrder) {\r\n                return -1;\r\n            }\r\n\r\n            if (firstPrice.sortOrder > secondPrice.sortOrder) {\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Check whether metadata of product type prices was changed, and we should\r\n         * to apply custom template or custom component\r\n         *\r\n         * @param {Array} productData\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _needToApplyCustomTemplate: function (productData) {\r\n            return productData.bodyTmpl || productData.component;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get price label.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/pricetype-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiCollection'\r\n], function (ko, _, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        /**\r\n         * Find from all price ui components, price with specific code, init source on it and set priceType\r\n         *\r\n         * @param {String} code\r\n         * @returns {*|T}\r\n         */\r\n        getPriceByCode: function (code) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                price;\r\n\r\n            price = _.filter(elems, function (elem) {\r\n                return elem.index.split('.').shift() === code;\r\n            }, this).pop();\r\n\r\n            price.source = this.source();\r\n            price.priceType = code;\r\n\r\n            return price;\r\n        },\r\n\r\n        /**\r\n         * Retrieve body template\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Check whether price has price range, depends on different options, that can be choose\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (_, Element, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Catalog/product/list/columns/image',\r\n            imageCode: 'default',\r\n            image: {}\r\n        },\r\n\r\n        /**\r\n         * Find image by code in scope of images\r\n         *\r\n         * @param {Object} images\r\n         * @returns {*|T}\r\n         */\r\n        getImage: function (images) {\r\n            return _.filter(images, function (image) {\r\n                return this.imageCode === image.code;\r\n            }, this).pop();\r\n        },\r\n\r\n        /**\r\n         * Get image path.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getImageUrl: function (row) {\r\n            return this.getImage(row.images).url;\r\n        },\r\n\r\n        /**\r\n         * Get image box width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getWidth: function (row) {\r\n            return this.getImage(row.images).width;\r\n        },\r\n\r\n        /**\r\n         * Get image box height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getHeight: function (row) {\r\n            return this.getImage(row.images).height;\r\n        },\r\n\r\n        /**\r\n         * Get resized image width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageWidth: function (row) {\r\n            return this.getImage(row.images)['resized_width'];\r\n        },\r\n\r\n        /**\r\n         * Get resized image height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageHeight: function (row) {\r\n            return this.getImage(row.images)['resized_height'];\r\n        },\r\n\r\n        /**\r\n         * Get image alt text.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getLabel: function (row) {\r\n            if (!this.imageExists(row)) {\r\n                return this._super();\r\n            }\r\n\r\n            return this.getImage(row.images).label;\r\n        },\r\n\r\n        /**\r\n         * Check if image exist.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        imageExists: function (row) {\r\n            return this.getImage(row.images) !== 'undefined';\r\n        },\r\n\r\n        /**\r\n         * Check if component must be shown.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'image', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/view/compare-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery',\r\n    'mage/mage',\r\n    'mage/decorate'\r\n], function (Component, customerData, $) {\r\n    'use strict';\r\n\r\n    var sidebarInitialized = false;\r\n\r\n    /**\r\n     * Initialize sidebar\r\n     */\r\n    function initSidebar() {\r\n        if (sidebarInitialized) {\r\n            return;\r\n        }\r\n\r\n        sidebarInitialized = true;\r\n        $('[data-role=compare-products-sidebar]').decorate('list', true);\r\n    }\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.compareProducts = customerData.get('compare-products');\r\n\r\n            initSidebar();\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/view/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.template = window.checkout.imageTemplate || this.template;\r\n        }\r\n    });\r\n});\r\n","Magento_CardinalCommerce/js/cardinal-factory.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (environment) {\r\n        var deferred = $.Deferred(),\r\n            dependency = 'cardinaljs';\r\n\r\n        if (environment === 'sandbox') {\r\n            dependency = 'cardinaljsSandbox';\r\n        }\r\n\r\n        require(\r\n            [dependency],\r\n            function (Cardinal) {\r\n                deferred.resolve(Cardinal);\r\n            },\r\n            deferred.reject\r\n        );\r\n\r\n        return deferred.promise();\r\n    };\r\n});\r\n","Magento_CardinalCommerce/js/cardinal-client.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiClass',\r\n    'Magento_CardinalCommerce/js/cardinal-factory',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/translate'\r\n], function ($, Class, cardinalFactory, quote, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Starts Cardinal Consumer Authentication\r\n         *\r\n         * @param {Object} cardData\r\n         * @return {jQuery.Deferred}\r\n         */\r\n        startAuthentication: function (cardData) {\r\n            var deferred = $.Deferred();\r\n\r\n            if (this.cardinalClient) {\r\n                this._startAuthentication(deferred, cardData);\r\n            } else {\r\n                cardinalFactory(this.getEnvironment())\r\n                    .done(function (client) {\r\n                        this.cardinalClient = client;\r\n                        this._startAuthentication(deferred, cardData);\r\n                    }.bind(this));\r\n            }\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        /**\r\n         * Cardinal Consumer Authentication\r\n         *\r\n         * @param {jQuery.Deferred} deferred\r\n         * @param {Object} cardData\r\n         */\r\n        _startAuthentication: function (deferred, cardData) {\r\n            //this.cardinalClient.configure({ logging: { level: 'verbose' } });\r\n            this.cardinalClient.on('payments.validated', function (data, jwt) {\r\n                if (data.ErrorNumber !== 0) {\r\n                    deferred.reject(data.ErrorDescription);\r\n                } else if ($.inArray(data.ActionCode, ['FAILURE', 'ERROR']) !== -1) {\r\n                    deferred.reject($t('Authentication Failed. Please try again with another form of payment.'));\r\n                } else {\r\n                    deferred.resolve(jwt);\r\n                }\r\n                this.cardinalClient.off('payments.validated');\r\n            }.bind(this));\r\n\r\n            this.cardinalClient.on('payments.setupComplete', function () {\r\n                this.cardinalClient.start('cca', this.getRequestOrderObject(cardData));\r\n                this.cardinalClient.off('payments.setupComplete');\r\n            }.bind(this));\r\n\r\n            this.cardinalClient.setup('init', {\r\n                jwt: this.getRequestJWT()\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Returns request order object.\r\n         *\r\n         * The request order object is structured object that is used to pass data\r\n         * to Cardinal that describes an order you'd like to process.\r\n         *\r\n         * If you pass a request object in both the JWT and the browser,\r\n         * Cardinal will merge the objects together where the browser overwrites\r\n         * the JWT object as it is considered the most recently captured data.\r\n         *\r\n         * @param {Object} cardData\r\n         * @returns {Object}\r\n         */\r\n        getRequestOrderObject: function (cardData) {\r\n            var totalAmount = quote.totals()['base_grand_total'],\r\n                currencyCode = quote.totals()['base_currency_code'],\r\n                billingAddress = quote.billingAddress(),\r\n                requestObject;\r\n\r\n            requestObject = {\r\n                OrderDetails: {\r\n                    Amount: totalAmount * 100,\r\n                    CurrencyCode: currencyCode\r\n                },\r\n                Consumer: {\r\n                    Account: {\r\n                        AccountNumber: cardData.accountNumber,\r\n                        ExpirationMonth: cardData.expMonth,\r\n                        ExpirationYear: cardData.expYear,\r\n                        CardCode: cardData.cardCode\r\n                    },\r\n                    BillingAddress: {\r\n                        FirstName: billingAddress.firstname,\r\n                        LastName: billingAddress.lastname,\r\n                        Address1: billingAddress.street[0],\r\n                        Address2: billingAddress.street[1],\r\n                        City: billingAddress.city,\r\n                        State: billingAddress.region,\r\n                        PostalCode: billingAddress.postcode,\r\n                        CountryCode: billingAddress.countryId,\r\n                        Phone1: billingAddress.telephone\r\n                    }\r\n                }\r\n            };\r\n\r\n            return requestObject;\r\n        },\r\n\r\n        /**\r\n         * Returns request JWT\r\n         * @returns {String}\r\n         */\r\n        getRequestJWT: function () {\r\n            return window.checkoutConfig.cardinal.requestJWT;\r\n        },\r\n\r\n        /**\r\n         * Returns type of environment\r\n         * @returns {String}\r\n         */\r\n        getEnvironment: function () {\r\n            return window.checkoutConfig.cardinal.environment;\r\n        }\r\n    };\r\n});\r\n","Magento_Security/js/escaper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * A loose JavaScript version of Magento\\Framework\\Escaper\r\n *\r\n * Due to differences in how XML/HTML is processed in PHP vs JS there are a couple of minor differences in behavior\r\n * from the PHP counterpart.\r\n *\r\n * The first difference is that the default invocation of escapeHtml without allowedTags will double-escape existing\r\n * entities as the intention of such an invocation is that the input isn't supposed to contain any HTML.\r\n *\r\n * The second difference is that escapeHtml will not escape quotes. Since the input is actually being processed by the\r\n * DOM there is no chance of quotes being mixed with HTML syntax. And, since escapeHtml is not\r\n * intended to be used with raw injection into a HTML attribute, this is acceptable.\r\n *\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        neverAllowedElements: ['script', 'img', 'embed', 'iframe', 'video', 'source', 'object', 'audio'],\r\n        generallyAllowedAttributes: ['id', 'class', 'href', 'title', 'style'],\r\n        forbiddenAttributesByElement: {\r\n            a: ['style']\r\n        },\r\n\r\n        /**\r\n         * Escape a string for safe injection into HTML\r\n         *\r\n         * @param {String} data\r\n         * @param {Array|null} allowedTags\r\n         * @returns {String}\r\n         */\r\n        escapeHtml: function (data, allowedTags) {\r\n            var domParser = new DOMParser(),\r\n                fragment = domParser.parseFromString('<div></div>', 'text/html');\r\n\r\n            fragment = fragment.body.childNodes[0];\r\n            allowedTags = typeof allowedTags === 'object' && allowedTags.length ? allowedTags : null;\r\n\r\n            if (allowedTags) {\r\n                fragment.innerHTML = data || '';\r\n                allowedTags = this._filterProhibitedTags(allowedTags);\r\n\r\n                this._removeComments(fragment);\r\n                this._removeNotAllowedElements(fragment, allowedTags);\r\n                this._removeNotAllowedAttributes(fragment);\r\n\r\n                return fragment.innerHTML;\r\n            }\r\n\r\n            fragment.textContent = data || '';\r\n\r\n            return fragment.innerHTML;\r\n        },\r\n\r\n        /**\r\n         * Remove the always forbidden tags from a list of provided tags\r\n         *\r\n         * @param {Array} tags\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _filterProhibitedTags: function (tags) {\r\n            return tags.filter(function (n) {\r\n                return this.neverAllowedElements.indexOf(n) === -1;\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Remove comment nodes from the given node\r\n         *\r\n         * @param {Node} node\r\n         * @private\r\n         */\r\n        _removeComments: function (node) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_COMMENT,\r\n                    function () {\r\n                        return NodeFilter.FILTER_ACCEPT;\r\n                    },\r\n                    false\r\n                ),\r\n                nodesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                nodesToRemove.push(treeWalker.currentNode);\r\n            }\r\n\r\n            nodesToRemove.forEach(function (nodeToRemove) {\r\n                nodeToRemove.parentNode.removeChild(nodeToRemove);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Strip the given node of all disallowed tags while permitting any nested text nodes\r\n         *\r\n         * @param {Node} node\r\n         * @param {Array|null} allowedTags\r\n         * @private\r\n         */\r\n        _removeNotAllowedElements: function (node, allowedTags) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_ELEMENT,\r\n                    function (currentNode) {\r\n                        return allowedTags.indexOf(currentNode.nodeName.toLowerCase()) === -1 ?\r\n                            NodeFilter.FILTER_ACCEPT\r\n                            // SKIP instead of REJECT because REJECT also rejects child nodes\r\n                            : NodeFilter.FILTER_SKIP;\r\n                    },\r\n                false\r\n                ),\r\n                nodesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                if (allowedTags.indexOf(treeWalker.currentNode.nodeName.toLowerCase()) === -1) {\r\n                    nodesToRemove.push(treeWalker.currentNode);\r\n                }\r\n            }\r\n\r\n            nodesToRemove.forEach(function (nodeToRemove) {\r\n                nodeToRemove.parentNode.replaceChild(\r\n                    node.ownerDocument.createTextNode(nodeToRemove.textContent),\r\n                    nodeToRemove\r\n                );\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Remove any invalid attributes from the given node\r\n         *\r\n         * @param {Node} node\r\n         * @private\r\n         */\r\n        _removeNotAllowedAttributes: function (node) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_ELEMENT,\r\n                    function () {\r\n                        return NodeFilter.FILTER_ACCEPT;\r\n                    },\r\n                false\r\n                ),\r\n                i,\r\n                attribute,\r\n                nodeName,\r\n                attributesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                for (i = 0; i < treeWalker.currentNode.attributes.length; i++) {\r\n                    attribute = treeWalker.currentNode.attributes[i];\r\n                    nodeName = treeWalker.currentNode.nodeName.toLowerCase();\r\n\r\n                    if (this.generallyAllowedAttributes.indexOf(attribute.name) === -1 || // eslint-disable-line max-depth,max-len\r\n                        this.forbiddenAttributesByElement[nodeName] &&\r\n                        this.forbiddenAttributesByElement[nodeName].indexOf(attribute.name) !== -1\r\n                    ) {\r\n                        attributesToRemove.push(attribute);\r\n                    }\r\n                }\r\n            }\r\n\r\n            attributesToRemove.forEach(function (attributeToRemove) {\r\n                attributeToRemove.ownerElement.removeAttribute(attributeToRemove.name);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Theme/menu.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * Simple Navigation with replacing old handlers.\r\n *\r\n * @param {String} id - id of ul element with navigation lists\r\n * @param {Object} settings - object with settings\r\n */\r\n/**\r\n * global mainNav\r\n *\r\n * @deprecated\r\n * @see lib/web/mage/menu.js\r\n */\r\ndefine([\r\n    'prototype'\r\n], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Main nav.\r\n     */\r\n    window.mainNav = function () {\r\n        var main = {\r\n            'obj_nav':   $(arguments[0]) || $('nav'),\r\n            settings:  {\r\n                'show_delay': 0,\r\n                'hide_delay': 0,\r\n                _ie6: /MSIE 6.+Win/.test(navigator.userAgent),\r\n                _ie7: /MSIE 7.+Win/.test(navigator.userAgent)\r\n            },\r\n\r\n            /**\r\n             * @param {Object} obj\r\n             * @param {*} level\r\n             */\r\n            init: function (obj, level) {\r\n                obj.lists = obj.childElements();\r\n                obj.lists.each(function (el, ind) {\r\n                    main.handlNavElement(el);\r\n\r\n                    if ((main.settings._ie6 || main.settings._ie7) && level) {\r\n                        main.ieFixZIndex(el, ind, obj.lists.size());\r\n                    }\r\n                });\r\n\r\n                if (main.settings._ie6 && !level) {\r\n                    document.execCommand('BackgroundImageCache', false, true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} list\r\n             */\r\n            handlNavElement: function (list) {\r\n                if (list !== undefined) {\r\n\r\n                    /**\r\n                     * On mouse over.\r\n                     */\r\n                    list.onmouseover = function () {\r\n                        main.fireNavEvent(this, true);\r\n                    };\r\n\r\n                    /**\r\n                     * On mouse out.\r\n                     */\r\n                    list.onmouseout = function () {\r\n                        main.fireNavEvent(this, false);\r\n                    };\r\n\r\n                    if (list.down('ul')) {\r\n                        main.init(list.down('ul'), true);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {HTMLElement} el\r\n             * @param {*} i\r\n             * @param {*} l\r\n             */\r\n            ieFixZIndex: function (el, i, l) {\r\n                if (el.tagName.toString().toLowerCase().indexOf('iframe') == -1) { //eslint-disable-line eqeqeq\r\n                    el.style.zIndex = l - i;\r\n                } else {\r\n                    el.onmouseover = 'null';\r\n                    el.onmouseout = 'null';\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} elm\r\n             * @param {*} ev\r\n             */\r\n            fireNavEvent: function (elm, ev) {\r\n                if (ev) {\r\n                    elm.addClassName('over');\r\n                    elm.down('a').addClassName('over');\r\n\r\n                    if (elm.childElements()[1]) {\r\n                        main.show(elm.childElements()[1]);\r\n                    }\r\n                } else {\r\n                    elm.removeClassName('over');\r\n                    elm.down('a').removeClassName('over');\r\n\r\n                    if (elm.childElements()[1]) {\r\n                        main.hide(elm.childElements()[1]);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} subElm\r\n             */\r\n            show: function (subElm) {\r\n                if (subElm['hide_time_id']) {\r\n                    clearTimeout(subElm['hide_time_id']);\r\n                }\r\n                subElm['show_time_id'] = setTimeout(function () {\r\n                    if (!subElm.hasClassName('shown-sub')) {\r\n                        subElm.addClassName('shown-sub');\r\n                    }\r\n                }, main.settings['show_delay']);\r\n            },\r\n\r\n            /**\r\n             * @param {Object} subElm\r\n             */\r\n            hide: function (subElm) {\r\n                if (subElm['show_time_id']) {\r\n                    clearTimeout(subElm['show_time_id']);\r\n                }\r\n                subElm['hide_time_id'] = setTimeout(function () {\r\n                    if (subElm.hasClassName('shown-sub')) {\r\n                        subElm.removeClassName('shown-sub');\r\n                    }\r\n                }, main.settings['hide_delay']);\r\n            }\r\n\r\n        };\r\n\r\n        if (arguments[1]) {\r\n            main.settings = Object.extend(main.settings, arguments[1]);\r\n        }\r\n\r\n        if (main['obj_nav']) {\r\n            main.init(main['obj_nav'], false);\r\n        }\r\n    };\r\n\r\n    document.observe('dom:loaded', function () {\r\n        //run navigation without delays and with default id=\"#nav\"\r\n        //mainNav();\r\n\r\n        //run navigation with delays\r\n        window.mainNav('nav', {\r\n            'show_delay': '100',\r\n            'hide_delay': '100'\r\n        });\r\n    });\r\n});\r\n","Magento_Theme/js/row-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * JQuery UI Widget declaration: 'mage.rowBuilder'\r\n *\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.rowBuilder', {\r\n\r\n        /**\r\n         * options with default values for setting up the template\r\n         */\r\n        options: {\r\n            //Default template options\r\n            rowTemplate: '#template-registrant',\r\n            rowContainer: '#registrant-container',\r\n            //Row index used by the template rows.\r\n            rowIndex: 0,\r\n            //Row count: Should not be set externally\r\n            rowCount: 0,\r\n            rowParentElem: '<li></li>',\r\n            rowContainerClass: 'fields',\r\n            addRowBtn: '#add-registrant-button',\r\n            btnRemoveIdPrefix: 'btn-remove',\r\n            btnRemoveSelector: '.btn-remove',\r\n            rowIdPrefix: 'row',\r\n            //This class is added to rows added after the first one. Adds the dotted separator\r\n            additionalRowClass: 'add-row',\r\n\r\n            /*\r\n             This is provided during widget instantiation. eg :\r\n             formDataPost : {\"formData\":formData,\"templateFields\":['field1-name','field2-name'] }\r\n             -\"formData\" is the multi-dimensional array of form field values : [['a','b'],['c','b']]\r\n             received from the server and encoded\r\n             -\"templateFields\" are the input fields in the template with index suffixed after the field name\r\n             eg field1-name{index}\r\n             */\r\n            formDataPost: null,\r\n            //Default selectors for add element of a template\r\n            addEventSelector: 'button',\r\n            //Default selectors for remove markup elements of a template\r\n            remEventSelector: 'a',\r\n            //This option allows adding first row delete option and a row separator\r\n            hideFirstRowAddSeparator: true,\r\n            //Max rows - This option should be set when instantiating the widget\r\n            maxRows: 1000,\r\n            maxRowsMsg: '#max-registrant-message'\r\n        },\r\n\r\n        /**\r\n         * Initialize create\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.rowTemplate = mageTemplate(this.options.rowTemplate);\r\n\r\n            this.options.rowCount = this.options.rowIndex = 0;\r\n\r\n            //On document ready related tasks\r\n            $($.proxy(this.ready, this));\r\n\r\n            //Binding template-wide events handlers for adding and removing rows\r\n            this.element.on(\r\n                'click',\r\n                this.options.addEventSelector + this.options.addRowBtn,\r\n                $.proxy(this.handleAdd, this)\r\n            );\r\n            this.element.on(\r\n                'click',\r\n                this.options.remEventSelector + this.options.btnRemoveSelector,\r\n                $.proxy(this.handleRemove, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Initialize template\r\n         * @public\r\n         */\r\n        ready: function () {\r\n            if (this.options.formDataPost &&\r\n                this.options.formDataPost.formData &&\r\n                this.options.formDataPost.formData.length\r\n            ) {\r\n                this.processFormDataArr(this.options.formDataPost);\r\n            } else if (this.options.rowIndex === 0 && this.options.maxRows !== 0) {\r\n                //If no form data , then add default row\r\n                this.addRow(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process and loop through all row data to create preselected values. This is used for any error on submit.\r\n         * For complex implementations the inheriting widget can override this behavior\r\n         * @public\r\n         * @param {Object} formDataArr\r\n         */\r\n        processFormDataArr: function (formDataArr) {\r\n            var formData = formDataArr.formData,\r\n                templateFields = formDataArr.templateFields,\r\n                formRow,\r\n                i, j;\r\n\r\n            for (i = this.options.rowIndex = 0; i < formData.length; this.options.rowIndex = i++) {\r\n                this.addRow(i);\r\n\r\n                formRow = formData[i];\r\n\r\n                for (j = 0; j < formRow.length; j++) {\r\n                    this.setFieldById(templateFields[j] + i, formRow[j]);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Initialize and create markup for template row. Add it to the parent container.\r\n         * The template processing will substitute row index at all places marked with _index_ in the template\r\n         * using the template\r\n         * @public\r\n         * @param {Number} index - current index/count of the created template. This will be used as the id\r\n         * @return {*}\r\n         */\r\n        addRow: function (index) {\r\n            var row = $(this.options.rowParentElem),\r\n                tmpl;\r\n\r\n            row.addClass(this.options.rowContainerClass).attr('id', this.options.rowIdPrefix + index);\r\n\r\n            tmpl = this.rowTemplate({\r\n                data: {\r\n                    _index_: index\r\n                }\r\n            });\r\n\r\n            $(tmpl).appendTo(row);\r\n\r\n            $(this.options.rowContainer).append(row).trigger('contentUpdated');\r\n\r\n            row.addClass(this.options.additionalRowClass);\r\n\r\n            //Remove 'delete' link and additionalRowClass for first row\r\n            if (this.options.rowIndex === 0 && this.options.hideFirstRowAddSeparator) {\r\n                $('#' + this._esc(this.options.btnRemoveIdPrefix) + '0').remove();\r\n                $('#' + this._esc(this.options.rowIdPrefix) + '0').removeClass(this.options.additionalRowClass);\r\n            }\r\n\r\n            this.maxRowCheck(++this.options.rowCount);\r\n\r\n            return row;\r\n        },\r\n\r\n        /**\r\n         * Remove return item information row\r\n         * @public\r\n         * @param {*} rowIndex - return item information row index\r\n         * @return {Boolean}\r\n         */\r\n        removeRow: function (rowIndex) {\r\n            $('#' + this._esc(this.options.rowIdPrefix) + rowIndex).remove();\r\n            this.maxRowCheck(--this.options.rowCount);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Function to check if maximum rows are exceeded and render/hide maxMsg and Add btn\r\n         * @public\r\n         * @param {Number} rowIndex\r\n         */\r\n        maxRowCheck: function (rowIndex) {\r\n            var addRowBtn = $(this.options.addRowBtn),\r\n                maxRowMsg = $(this.options.maxRowsMsg);\r\n\r\n            //liIndex starts from 0\r\n            if (rowIndex >= this.options.maxRows) {\r\n                addRowBtn.hide();\r\n                maxRowMsg.show();\r\n            } else if (addRowBtn.is(':hidden')) {\r\n                addRowBtn.show();\r\n                maxRowMsg.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the value on given element\r\n         * @public\r\n         * @param {String} domId\r\n         * @param {String} value\r\n         */\r\n        setFieldById: function (domId, value) {\r\n            var x = $('#' + this._esc(domId));\r\n\r\n            if (x.length) {\r\n\r\n                if (x.is(':checkbox')) {\r\n                    x.attr('checked', true);\r\n                } else if (x.is('option')) {\r\n                    x.attr('selected', 'selected');\r\n                } else {\r\n                    x.val(value);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delegated handler for adding a row\r\n         * @public\r\n         * @return {Boolean}\r\n         */\r\n        handleAdd: function () {\r\n            this.addRow(++this.options.rowIndex);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Delegated handler for removing a selected row\r\n         * @public\r\n         * @param {Object} e - Native event object\r\n         * @return {Boolean}\r\n         */\r\n        handleRemove: function (e) {\r\n            this.removeRow($(e.currentTarget).closest('[id^=\"' + this.options.btnRemoveIdPrefix + '\"]')\r\n                .attr('id').replace(this.options.btnRemoveIdPrefix, ''));\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Utility function to add escape chars for jquery selector strings\r\n         * @private\r\n         * @param {String} str - String to be processed\r\n         * @return {String}\r\n         */\r\n        _esc: function (str) {\r\n            return str ? str.replace(/([ ;&,.+*~\\':\"!\\^$\\[\\]()=>|\\/@])/g, '\\\\$1') : str;\r\n        }\r\n    });\r\n\r\n    return $.mage.rowBuilder;\r\n});\r\n","Magento_Theme/js/truncate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * JQuery UI Widget declaration: 'mage.truncateOptions'\r\n *\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.truncateOptions', {\r\n        options: {\r\n            detailsLink: 'a.details',\r\n            mouseEvents: 'mouseover mouseout',\r\n            truncatedFullValue: 'div.truncated.full.value'\r\n        },\r\n\r\n        /**\r\n         * Establish the event handler for mouse events on the appropriate elements.\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on(this.options.mouseEvents, $.proxy(this._toggleShow, this))\r\n                .find(this.options.detailsLink).on(this.options.mouseEvents, $.proxy(this._toggleShow, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the \"show\" class on the associated element.\r\n         *\r\n         * @private\r\n         * @param {jQuery.Event} event - Mouse over/out event.\r\n         */\r\n        _toggleShow: function (event) {\r\n            $(event.currentTarget).find(this.options.truncatedFullValue).toggleClass('show');\r\n        }\r\n    });\r\n});\r\n","Magento_Theme/js/cookie-status.js":"define([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, modal) {\r\n    'use strict';\r\n\r\n    $.widget('mage.cookieStatus', {\r\n        options: {\r\n            type: 'popup',\r\n            responsive: true,\r\n            innerScroll: true,\r\n            autoOpen: true,\r\n            buttons: [{\r\n                text: $.mage.__('Close'),\r\n                class: 'cookie-status',\r\n\r\n                /**\r\n                 * Callback for click event\r\n                 */\r\n                click: function () {\r\n                    this.closeModal();\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Init object\r\n         * @private\r\n         */\r\n        _init: function () {\r\n\r\n            if (!navigator.cookieEnabled) {\r\n                modal(this.options, $('#cookie-status'));\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.cookieStatus;\r\n});\r\n","Magento_Theme/js/theme.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/smart-keyboard-handler',\r\n    'mage/mage',\r\n    'mage/ie-class-fixer',\r\n    'domReady!'\r\n], function ($, keyboardHandler) {\r\n    'use strict';\r\n\r\n    $('.cart-summary').mage('sticky', {\r\n        container: '#maincontent'\r\n    });\r\n\r\n    $('.panel.header > .header.links').clone().appendTo('#store\\\\.links');\r\n\r\n    keyboardHandler.apply();\r\n});\r\n","Magento_Theme/js/model/breadcrumb-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return [];\r\n});\r\n","Magento_Theme/js/view/add-home-breadcrumb.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* eslint-disable max-nested-callbacks, no-undef */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Theme/js/model/breadcrumb-list',\r\n    'mage/translate'\r\n], function ($, breadcrumbList) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @return {Object}\r\n     */\r\n    var homeCrumb = function () {\r\n        return {\r\n            name: 'home',\r\n            label: $.mage.__('Home'),\r\n            title: $.mage.__('Go to Home Page'),\r\n            link: BASE_URL || ''\r\n        };\r\n    };\r\n\r\n    return function (breadcrumb) {\r\n\r\n        breadcrumbList.unshift(homeCrumb());\r\n\r\n        return breadcrumb;\r\n    };\r\n});\r\n","Magento_Theme/js/view/breadcrumbs.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Theme/js/model/breadcrumb-list',\r\n    'text!Magento_Theme/templates/breadcrumbs.html',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate, breadcrumbList, tpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Breadcrumb Widget.\r\n     */\r\n    $.widget('mage.breadcrumbs', {\r\n\r\n        /** @inheritdoc */\r\n        _init: function () {\r\n            this._super();\r\n            this._render();\r\n        },\r\n\r\n        /**\r\n         * Render breadcrumb.\r\n         *\r\n         * @private\r\n         */\r\n        _render: function () {\r\n            var html,\r\n                crumbs = breadcrumbList,\r\n                template = mageTemplate(tpl);\r\n\r\n            this._decorate(crumbs);\r\n\r\n            html = template({\r\n                'breadcrumbs': crumbs\r\n            });\r\n\r\n            if (html.length) {\r\n                $(this.element).html(html);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Decorate list.\r\n         *\r\n         * @param {Array} list\r\n         * @private\r\n         */\r\n        _decorate: function (list) {\r\n\r\n            if (list.length) {\r\n                list[0].first = true;\r\n            }\r\n\r\n            if (list.length > 1) {\r\n                list[list.length - 1].last = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.breadcrumbs;\r\n});\r\n","Magento_Theme/js/view/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'underscore',\r\n    'escaper',\r\n    'jquery/jquery-storageapi'\r\n], function ($, Component, customerData, _, escaper) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            cookieMessages: [],\r\n            messages: [],\r\n            allowedTags: ['div', 'span', 'b', 'strong', 'i', 'em', 'u', 'a']\r\n        },\r\n\r\n        /**\r\n         * Extends Component object by storage observable messages.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.cookieMessages = _.unique($.cookieStorage.get('mage-messages'), 'text');\r\n            this.messages = customerData.get('messages').extend({\r\n                disposableCustomerData: 'messages'\r\n            });\r\n\r\n            // Force to clean obsolete messages\r\n            if (!_.isEmpty(this.messages().messages)) {\r\n                customerData.set('messages', {});\r\n            }\r\n\r\n            $.cookieStorage.set('mage-messages', '');\r\n        },\r\n\r\n        /**\r\n         * Prepare the given message to be rendered as HTML\r\n         *\r\n         * @param {String} message\r\n         * @return {String}\r\n         */\r\n        prepareMessageForHtml: function (message) {\r\n            return escaper.escapeHtml(message, this.allowedTags);\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/checkout-balance.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.checkoutBalance', {\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.eventData = {\r\n                price: this.options.balance,\r\n                totalPrice: 0\r\n            };\r\n            this.element.on('change', $.proxy(function (e) {\r\n                if ($(e.target).is(':checked')) {\r\n                    this.eventData.price = -1 * this.options.balance;\r\n                } else {\r\n                    if (this.options.amountSubstracted) { //eslint-disable-line no-lonely-if\r\n                        this.eventData.price = parseFloat(this.options.usedAmount);\r\n                        this.options.amountSubstracted = false;\r\n                    } else {\r\n                        this.eventData.price = parseFloat(this.options.balance);\r\n                    }\r\n                }\r\n                this.element.trigger('updateCheckoutPrice', this.eventData);\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.checkoutBalance;\r\n});\r\n","Magento_Customer/js/logout-redirect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data) {\r\n        $($.mage.redirect(data.url, 'assign', 5000));\r\n    };\r\n});\r\n","Magento_Customer/js/invalidation-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, Element, customerData) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        /**\r\n         * Initialize object\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.process(customerData);\r\n        },\r\n\r\n        /**\r\n         * Process all rules in loop, each rule can invalidate some sections in customer data\r\n         *\r\n         * @param {Object} customerDataObject\r\n         */\r\n        process: function (customerDataObject) {\r\n            _.each(this.invalidationRules, function (rule, ruleName) {\r\n                _.each(rule, function (ruleArgs, rulePath) {\r\n                    require([rulePath], function (Rule) {\r\n                        var currentRule = new Rule(ruleArgs);\r\n\r\n                        if (!_.isFunction(currentRule.process)) {\r\n                            throw new Error('Rule ' + ruleName + ' should implement invalidationProcessor interface');\r\n                        }\r\n                        currentRule.process(customerDataObject);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/validation.js":"define([\r\n    'jquery',\r\n    'moment',\r\n    'mageUtils',\r\n    'jquery/validate',\r\n    'validation',\r\n    'mage/translate'\r\n], function ($, moment, utils) {\r\n    'use strict';\r\n\r\n    $.validator.addMethod(\r\n        'validate-dob',\r\n        function (value, element, params) {\r\n            var dateFormat = utils.convertToMomentFormat(params.dateFormat);\r\n\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return moment(value, dateFormat).isBefore(moment());\r\n        },\r\n        $.mage.__('The Date of Birth should not be greater than today.')\r\n    );\r\n});\r\n","Magento_Customer/js/password-strength-indicator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/zxcvbn',\r\n    'mage/translate',\r\n    'mage/validation'\r\n], function ($, zxcvbn, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.passwordStrengthIndicator', {\r\n        options: {\r\n            cache: {},\r\n            passwordSelector: '[type=password]',\r\n            passwordStrengthMeterSelector: '[data-role=password-strength-meter]',\r\n            passwordStrengthMeterLabelSelector: '[data-role=password-strength-meter-label]',\r\n            formSelector: 'form',\r\n            emailSelector: 'input[type=\"email\"]'\r\n        },\r\n\r\n        /**\r\n         * Widget initialization\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.options.cache.input = $(this.options.passwordSelector, this.element);\r\n            this.options.cache.meter = $(this.options.passwordStrengthMeterSelector, this.element);\r\n            this.options.cache.label = $(this.options.passwordStrengthMeterLabelSelector, this.element);\r\n\r\n            // We need to look outside the module for backward compatibility, since someone can already use the module.\r\n            // @todo Narrow this selector in 2.3 so it doesn't accidentally finds the email field from the\r\n            // newsletter email field or any other \"email\" field.\r\n            this.options.cache.email = $(this.options.formSelector).find(this.options.emailSelector);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on(this.options.cache.input, {\r\n                'change': this._calculateStrength,\r\n                'keyup': this._calculateStrength,\r\n                'paste': this._calculateStrength\r\n            });\r\n\r\n            if (this.options.cache.email.length) {\r\n                this._on(this.options.cache.email, {\r\n                    'change': this._calculateStrength,\r\n                    'keyup': this._calculateStrength,\r\n                    'paste': this._calculateStrength\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Calculate password strength\r\n         * @private\r\n         */\r\n        _calculateStrength: function () {\r\n            var password = this._getPassword(),\r\n                isEmpty = password.length === 0,\r\n                zxcvbnScore,\r\n                displayScore,\r\n                isValid;\r\n\r\n            // Display score is based on combination of whether password is empty, valid, and zxcvbn strength\r\n            if (isEmpty) {\r\n                displayScore = 0;\r\n            } else {\r\n                this.options.cache.input.rules('add', {\r\n                    'password-not-equal-to-user-name': this.options.cache.email.val()\r\n                });\r\n\r\n                // We should only perform this check in case there is an email field on screen\r\n                if (this.options.cache.email.length &&\r\n                    password.toLowerCase() === this.options.cache.email.val().toLowerCase()) {\r\n                    displayScore = 1;\r\n                } else {\r\n                    isValid = $.validator.validateSingleElement(this.options.cache.input);\r\n                    zxcvbnScore = zxcvbn(password).score;\r\n                    displayScore = isValid && zxcvbnScore > 0 ? zxcvbnScore : 1;\r\n                }\r\n            }\r\n\r\n            // Update label\r\n            this._displayStrength(displayScore);\r\n        },\r\n\r\n        /**\r\n         * Display strength\r\n         * @param {Number} displayScore\r\n         * @private\r\n         */\r\n        _displayStrength: function (displayScore) {\r\n            var strengthLabel = '',\r\n                className;\r\n\r\n            switch (displayScore) {\r\n                case 0:\r\n                    strengthLabel = $t('No Password');\r\n                    className = 'password-none';\r\n                    break;\r\n\r\n                case 1:\r\n                    strengthLabel = $t('Weak');\r\n                    className = 'password-weak';\r\n                    break;\r\n\r\n                case 2:\r\n                    strengthLabel = $t('Medium');\r\n                    className = 'password-medium';\r\n                    break;\r\n\r\n                case 3:\r\n                    strengthLabel = $t('Strong');\r\n                    className = 'password-strong';\r\n                    break;\r\n\r\n                case 4:\r\n                    strengthLabel = $t('Very Strong');\r\n                    className = 'password-very-strong';\r\n                    break;\r\n            }\r\n\r\n            this.options.cache.meter\r\n                .removeClass()\r\n                .addClass(className);\r\n            this.options.cache.label.text(strengthLabel);\r\n        },\r\n\r\n        /**\r\n         * Get password value\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getPassword: function () {\r\n            return this.options.cache.input.val();\r\n        }\r\n    });\r\n\r\n    return $.mage.passwordStrengthIndicator;\r\n});\r\n","Magento_Customer/js/section-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    var baseUrls = [],\r\n        sections = [],\r\n        clientSideSections = [],\r\n        sectionNames = [],\r\n        canonize;\r\n\r\n    /**\r\n     * @param {String} url\r\n     * @return {String}\r\n     */\r\n    canonize = function (url) {\r\n        var route = url;\r\n\r\n        _.some(baseUrls, function (baseUrl) {\r\n            route = url.replace(baseUrl, '');\r\n\r\n            return route !== url;\r\n        });\r\n\r\n        return route.replace(/^\\/?index.php\\/?/, '').toLowerCase();\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Returns a list of sections which should be invalidated for given URL.\r\n         * @param {String} url - URL which was requested.\r\n         * @return {Array} - List of sections to invalidate.\r\n         */\r\n        getAffectedSections: function (url) {\r\n            var route = canonize(url),\r\n                actions = _.find(sections, function (val, section) {\r\n                    var matched;\r\n\r\n                    // Covers the case where \"*\" works as a glob pattern.\r\n                    if (section.indexOf('*') >= 0) {\r\n                        section = section.replace(/\\*/g, '[^/]+') + '$';\r\n                        matched = route.match(section);\r\n\r\n                        return matched && matched[0] === route;\r\n                    }\r\n\r\n                    return route.indexOf(section) === 0;\r\n                });\r\n\r\n            return _.union(_.toArray(actions), sections['*']);\r\n        },\r\n\r\n        /**\r\n         * Filters the list of given sections to the ones defined as client side.\r\n         * @param {Array} allSections - List of sections to check.\r\n         * @return {Array} - List of filtered sections.\r\n         */\r\n        filterClientSideSections: function (allSections) {\r\n            return _.difference(allSections, clientSideSections);\r\n        },\r\n\r\n        /**\r\n         * Tells if section is defined as client side.\r\n         * @param {String} sectionName - Name of the section to check.\r\n         * @return {Boolean}\r\n         */\r\n        isClientSideSection: function (sectionName) {\r\n            return _.contains(clientSideSections, sectionName);\r\n        },\r\n\r\n        /**\r\n         * Returns array of section names.\r\n         * @returns {Array}\r\n         */\r\n        getSectionNames: function () {\r\n            return sectionNames;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} options\r\n         * @constructor\r\n         */\r\n        'Magento_Customer/js/section-config': function (options) {\r\n            baseUrls = options.baseUrls;\r\n            sections = options.sections;\r\n            clientSideSections = options.clientSideSections;\r\n            sectionNames = options.sectionNames;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/addressValidation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/postcode-validator',\r\n    'jquery-ui-modules/widget',\r\n    'validation'\r\n], function ($, __, utils, $t, postCodeValidator) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addressValidation', {\r\n        options: {\r\n            selectors: {\r\n                button: '[data-action=save-address]',\r\n                zip: '#zip',\r\n                country: 'select[name=\"country_id\"]:visible'\r\n            }\r\n        },\r\n\r\n        zipInput: null,\r\n        countrySelect: null,\r\n\r\n        /**\r\n         * Validation creation\r\n         *\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            var button = $(this.options.selectors.button, this.element);\r\n\r\n            this.zipInput = $(this.options.selectors.zip, this.element);\r\n            this.countrySelect = $(this.options.selectors.country, this.element);\r\n\r\n            this.element.validation({\r\n\r\n                /**\r\n                 * Submit Handler\r\n                 * @param {Element} form - address form\r\n                 */\r\n                submitHandler: function (form) {\r\n\r\n                    button.attr('disabled', true);\r\n                    form.submit();\r\n                }\r\n            });\r\n\r\n            this._addPostCodeValidation();\r\n        },\r\n\r\n        /**\r\n         * Add postcode validation\r\n         *\r\n         * @protected\r\n         */\r\n        _addPostCodeValidation: function () {\r\n            var self = this;\r\n\r\n            this.zipInput.on('keyup', __.debounce(function (event) {\r\n                    var valid = self._validatePostCode(event.target.value);\r\n\r\n                    self._renderValidationResult(valid);\r\n                }, 500)\r\n            );\r\n\r\n            this.countrySelect.on('change', function () {\r\n                var valid = self._validatePostCode(self.zipInput.val());\r\n\r\n                self._renderValidationResult(valid);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate post code value.\r\n         *\r\n         * @protected\r\n         * @param {String} postCode - post code\r\n         * @return {Boolean} Whether is post code valid\r\n         */\r\n        _validatePostCode: function (postCode) {\r\n            var countryId = this.countrySelect.val();\r\n\r\n            if (postCode === null) {\r\n                return true;\r\n            }\r\n\r\n            return postCodeValidator.validate(postCode, countryId, this.options.postCodes);\r\n        },\r\n\r\n        /**\r\n         * Renders warning messages for invalid post code.\r\n         *\r\n         * @protected\r\n         * @param {Boolean} valid\r\n         */\r\n        _renderValidationResult: function (valid) {\r\n            var warnMessage,\r\n                alertDiv = this.zipInput.next();\r\n\r\n            if (!valid) {\r\n                warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\r\n\r\n                if (postCodeValidator.validatedPostCodeExample.length) {\r\n                    warnMessage += $t(' Example: ') + postCodeValidator.validatedPostCodeExample.join('; ') + '. ';\r\n                }\r\n                warnMessage += $t('If you believe it is the right one you can ignore this notice.');\r\n            }\r\n\r\n            alertDiv.children(':first').text(warnMessage);\r\n\r\n            if (valid) {\r\n                alertDiv.hide();\r\n            } else {\r\n                alertDiv.show();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.addressValidation;\r\n});\r\n","Magento_Customer/js/address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, confirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.address', {\r\n        /**\r\n         * Options common to all instances of this widget.\r\n         * @type {Object}\r\n         */\r\n        options: {\r\n            deleteConfirmMessage: $.mage.__('Are you sure you want to delete this address?')\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers for adding and deleting addresses.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var options         = this.options,\r\n                addAddress      = options.addAddress,\r\n                deleteAddress   = options.deleteAddress;\r\n\r\n            if (addAddress) {\r\n                $(document).on('click', addAddress, this._addAddress.bind(this));\r\n            }\r\n\r\n            if (deleteAddress) {\r\n                $(document).on('click', deleteAddress, this._deleteAddress.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new address.\r\n         * @private\r\n         */\r\n        _addAddress: function () {\r\n            window.location = this.options.addAddressLocation;\r\n        },\r\n\r\n        /**\r\n         * Delete the address whose id is specified in a data attribute after confirmation from the user.\r\n         * @private\r\n         * @param {jQuery.Event} e\r\n         * @return {Boolean}\r\n         */\r\n        _deleteAddress: function (e) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.options.deleteConfirmMessage,\r\n                actions: {\r\n\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        if (typeof $(e.target).parent().data('address') !== 'undefined') {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).parent().data('address') +\r\n                                '/form_key/' + $.mage.cookies.get('form_key');\r\n                        } else {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).data('address') +\r\n                                '/form_key/' + $.mage.cookies.get('form_key');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return $.mage.address;\r\n});\r\n","Magento_Customer/js/customer-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'Magento_Customer/js/section-config',\r\n    'mage/url',\r\n    'mage/storage',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, sectionConfig, url) {\r\n    'use strict';\r\n\r\n    var options = {},\r\n        storage,\r\n        storageInvalidation,\r\n        invalidateCacheBySessionTimeOut,\r\n        invalidateCacheByCloseCookieSession,\r\n        dataProvider,\r\n        buffer,\r\n        customerData,\r\n        deferred = $.Deferred();\r\n\r\n    url.setBaseUrl(window.BASE_URL);\r\n    options.sectionLoadUrl = url.build('customer/section/load');\r\n\r\n    /**\r\n     * @param {Object} invalidateOptions\r\n     */\r\n    invalidateCacheBySessionTimeOut = function (invalidateOptions) {\r\n        var date;\r\n\r\n        if (new Date($.localStorage.get('mage-cache-timeout')) < new Date()) {\r\n            storage.removeAll();\r\n        }\r\n        date = new Date(Date.now() + parseInt(invalidateOptions.cookieLifeTime, 10) * 1000);\r\n        $.localStorage.set('mage-cache-timeout', date);\r\n    };\r\n\r\n    /**\r\n     * Invalidate Cache By Close Cookie Session\r\n     */\r\n    invalidateCacheByCloseCookieSession = function () {\r\n        if (!$.cookieStorage.isSet('mage-cache-sessid')) {\r\n            $.cookieStorage.set('mage-cache-sessid', true);\r\n            storage.removeAll();\r\n        }\r\n    };\r\n\r\n    dataProvider = {\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @return {Object}\r\n         */\r\n        getFromStorage: function (sectionNames) {\r\n            var result = {};\r\n\r\n            _.each(sectionNames, function (sectionName) {\r\n                result[sectionName] = storage.get(sectionName);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @param {Boolean} forceNewSectionTimestamp\r\n         * @return {*}\r\n         */\r\n        getFromServer: function (sectionNames, forceNewSectionTimestamp) {\r\n            var parameters;\r\n\r\n            sectionNames = sectionConfig.filterClientSideSections(sectionNames);\r\n            parameters = _.isArray(sectionNames) ? {\r\n                sections: sectionNames.join(',')\r\n            } : [];\r\n            parameters['force_new_section_timestamp'] = forceNewSectionTimestamp;\r\n\r\n            return $.getJSON(options.sectionLoadUrl, parameters).fail(function (jqXHR) {\r\n                throw new Error(jqXHR);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Function} target\r\n     * @param {String} sectionName\r\n     * @return {*}\r\n     */\r\n    ko.extenders.disposableCustomerData = function (target, sectionName) {\r\n        var sectionDataIds, newSectionDataIds = {};\r\n\r\n        target.subscribe(function () {\r\n            setTimeout(function () {\r\n                storage.remove(sectionName);\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n                _.each(sectionDataIds, function (data, name) {\r\n                    if (name != sectionName) { //eslint-disable-line eqeqeq\r\n                        newSectionDataIds[name] = data;\r\n                    }\r\n                });\r\n                $.cookieStorage.set('section_data_ids', newSectionDataIds);\r\n            }, 3000);\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    buffer = {\r\n        data: {},\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         */\r\n        bind: function (sectionName) {\r\n            this.data[sectionName] = ko.observable({});\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {Object}\r\n         */\r\n        get: function (sectionName) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n\r\n            return this.data[sectionName];\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        keys: function () {\r\n            return _.keys(this.data);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        notify: function (sectionName, sectionData) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n            this.data[sectionName](sectionData);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        update: function (sections) {\r\n            var sectionId = 0,\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            _.each(sections, function (sectionData, sectionName) {\r\n                sectionId = sectionData['data_id'];\r\n                sectionDataIds[sectionName] = sectionId;\r\n                storage.set(sectionName, sectionData);\r\n                storageInvalidation.remove(sectionName);\r\n                buffer.notify(sectionName, sectionData);\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        remove: function (sections) {\r\n            _.each(sections, function (sectionName) {\r\n                storage.remove(sectionName);\r\n\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    storageInvalidation.set(sectionName, true);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    customerData = {\r\n\r\n        /**\r\n         * Customer data initialization\r\n         */\r\n        init: function () {\r\n            var expiredSectionNames = this.getExpiredSectionNames();\r\n\r\n            if (expiredSectionNames.length > 0) {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n                this.reload(expiredSectionNames, false);\r\n            } else {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n\r\n                if (!_.isEmpty(storageInvalidation.keys())) {\r\n                    this.reload(storageInvalidation.keys(), false);\r\n                }\r\n            }\r\n\r\n            if (!_.isEmpty($.cookieStorage.get('section_data_clean'))) {\r\n                this.reload(sectionConfig.getSectionNames(), true);\r\n                $.cookieStorage.set('section_data_clean', '');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Storage init\r\n         */\r\n        initStorage: function () {\r\n            $.cookieStorage.setConf({\r\n                path: '/',\r\n                expires: new Date(Date.now() + parseInt(options.cookieLifeTime, 10) * 1000)\r\n            });\r\n            storage = $.initNamespaceStorage('mage-cache-storage').localStorage;\r\n            storageInvalidation = $.initNamespaceStorage('mage-cache-storage-section-invalidation').localStorage;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the list of sections that has expired since last page reload.\r\n         *\r\n         * Sections can expire due to lifetime constraints or due to inconsistent storage information\r\n         * (validated by cookie data).\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getExpiredSectionNames: function () {\r\n            var expiredSectionNames = [],\r\n                cookieSectionTimestamps = $.cookieStorage.get('section_data_ids') || {},\r\n                sectionLifetime = options.expirableSectionLifetime * 60,\r\n                currentTimestamp = Math.floor(Date.now() / 1000),\r\n                sectionData;\r\n\r\n            // process sections that can expire due to lifetime constraints\r\n            _.each(options.expirableSectionNames, function (sectionName) {\r\n                sectionData = storage.get(sectionName);\r\n\r\n                if (typeof sectionData === 'object' && sectionData['data_id'] + sectionLifetime <= currentTimestamp) {\r\n                    expiredSectionNames.push(sectionName);\r\n                }\r\n            });\r\n\r\n            // process sections that can expire due to storage information inconsistency\r\n            _.each(cookieSectionTimestamps, function (cookieSectionTimestamp, sectionName) {\r\n                sectionData = storage.get(sectionName);\r\n\r\n                if (typeof sectionData === 'undefined' ||\r\n                    typeof sectionData === 'object' &&\r\n                    cookieSectionTimestamp != sectionData['data_id'] //eslint-disable-line\r\n                ) {\r\n                    expiredSectionNames.push(sectionName);\r\n                }\r\n            });\r\n\r\n            return _.uniq(expiredSectionNames);\r\n        },\r\n\r\n        /**\r\n         * Check if some sections have to be reloaded.\r\n         *\r\n         * @deprecated Use getExpiredSectionNames instead.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        needReload: function () {\r\n            var expiredSectionNames = this.getExpiredSectionNames();\r\n\r\n            return expiredSectionNames.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the list of expired keys.\r\n         *\r\n         * @deprecated Use getExpiredSectionNames instead.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getExpiredKeys: function () {\r\n            return this.getExpiredSectionNames();\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {*}\r\n         */\r\n        get: function (sectionName) {\r\n            return buffer.get(sectionName);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        set: function (sectionName, sectionData) {\r\n            var data = {};\r\n\r\n            data[sectionName] = sectionData;\r\n            buffer.update(data);\r\n        },\r\n\r\n        /**\r\n         * Avoid using this function directly 'cause of possible performance drawbacks.\r\n         * Each customer section reload brings new non-cached ajax request.\r\n         *\r\n         * @param {Array} sectionNames\r\n         * @param {Boolean} forceNewSectionTimestamp\r\n         * @return {*}\r\n         */\r\n        reload: function (sectionNames, forceNewSectionTimestamp) {\r\n            return dataProvider.getFromServer(sectionNames, forceNewSectionTimestamp).done(function (sections) {\r\n                $(document).trigger('customer-data-reload', [sectionNames]);\r\n                buffer.update(sections);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Array} sectionNames\r\n         */\r\n        invalidate: function (sectionNames) {\r\n            var sectionDataIds,\r\n                sectionsNamesForInvalidation;\r\n\r\n            sectionsNamesForInvalidation = _.contains(sectionNames, '*') ? sectionConfig.getSectionNames() :\r\n                sectionNames;\r\n\r\n            $(document).trigger('customer-data-invalidate', [sectionsNamesForInvalidation]);\r\n            buffer.remove(sectionsNamesForInvalidation);\r\n            sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            // Invalidate section in cookie (increase version of section with 1000)\r\n            _.each(sectionsNamesForInvalidation, function (sectionName) {\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    sectionDataIds[sectionName] += 1000;\r\n                }\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * Checks if customer data is initialized.\r\n         *\r\n         * @returns {jQuery.Deferred}\r\n         */\r\n        getInitCustomerData: function () {\r\n            return deferred.promise();\r\n        },\r\n\r\n        /**\r\n         * @param {Object} settings\r\n         * @constructor\r\n         */\r\n        'Magento_Customer/js/customer-data': function (settings) {\r\n            options = settings;\r\n            customerData.initStorage();\r\n            invalidateCacheBySessionTimeOut(settings);\r\n            invalidateCacheByCloseCookieSession();\r\n            customerData.init();\r\n            deferred.resolve();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('ajaxComplete', function (event, xhr, settings) {\r\n        var sections,\r\n            redirects;\r\n\r\n        if (settings.type.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(settings.url);\r\n\r\n            if (sections) {\r\n                customerData.invalidate(sections);\r\n                redirects = ['redirect', 'backUrl'];\r\n\r\n                if (_.isObject(xhr.responseJSON) && !_.isEmpty(_.pick(xhr.responseJSON, redirects))) { //eslint-disable-line\r\n                    return;\r\n                }\r\n                customerData.reload(sections, true);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('submit', function (event) {\r\n        var sections;\r\n\r\n        if (event.target.method.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(event.target.action);\r\n\r\n            if (sections) {\r\n                customerData.invalidate(sections);\r\n            }\r\n        }\r\n    });\r\n\r\n    return customerData;\r\n});\r\n","Magento_Customer/js/change-email-password.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.changeEmailPassword', {\r\n        options: {\r\n            changeEmailSelector: '[data-role=change-email]',\r\n            changePasswordSelector: '[data-role=change-password]',\r\n            mainContainerSelector: '[data-container=change-email-password]',\r\n            titleSelector: '[data-title=change-email-password]',\r\n            emailContainerSelector: '[data-container=change-email]',\r\n            newPasswordContainerSelector: '[data-container=new-password]',\r\n            confirmPasswordContainerSelector: '[data-container=confirm-password]',\r\n            currentPasswordSelector: '[data-input=current-password]',\r\n            emailSelector: '[data-input=change-email]',\r\n            newPasswordSelector: '[data-input=new-password]',\r\n            confirmPasswordSelector: '[data-input=confirm-password]'\r\n        },\r\n\r\n        /**\r\n         * Create widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(function () {\r\n                this._checkChoice();\r\n            }, this));\r\n\r\n            this._checkChoice();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on($(this.options.emailSelector), {\r\n                'change': this._updatePasswordFieldWithEmailValue,\r\n                'keyup': this._updatePasswordFieldWithEmailValue,\r\n                'paste': this._updatePasswordFieldWithEmailValue\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check choice\r\n         * @private\r\n         */\r\n        _checkChoice: function () {\r\n            if ($(this.options.changeEmailSelector).is(':checked') &&\r\n                $(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showAll();\r\n            } else if ($(this.options.changeEmailSelector).is(':checked')) {\r\n                this._showEmail();\r\n            } else if ($(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showPassword();\r\n            } else {\r\n                this._hideAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show email and password input fields\r\n         * @private\r\n         */\r\n        _showAll: function () {\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmailAndPassword);\r\n\r\n            $(this.options.mainContainerSelector).show();\r\n            $(this.options.emailContainerSelector).show();\r\n            $(this.options.newPasswordContainerSelector).show();\r\n            $(this.options.confirmPasswordContainerSelector).show();\r\n\r\n            $(this.options.currentPasswordSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            $(this.options.emailSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            this._updatePasswordFieldWithEmailValue();\r\n            $(this.options.confirmPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, equalTo:\"' + this.options.newPasswordSelector + '\"}'\r\n            ).prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * Hide email and password input fields\r\n         * @private\r\n         */\r\n        _hideAll: function () {\r\n            $(this.options.mainContainerSelector).hide();\r\n            $(this.options.emailContainerSelector).hide();\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.currentPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show email input fields\r\n         * @private\r\n         */\r\n        _showEmail: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmail);\r\n\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show password input fields\r\n         * @private\r\n         */\r\n        _showPassword: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangePassword);\r\n\r\n            $(this.options.emailContainerSelector).hide();\r\n\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Update password validation rules with email input field value\r\n         * @private\r\n         */\r\n        _updatePasswordFieldWithEmailValue: function () {\r\n            $(this.options.newPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, ' +\r\n                '\\'validate-customer-password\\':true, ' +\r\n                '\\'password-not-equal-to-user-name\\':\\'' + $(this.options.emailSelector).val() + '\\'}'\r\n            ).prop('disabled', false);\r\n        }\r\n    });\r\n\r\n    return $.mage.changeEmailPassword;\r\n});\r\n","Magento_Customer/js/block-submit-on-send.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var dataForm = $('#' + config.formId);\r\n\r\n        dataForm.submit(function () {\r\n            $(this).find(':submit').attr('disabled', 'disabled');\r\n        });\r\n        dataForm.bind('invalid-form.validate', function () {\r\n            $(this).find(':submit').prop('disabled', false);\r\n        });\r\n    };\r\n});\r\n","Magento_Customer/js/invalidation-rules/website-rule.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiClass'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n\r\n        defaults: {\r\n            scopeConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Takes website id from current customer data and compare it with current website id\r\n         * If customer belongs to another scope, we need to invalidate current section\r\n         *\r\n         * @param {Object} customerData\r\n         */\r\n        process: function (customerData) {\r\n            var customer = customerData.get('customer');\r\n\r\n            if (this.scopeConfig && customer() &&\r\n                ~~customer().websiteId !== ~~this.scopeConfig.websiteId && ~~customer().websiteId !== 0) {\r\n                customerData.reload(['customer']);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/model/customer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    './address-list'\r\n], function ($, ko, _, addressList) {\r\n    'use strict';\r\n\r\n    var isLoggedIn = ko.observable(window.isCustomerLoggedIn),\r\n        customerData = {};\r\n\r\n    if (isLoggedIn()) {\r\n        customerData = window.customerData;\r\n    } else {\r\n        customerData = {};\r\n    }\r\n\r\n    return {\r\n        customerData: customerData,\r\n        customerDetails: {},\r\n        isLoggedIn: isLoggedIn,\r\n\r\n        /**\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsLoggedIn: function (flag) {\r\n            isLoggedIn(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getBillingAddressList: function () {\r\n            return addressList();\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getShippingAddressList: function () {\r\n            return addressList();\r\n        },\r\n\r\n        /**\r\n         * @param {String} fieldName\r\n         * @param {*} value\r\n         */\r\n        setDetails: function (fieldName, value) {\r\n            if (fieldName) {\r\n                this.customerDetails[fieldName] = value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} fieldName\r\n         * @return {*}\r\n         */\r\n        getDetails: function (fieldName) {\r\n            if (fieldName) {\r\n                if (this.customerDetails.hasOwnProperty(fieldName)) {\r\n                    return this.customerDetails[fieldName];\r\n                }\r\n\r\n                return undefined;\r\n            }\r\n\r\n            return this.customerDetails;\r\n        },\r\n\r\n        /**\r\n         * @param {Array} address\r\n         * @return {Number}\r\n         */\r\n        addCustomerAddress: function (address) {\r\n            var fields = [\r\n                    'customer_id', 'country_id', 'street', 'company', 'telephone', 'fax', 'postcode', 'city',\r\n                    'firstname', 'lastname', 'middlename', 'prefix', 'suffix', 'vat_id', 'default_billing',\r\n                    'default_shipping'\r\n                ],\r\n                customerAddress = {},\r\n                hasAddress = 0,\r\n                existingAddress;\r\n\r\n            if (!this.customerData.addresses) {\r\n                this.customerData.addresses = [];\r\n            }\r\n\r\n            customerAddress = _.pick(address, fields);\r\n\r\n            if (address.hasOwnProperty('region_id')) {\r\n                customerAddress.region = {\r\n                    'region_id': address['region_id'],\r\n                    region: address.region\r\n                };\r\n            }\r\n\r\n            for (existingAddress in this.customerData.addresses) {\r\n                if (this.customerData.addresses.hasOwnProperty(existingAddress)) {\r\n                    if (_.isEqual(this.customerData.addresses[existingAddress], customerAddress)) { //eslint-disable-line\r\n                        hasAddress = existingAddress;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (hasAddress === 0) {\r\n                return this.customerData.addresses.push(customerAddress) - 1;\r\n            }\r\n\r\n            return hasAddress;\r\n        },\r\n\r\n        /**\r\n         * @param {*} addressId\r\n         * @return {Boolean}\r\n         */\r\n        setAddressAsDefaultBilling: function (addressId) {\r\n            if (this.customerData.addresses[addressId]) {\r\n                this.customerData.addresses[addressId]['default_billing'] = 1;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param {*} addressId\r\n         * @return {Boolean}\r\n         */\r\n        setAddressAsDefaultShipping: function (addressId) {\r\n            if (this.customerData.addresses[addressId]) {\r\n                this.customerData.addresses[addressId]['default_shipping'] = 1;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/customer-addresses.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    './customer/address'\r\n], function ($, ko, Address) {\r\n    'use strict';\r\n\r\n    var isLoggedIn = ko.observable(window.isCustomerLoggedIn);\r\n\r\n    return {\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getAddressItems: function () {\r\n            var items = [],\r\n                customerData = window.customerData;\r\n\r\n            if (isLoggedIn()) {\r\n                if (Object.keys(customerData).length) {\r\n                    $.each(customerData.addresses, function (key, item) {\r\n                        items.push(new Address(item));\r\n                    });\r\n                }\r\n            }\r\n\r\n            return items;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/address-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    './customer-addresses'\r\n], function (ko, defaultProvider) {\r\n    'use strict';\r\n\r\n    return ko.observableArray(defaultProvider.getAddressItems());\r\n});\r\n","Magento_Customer/js/model/authentication-popup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, modal) {\r\n    'use strict';\r\n\r\n    return {\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Create popUp window for provided element\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\r\n        createPopUp: function (element) {\r\n            var options = {\r\n                'type': 'popup',\r\n                'modalClass': 'popup-authentication',\r\n                'focus': '[name=username]',\r\n                'responsive': true,\r\n                'innerScroll': true,\r\n                'trigger': '.proceed-to-checkout',\r\n                'buttons': []\r\n            };\r\n\r\n            this.modalWindow = element;\r\n            modal(options, $(this.modalWindow));\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            $(this.modalWindow).modal('openModal').trigger('contentUpdated');\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/customer/address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns new address object.\r\n     *\r\n     * @param {Object} addressData\r\n     * @return {Object}\r\n     */\r\n    return function (addressData) {\r\n        var regionId;\r\n\r\n        if (addressData.region['region_id'] && addressData.region['region_id'] !== '0') {\r\n            regionId = addressData.region['region_id'] + '';\r\n        }\r\n\r\n        return {\r\n            customerAddressId: addressData.id,\r\n            email: addressData.email,\r\n            countryId: addressData['country_id'],\r\n            regionId: regionId,\r\n            regionCode: addressData.region['region_code'],\r\n            region: addressData.region.region,\r\n            customerId: addressData['customer_id'],\r\n            street: addressData.street,\r\n            company: addressData.company,\r\n            telephone: addressData.telephone,\r\n            fax: addressData.fax,\r\n            postcode: addressData.postcode,\r\n            city: addressData.city,\r\n            firstname: addressData.firstname,\r\n            lastname: addressData.lastname,\r\n            middlename: addressData.middlename,\r\n            prefix: addressData.prefix,\r\n            suffix: addressData.suffix,\r\n            vatId: addressData['vat_id'],\r\n            sameAsBilling: addressData['same_as_billing'],\r\n            saveInAddressBook: addressData['save_in_address_book'],\r\n            customAttributes: _.toArray(addressData['custom_attributes']).reverse(),\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultShipping: function () {\r\n                return addressData['default_shipping'];\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultBilling: function () {\r\n                return addressData['default_billing'];\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getAddressInline: function () {\r\n                return addressData.inline;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getType: function () {\r\n                return 'customer-address';\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getKey: function () {\r\n                return this.getType() + this.customerAddressId;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getCacheKey: function () {\r\n                return this.getKey();\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            isEditable: function () {\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            canUseForBilling: function () {\r\n                return true;\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Customer/js/view/customer.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.customer = customerData.get('customer');\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/view/authentication-popup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'Magento_Ui/js/form/form',\r\n    'Magento_Customer/js/action/login',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'mage/translate',\r\n    'mage/url',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/validation'\r\n], function ($, ko, Component, loginAction, customerData, authenticationPopup, $t, url, alert) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        registerUrl: window.authenticationPopup.customerRegisterUrl,\r\n        forgotPasswordUrl: window.authenticationPopup.customerForgotPasswordUrl,\r\n        autocomplete: window.authenticationPopup.autocomplete,\r\n        modalWindow: null,\r\n        isLoading: ko.observable(false),\r\n\r\n        defaults: {\r\n            template: 'Magento_Customer/authentication-popup'\r\n        },\r\n\r\n        /**\r\n         * Init\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n            url.setBaseUrl(window.authenticationPopup.baseUrl);\r\n            loginAction.registerLoginCallback(function () {\r\n                self.isLoading(false);\r\n            });\r\n        },\r\n\r\n        /** Init popup login window */\r\n        setModalElement: function (element) {\r\n            if (authenticationPopup.modalWindow == null) {\r\n                authenticationPopup.createPopUp(element);\r\n            }\r\n        },\r\n\r\n        /** Is login form enabled for current customer */\r\n        isActive: function () {\r\n            var customer = customerData.get('customer');\r\n\r\n            return customer() == false; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            if (this.modalWindow) {\r\n                $(this.modalWindow).modal('openModal');\r\n            } else {\r\n                alert({\r\n                    content: $t('Guest checkout is disabled.')\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Provide login action\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        login: function (formUiElement, event) {\r\n            var loginData = {},\r\n                formElement = $(event.currentTarget),\r\n                formDataArray = formElement.serializeArray();\r\n\r\n            event.stopPropagation();\r\n            formDataArray.forEach(function (entry) {\r\n                loginData[entry.name] = entry.value;\r\n            });\r\n\r\n            if (formElement.validation() &&\r\n                formElement.validation('isValid')\r\n            ) {\r\n                this.isLoading(true);\r\n                loginAction(loginData);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/action/check-email-availability.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/url-builder'\r\n], function (storage, urlBuilder) {\r\n    'use strict';\r\n\r\n    return function (deferred, email) {\r\n        return storage.post(\r\n            urlBuilder.createUrl('/customers/isEmailAvailable', {}),\r\n            JSON.stringify({\r\n                customerEmail: email\r\n            }),\r\n            false\r\n        ).done(function (isEmailAvailable) {\r\n            if (isEmailAvailable) {\r\n                deferred.resolve();\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n        }).fail(function () {\r\n            deferred.reject();\r\n        });\r\n    };\r\n});\r\n","Magento_Customer/js/action/login.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/storage',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/translate'\r\n], function ($, storage, globalMessageList, customerData, $t) {\r\n    'use strict';\r\n\r\n    var callbacks = [],\r\n\r\n        /**\r\n         * @param {Object} loginData\r\n         * @param {String} redirectUrl\r\n         * @param {*} isGlobal\r\n         * @param {Object} messageContainer\r\n         */\r\n        action = function (loginData, redirectUrl, isGlobal, messageContainer) {\r\n            messageContainer = messageContainer || globalMessageList;\r\n\r\n            return storage.post(\r\n                'customer/ajax/login',\r\n                JSON.stringify(loginData),\r\n                isGlobal\r\n            ).done(function (response) {\r\n                if (response.errors) {\r\n                    messageContainer.addErrorMessage(response);\r\n                    callbacks.forEach(function (callback) {\r\n                        callback(loginData);\r\n                    });\r\n                } else {\r\n                    callbacks.forEach(function (callback) {\r\n                        callback(loginData);\r\n                    });\r\n                    customerData.invalidate(['customer']);\r\n\r\n                    if (response.redirectUrl) {\r\n                        window.location.href = response.redirectUrl;\r\n                    } else if (redirectUrl) {\r\n                        window.location.href = redirectUrl;\r\n                    } else {\r\n                        location.reload();\r\n                    }\r\n                }\r\n            }).fail(function () {\r\n                messageContainer.addErrorMessage({\r\n                    'message': $t('Could not authenticate. Please try again later')\r\n                });\r\n                callbacks.forEach(function (callback) {\r\n                    callback(loginData);\r\n                });\r\n            });\r\n        };\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     */\r\n    action.registerLoginCallback = function (callback) {\r\n        callbacks.push(callback);\r\n    };\r\n\r\n    return action;\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/model/resource-url-manager.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery', 'Magento_Checkout/js/model/resource-url-manager'], function (\r\n    $,\r\n    resourceUrlManager\r\n) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Returns URL for REST API to fetch nearby pickup locations defined for given sales channel.\r\n         *\r\n         * @param {String} salesChannelCode - Code of the sales channel.\r\n         * @param {Object} searchCriteria\r\n         */\r\n        getUrlForNearbyPickupLocations: function (\r\n            salesChannelCode,\r\n            searchCriteria\r\n        ) {\r\n            var urls = {\r\n                    default: '/inventory/in-store-pickup/pickup-locations/'\r\n                },\r\n                criteria = {\r\n                    searchRequest: {\r\n                        scopeCode: salesChannelCode\r\n                    }\r\n                };\r\n\r\n            searchCriteria = {\r\n                searchRequest: searchCriteria\r\n            };\r\n\r\n            return (\r\n                resourceUrlManager.getUrl(urls, {}) +\r\n                '?' +\r\n                $.param($.extend(true, criteria, searchCriteria))\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Returns URL for REST API to fetch all pickup locations defined for given sales channel.\r\n         *\r\n         * @param {String} salesChannelType - Type of the sales channel, e.g. website.\r\n         * @param {String} salesChannelCode - Code of the sales channel.\r\n         */\r\n        getUrlForPickupLocationsAssignedToSalesChannel: function (\r\n            salesChannelType,\r\n            salesChannelCode\r\n        ) {\r\n            var params = {\r\n                    salesChannelType: salesChannelType,\r\n                    salesChannelCode: salesChannelCode\r\n                },\r\n                urls = {\r\n                    default: '/inventory/in-store-pickup/pickup-locations-assigned-to-sales-channel/' +\r\n                        ':salesChannelType/:salesChannelCode'\r\n                };\r\n\r\n            return resourceUrlManager.getUrl(urls, params);\r\n        },\r\n\r\n        /**\r\n         * Returns URL for REST API to fetch pickup location with given code defined for given sales channel.\r\n         *\r\n         * @param {String} salesChannelCode - Code of the sales channel.\r\n         * @param {String} pickupLocationCode - Code of the pickup location.\r\n         */\r\n        getUrlForPickupLocation: function (\r\n            salesChannelCode,\r\n            pickupLocationCode\r\n        ) {\r\n            var urls = {\r\n                    default: '/inventory/in-store-pickup/pickup-locations/'\r\n                },\r\n                searchRequest = {\r\n                    searchRequest: {\r\n                        filterSet: {\r\n                            pickupLocationCodeFilter: {\r\n                                value: pickupLocationCode\r\n                            }\r\n                        },\r\n                        scopeCode: salesChannelCode\r\n                    }\r\n                };\r\n\r\n            return resourceUrlManager.getUrl(urls, {}) +\r\n                '?' +\r\n                $.param(searchRequest);\r\n        }\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/model/pickup-address-converter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Format address to use in store pickup\r\n         *\r\n         * @param {Object} address\r\n         * @return {*}\r\n         */\r\n        formatAddressToPickupAddress: function (address) {\r\n            var sourceCode = _.findWhere(address.customAttributes, {\r\n                'attribute_code': 'sourceCode'\r\n            });\r\n\r\n            if (sourceCode && address.getType() !== 'store-pickup-address') {\r\n                address = _.extend({}, address, {\r\n                    saveInAddressBook: 0,\r\n\r\n                    /**\r\n                     * Is address can be used for billing\r\n                     *\r\n                     * @return {Boolean}\r\n                     */\r\n                    canUseForBilling: function () {\r\n                        return false;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns address type\r\n                     *\r\n                     * @return {String}\r\n                     */\r\n                    getType: function () {\r\n                        return 'store-pickup-address';\r\n                    },\r\n\r\n                    /**\r\n                     * Returns address key\r\n                     *\r\n                     * @return {*}\r\n                     */\r\n                    getKey: function () {\r\n                        return this.getType() + sourceCode.value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return address;\r\n        }\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/model/quote-ext.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-address-converter'\r\n], function (ko, pickupAddressConverter) {\r\n    'use strict';\r\n\r\n    return function (quote) {\r\n        var shippingAddress = quote.shippingAddress;\r\n\r\n        /**\r\n         * Makes sure that shipping address gets appropriate type when it points\r\n         * to a store pickup location.\r\n         */\r\n        quote.shippingAddress = ko.pureComputed({\r\n            /**\r\n             * Return quote shipping address\r\n             */\r\n            read: function () {\r\n                return shippingAddress();\r\n            },\r\n\r\n            /**\r\n             * Set quote shipping address\r\n             */\r\n            write: function (address) {\r\n                shippingAddress(\r\n                    pickupAddressConverter.formatAddressToPickupAddress(address)\r\n                );\r\n            }\r\n        });\r\n\r\n        return quote;\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'knockout',\r\n    'Magento_InventoryInStorePickupFrontend/js/model/resource-url-manager',\r\n    'mage/storage',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/address-converter',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'underscore',\r\n    'mage/translate',\r\n    'mage/url'\r\n], function (\r\n    $,\r\n    ko,\r\n    resourceUrlManager,\r\n    storage,\r\n    customerData,\r\n    checkoutData,\r\n    addressConverter,\r\n    selectShippingAddressAction,\r\n    _,\r\n    $t,\r\n    url\r\n) {\r\n    'use strict';\r\n\r\n    var websiteCode = window.checkoutConfig.websiteCode,\r\n        countryData = customerData.get('directory-data');\r\n\r\n    return {\r\n        isLoading: ko.observable(false),\r\n        selectedLocation: ko.observable(null),\r\n        locationsCache: [],\r\n\r\n        /**\r\n         * Get shipping rates for specified address.\r\n         *\r\n         * @param {String} sourceCode\r\n         */\r\n        getLocation: function (sourceCode) {\r\n            var serviceUrl = resourceUrlManager.getUrlForPickupLocation(websiteCode, sourceCode);\r\n\r\n            this.isLoading(true);\r\n\r\n            return storage\r\n                .get(serviceUrl, {}, false)\r\n                .then(function (address) {\r\n                    return this.formatAddress(address);\r\n                }.bind(this))\r\n                .fail(function (response) {\r\n                    this.processError(response);\r\n\r\n                    return [];\r\n                }.bind(this))\r\n                .always(function () {\r\n                    this.isLoading(false);\r\n                }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Get nearby pickup locations based on given search criteria.\r\n         *\r\n         * @param {Object} searchCriteria - Search criteria object.\r\n         * @see Magento/InventoryInStorePickup/Model/SearchCriteria/GetNearbyLocationsCriteria.php\r\n         */\r\n        getNearbyLocations: function (searchCriteria) {\r\n            var self = this,\r\n                serviceUrl = resourceUrlManager.getUrlForNearbyPickupLocations(websiteCode, searchCriteria);\r\n\r\n            if (self.locationsCache[serviceUrl]) {\r\n                return $.Deferred().resolve(self.locationsCache[serviceUrl]).promise();\r\n            }\r\n\r\n            self.isLoading(true);\r\n\r\n            return storage\r\n                .get(serviceUrl, {}, false)\r\n                .then(function (result) {\r\n                    self.locationsCache[serviceUrl] = _.map(result.items, function (address) {\r\n                        return self.formatAddress(address);\r\n                    });\r\n\r\n                    return self.locationsCache[serviceUrl];\r\n                })\r\n                .fail(function (response) {\r\n                    self.processError(response);\r\n\r\n                    return [];\r\n                })\r\n                .always(function () {\r\n                    self.isLoading(false);\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Select location for sipping.\r\n         *\r\n         * @param {Object} location\r\n         * @returns void\r\n         */\r\n        selectForShipping: function (location) {\r\n            var address = $.extend(\r\n                {},\r\n                addressConverter.formAddressDataToQuoteAddress({\r\n                    firstname: location.name,\r\n                    lastname: 'Store',\r\n                    street: location.street,\r\n                    city: location.city,\r\n                    postcode: location.postcode,\r\n                    'country_id': location['country_id'],\r\n                    telephone: location.telephone,\r\n                    'region_id': location['region_id'],\r\n                    'save_in_address_book': 0\r\n                }),\r\n                {\r\n                    /**\r\n                     * Is address can be used for billing\r\n                     *\r\n                     * @return {Boolean}\r\n                     */\r\n                    canUseForBilling: function () {\r\n                        return false;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns address type\r\n                     *\r\n                     * @return {String}\r\n                     */\r\n                    getType: function () {\r\n                        return 'store-pickup-address';\r\n                    },\r\n                    'extension_attributes': {\r\n                        'pickup_location_code': location['pickup_location_code']\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.selectedLocation(location);\r\n            selectShippingAddressAction(address);\r\n            checkoutData.setSelectedShippingAddress(address.getKey());\r\n        },\r\n\r\n        /**\r\n         * Formats address returned by REST endpoint to match checkout address field naming.\r\n         *\r\n         * @param {Object} address - Address object returned by REST endpoint.\r\n         */\r\n        formatAddress: function (address) {\r\n            return {\r\n                name: address.name,\r\n                description: address.description,\r\n                latitude: address.latitude,\r\n                longitude: address.longitude,\r\n                street: [address.street],\r\n                city: address.city,\r\n                postcode: address.postcode,\r\n                'country_id': address['country_id'],\r\n                country: this.getCountryName(address['country_id']),\r\n                telephone: address.phone,\r\n                'region_id': address['region_id'],\r\n                region: this.getRegionName(\r\n                    address['country_id'],\r\n                    address['region_id']\r\n                ),\r\n                'pickup_location_code': address['pickup_location_code']\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Get country name by id.\r\n         *\r\n         * @param {*} countryId\r\n         * @return {String}\r\n         */\r\n        getCountryName: function (countryId) {\r\n            return countryData()[countryId] !== undefined ?\r\n                countryData()[countryId].name\r\n                : ''; //eslint-disable-line\r\n        },\r\n\r\n        /**\r\n         * Returns region name based on given country and region identifiers.\r\n         *\r\n         * @param {String} countryId - Country identifier.\r\n         * @param {String} regionId - Region identifier.\r\n         */\r\n        getRegionName: function (countryId, regionId) {\r\n            var regions = countryData()[countryId] ?\r\n                countryData()[countryId].regions\r\n                : null;\r\n\r\n            return regions && regions[regionId] ? regions[regionId].name : '';\r\n        },\r\n\r\n        /**\r\n         * Process response errors.\r\n         *\r\n         * @param {Object} response\r\n         * @returns void\r\n         */\r\n        processError: function (response) {\r\n            var expr = /([%])\\w+/g,\r\n                error;\r\n\r\n            if (response.status === 401) {\r\n                //eslint-disable-line eqeqeq\r\n                window.location.replace(url.build('customer/account/login/'));\r\n\r\n                return;\r\n            }\r\n\r\n            try {\r\n                error = JSON.parse(response.responseText);\r\n            } catch (exception) {\r\n                error = $t(\r\n                    'Something went wrong with your request. Please try again later.'\r\n                );\r\n            }\r\n\r\n            if (error.hasOwnProperty('parameters')) {\r\n                error = error.message.replace(expr, function (varName) {\r\n                    varName = varName.substr(1);\r\n\r\n                    if (error.parameters.hasOwnProperty(varName)) {\r\n                        return error.parameters[varName];\r\n                    }\r\n\r\n                    return error.parameters.shift();\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/model/shipping-rate-processor/store-pickup-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * @param {Object} address\r\n         */\r\n        getRates: function (address) {}\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/view/store-selector.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/modal/modal',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/address-converter',\r\n    'Magento_Checkout/js/action/set-shipping-information',\r\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service',\r\n    'Magento_Checkout/js/checkout-data'\r\n], function (\r\n    $,\r\n    _,\r\n    Component,\r\n    registry,\r\n    modal,\r\n    quote,\r\n    customer,\r\n    stepNavigator,\r\n    addressConverter,\r\n    setShippingInformationAction,\r\n    pickupLocationsService,\r\n    checkoutData\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_InventoryInStorePickupFrontend/store-selector',\r\n            selectedLocationTemplate:\r\n                'Magento_InventoryInStorePickupFrontend/store-selector/selected-location',\r\n            storeSelectorPopupTemplate:\r\n                'Magento_InventoryInStorePickupFrontend/store-selector/popup',\r\n            storeSelectorPopupItemTemplate:\r\n                'Magento_InventoryInStorePickupFrontend/store-selector/popup-item',\r\n            loginFormSelector:\r\n                '#store-selector form[data-role=email-with-possible-login]',\r\n            defaultCountryId: window.checkoutConfig.defaultCountryId,\r\n            delimiter: window.checkoutConfig.storePickupApiSearchTermDelimiter,\r\n            selectedLocation: pickupLocationsService.selectedLocation,\r\n            quoteIsVirtual: quote.isVirtual,\r\n            searchQuery: '',\r\n            nearbyLocations: null,\r\n            isLoading: pickupLocationsService.isLoading,\r\n            popup: null,\r\n            searchDebounceTimeout: 300,\r\n            imports: {\r\n                nearbySearchRadius: '${ $.parentName }:nearbySearchRadius',\r\n                nearbySearchLimit: '${ $.parentName }:nearbySearchLimit'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init component\r\n         *\r\n         * @return {exports}\r\n         */\r\n        initialize: function () {\r\n            var updateNearbyLocations, country;\r\n\r\n            this._super();\r\n\r\n            updateNearbyLocations = _.debounce(function (searchQuery) {\r\n                country = quote.shippingAddress() && quote.shippingAddress().countryId ?\r\n                    quote.shippingAddress().countryId : this.defaultCountryId;\r\n                searchQuery = this.getSearchTerm(searchQuery, country);\r\n                this.updateNearbyLocations(searchQuery);\r\n            }, this.searchDebounceTimeout).bind(this);\r\n            this.searchQuery.subscribe(updateNearbyLocations);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init component observable variables\r\n         *\r\n         * @return {exports}\r\n         */\r\n        initObservable: function () {\r\n            return this._super().observe(['nearbyLocations', 'searchQuery']);\r\n        },\r\n\r\n        /**\r\n         * Set shipping information handler\r\n         */\r\n        setPickupInformation: function () {\r\n            var shippingAddress = quote.shippingAddress();\r\n\r\n            if (this.validatePickupInformation()) {\r\n                shippingAddress = addressConverter.quoteAddressToFormAddressData(shippingAddress);\r\n                checkoutData.setShippingAddressFromData(shippingAddress);\r\n                setShippingInformationAction().done(function () {\r\n                    stepNavigator.next();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPopup: function () {\r\n            if (!this.popup) {\r\n                this.popup = modal(\r\n                    this.popUpList.options,\r\n                    $(this.popUpList.element)\r\n                );\r\n            }\r\n\r\n            return this.popup;\r\n        },\r\n\r\n        /**\r\n         * Get Search Term from search query and country.\r\n         *\r\n         * @param {String} searchQuery\r\n         * @param {String} country\r\n         * @returns {String}\r\n         */\r\n        getSearchTerm: function (searchQuery, country) {\r\n            return searchQuery ? searchQuery + this.delimiter + country : searchQuery;\r\n        },\r\n\r\n        /**\r\n         * @returns void\r\n         */\r\n        openPopup: function () {\r\n            var shippingAddress = quote.shippingAddress(),\r\n                country = shippingAddress.countryId ? shippingAddress.countryId :\r\n                this.defaultCountryId,\r\n                searchTerm = '';\r\n\r\n            this.getPopup().openModal();\r\n\r\n            if (shippingAddress.city && shippingAddress.postcode) {\r\n                searchTerm = this.getSearchTerm(shippingAddress.postcode, country);\r\n            }\r\n\r\n            this.updateNearbyLocations(searchTerm);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} location\r\n         * @returns void\r\n         */\r\n        selectPickupLocation: function (location) {\r\n            pickupLocationsService.selectForShipping(location);\r\n            this.getPopup().closeModal();\r\n        },\r\n\r\n        /**\r\n         * @param {Object} location\r\n         * @returns {*|Boolean}\r\n         */\r\n        isPickupLocationSelected: function (location) {\r\n            return _.isEqual(this.selectedLocation(), location);\r\n        },\r\n\r\n        /**\r\n         * @param {String} searchQuery\r\n         * @returns {*}\r\n         */\r\n        updateNearbyLocations: function (searchQuery) {\r\n            var self = this,\r\n                productsInfo = [],\r\n                items = quote.getItems(),\r\n                searchCriteria;\r\n\r\n            _.each(items, function (item) {\r\n                if (item['qty_options'] === undefined || item['qty_options'].length === 0) {\r\n                    productsInfo.push(\r\n                        {\r\n                            sku: item.sku\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n            searchCriteria = {\r\n                extensionAttributes: {\r\n                    productsInfo: productsInfo\r\n                },\r\n                pageSize: this.nearbySearchLimit\r\n            };\r\n\r\n            if (searchQuery) {\r\n                searchCriteria.area = {\r\n                    radius: this.nearbySearchRadius,\r\n                    searchTerm: searchQuery\r\n                };\r\n            }\r\n\r\n            return pickupLocationsService\r\n                .getNearbyLocations(searchCriteria)\r\n                .then(function (locations) {\r\n                    self.nearbyLocations(locations);\r\n                })\r\n                .fail(function () {\r\n                    self.nearbyLocations([]);\r\n                });\r\n        },\r\n\r\n        /**\r\n         * @returns {Boolean}\r\n         */\r\n        validatePickupInformation: function () {\r\n            var emailValidationResult,\r\n                loginFormSelector = this.loginFormSelector;\r\n\r\n            if (!customer.isLoggedIn()) {\r\n                $(loginFormSelector).validation();\r\n                emailValidationResult = $(loginFormSelector + ' input[name=username]').valid() ? true : false;\r\n\r\n                if (!emailValidationResult) {\r\n                    $(this.loginFormSelector + ' input[name=username]').focus();\r\n\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/view/store-pickup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'underscore',\r\n    'jquery',\r\n    'knockout',\r\n    'uiRegistry',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/select-shipping-method',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/shipping-rate-service',\r\n    'Magento_InventoryInStorePickupFrontend/js/model/shipping-rate-processor/store-pickup-address',\r\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service'\r\n], function (\r\n    Component,\r\n    _,\r\n    $,\r\n    ko,\r\n    registry,\r\n    quote,\r\n    selectShippingMethodAction,\r\n    checkoutData,\r\n    shippingService,\r\n    stepNavigator,\r\n    shippingRateService,\r\n    shippingRateProcessor,\r\n    pickupLocationsService\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_InventoryInStorePickupFrontend/store-pickup',\r\n            deliveryMethodSelectorTemplate: 'Magento_InventoryInStorePickupFrontend/delivery-method-selector',\r\n            isVisible: false,\r\n            isAvailable: false,\r\n            isStorePickupSelected: false,\r\n            rate: {\r\n                'carrier_code': 'instore',\r\n                'method_code': 'pickup'\r\n            },\r\n            nearbySearchLimit: 50,\r\n            defaultCountry: window.checkoutConfig.defaultCountryId,\r\n            delimiter: window.checkoutConfig.storePickupApiSearchTermDelimiter,\r\n            rates: shippingService.getShippingRates(),\r\n            inStoreMethod: null\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            shippingRateService.registerProcessor('store-pickup-address', shippingRateProcessor);\r\n\r\n            quote.shippingAddress.subscribe(function (shippingAddress) {\r\n                this.convertAddressType(shippingAddress);\r\n            }, this);\r\n            this.convertAddressType(quote.shippingAddress());\r\n\r\n            this.isStorePickupSelected.subscribe(function () {\r\n                this.preselectLocation();\r\n            }, this);\r\n            this.preselectLocation();\r\n\r\n            this.syncWithShipping();\r\n        },\r\n\r\n        /**\r\n         * Init component observable variables\r\n         *\r\n         * @return {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['isVisible']);\r\n\r\n            this.isStorePickupSelected = ko.pureComputed(function () {\r\n                return _.isMatch(quote.shippingMethod(), this.rate);\r\n            }, this);\r\n\r\n            this.isAvailable = ko.pureComputed(function () {\r\n                return _.findWhere(this.rates(), {\r\n                    'carrier_code': this.rate['carrier_code'],\r\n                    'method_code': this.rate['method_code']\r\n                });\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Synchronize store pickup visibility with shipping step.\r\n         *\r\n         * @returns void\r\n         */\r\n        syncWithShipping: function () {\r\n            var shippingStep = _.findWhere(stepNavigator.steps(), {\r\n                code: 'shipping'\r\n            });\r\n\r\n            shippingStep.isVisible.subscribe(function (isShippingVisible) {\r\n                this.isVisible(this.isAvailable && isShippingVisible);\r\n            }, this);\r\n            this.isVisible(this.isAvailable && shippingStep.isVisible());\r\n        },\r\n\r\n        /**\r\n         * @returns void\r\n         */\r\n        selectShipping: function () {\r\n            var nonPickupShippingMethod = _.find(\r\n                this.rates(),\r\n                function (rate) {\r\n                    return (\r\n                        rate['carrier_code'] !== this.rate['carrier_code'] &&\r\n                        rate['method_code'] !== this.rate['method_code']\r\n                    );\r\n                },\r\n                this\r\n            );\r\n\r\n            this.selectShippingMethod(nonPickupShippingMethod);\r\n\r\n            registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                checkoutProvider.set(\r\n                    'shippingAddress',\r\n                    quote.shippingAddress()\r\n                );\r\n                checkoutProvider.trigger('data.reset');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @returns void\r\n         */\r\n        selectStorePickup: function () {\r\n            var pickupShippingMethod = _.findWhere(\r\n                this.rates(),\r\n                {\r\n                    'carrier_code': this.rate['carrier_code'],\r\n                    'method_code': this.rate['method_code']\r\n                },\r\n                this\r\n            );\r\n\r\n            this.preselectLocation();\r\n            this.selectShippingMethod(pickupShippingMethod);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} shippingMethod\r\n         */\r\n        selectShippingMethod: function (shippingMethod) {\r\n            selectShippingMethodAction(shippingMethod);\r\n            checkoutData.setSelectedShippingAddress(\r\n                quote.shippingAddress().getKey()\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {Object} shippingAddress\r\n         * @returns void\r\n         */\r\n        convertAddressType: function (shippingAddress) {\r\n            if (\r\n                !this.isStorePickupAddress(shippingAddress) &&\r\n                this.isStorePickupSelected()\r\n            ) {\r\n                quote.shippingAddress(\r\n                    $.extend({}, shippingAddress, {\r\n                        /**\r\n                         * Is address can be used for billing\r\n                         *\r\n                         * @return {Boolean}\r\n                         */\r\n                        canUseForBilling: function () {\r\n                            return false;\r\n                        },\r\n\r\n                        /**\r\n                         * Returns address type\r\n                         *\r\n                         * @return {String}\r\n                         */\r\n                        getType: function () {\r\n                            return 'store-pickup-address';\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns void\r\n         */\r\n        preselectLocation: function () {\r\n            var selectedLocation,\r\n                shippingAddress,\r\n                customAttributes,\r\n                selectedSourceCode,\r\n                nearestLocation,\r\n                productsInfo = [],\r\n                items = quote.getItems();\r\n\r\n            if (!this.isStorePickupSelected()) {\r\n                return;\r\n            }\r\n\r\n            selectedLocation = pickupLocationsService.selectedLocation();\r\n\r\n            if (selectedLocation) {\r\n                pickupLocationsService.selectForShipping(selectedLocation);\r\n\r\n                return;\r\n            }\r\n\r\n            shippingAddress = quote.shippingAddress();\r\n            customAttributes = shippingAddress.customAttributes || [];\r\n            selectedSourceCode = _.findWhere(customAttributes, {\r\n                'attribute_code': 'sourceCode'\r\n            });\r\n\r\n            if (selectedSourceCode) {\r\n                pickupLocationsService\r\n                    .getLocation(selectedSourceCode.value)\r\n                    .then(function (location) {\r\n                        pickupLocationsService.selectForShipping(location);\r\n                    });\r\n            } else if (shippingAddress.city && shippingAddress.postcode) {\r\n                _.each(items, function (item) {\r\n                    if (item['qty_options'] === undefined || item['qty_options'].length === 0) {\r\n                        productsInfo.push(\r\n                            {\r\n                                sku: item.sku\r\n                            }\r\n                        );\r\n                    }\r\n                });\r\n                pickupLocationsService\r\n                    .getNearbyLocations({\r\n                        area: {\r\n                            radius: this.nearbySearchRadius,\r\n                            searchTerm: shippingAddress.postcode + this.delimiter +\r\n                                        shippingAddress.countryId || this.defaultCountry\r\n                        },\r\n                        extensionAttributes: {\r\n                            productsInfo: productsInfo\r\n                        },\r\n                        pageSize: this.nearbySearchLimit\r\n                    })\r\n                    .then(function (locations) {\r\n                        nearestLocation = locations[0];\r\n\r\n                        if (nearestLocation) {\r\n                            pickupLocationsService.selectForShipping(\r\n                                nearestLocation\r\n                            );\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @returns {Boolean}\r\n         */\r\n        isStorePickupAddress: function (address) {\r\n            return address.getType() === 'store-pickup-address';\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/view/shipping-information-ext.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote'\r\n], function (quote) {\r\n    'use strict';\r\n\r\n    var storePickupShippingInformation = {\r\n        defaults: {\r\n            template: 'Magento_InventoryInStorePickupFrontend/shipping-information'\r\n        },\r\n\r\n        /**\r\n         * Get shipping method title based on delivery method.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getShippingMethodTitle: function () {\r\n            var shippingMethod = quote.shippingMethod(),\r\n                locationName = '',\r\n                title;\r\n\r\n            if (!this.isStorePickup()) {\r\n\r\n                return this._super();\r\n            }\r\n\r\n            title = shippingMethod['carrier_title'] + ' - ' + shippingMethod['method_title'];\r\n\r\n            if (quote.shippingAddress().firstname !== undefined) {\r\n                locationName = quote.shippingAddress().firstname + ' ' + quote.shippingAddress().lastname;\r\n                title += ' \"' + locationName + '\"';\r\n            }\r\n\r\n            return title;\r\n        },\r\n\r\n        /**\r\n         * Get is store pickup delivery method selected.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isStorePickup: function () {\r\n            var shippingMethod = quote.shippingMethod(),\r\n                isStorePickup = false;\r\n\r\n            if (shippingMethod !== null) {\r\n                isStorePickup = shippingMethod['carrier_code'] === 'instore' &&\r\n                    shippingMethod['method_code'] === 'pickup';\r\n            }\r\n\r\n            return isStorePickup;\r\n        }\r\n    };\r\n\r\n    return function (shippingInformation) {\r\n        return shippingInformation.extend(storePickupShippingInformation);\r\n    };\r\n});\r\n","Magento_InventoryInStorePickupFrontend/js/view/form/element/email.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery', 'Magento_Checkout/js/view/form/element/email'], function (\r\n    $,\r\n    Component\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template:\r\n                'Magento_InventoryInStorePickupFrontend/form/element/email',\r\n            links: {\r\n                email:\r\n                    'checkout.steps.shipping-step.shippingAddress.customer-email:email'\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/js/downloadable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Catalog/js/price-box'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Downloadable widget\r\n     */\r\n    $.widget('mage.downloadable', {\r\n        options: {\r\n            priceHolderSelector: '.price-box'\r\n        },\r\n\r\n        /**\r\n         *  @inheritdoc\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            this.element.find(this.options.linkElement).on('change', $.proxy(function () {\r\n                this._reloadPrice();\r\n            }, this));\r\n\r\n            this.element.find(this.options.allElements).on('change', function () {\r\n                if (this.checked) {\r\n                    $('label[for=\"' + this.id + '\"] > span').text($(this).attr('data-checked'));\r\n                    self.element.find(self.options.linkElement + ':not(:checked)').each(function () {\r\n                        $(this).trigger('click');\r\n                    });\r\n                } else {\r\n                    $('[for=\"' + this.id + '\"] > span').text($(this).attr('data-notchecked'));\r\n                    self.element.find(self.options.linkElement + ':checked').each(function () {\r\n                        $(this).trigger('click');\r\n                    });\r\n                }\r\n            });\r\n\r\n            this._reloadPrice();\r\n        },\r\n\r\n        /**\r\n         * Reload product price with selected link price included\r\n         * @private\r\n         */\r\n        _reloadPrice: function () {\r\n            var finalPrice = 0,\r\n                basePrice = 0;\r\n\r\n            this.element.find(this.options.linkElement + ':checked').each($.proxy(function (index, element) {\r\n                finalPrice += this.options.config.links[$(element).val()].finalPrice;\r\n                basePrice += this.options.config.links[$(element).val()].basePrice;\r\n            }, this));\r\n\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', {\r\n                'prices': {\r\n                    'finalPrice': {\r\n                        'amount': finalPrice\r\n                    },\r\n                    'basePrice': {\r\n                        'amount': basePrice\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.reloadAllCheckText();\r\n        },\r\n\r\n        /**\r\n         * Reload all-elements-checkbox's label\r\n         * @private\r\n         */\r\n        reloadAllCheckText: function () {\r\n            var allChecked = true,\r\n                allElementsCheck = $(this.options.allElements),\r\n                allElementsLabel = $('label[for=\"' + allElementsCheck.attr('id') + '\"] > span');\r\n\r\n            $(this.options.linkElement).each(function () {\r\n                if (!this.checked) {\r\n                    allChecked = false;\r\n                }\r\n            });\r\n\r\n            if (allChecked) {\r\n                allElementsLabel.text(allElementsCheck.attr('data-checked'));\r\n                allElementsCheck.prop('checked', true);\r\n            } else {\r\n                allElementsLabel.text(allElementsCheck.attr('data-notchecked'));\r\n                allElementsCheck.prop('checked', false);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.downloadable;\r\n});\r\n","Magento_LoginAsCustomerFrontendUi/js/login.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/section-config'\r\n], function ($, customerData, sectionConfig) {\r\n\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        customerData.reload(sectionConfig.getSectionNames()).done(function () {\r\n            window.location.href = config.redirectUrl;\r\n        });\r\n    };\r\n});\r\n","Magento_LoginAsCustomerFrontendUi/js/view/loginAsCustomer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/translate'\r\n], function ($, _, Component, customer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            isVisible: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var customerData, loggedAsCustomerData;\r\n\r\n            this._super();\r\n\r\n            customerData = customer.get('customer');\r\n            loggedAsCustomerData = customer.get('loggedAsCustomer');\r\n\r\n            customerData.subscribe(function (data) {\r\n                this.fullname = data.fullname;\r\n                this.updateBanner();\r\n            }.bind(this));\r\n            loggedAsCustomerData.subscribe(function (data) {\r\n                this.adminUserId = data.adminUserId;\r\n                this.websiteName = data.websiteName;\r\n                this.updateBanner();\r\n            }.bind(this));\r\n\r\n            this.fullname = customerData().fullname;\r\n            this.adminUserId = loggedAsCustomerData().adminUserId;\r\n            this.websiteName = loggedAsCustomerData().websiteName;\r\n\r\n            this.updateBanner();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['isVisible', 'notificationText']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update banner area\r\n         *\r\n         * @returns void\r\n         */\r\n        updateBanner: function () {\r\n            if (this.adminUserId !== undefined) {\r\n                this.isVisible(this.adminUserId);\r\n            }\r\n\r\n            if (this.fullname !== undefined && this.websiteName !== undefined) {\r\n                this.notificationText($.mage.__('You are connected as <strong>%1</strong> on %2')\r\n                    .replace('%1', _.escape(this.fullname))\r\n                    .replace('%2', _.escape(this.websiteName)));\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Vault/js/customer_account/deleteWidget.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modalToggle',\r\n    'mage/translate'\r\n], function ($, modalToggle) {\r\n    'use strict';\r\n\r\n    return function (config, deleteButton) {\r\n        config.buttons = [\r\n            {\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action secondary cancel'\r\n            }, {\r\n                text: $.mage.__('Delete'),\r\n                class: 'action primary',\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) { //eslint-disable-line no-unused-vars\r\n                    $(deleteButton.form).submit();\r\n                }\r\n            }\r\n        ];\r\n\r\n        modalToggle(config, deleteButton);\r\n    };\r\n});\r\n","Magento_Vault/js/view/payment/vault-enabler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\n/* @api */\r\ndefine(\r\n    [\r\n        'uiElement'\r\n    ],\r\n    function (\r\n        Component\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                isActivePaymentTokenEnabler: true\r\n            },\r\n\r\n            /**\r\n             * @param {String} paymentCode\r\n             */\r\n            setPaymentCode: function (paymentCode) {\r\n                this.paymentCode = paymentCode;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([\r\n                        'isActivePaymentTokenEnabler'\r\n                    ]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @param {Object} data\r\n             */\r\n            visitAdditionalData: function (data) {\r\n                if (!this.isVaultEnabled()) {\r\n                    return;\r\n                }\r\n\r\n                if (!('additional_data' in data)) {\r\n                    data['additional_data'] = {};\r\n                }\r\n\r\n                data['additional_data']['is_active_payment_token_enabler'] = this.isActivePaymentTokenEnabler();\r\n            },\r\n\r\n            /**\r\n             * @returns {Boolean}\r\n             */\r\n            isVaultEnabled: function () {\r\n                return typeof window.checkoutConfig.vault[this.paymentCode] !== 'undefined' &&\r\n                    window.checkoutConfig.vault[this.paymentCode]['is_enabled'] === true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Vault/js/view/payment/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\n/* @api */\r\ndefine([\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'uiLayout',\r\n    'uiRegistry'\r\n], function (_, Component, rendererList, layout, registry) {\r\n    'use strict';\r\n\r\n    var vaultGroupName = 'vaultGroup';\r\n\r\n    layout([{\r\n        name: vaultGroupName,\r\n        component: 'Magento_Checkout/js/model/payment/method-group',\r\n        alias: 'vault',\r\n        sortOrder: 10\r\n    }]);\r\n\r\n    registry.get(vaultGroupName, function (vaultGroup) {\r\n        _.each(window.checkoutConfig.payment.vault, function (config, index) {\r\n            rendererList.push(\r\n                {\r\n                    type: index,\r\n                    config: config.config,\r\n                    component: config.component,\r\n                    group: vaultGroup,\r\n\r\n                    /**\r\n                     * Custom payment method types comparator\r\n                     * @param {String} typeA\r\n                     * @param {String} typeB\r\n                     * @return {Boolean}\r\n                     */\r\n                    typeComparatorCallback: function (typeA, typeB) {\r\n                        // vault token items have the same name as vault payment without index\r\n                        return typeA.substring(0, typeA.lastIndexOf('_')) === typeB;\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Add view logic here if needed\r\n     */\r\n    return Component.extend({});\r\n});\r\n","Magento_Vault/js/view/payment/method-renderer/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Checkout/js/action/select-payment-method',\r\n        'Magento_Checkout/js/checkout-data'\r\n    ],\r\n    function (Component, selectPaymentMethod, checkoutData) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Vault/payment/form'\r\n            },\r\n\r\n            /**\r\n             * @returns {exports.initObservable}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns\r\n             */\r\n            selectPaymentMethod: function () {\r\n                selectPaymentMethod(\r\n                    {\r\n                        method: this.getId()\r\n                    }\r\n                );\r\n                checkoutData.setSelectedPaymentMethod(this.getId());\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getTitle: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getToken: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getId: function () {\r\n                return this.index;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCode: function () {\r\n                return this.code;\r\n            },\r\n\r\n            /**\r\n             * Get last 4 digits of card\r\n             * @returns {String}\r\n             */\r\n            getMaskedCard: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get expiration date\r\n             * @returns {String}\r\n             */\r\n            getExpirationDate: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get card type\r\n             * @returns {String}\r\n             */\r\n            getCardType: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @param {String} type\r\n             * @returns {Boolean}\r\n             */\r\n            getIcons: function (type) {\r\n                return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                    window.checkoutConfig.payment.ccform.icons[type]\r\n                    : false;\r\n            },\r\n\r\n            /**\r\n             * Return state of place order button.\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isButtonActive: function () {\r\n                return this.isActive() && this.isPlaceOrderActionAllowed();\r\n            },\r\n\r\n            /**\r\n             * Check if payment is active.\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isActive: function () {\r\n                return this.isChecked() === this.getId();\r\n            },\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            getData: function () {\r\n                var data = {\r\n                    method: this.getCode()\r\n                };\r\n\r\n                data['additional_data'] = {};\r\n                data['additional_data']['public_hash'] = this.getToken();\r\n\r\n                return data;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Newsletter/js/subscription-status-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/url'\r\n], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return function (email, deferred) {\r\n        return $.getJSON(\r\n            urlBuilder.build('newsletter/ajax/status'),\r\n            {\r\n                email: email\r\n            }\r\n        ).done(function (response) {\r\n            if (response.errors) {\r\n                deferred.reject();\r\n            } else {\r\n                deferred.resolve(response.subscribed);\r\n            }\r\n        }).fail(function () {\r\n            deferred.reject();\r\n        });\r\n    };\r\n});\r\n","Magento_Newsletter/js/newsletter-sign-up.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiElement',\r\n    'mage/url',\r\n    'subscriptionStatusResolver',\r\n    'mage/validation'\r\n], function ($, Component, urlBuilder, subscriptionStatusResolver) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            signUpElement: '',\r\n            submitButton: '',\r\n            element: null\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            this._super();\r\n            this.element = element;\r\n            $(element).on('change', $.proxy(this.updateSignUpStatus, this));\r\n            this.updateSignUpStatus();\r\n        },\r\n\r\n        /**\r\n         * Send status request and update subscription element according to result.\r\n         */\r\n        updateSignUpStatus: function () {\r\n            var element = $(this.element),\r\n                email = element.val(),\r\n                self = this,\r\n                newsletterSubscription;\r\n\r\n            if ($(self.signUpElement).is(':checked')) {\r\n                return;\r\n            }\r\n\r\n            if (!email || !$.validator.methods['validate-email'].call(this, email, element)) {\r\n                return;\r\n            }\r\n\r\n            newsletterSubscription = $.Deferred();\r\n\r\n            $(self.submitButton).prop('disabled', true);\r\n\r\n            subscriptionStatusResolver(email, newsletterSubscription);\r\n\r\n            $.when(newsletterSubscription).done(function (isSubscribed) {\r\n                if (isSubscribed) {\r\n                    $(self.signUpElement).prop('checked', true);\r\n                }\r\n            }).always(function () {\r\n                $(self.submitButton).prop('disabled', false);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_CheckoutAgreements/js/model/place-order-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\r\n], function ($, wrapper, agreementsAssigner) {\r\n    'use strict';\r\n\r\n    return function (placeOrderAction) {\r\n\r\n        /** Override default place order action and add agreement_ids to request */\r\n        return wrapper.wrap(placeOrderAction, function (originalAction, paymentData, messageContainer) {\r\n            agreementsAssigner(paymentData);\r\n\r\n            return originalAction(paymentData, messageContainer);\r\n        });\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreement-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig,\r\n        agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {},\r\n        agreementsInputPath = '.payment-method._active div.checkout-agreements input';\r\n\r\n    return {\r\n        /**\r\n         * Validate checkout agreements\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (hideError) {\r\n            var isValid = true;\r\n\r\n            if (!agreementsConfig.isEnabled || $(agreementsInputPath).length === 0) {\r\n                return true;\r\n            }\r\n\r\n            $(agreementsInputPath).each(function (index, element) {\r\n                if (!$.validator.validateSingleElement(element, {\r\n                    errorElement: 'div',\r\n                    hideError: hideError || false\r\n                })) {\r\n                    isValid = false;\r\n                }\r\n            });\r\n\r\n            return isValid;\r\n        }\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreements-modal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, modal, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Create popUp window for provided element.\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\r\n        createModal: function (element) {\r\n            var options;\r\n\r\n            this.modalWindow = element;\r\n            options = {\r\n                'type': 'popup',\r\n                'modalClass': 'agreements-modal',\r\n                'responsive': true,\r\n                'innerScroll': true,\r\n                'trigger': '.show-modal',\r\n                'buttons': [\r\n                    {\r\n                        text: $t('Close'),\r\n                        class: 'action secondary action-hide-popup',\r\n\r\n                        /** @inheritdoc */\r\n                        click: function () {\r\n                            this.closeModal();\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            modal(options, $(this.modalWindow));\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            $(this.modalWindow).modal('openModal');\r\n        }\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/set-payment-information-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\r\n], function ($, wrapper, agreementsAssigner) {\r\n    'use strict';\r\n\r\n    return function (placeOrderAction) {\r\n\r\n        /** Override place-order-mixin for set-payment-information action as they differs only by method signature */\r\n        return wrapper.wrap(placeOrderAction, function (originalAction, messageContainer, paymentData) {\r\n            agreementsAssigner(paymentData);\r\n\r\n            return originalAction(messageContainer, paymentData);\r\n        });\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreements-assigner.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global alert*/\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var agreementsConfig = window.checkoutConfig.checkoutAgreements;\r\n\r\n    /** Override default place order action and add agreement_ids to request */\r\n    return function (paymentData) {\r\n        var agreementForm,\r\n            agreementData,\r\n            agreementIds;\r\n\r\n        if (!agreementsConfig.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        agreementForm = $('.payment-method._active div[data-role=checkout-agreements] input');\r\n        agreementData = agreementForm.serializeArray();\r\n        agreementIds = [];\r\n\r\n        agreementData.forEach(function (item) {\r\n            agreementIds.push(item.value);\r\n        });\r\n\r\n        if (paymentData['extension_attributes'] === undefined) {\r\n            paymentData['extension_attributes'] = {};\r\n        }\r\n\r\n        paymentData['extension_attributes']['agreement_ids'] = agreementIds;\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/view/agreement-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_CheckoutAgreements/js/model/agreement-validator'\r\n], function (Component, additionalValidators, agreementValidator) {\r\n    'use strict';\r\n\r\n    additionalValidators.registerValidator(agreementValidator);\r\n\r\n    return Component.extend({});\r\n});\r\n","Magento_CheckoutAgreements/js/view/checkout-agreements.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_CheckoutAgreements/js/model/agreements-modal'\r\n], function (ko, $, Component, agreementsModal) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig,\r\n        agreementManualMode = 1,\r\n        agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {};\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_CheckoutAgreements/checkout/checkout-agreements'\r\n        },\r\n        isVisible: agreementsConfig.isEnabled,\r\n        agreements: agreementsConfig.agreements,\r\n        modalTitle: ko.observable(null),\r\n        modalContent: ko.observable(null),\r\n        contentHeight: ko.observable(null),\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Checks if agreement required\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        isAgreementRequired: function (element) {\r\n            return element.mode == agreementManualMode; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * Show agreement content in modal\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        showContent: function (element) {\r\n            this.modalTitle(element.checkboxText);\r\n            this.modalContent(element.content);\r\n            this.contentHeight(element.contentHeight ? element.contentHeight : 'auto');\r\n            agreementsModal.showModal();\r\n        },\r\n\r\n        /**\r\n         * build a unique id for the term checkbox\r\n         *\r\n         * @param {Object} context - the ko context\r\n         * @param {Number} agreementId\r\n         */\r\n        getCheckboxId: function (context, agreementId) {\r\n            var paymentMethodName = '',\r\n                paymentMethodRenderer = context.$parents[1];\r\n\r\n            // corresponding payment method fetched from parent context\r\n            if (paymentMethodRenderer) {\r\n                // item looks like this: {title: \"Check / Money order\", method: \"checkmo\"}\r\n                paymentMethodName = paymentMethodRenderer.item ?\r\n                  paymentMethodRenderer.item.method : '';\r\n            }\r\n\r\n            return 'agreement_' + paymentMethodName + '_' + agreementId;\r\n        },\r\n\r\n        /**\r\n         * Init modal window for rendered element\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        initModal: function (element) {\r\n            agreementsModal.createModal(element);\r\n        }\r\n    });\r\n});\r\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'jquery'\r\n], function (_, $t, Column, jQuery) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\r\n            draggable: false,\r\n            sortable: false,\r\n            selectedVariableCode: null,\r\n            selectedVariableType: null\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['selectedVariableCode']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove disable class from Insert Variable button after Variable has been chosen.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        selectVariable: function () {\r\n            if (jQuery('#insert_variable').hasClass('disabled')) {\r\n                jQuery('#insert_variable').removeClass('disabled');\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Swatches/js/swatch-renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'mage/smart-keyboard-handler',\r\n    'mage/translate',\r\n    'priceUtils',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/jquery.parsequery',\r\n    'mage/validation/validation'\r\n], function ($, _, mageTemplate, keyboardHandler, $t, priceUtils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Extend form validation to support swatch accessibility\r\n     */\r\n    $.widget('mage.validation', $.mage.validation, {\r\n        /**\r\n         * Handle form with swatches validation. Focus on first invalid swatch block.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} validation\r\n         */\r\n        listenFormValidateHandler: function (event, validation) {\r\n            var swatchWrapper, firstActive, swatches, swatch, successList, errorList, firstSwatch;\r\n\r\n            this._superApply(arguments);\r\n\r\n            swatchWrapper = '.swatch-attribute-options';\r\n            swatches = $(event.target).find(swatchWrapper);\r\n\r\n            if (!swatches.length) {\r\n                return;\r\n            }\r\n\r\n            swatch = '.swatch-attribute';\r\n            firstActive = $(validation.errorList[0].element || []);\r\n            successList = validation.successList;\r\n            errorList = validation.errorList;\r\n            firstSwatch = $(firstActive).parent(swatch).find(swatchWrapper);\r\n\r\n            keyboardHandler.focus(swatches);\r\n\r\n            $.each(successList, function (index, item) {\r\n                $(item).parent(swatch).find(swatchWrapper).attr('aria-invalid', false);\r\n            });\r\n\r\n            $.each(errorList, function (index, item) {\r\n                $(item.element).parent(swatch).find(swatchWrapper).attr('aria-invalid', true);\r\n            });\r\n\r\n            if (firstSwatch.length) {\r\n                $(firstSwatch).focus();\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Render tooltips by attributes (only to up).\r\n     * Required element attributes:\r\n     *  - data-option-type (integer, 0-3)\r\n     *  - data-option-label (string)\r\n     *  - data-option-tooltip-thumb\r\n     *  - data-option-tooltip-value\r\n     *  - data-thumb-width\r\n     *  - data-thumb-height\r\n     */\r\n    $.widget('mage.SwatchRendererTooltip', {\r\n        options: {\r\n            delay: 200,                             //how much ms before tooltip to show\r\n            tooltipClass: 'swatch-option-tooltip'  //configurable, but remember about css\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            var $widget = this,\r\n                $this = this.element,\r\n                $element = $('.' + $widget.options.tooltipClass),\r\n                timer,\r\n                type = parseInt($this.data('option-type'), 10),\r\n                label = $this.data('option-label'),\r\n                thumb = $this.data('option-tooltip-thumb'),\r\n                value = $this.data('option-tooltip-value'),\r\n                width = $this.data('thumb-width'),\r\n                height = $this.data('thumb-height'),\r\n                $image,\r\n                $title,\r\n                $corner;\r\n\r\n            if (!$element.length) {\r\n                $element = $('<div class=\"' +\r\n                    $widget.options.tooltipClass +\r\n                    '\"><div class=\"image\"></div><div class=\"title\"></div><div class=\"corner\"></div></div>'\r\n                );\r\n                $('body').append($element);\r\n            }\r\n\r\n            $image = $element.find('.image');\r\n            $title = $element.find('.title');\r\n            $corner = $element.find('.corner');\r\n\r\n            $this.hover(function () {\r\n                if (!$this.hasClass('disabled')) {\r\n                    timer = setTimeout(\r\n                        function () {\r\n                            var leftOpt = null,\r\n                                leftCorner = 0,\r\n                                left,\r\n                                $window;\r\n\r\n                            if (type === 2) {\r\n                                // Image\r\n                                $image.css({\r\n                                    'background': 'url(\"' + thumb + '\") no-repeat center', //Background case\r\n                                    'background-size': 'initial',\r\n                                    'width': width + 'px',\r\n                                    'height': height + 'px'\r\n                                });\r\n                                $image.show();\r\n                            } else if (type === 1) {\r\n                                // Color\r\n                                $image.css({\r\n                                    background: value\r\n                                });\r\n                                $image.show();\r\n                            } else if (type === 0 || type === 3) {\r\n                                // Default\r\n                                $image.hide();\r\n                            }\r\n\r\n                            $title.text(label);\r\n\r\n                            leftOpt = $this.offset().left;\r\n                            left = leftOpt + $this.width() / 2 - $element.width() / 2;\r\n                            $window = $(window);\r\n\r\n                            // the numbers (5 and 5) is magick constants for offset from left or right page\r\n                            if (left < 0) {\r\n                                left = 5;\r\n                            } else if (left + $element.width() > $window.width()) {\r\n                                left = $window.width() - $element.width() - 5;\r\n                            }\r\n\r\n                            // the numbers (6,  3 and 18) is magick constants for offset tooltip\r\n                            leftCorner = 0;\r\n\r\n                            if ($element.width() < $this.width()) {\r\n                                leftCorner = $element.width() / 2 - 3;\r\n                            } else {\r\n                                leftCorner = (leftOpt > left ? leftOpt - left : left - leftOpt) + $this.width() / 2 - 6;\r\n                            }\r\n\r\n                            $corner.css({\r\n                                left: leftCorner\r\n                            });\r\n                            $element.css({\r\n                                left: left,\r\n                                top: $this.offset().top - $element.height() - $corner.height() - 18\r\n                            }).show();\r\n                        },\r\n                        $widget.options.delay\r\n                    );\r\n                }\r\n            }, function () {\r\n                $element.hide();\r\n                clearTimeout(timer);\r\n            });\r\n\r\n            $(document).on('tap', function () {\r\n                $element.hide();\r\n                clearTimeout(timer);\r\n            });\r\n\r\n            $this.on('tap', function (event) {\r\n                event.stopPropagation();\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Render swatch controls with options and use tooltips.\r\n     * Required two json:\r\n     *  - jsonConfig (magento's option config)\r\n     *  - jsonSwatchConfig (swatch's option config)\r\n     *\r\n     *  Tuning:\r\n     *  - numberToShow (show \"more\" button if options are more)\r\n     *  - onlySwatches (hide selectboxes)\r\n     *  - moreButtonText (text for \"more\" button)\r\n     *  - selectorProduct (selector for product container)\r\n     *  - selectorProductPrice (selector for change price)\r\n     */\r\n    $.widget('mage.SwatchRenderer', {\r\n        options: {\r\n            classes: {\r\n                attributeClass: 'swatch-attribute',\r\n                attributeLabelClass: 'swatch-attribute-label',\r\n                attributeSelectedOptionLabelClass: 'swatch-attribute-selected-option',\r\n                attributeOptionsWrapper: 'swatch-attribute-options',\r\n                attributeInput: 'swatch-input',\r\n                optionClass: 'swatch-option',\r\n                selectClass: 'swatch-select',\r\n                moreButton: 'swatch-more',\r\n                loader: 'swatch-option-loading'\r\n            },\r\n            // option's json config\r\n            jsonConfig: {},\r\n\r\n            // swatch's json config\r\n            jsonSwatchConfig: {},\r\n\r\n            // selector of parental block of prices and swatches (need to know where to seek for price block)\r\n            selectorProduct: '.product-info-main',\r\n\r\n            // selector of price wrapper (need to know where set price)\r\n            selectorProductPrice: '[data-role=priceBox]',\r\n\r\n            //selector of product images gallery wrapper\r\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\r\n\r\n            // selector of category product tile wrapper\r\n            selectorProductTile: '.product-item',\r\n\r\n            // number of controls to show (false or zero = show all)\r\n            numberToShow: false,\r\n\r\n            // show only swatch controls\r\n            onlySwatches: false,\r\n\r\n            // enable label for control\r\n            enableControlLabel: true,\r\n\r\n            // control label id\r\n            controlLabelId: '',\r\n\r\n            // text for more button\r\n            moreButtonText: $t('More'),\r\n\r\n            // Callback url for media\r\n            mediaCallback: '',\r\n\r\n            // Local media cache\r\n            mediaCache: {},\r\n\r\n            // Cache for BaseProduct images. Needed when option unset\r\n            mediaGalleryInitial: [{}],\r\n\r\n            // Use ajax to get image data\r\n            useAjax: false,\r\n\r\n            /**\r\n             * Defines the mechanism of how images of a gallery should be\r\n             * updated when user switches between configurations of a product.\r\n             *\r\n             * As for now value of this option can be either 'replace' or 'prepend'.\r\n             *\r\n             * @type {String}\r\n             */\r\n            gallerySwitchStrategy: 'replace',\r\n\r\n            // whether swatches are rendered in product list or on product page\r\n            inProductList: false,\r\n\r\n            // sly-old-price block selector\r\n            slyOldPriceSelector: '.sly-old-price',\r\n\r\n            // tier prise selectors start\r\n            tierPriceTemplateSelector: '#tier-prices-template',\r\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\r\n            tierPriceTemplate: '',\r\n            // tier prise selectors end\r\n\r\n            // A price label selector\r\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label'\r\n        },\r\n\r\n        /**\r\n         * Get chosen product\r\n         *\r\n         * @returns int|null\r\n         */\r\n        getProduct: function () {\r\n            var products = this._CalcProducts();\r\n\r\n            return _.isArray(products) ? products[0] : null;\r\n        },\r\n\r\n        /**\r\n         * Get chosen product id\r\n         *\r\n         * @returns int|null\r\n         */\r\n        getProductId: function () {\r\n            var products = this._CalcProducts();\r\n\r\n            return _.isArray(products) && products.length === 1 ? products[0] : null;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            // Don't render the same set of swatches twice\r\n            if ($(this.element).attr('data-rendered')) {\r\n                return;\r\n            }\r\n\r\n            $(this.element).attr('data-rendered', true);\r\n\r\n            if (_.isEmpty(this.options.jsonConfig.images)) {\r\n                this.options.useAjax = true;\r\n                // creates debounced variant of _LoadProductMedia()\r\n                // to use it in events handlers instead of _LoadProductMedia()\r\n                this._debouncedLoadProductMedia = _.debounce(this._LoadProductMedia.bind(this), 500);\r\n            }\r\n\r\n            this.options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\r\n\r\n            if (this.options.jsonConfig !== '' && this.options.jsonSwatchConfig !== '') {\r\n                // store unsorted attributes\r\n                this.options.jsonConfig.mappedAttributes = _.clone(this.options.jsonConfig.attributes);\r\n                this._sortAttributes();\r\n                this._RenderControls();\r\n                this._setPreSelectedGallery();\r\n                $(this.element).trigger('swatch.initialized');\r\n            } else {\r\n                console.log('SwatchRenderer: No input data received');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _sortAttributes: function () {\r\n            this.options.jsonConfig.attributes = _.sortBy(this.options.jsonConfig.attributes, function (attribute) {\r\n                return parseInt(attribute.position, 10);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var options = this.options,\r\n                gallery = $('[data-gallery-role=gallery-placeholder]', '.column.main'),\r\n                productData = this._determineProductData(),\r\n                $main = productData.isInProductView ?\r\n                    this.element.parents('.column.main') :\r\n                    this.element.parents('.product-item-info');\r\n\r\n            if (productData.isInProductView) {\r\n                gallery.data('gallery') ?\r\n                    this._onGalleryLoaded(gallery) :\r\n                    gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\r\n            } else {\r\n                options.mediaGalleryInitial = [{\r\n                    'img': $main.find('.product-image-photo').attr('src')\r\n                }];\r\n            }\r\n\r\n            this.productForm = this.element.parents(this.options.selectorProductTile).find('form:first');\r\n            this.inProductList = this.productForm.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Determine product id and related data\r\n         *\r\n         * @returns {{productId: *, isInProductView: bool}}\r\n         * @private\r\n         */\r\n        _determineProductData: function () {\r\n            // Check if product is in a list of products.\r\n            var productId,\r\n                isInProductView = false;\r\n\r\n            productId = this.element.parents('.product-item-details')\r\n                    .find('.price-box.price-final_price').attr('data-product-id');\r\n\r\n            if (!productId) {\r\n                // Check individual product.\r\n                productId = $('[name=product]').val();\r\n                isInProductView = productId > 0;\r\n            }\r\n\r\n            return {\r\n                productId: productId,\r\n                isInProductView: isInProductView\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Render controls\r\n         *\r\n         * @private\r\n         */\r\n        _RenderControls: function () {\r\n            var $widget = this,\r\n                container = this.element,\r\n                classes = this.options.classes,\r\n                chooseText = this.options.jsonConfig.chooseText,\r\n                showTooltip = this.options.showTooltip;\r\n\r\n            $widget.optionsMap = {};\r\n\r\n            $.each(this.options.jsonConfig.attributes, function () {\r\n                var item = this,\r\n                    controlLabelId = 'option-label-' + item.code + '-' + item.id,\r\n                    options = $widget._RenderSwatchOptions(item, controlLabelId),\r\n                    select = $widget._RenderSwatchSelect(item, chooseText),\r\n                    input = $widget._RenderFormInput(item),\r\n                    listLabel = '',\r\n                    label = '';\r\n\r\n                // Show only swatch controls\r\n                if ($widget.options.onlySwatches && !$widget.options.jsonSwatchConfig.hasOwnProperty(item.id)) {\r\n                    return;\r\n                }\r\n\r\n                if ($widget.options.enableControlLabel) {\r\n                    label +=\r\n                        '<span id=\"' + controlLabelId + '\" class=\"' + classes.attributeLabelClass + '\">' +\r\n                        $('<i></i>').text(item.label).html() +\r\n                        '</span>' +\r\n                        '<span class=\"' + classes.attributeSelectedOptionLabelClass + '\"></span>';\r\n                }\r\n\r\n                if ($widget.inProductList) {\r\n                    $widget.productForm.append(input);\r\n                    input = '';\r\n                    listLabel = 'aria-label=\"' + $('<i></i>').text(item.label).html() + '\"';\r\n                } else {\r\n                    listLabel = 'aria-labelledby=\"' + controlLabelId + '\"';\r\n                }\r\n\r\n                // Create new control\r\n                container.append(\r\n                    '<div class=\"' + classes.attributeClass + ' ' + item.code + '\" ' +\r\n                         'data-attribute-code=\"' + item.code + '\" ' +\r\n                         'data-attribute-id=\"' + item.id + '\">' +\r\n                        label +\r\n                        '<div aria-activedescendant=\"\" ' +\r\n                             'tabindex=\"0\" ' +\r\n                             'aria-invalid=\"false\" ' +\r\n                             'aria-required=\"true\" ' +\r\n                             'role=\"listbox\" ' + listLabel +\r\n                             'class=\"' + classes.attributeOptionsWrapper + ' clearfix\">' +\r\n                            options + select +\r\n                        '</div>' + input +\r\n                    '</div>'\r\n                );\r\n\r\n                $widget.optionsMap[item.id] = {};\r\n\r\n                // Aggregate options array to hash (key => value)\r\n                $.each(item.options, function () {\r\n                    if (this.products.length > 0) {\r\n                        $widget.optionsMap[item.id][this.id] = {\r\n                            price: parseInt(\r\n                                $widget.options.jsonConfig.optionPrices[this.products[0]].finalPrice.amount,\r\n                                10\r\n                            ),\r\n                            products: this.products\r\n                        };\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (showTooltip === 1) {\r\n                // Connect Tooltip\r\n                container\r\n                    .find('[data-option-type=\"1\"], [data-option-type=\"2\"],' +\r\n                        ' [data-option-type=\"0\"], [data-option-type=\"3\"]')\r\n                    .SwatchRendererTooltip();\r\n            }\r\n\r\n            // Hide all elements below more button\r\n            $('.' + classes.moreButton).nextAll().hide();\r\n\r\n            // Handle events like click or change\r\n            $widget._EventListener();\r\n\r\n            // Rewind options\r\n            $widget._Rewind(container);\r\n\r\n            //Emulate click on all swatches from Request\r\n            $widget._EmulateSelected($.parseQuery());\r\n            $widget._EmulateSelected($widget._getSelectedAttributes());\r\n        },\r\n\r\n        /**\r\n         * Render swatch options by part of config\r\n         *\r\n         * @param {Object} config\r\n         * @param {String} controlId\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _RenderSwatchOptions: function (config, controlId) {\r\n            var optionConfig = this.options.jsonSwatchConfig[config.id],\r\n                optionClass = this.options.classes.optionClass,\r\n                sizeConfig = this.options.jsonSwatchImageSizeConfig,\r\n                moreLimit = parseInt(this.options.numberToShow, 10),\r\n                moreClass = this.options.classes.moreButton,\r\n                moreText = this.options.moreButtonText,\r\n                countAttributes = 0,\r\n                html = '';\r\n\r\n            if (!this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\r\n                return '';\r\n            }\r\n\r\n            $.each(config.options, function (index) {\r\n                var id,\r\n                    type,\r\n                    value,\r\n                    thumb,\r\n                    label,\r\n                    width,\r\n                    height,\r\n                    attr,\r\n                    swatchImageWidth,\r\n                    swatchImageHeight;\r\n\r\n                if (!optionConfig.hasOwnProperty(this.id)) {\r\n                    return '';\r\n                }\r\n\r\n                // Add more button\r\n                if (moreLimit === countAttributes++) {\r\n                    html += '<a href=\"#\" class=\"' + moreClass + '\"><span>' + moreText + '</span></a>';\r\n                }\r\n\r\n                id = this.id;\r\n                type = parseInt(optionConfig[id].type, 10);\r\n                value = optionConfig[id].hasOwnProperty('value') ?\r\n                    $('<i></i>').text(optionConfig[id].value).html() : '';\r\n                thumb = optionConfig[id].hasOwnProperty('thumb') ? optionConfig[id].thumb : '';\r\n                width = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.width : 110;\r\n                height = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.height : 90;\r\n                label = this.label ? $('<i></i>').text(this.label).html() : '';\r\n                attr =\r\n                    ' id=\"' + controlId + '-item-' + id + '\"' +\r\n                    ' index=\"' + index + '\"' +\r\n                    ' aria-checked=\"false\"' +\r\n                    ' aria-describedby=\"' + controlId + '\"' +\r\n                    ' tabindex=\"0\"' +\r\n                    ' data-option-type=\"' + type + '\"' +\r\n                    ' data-option-id=\"' + id + '\"' +\r\n                    ' data-option-label=\"' + label + '\"' +\r\n                    ' aria-label=\"' + label + '\"' +\r\n                    ' role=\"option\"' +\r\n                    ' data-thumb-width=\"' + width + '\"' +\r\n                    ' data-thumb-height=\"' + height + '\"';\r\n\r\n                attr += thumb !== '' ? ' data-option-tooltip-thumb=\"' + thumb + '\"' : '';\r\n                attr += value !== '' ? ' data-option-tooltip-value=\"' + value + '\"' : '';\r\n\r\n                swatchImageWidth = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.width : 30;\r\n                swatchImageHeight = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.height : 20;\r\n\r\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\r\n                    attr += ' data-option-empty=\"true\"';\r\n                }\r\n\r\n                if (type === 0) {\r\n                    // Text\r\n                    html += '<div class=\"' + optionClass + ' text\" ' + attr + '>' + (value ? value : label) +\r\n                        '</div>';\r\n                } else if (type === 1) {\r\n                    // Color\r\n                    html += '<div class=\"' + optionClass + ' color\" ' + attr +\r\n                        ' style=\"background: ' + value +\r\n                        ' no-repeat center; background-size: initial;\">' + '' +\r\n                        '</div>';\r\n                } else if (type === 2) {\r\n                    // Image\r\n                    html += '<div class=\"' + optionClass + ' image\" ' + attr +\r\n                        ' style=\"background: url(' + value + ') no-repeat center; background-size: initial;width:' +\r\n                        swatchImageWidth + 'px; height:' + swatchImageHeight + 'px\">' + '' +\r\n                        '</div>';\r\n                } else if (type === 3) {\r\n                    // Clear\r\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '></div>';\r\n                } else {\r\n                    // Default\r\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '>' + label + '</div>';\r\n                }\r\n            });\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Render select by part of config\r\n         *\r\n         * @param {Object} config\r\n         * @param {String} chooseText\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _RenderSwatchSelect: function (config, chooseText) {\r\n            var html;\r\n\r\n            if (this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\r\n                return '';\r\n            }\r\n\r\n            html =\r\n                '<select class=\"' + this.options.classes.selectClass + ' ' + config.code + '\">' +\r\n                '<option value=\"0\" data-option-id=\"0\">' + chooseText + '</option>';\r\n\r\n            $.each(config.options, function () {\r\n                var label = this.label,\r\n                    attr = ' value=\"' + this.id + '\" data-option-id=\"' + this.id + '\"';\r\n\r\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\r\n                    attr += ' data-option-empty=\"true\"';\r\n                }\r\n\r\n                html += '<option ' + attr + '>' + label + '</option>';\r\n            });\r\n\r\n            html += '</select>';\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Input for submit form.\r\n         * This control shouldn't have \"type=hidden\", \"display: none\" for validation work :(\r\n         *\r\n         * @param {Object} config\r\n         * @private\r\n         */\r\n        _RenderFormInput: function (config) {\r\n            return '<input class=\"' + this.options.classes.attributeInput + ' super-attribute-select\" ' +\r\n                'name=\"super_attribute[' + config.id + ']\" ' +\r\n                'type=\"text\" ' +\r\n                'value=\"\" ' +\r\n                'data-selector=\"super_attribute[' + config.id + ']\" ' +\r\n                'data-validate=\"{required: true}\" ' +\r\n                'aria-required=\"true\" ' +\r\n                'aria-invalid=\"false\">';\r\n        },\r\n\r\n        /**\r\n         * Event listener\r\n         *\r\n         * @private\r\n         */\r\n        _EventListener: function () {\r\n            var $widget = this,\r\n                options = this.options.classes,\r\n                target;\r\n\r\n            $widget.element.on('click', '.' + options.optionClass, function () {\r\n                return $widget._OnClick($(this), $widget);\r\n            });\r\n\r\n            $widget.element.on('change', '.' + options.selectClass, function () {\r\n                return $widget._OnChange($(this), $widget);\r\n            });\r\n\r\n            $widget.element.on('click', '.' + options.moreButton, function (e) {\r\n                e.preventDefault();\r\n\r\n                return $widget._OnMoreClick($(this));\r\n            });\r\n\r\n            $widget.element.on('keydown', function (e) {\r\n                if (e.which === 13) {\r\n                    target = $(e.target);\r\n\r\n                    if (target.is('.' + options.optionClass)) {\r\n                        return $widget._OnClick(target, $widget);\r\n                    } else if (target.is('.' + options.selectClass)) {\r\n                        return $widget._OnChange(target, $widget);\r\n                    } else if (target.is('.' + options.moreButton)) {\r\n                        e.preventDefault();\r\n\r\n                        return $widget._OnMoreClick(target);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Load media gallery using ajax or json config.\r\n         *\r\n         * @private\r\n         */\r\n        _loadMedia: function () {\r\n            var $main = this.inProductList ?\r\n                    this.element.parents('.product-item-info') :\r\n                    this.element.parents('.column.main'),\r\n                images;\r\n\r\n            if (this.options.useAjax) {\r\n                this._debouncedLoadProductMedia();\r\n            }  else {\r\n                images = this.options.jsonConfig.images[this.getProduct()];\r\n\r\n                if (!images) {\r\n                    images = this.options.mediaGalleryInitial;\r\n                }\r\n                this.updateBaseImage(this._sortImages(images), $main, !this.inProductList);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sorting images array\r\n         *\r\n         * @private\r\n         */\r\n        _sortImages: function (images) {\r\n            return _.sortBy(images, function (image) {\r\n                return parseInt(image.position, 10);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Event for swatch options\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $widget\r\n         * @private\r\n         */\r\n        _OnClick: function ($this, $widget) {\r\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\r\n                $wrapper = $this.parents('.' + $widget.options.classes.attributeOptionsWrapper),\r\n                $label = $parent.find('.' + $widget.options.classes.attributeSelectedOptionLabelClass),\r\n                attributeId = $parent.data('attribute-id'),\r\n                $input = $parent.find('.' + $widget.options.classes.attributeInput),\r\n                checkAdditionalData = JSON.parse(this.options.jsonSwatchConfig[attributeId]['additional_data']),\r\n                $priceBox = $widget.element.parents($widget.options.selectorProduct)\r\n                    .find(this.options.selectorProductPrice);\r\n\r\n            if ($widget.inProductList) {\r\n                $input = $widget.productForm.find(\r\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\r\n                );\r\n            }\r\n\r\n            if ($this.hasClass('disabled')) {\r\n                return;\r\n            }\r\n\r\n            if ($this.hasClass('selected')) {\r\n                $parent.removeAttr('data-option-selected').find('.selected').removeClass('selected');\r\n                $input.val('');\r\n                $label.text('');\r\n                $this.attr('aria-checked', false);\r\n            } else {\r\n                $parent.attr('data-option-selected', $this.data('option-id')).find('.selected').removeClass('selected');\r\n                $label.text($this.data('option-label'));\r\n                $input.val($this.data('option-id'));\r\n                $input.attr('data-attr-name', this._getAttributeCodeById(attributeId));\r\n                $this.addClass('selected');\r\n                $widget._toggleCheckedAttributes($this, $wrapper);\r\n            }\r\n\r\n            $widget._Rebuild();\r\n\r\n            if ($priceBox.is(':data(mage-priceBox)')) {\r\n                $widget._UpdatePrice();\r\n            }\r\n\r\n            $(document).trigger('updateMsrpPriceBlock',\r\n                [\r\n                    this._getSelectedOptionPriceIndex(),\r\n                    $widget.options.jsonConfig.optionPrices,\r\n                    $priceBox\r\n                ]);\r\n\r\n            if (parseInt(checkAdditionalData['update_product_preview_image'], 10) === 1) {\r\n                $widget._loadMedia();\r\n            }\r\n\r\n            $input.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Get selected option price index\r\n         *\r\n         * @return {String|undefined}\r\n         * @private\r\n         */\r\n        _getSelectedOptionPriceIndex: function () {\r\n            var allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\r\n\r\n            if (_.isEmpty(allowedProduct)) {\r\n                return undefined;\r\n            }\r\n\r\n            return allowedProduct;\r\n        },\r\n\r\n        /**\r\n         * Get human readable attribute code (eg. size, color) by it ID from configuration\r\n         *\r\n         * @param {Number} attributeId\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getAttributeCodeById: function (attributeId) {\r\n            var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\r\n\r\n            return attribute ? attribute.code : attributeId;\r\n        },\r\n\r\n        /**\r\n         * Toggle accessibility attributes\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $wrapper\r\n         * @private\r\n         */\r\n        _toggleCheckedAttributes: function ($this, $wrapper) {\r\n            $wrapper.attr('aria-activedescendant', $this.attr('id'))\r\n                    .find('.' + this.options.classes.optionClass).attr('aria-checked', false);\r\n            $this.attr('aria-checked', true);\r\n        },\r\n\r\n        /**\r\n         * Event for select\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $widget\r\n         * @private\r\n         */\r\n        _OnChange: function ($this, $widget) {\r\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\r\n                attributeId = $parent.data('attribute-id'),\r\n                $input = $parent.find('.' + $widget.options.classes.attributeInput);\r\n\r\n            if ($widget.productForm.length > 0) {\r\n                $input = $widget.productForm.find(\r\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\r\n                );\r\n            }\r\n\r\n            if ($this.val() > 0) {\r\n                $parent.attr('data-option-selected', $this.val());\r\n                $input.val($this.val());\r\n            } else {\r\n                $parent.removeAttr('data-option-selected');\r\n                $input.val('');\r\n            }\r\n\r\n            $widget._Rebuild();\r\n            $widget._UpdatePrice();\r\n            $widget._loadMedia();\r\n            $input.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Event for more switcher\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _OnMoreClick: function ($this) {\r\n            $this.nextAll().show();\r\n            $this.blur().remove();\r\n        },\r\n\r\n        /**\r\n         * Rewind options for controls\r\n         *\r\n         * @private\r\n         */\r\n        _Rewind: function (controls) {\r\n            controls.find('div[data-option-id], option[data-option-id]').removeClass('disabled').removeAttr('disabled');\r\n            controls.find('div[data-option-empty], option[data-option-empty]')\r\n                .attr('disabled', true)\r\n                .addClass('disabled')\r\n                .attr('tabindex', '-1');\r\n        },\r\n\r\n        /**\r\n         * Rebuild container\r\n         *\r\n         * @private\r\n         */\r\n        _Rebuild: function () {\r\n            var $widget = this,\r\n                controls = $widget.element.find('.' + $widget.options.classes.attributeClass + '[data-attribute-id]'),\r\n                selected = controls.filter('[data-option-selected]');\r\n\r\n            // Enable all options\r\n            $widget._Rewind(controls);\r\n\r\n            // done if nothing selected\r\n            if (selected.length <= 0) {\r\n                return;\r\n            }\r\n\r\n            // Disable not available options\r\n            controls.each(function () {\r\n                var $this = $(this),\r\n                    id = $this.data('attribute-id'),\r\n                    products = $widget._CalcProducts(id);\r\n\r\n                if (selected.length === 1 && selected.first().data('attribute-id') === id) {\r\n                    return;\r\n                }\r\n\r\n                $this.find('[data-option-id]').each(function () {\r\n                    var $element = $(this),\r\n                        option = $element.data('option-id');\r\n\r\n                    if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option) ||\r\n                        $element.hasClass('selected') ||\r\n                        $element.is(':selected')) {\r\n                        return;\r\n                    }\r\n\r\n                    if (_.intersection(products, $widget.optionsMap[id][option].products).length <= 0) {\r\n                        $element.attr('disabled', true).addClass('disabled');\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get selected product list\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _CalcProducts: function ($skipAttributeId) {\r\n            var $widget = this,\r\n                selectedOptions = '.' + $widget.options.classes.attributeClass + '[data-option-selected]',\r\n                products = [];\r\n\r\n            // Generate intersection of products\r\n            $widget.element.find(selectedOptions).each(function () {\r\n                var id = $(this).data('attribute-id'),\r\n                    option = $(this).attr('data-option-selected');\r\n\r\n                if ($skipAttributeId !== undefined && $skipAttributeId === id) {\r\n                    return;\r\n                }\r\n\r\n                if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option)) {\r\n                    return;\r\n                }\r\n\r\n                if (products.length === 0) {\r\n                    products = $widget.optionsMap[id][option].products;\r\n                } else {\r\n                    products = _.intersection(products, $widget.optionsMap[id][option].products);\r\n                }\r\n            });\r\n\r\n            return products;\r\n        },\r\n\r\n        /**\r\n         * Update total price\r\n         *\r\n         * @private\r\n         */\r\n        _UpdatePrice: function () {\r\n            var $widget = this,\r\n                $product = $widget.element.parents($widget.options.selectorProduct),\r\n                $productPrice = $product.find(this.options.selectorProductPrice),\r\n                result = $widget._getNewPrices(),\r\n                tierPriceHtml,\r\n                isShow;\r\n\r\n            $productPrice.trigger(\r\n                'updatePrice',\r\n                {\r\n                    'prices': $widget._getPrices(result, $productPrice.priceBox('option').prices)\r\n                }\r\n            );\r\n\r\n            isShow = typeof result != 'undefined' && result.oldPrice.amount !== result.finalPrice.amount;\r\n\r\n            $productPrice.find('span:first').toggleClass('special-price', isShow);\r\n\r\n            $product.find(this.options.slyOldPriceSelector)[isShow ? 'show' : 'hide']();\r\n\r\n            if (typeof result != 'undefined' && result.tierPrices && result.tierPrices.length) {\r\n                if (this.options.tierPriceTemplate) {\r\n                    tierPriceHtml = mageTemplate(\r\n                        this.options.tierPriceTemplate,\r\n                        {\r\n                            'tierPrices': result.tierPrices,\r\n                            '$t': $t,\r\n                            'currencyFormat': this.options.jsonConfig.currencyFormat,\r\n                            'priceUtils': priceUtils\r\n                        }\r\n                    );\r\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\r\n                }\r\n            } else {\r\n                $(this.options.tierPriceBlockSelector).hide();\r\n            }\r\n\r\n            $(this.options.normalPriceLabelSelector).hide();\r\n\r\n            _.each($('.' + this.options.classes.attributeOptionsWrapper), function (attribute) {\r\n                if ($(attribute).find('.' + this.options.classes.optionClass + '.selected').length === 0) {\r\n                    if ($(attribute).find('.' + this.options.classes.selectClass).length > 0) {\r\n                        _.each($(attribute).find('.' + this.options.classes.selectClass), function (dropdown) {\r\n                            if ($(dropdown).val() === '0') {\r\n                                $(this.options.normalPriceLabelSelector).show();\r\n                            }\r\n                        }.bind(this));\r\n                    } else {\r\n                        $(this.options.normalPriceLabelSelector).show();\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Get new prices for selected options\r\n         *\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getNewPrices: function () {\r\n            var $widget = this,\r\n                newPrices = $widget.options.jsonConfig.prices,\r\n                allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\r\n\r\n            if (!_.isEmpty(allowedProduct)) {\r\n                newPrices = this.options.jsonConfig.optionPrices[allowedProduct];\r\n            }\r\n\r\n            return newPrices;\r\n        },\r\n\r\n        /**\r\n         * Get prices\r\n         *\r\n         * @param {Object} newPrices\r\n         * @param {Object} displayPrices\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getPrices: function (newPrices, displayPrices) {\r\n            var $widget = this;\r\n\r\n            if (_.isEmpty(newPrices)) {\r\n                newPrices = $widget._getNewPrices();\r\n            }\r\n            _.each(displayPrices, function (price, code) {\r\n\r\n                if (newPrices[code]) {\r\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\r\n                }\r\n            });\r\n\r\n            return displayPrices;\r\n        },\r\n\r\n        /**\r\n         * Get product with minimum price from selected options.\r\n         *\r\n         * @param {Array} allowedProducts\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\r\n            var optionPrices = this.options.jsonConfig.optionPrices,\r\n                product = {},\r\n                optionFinalPrice, optionMinPrice;\r\n\r\n            _.each(allowedProducts, function (allowedProduct) {\r\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\r\n\r\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\r\n                    optionMinPrice = optionFinalPrice;\r\n                    product = allowedProduct;\r\n                }\r\n            }, this);\r\n\r\n            return product;\r\n        },\r\n\r\n        /**\r\n         * Gets all product media and change current to the needed one\r\n         *\r\n         * @private\r\n         */\r\n        _LoadProductMedia: function () {\r\n            var $widget = this,\r\n                $this = $widget.element,\r\n                productData = this._determineProductData(),\r\n                mediaCallData,\r\n                mediaCacheKey,\r\n\r\n                /**\r\n                 * Processes product media data\r\n                 *\r\n                 * @param {Object} data\r\n                 * @returns void\r\n                 */\r\n                mediaSuccessCallback = function (data) {\r\n                    if (!(mediaCacheKey in $widget.options.mediaCache)) {\r\n                        $widget.options.mediaCache[mediaCacheKey] = data;\r\n                    }\r\n                    $widget._ProductMediaCallback($this, data, productData.isInProductView);\r\n                    setTimeout(function () {\r\n                        $widget._DisableProductMediaLoader($this);\r\n                    }, 300);\r\n                };\r\n\r\n            if (!$widget.options.mediaCallback) {\r\n                return;\r\n            }\r\n\r\n            mediaCallData = {\r\n                'product_id': this.getProduct()\r\n            };\r\n\r\n            mediaCacheKey = JSON.stringify(mediaCallData);\r\n\r\n            if (mediaCacheKey in $widget.options.mediaCache) {\r\n                $widget._XhrKiller();\r\n                $widget._EnableProductMediaLoader($this);\r\n                mediaSuccessCallback($widget.options.mediaCache[mediaCacheKey]);\r\n            } else {\r\n                mediaCallData.isAjax = true;\r\n                $widget._XhrKiller();\r\n                $widget._EnableProductMediaLoader($this);\r\n                $widget.xhr = $.ajax({\r\n                    url: $widget.options.mediaCallback,\r\n                    cache: true,\r\n                    type: 'GET',\r\n                    dataType: 'json',\r\n                    data: mediaCallData,\r\n                    success: mediaSuccessCallback\r\n                }).done(function () {\r\n                    $widget._XhrKiller();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable loader\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _EnableProductMediaLoader: function ($this) {\r\n            var $widget = this;\r\n\r\n            if ($('body.catalog-product-view').length > 0) {\r\n                $this.parents('.column.main').find('.photo.image')\r\n                    .addClass($widget.options.classes.loader);\r\n            } else {\r\n                //Category View\r\n                $this.parents('.product-item-info').find('.product-image-photo')\r\n                    .addClass($widget.options.classes.loader);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable loader\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _DisableProductMediaLoader: function ($this) {\r\n            var $widget = this;\r\n\r\n            if ($('body.catalog-product-view').length > 0) {\r\n                $this.parents('.column.main').find('.photo.image')\r\n                    .removeClass($widget.options.classes.loader);\r\n            } else {\r\n                //Category View\r\n                $this.parents('.product-item-info').find('.product-image-photo')\r\n                    .removeClass($widget.options.classes.loader);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback for product media\r\n         *\r\n         * @param {Object} $this\r\n         * @param {String} response\r\n         * @param {Boolean} isInProductView\r\n         * @private\r\n         */\r\n        _ProductMediaCallback: function ($this, response, isInProductView) {\r\n            var $main = isInProductView ? $this.parents('.column.main') : $this.parents('.product-item-info'),\r\n                $widget = this,\r\n                images = [],\r\n\r\n                /**\r\n                 * Check whether object supported or not\r\n                 *\r\n                 * @param {Object} e\r\n                 * @returns {*|Boolean}\r\n                 */\r\n                support = function (e) {\r\n                    return e.hasOwnProperty('large') && e.hasOwnProperty('medium') && e.hasOwnProperty('small');\r\n                };\r\n\r\n            if (_.size($widget) < 1 || !support(response)) {\r\n                this.updateBaseImage(this.options.mediaGalleryInitial, $main, isInProductView);\r\n\r\n                return;\r\n            }\r\n\r\n            images.push({\r\n                full: response.large,\r\n                img: response.medium,\r\n                thumb: response.small,\r\n                isMain: true\r\n            });\r\n\r\n            if (response.hasOwnProperty('gallery')) {\r\n                $.each(response.gallery, function () {\r\n                    if (!support(this) || response.large === this.large) {\r\n                        return;\r\n                    }\r\n                    images.push({\r\n                        full: this.large,\r\n                        img: this.medium,\r\n                        thumb: this.small\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateBaseImage(images, $main, isInProductView);\r\n        },\r\n\r\n        /**\r\n         * Check if images to update are initial and set their type\r\n         * @param {Array} images\r\n         */\r\n        _setImageType: function (images) {\r\n            var initial = this.options.mediaGalleryInitial[0].img;\r\n\r\n            if (images[0].img === initial) {\r\n                images = $.extend(true, [], this.options.mediaGalleryInitial);\r\n            } else {\r\n                images.map(function (img) {\r\n                    if (!img.type) {\r\n                        img.type = 'image';\r\n                    }\r\n                });\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * Update [gallery-placeholder] or [product-image-photo]\r\n         * @param {Array} images\r\n         * @param {jQuery} context\r\n         * @param {Boolean} isInProductView\r\n         */\r\n        updateBaseImage: function (images, context, isInProductView) {\r\n            var justAnImage = images[0],\r\n                initialImages = this.options.mediaGalleryInitial,\r\n                imagesToUpdate,\r\n                gallery = context.find(this.options.mediaGallerySelector).data('gallery'),\r\n                isInitial;\r\n\r\n            if (isInProductView) {\r\n                if (_.isUndefined(gallery)) {\r\n                    context.find(this.options.mediaGallerySelector).on('gallery:loaded', function () {\r\n                        this.updateBaseImage(images, context, isInProductView);\r\n                    }.bind(this));\r\n\r\n                    return;\r\n                }\r\n\r\n                imagesToUpdate = images.length ? this._setImageType($.extend(true, [], images)) : [];\r\n                isInitial = _.isEqual(imagesToUpdate, initialImages);\r\n\r\n                if (this.options.gallerySwitchStrategy === 'prepend' && !isInitial) {\r\n                    imagesToUpdate = imagesToUpdate.concat(initialImages);\r\n                }\r\n\r\n                imagesToUpdate = this._setImageIndex(imagesToUpdate);\r\n\r\n                gallery.updateData(imagesToUpdate);\r\n                this._addFotoramaVideoEvents(isInitial);\r\n            } else if (justAnImage && justAnImage.img) {\r\n                context.find('.product-image-photo').attr('src', justAnImage.img);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add video events\r\n         *\r\n         * @param {Boolean} isInitial\r\n         * @private\r\n         */\r\n        _addFotoramaVideoEvents: function (isInitial) {\r\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\r\n                return;\r\n            }\r\n\r\n            if (isInitial) {\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\r\n\r\n                return;\r\n            }\r\n\r\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\r\n                selectedOption: this.getProduct(),\r\n                dataMergeStrategy: this.options.gallerySwitchStrategy\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set correct indexes for image set.\r\n         *\r\n         * @param {Array} images\r\n         * @private\r\n         */\r\n        _setImageIndex: function (images) {\r\n            var length = images.length,\r\n                i;\r\n\r\n            for (i = 0; length > i; i++) {\r\n                images[i].i = i + 1;\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * Kill doubled AJAX requests\r\n         *\r\n         * @private\r\n         */\r\n        _XhrKiller: function () {\r\n            var $widget = this;\r\n\r\n            if ($widget.xhr !== undefined && $widget.xhr !== null) {\r\n                $widget.xhr.abort();\r\n                $widget.xhr = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Emulate mouse click on all swatches that should be selected\r\n         * @param {Object} [selectedAttributes]\r\n         * @private\r\n         */\r\n        _EmulateSelected: function (selectedAttributes) {\r\n            $.each(selectedAttributes, $.proxy(function (attributeCode, optionId) {\r\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\r\n                    '[data-attribute-code=\"' + attributeCode + '\"] [data-option-id=\"' + optionId + '\"]'),\r\n                    parentInput = elem.parent();\r\n\r\n                if (elem.hasClass('selected')) {\r\n                    return;\r\n                }\r\n\r\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\r\n                    parentInput.val(optionId);\r\n                    parentInput.trigger('change');\r\n                } else {\r\n                    elem.trigger('click');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Emulate mouse click or selection change on all swatches that should be selected\r\n         * @param {Object} [selectedAttributes]\r\n         * @private\r\n         */\r\n        _EmulateSelectedByAttributeId: function (selectedAttributes) {\r\n            $.each(selectedAttributes, $.proxy(function (attributeId, optionId) {\r\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\r\n                    '[data-attribute-id=\"' + attributeId + '\"] [data-option-id=\"' + optionId + '\"]'),\r\n                    parentInput = elem.parent();\r\n\r\n                if (elem.hasClass('selected')) {\r\n                    return;\r\n                }\r\n\r\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\r\n                    parentInput.val(optionId);\r\n                    parentInput.trigger('change');\r\n                } else {\r\n                    elem.trigger('click');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Get default options values settings with either URL query parameters\r\n         * @private\r\n         */\r\n        _getSelectedAttributes: function () {\r\n            var hashIndex = window.location.href.indexOf('#'),\r\n                selectedAttributes = {},\r\n                params;\r\n\r\n            if (hashIndex !== -1) {\r\n                params = $.parseQuery(window.location.href.substr(hashIndex + 1));\r\n\r\n                selectedAttributes = _.invert(_.mapObject(_.invert(params), function (attributeId) {\r\n                    var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\r\n\r\n                    return attribute ? attribute.code : attributeId;\r\n                }.bind(this)));\r\n            }\r\n\r\n            return selectedAttributes;\r\n        },\r\n\r\n        /**\r\n         * Callback which fired after gallery gets initialized.\r\n         *\r\n         * @param {HTMLElement} element - DOM element associated with a gallery.\r\n         */\r\n        _onGalleryLoaded: function (element) {\r\n            var galleryObject = element.data('gallery');\r\n\r\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\r\n        },\r\n\r\n        /**\r\n         * Sets mediaCache for cases when jsonConfig contains preSelectedGallery on layered navigation result pages\r\n         *\r\n         * @private\r\n         */\r\n        _setPreSelectedGallery: function () {\r\n            var mediaCallData;\r\n\r\n            if (this.options.jsonConfig.preSelectedGallery) {\r\n                mediaCallData = {\r\n                    'product_id': this.getProduct()\r\n                };\r\n\r\n                this.options.mediaCache[JSON.stringify(mediaCallData)] = this.options.jsonConfig.preSelectedGallery;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.SwatchRenderer;\r\n});\r\n","Magento_Swatches/js/configurable-customer-data.js":"require([\r\n    'jquery',\r\n    'Magento_ConfigurableProduct/js/options-updater'\r\n], function ($, Updater) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n            formSelector: '#product_addtocart_form',\r\n            swatchSelector: '.swatch-opt'\r\n        },\r\n        swatchWidgetName = 'mageSwatchRenderer',\r\n        widgetInitEvent = 'swatch.initialized',\r\n\r\n    /**\r\n    * Sets all configurable swatch attribute's selected values\r\n    */\r\n    updateSwatchOptions = function () {\r\n        var swatchWidget = $(selectors.swatchSelector).data(swatchWidgetName);\r\n\r\n        if (!swatchWidget || !swatchWidget._EmulateSelectedByAttributeId) {\r\n            return;\r\n        }\r\n        swatchWidget._EmulateSelectedByAttributeId(this.productOptions);\r\n    },\r\n    updater = new Updater(widgetInitEvent, updateSwatchOptions);\r\n\r\n    updater.listen();\r\n});\r\n","Magento_Swatches/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\nrequire([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add selected swatch attributes to redirect url\r\n     *\r\n     * @see Magento_Catalog/js/catalog-add-to-cart\r\n     */\r\n    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {\r\n        $(data.form).find('[name*=\"super\"]').each(function (index, item) {\r\n            var $item = $(item),\r\n                attr;\r\n\r\n            if ($item.attr('data-attr-name')) {\r\n                attr = $item.attr('data-attr-name');\r\n            } else {\r\n                attr = $item.parent().attr('attribute-code');\r\n            }\r\n            data.redirectParameters.push(attr + '=' + $item.val());\r\n\r\n        });\r\n    });\r\n});\r\n","Magento_ProductAlert/js/form-submitter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        $(element).submit();\r\n    };\r\n});\r\n","Magento_Payment/js/cc-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.creditCardType', {\r\n        options: {\r\n            typeCodes: ['SS', 'SM', 'SO'] // Type codes for Switch/Maestro/Solo credit cards.\r\n        },\r\n\r\n        /**\r\n         * Bind change handler to select element and trigger the event to show/hide\r\n         * the Switch/Maestro or Solo credit card type container for those credit card types.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(this._toggleCardType, this)).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Toggle the Switch/Maestro and Solo credit card type container depending on which\r\n         * credit card type is selected.\r\n         * @private\r\n         */\r\n        _toggleCardType: function () {\r\n            $(this.options.creditCardTypeContainer)\r\n                .toggle($.inArray(this.element.val(), this.options.typeCodes) !== -1);\r\n        }\r\n    });\r\n\r\n    return $.mage.creditCardType;\r\n});\r\n","Magento_Payment/js/transparent.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Payment/js/model/credit-card-validation/validator',\r\n    'Magento_Checkout/js/model/full-screen-loader'\r\n], function ($, mageTemplate, alert, ui, validator, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    $.widget('mage.transparent', {\r\n        options: {\r\n            context: null,\r\n            placeOrderSelector: '[data-role=\"review-save\"]',\r\n            paymentFormSelector: '#co-payment-form',\r\n            updateSelectorPrefix: '#checkout-',\r\n            updateSelectorSuffix: '-load',\r\n            hiddenFormTmpl:\r\n                '<form target=\"<%= data.target %>\" action=\"<%= data.action %>\" method=\"POST\" ' +\r\n                'hidden enctype=\"application/x-www-form-urlencoded\" class=\"no-display\">' +\r\n                    '<% _.each(data.inputs, function(val, key){ %>' +\r\n                    '<input value=\"<%= val %>\" name=\"<%= key %>\" type=\"hidden\">' +\r\n                    '<% }); %>' +\r\n                '</form>',\r\n            reviewAgreementForm: '#checkout-agreements',\r\n            cgiUrl: null,\r\n            orderSaveUrl: null,\r\n            controller: null,\r\n            gateway: null,\r\n            dateDelim: null,\r\n            cardFieldsMap: null,\r\n            expireYearLength: 2\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.hiddenFormTmpl = mageTemplate(this.options.hiddenFormTmpl);\r\n\r\n            if (this.options.context) {\r\n                this.options.context.setPlaceOrderHandler($.proxy(this._orderSave, this));\r\n                this.options.context.setValidateHandler($.proxy(this._validateHandler, this));\r\n            } else {\r\n                $(this.options.placeOrderSelector)\r\n                    .off('click')\r\n                    .on('click', $.proxy(this._placeOrderHandler, this));\r\n            }\r\n\r\n            this.element.validation();\r\n            $('[data-container=\"' + this.options.gateway + '-cc-number\"]').on('focusout', function () {\r\n                $(this).valid();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * handler for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _validateHandler: function () {\r\n            return this.element.validation && this.element.validation('isValid');\r\n        },\r\n\r\n        /**\r\n         * handler for Place Order button to call gateway for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _placeOrderHandler: function () {\r\n            if (this._validateHandler()) {\r\n                this._orderSave();\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Save order and generate post data for gateway call\r\n         * @private\r\n         */\r\n        _orderSave: function () {\r\n            var postData = $(this.options.paymentFormSelector).serialize();\r\n\r\n            if ($(this.options.reviewAgreementForm).length) {\r\n                postData += '&' + $(this.options.reviewAgreementForm).serialize();\r\n            }\r\n            postData += '&controller=' + this.options.controller;\r\n            postData += '&cc_type=' + this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-type\"]'\r\n            ).val();\r\n\r\n            return $.ajax({\r\n                url: this.options.orderSaveUrl,\r\n                type: 'post',\r\n                context: this,\r\n                data: postData,\r\n                dataType: 'json',\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                beforeSend: function () {\r\n                    fullScreenLoader.startLoader();\r\n                },\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                success: function (response) {\r\n                    var preparedData,\r\n                        msg,\r\n\r\n                        /**\r\n                         * {Function}\r\n                         */\r\n                        alertActionHandler = function () {\r\n                            // default action\r\n                        };\r\n\r\n                    if (response.success && response[this.options.gateway]) {\r\n                        preparedData = this._preparePaymentData(\r\n                            response[this.options.gateway].fields,\r\n                            this.options.cardFieldsMap\r\n                        );\r\n                        this._postPaymentToGateway(preparedData);\r\n                    } else {\r\n                        fullScreenLoader.stopLoader(true);\r\n\r\n                        msg = response['error_messages'];\r\n\r\n                        if (this.options.context) {\r\n                            this.options.context.clearTimeout().fail();\r\n                            alertActionHandler = this.options.context.alertActionHandler;\r\n                        }\r\n\r\n                        if (typeof msg === 'object') {\r\n                            msg = msg.join('\\n');\r\n                        }\r\n\r\n                        if (msg) {\r\n                            alert(\r\n                                {\r\n                                    content: msg,\r\n                                    actions: {\r\n\r\n                                        /**\r\n                                         * {Function}\r\n                                         */\r\n                                        always: alertActionHandler\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }.bind(this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Post data to gateway for credit card validation\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _postPaymentToGateway: function (data) {\r\n            var tmpl,\r\n                iframeSelector = '[data-container=\"' + this.options.gateway + '-transparent-iframe\"]';\r\n\r\n            tmpl = this.hiddenFormTmpl({\r\n                data: {\r\n                    target: $(iframeSelector).attr('name'),\r\n                    action: this.options.cgiUrl,\r\n                    inputs: data\r\n                }\r\n            });\r\n            $(tmpl).appendTo($(iframeSelector)).submit();\r\n        },\r\n\r\n        /**\r\n         * Add credit card fields to post data for gateway\r\n         * @param {Object} data\r\n         * @param {Object} ccfields\r\n         * @private\r\n         */\r\n        _preparePaymentData: function (data, ccfields) {\r\n            var preparedata;\r\n\r\n            if (this.element.find('[data-container=\"' + this.options.gateway + '-cc-cvv\"]').length) {\r\n                data[ccfields.cccvv] = this.element.find(\r\n                    '[data-container=\"' + this.options.gateway + '-cc-cvv\"]'\r\n                ).val();\r\n            }\r\n            preparedata = this._prepareExpDate();\r\n            data[ccfields.ccexpdate] = preparedata.month + this.options.dateDelim + preparedata.year;\r\n            data[ccfields.ccnum] = this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-number\"]'\r\n            ).val();\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Grab Month and Year into one\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _prepareExpDate: function () {\r\n            var year = this.element.find('[data-container=\"' + this.options.gateway + '-cc-year\"]').val(),\r\n                month = parseInt(\r\n                    this.element.find('[data-container=\"' + this.options.gateway + '-cc-month\"]').val(),\r\n                    10\r\n                );\r\n\r\n            if (year.length > this.options.expireYearLength) {\r\n                year = year.substring(year.length - this.options.expireYearLength);\r\n            }\r\n\r\n            if (month < 10) {\r\n                month = '0' + month;\r\n            }\r\n\r\n            return {\r\n                month: month, year: year\r\n            };\r\n        }\r\n    });\r\n\r\n    return $.mage.transparent;\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/model/credit-card-validation/cvv-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n    'mage/translate'\r\n], function ($, cvvValidator, creditCardNumberValidator, yearValidator, monthValidator, creditCardData) {\r\n    'use strict';\r\n\r\n    $('.payment-method-content input[type=\"number\"]').on('keyup', function () {\r\n        if ($(this).val() < 0) {\r\n            $(this).val($(this).val().replace(/^-/, ''));\r\n        }\r\n    });\r\n\r\n    $.each({\r\n        'validate-card-type': [\r\n            function (number, item, allowedTypes) {\r\n                var cardInfo,\r\n                    i,\r\n                    l;\r\n\r\n                if (!creditCardNumberValidator(number).isValid) {\r\n                    return false;\r\n                }\r\n\r\n                cardInfo = creditCardNumberValidator(number).card;\r\n\r\n                for (i = 0, l = allowedTypes.length; i < l; i++) {\r\n                    if (cardInfo.title == allowedTypes[i].type) { //eslint-disable-line eqeqeq\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card type number.')\r\n        ],\r\n        'validate-card-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             *\r\n             * @param {*} number - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (number) {\r\n                return creditCardNumberValidator(number).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-card-date': [\r\n\r\n            /**\r\n             * Validate credit card expiration month\r\n             *\r\n             * @param {String} date - month\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return monthValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration month.')\r\n        ],\r\n        'validate-card-cvv': [\r\n\r\n            /**\r\n             * Validate cvv\r\n             *\r\n             * @param {String} cvv - card verification value\r\n             * @return {Boolean}\r\n             */\r\n            function (cvv) {\r\n                var maxLength = creditCardData.creditCard ? creditCardData.creditCard.code.size : 3;\r\n\r\n                return cvvValidator(cvv, maxLength).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-card-year': [\r\n\r\n            /**\r\n             * Validate credit card expiration year\r\n             *\r\n             * @param {String} date - year\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return yearValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration year.')\r\n        ]\r\n\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        creditCard: null,\r\n        creditCardNumber: null,\r\n        expirationMonth: null,\r\n        expirationYear: null,\r\n        cvvCode: null\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/cvv-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    /**\r\n     * CVV number validation.\r\n     * Validate digit count for CVV code.\r\n     *\r\n     * @param {*} value\r\n     * @param {Number} maxLength\r\n     * @return {Object}\r\n     */\r\n    return function (value, maxLength) {\r\n        var DEFAULT_LENGTH = 3;\r\n\r\n        maxLength = maxLength || DEFAULT_LENGTH;\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (value.length === maxLength) {\r\n            return resultWrapper(true, true);\r\n        }\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (value.length > maxLength) {\r\n            return resultWrapper(false, false);\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type'\r\n], function (utils, luhn10, creditCardTypes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} card\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} isValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(card, isPotentiallyValid, isValid) {\r\n        return {\r\n            card: card,\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var potentialTypes,\r\n            cardType,\r\n            valid,\r\n            i,\r\n            maxLength;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        value = value.replace(/\\s+/g, '');\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        potentialTypes = creditCardTypes.getCardTypes(value);\r\n\r\n        if (potentialTypes.length === 0) {\r\n            return resultWrapper(null, false, false);\r\n        } else if (potentialTypes.length !== 1) {\r\n            return resultWrapper(null, true, false);\r\n        }\r\n\r\n        cardType = potentialTypes[0];\r\n\r\n        if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\r\n            valid = true;\r\n        } else {\r\n            valid = luhn10(value);\r\n        }\r\n\r\n        for (i = 0; i < cardType.lengths.length; i++) {\r\n            if (cardType.lengths[i] === value.length) {\r\n                return resultWrapper(cardType, valid, valid);\r\n            }\r\n        }\r\n\r\n        maxLength = Math.max.apply(null, cardType.lengths);\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(cardType, true, false);\r\n        }\r\n\r\n        return resultWrapper(cardType, false, false);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator'\r\n], function (utils, parseDate, expirationMonth, expirationYear) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} month\r\n     * @param {*} year\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid, month, year) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid,\r\n            month: month,\r\n            year: year\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var date,\r\n            monthValid,\r\n            yearValid;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(false, false, null, null);\r\n        }\r\n\r\n        value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\r\n        date = parseDate(value);\r\n        monthValid = expirationMonth(date.month);\r\n        yearValid = expirationYear(date.year);\r\n\r\n        if (monthValid.isValid && yearValid.isValid) {\r\n            return resultWrapper(true, true, date.month, date.year);\r\n        }\r\n\r\n        if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\r\n            return resultWrapper(false, true, null, null);\r\n        }\r\n\r\n        return resultWrapper(false, false, null, null);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mageUtils'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var types = [\r\n        {\r\n            title: 'Visa',\r\n            type: 'VI',\r\n            pattern: '^4\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'MasterCard',\r\n            type: 'MC',\r\n            pattern: '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'American Express',\r\n            type: 'AE',\r\n            pattern: '^3([47]\\\\d*)?$',\r\n            isAmex: true,\r\n            gaps: [4, 10],\r\n            lengths: [15],\r\n            code: {\r\n                name: 'CID',\r\n                size: 4\r\n            }\r\n        },\r\n        {\r\n            title: 'Diners',\r\n            type: 'DN',\r\n            pattern: '^(3(0[0-5]|095|6|[8-9]))\\\\d*$',\r\n            gaps: [4, 10],\r\n            lengths: [14, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Discover',\r\n            type: 'DI',\r\n            pattern: '^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CID',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'JCB',\r\n            type: 'JCB',\r\n            pattern: '^35(2[8-9]|[3-8])\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'UnionPay',\r\n            type: 'UN',\r\n            pattern: '^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVN',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro International',\r\n            type: 'MI',\r\n            pattern: '^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro Domestic',\r\n            type: 'MD',\r\n            pattern: '^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Hipercard',\r\n            type: 'HC',\r\n            pattern: '^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [13, 16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Elo',\r\n            type: 'ELO',\r\n            pattern: '^((509091)|(636368)|(636297)|(504175)|(438935)|(40117[8-9])|(45763[1-2])|' +\r\n                '(457393)|(431274)|(50990[0-2])|(5099[7-9][0-9])|(50996[4-9])|(509[1-8][0-9][0-9])|' +\r\n                '(5090(0[0-2]|0[4-9]|1[2-9]|[24589][0-9]|3[1-9]|6[0-46-9]|7[0-24-9]))|' +\r\n                '(5067(0[0-24-8]|1[0-24-9]|2[014-9]|3[0-379]|4[0-9]|5[0-3]|6[0-5]|7[0-8]))|' +\r\n                '(6504(0[5-9]|1[0-9]|2[0-9]|3[0-9]))|' +\r\n                '(6504(8[5-9]|9[0-9])|6505(0[0-9]|1[0-9]|2[0-9]|3[0-8]))|' +\r\n                '(6505(4[1-9]|5[0-9]|6[0-9]|7[0-9]|8[0-9]|9[0-8]))|' +\r\n                '(6507(0[0-9]|1[0-8]))|(65072[0-7])|(6509(0[1-9]|1[0-9]|20))|' +\r\n                '(6516(5[2-9]|6[0-9]|7[0-9]))|(6550(0[0-9]|1[0-9]))|' +\r\n                '(6550(2[1-9]|3[0-9]|4[0-9]|5[0-8])))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Aura',\r\n            type: 'AU',\r\n            pattern: '^5078\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        }\r\n    ];\r\n\r\n    return {\r\n        /**\r\n         * @param {*} cardNumber\r\n         * @return {Array}\r\n         */\r\n        getCardTypes: function (cardNumber) {\r\n            var i, value,\r\n                result = [];\r\n\r\n            if (utils.isEmpty(cardNumber)) {\r\n                return result;\r\n            }\r\n\r\n            if (cardNumber === '') {\r\n                return $.extend(true, {}, types);\r\n            }\r\n\r\n            for (i = 0; i < types.length; i++) {\r\n                value = types[i];\r\n\r\n                if (new RegExp(value.pattern).test(cardNumber)) {\r\n                    result.push($.extend(true, {}, value));\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Luhn algorithm verification\r\n     */\r\n    return function (a, b, c, d, e) {\r\n        for (d = +a[b = a.length - 1], e = 0; b--;) {\r\n            c = +a[b];\r\n            d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\r\n        }\r\n\r\n        return !(d % 10);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var month,\r\n            monthValid;\r\n\r\n        if (value.replace(/\\s/g, '') === '' || value === '0') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (isNaN(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        month = parseInt(value, 10);\r\n        monthValid = month > 0 && month < 13;\r\n\r\n        return resultWrapper(monthValid, monthValid);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return function (value) {\r\n        var month, len;\r\n\r\n        if (value.match('/')) {\r\n            value = value.split(/\\s*\\/\\s*/g);\r\n\r\n            return {\r\n                month: value[0],\r\n                year: value.slice(1).join()\r\n            };\r\n        }\r\n\r\n        len = value[0] === '0' || value.length > 5 || value.length === 4 || value.length === 3 ? 2 : 1;\r\n        month = value.substr(0, len);\r\n\r\n        return {\r\n            month: month,\r\n            year: value.substr(month.length, 4)\r\n        };\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var currentYear = new Date().getFullYear(),\r\n            len = value.length,\r\n            valid,\r\n            expMaxLifetime = 19;\r\n\r\n        if (value.replace(/\\s/g, '') === '') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (len !== 4) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        value = parseInt(value, 10);\r\n        valid = value >= currentYear && value <= currentYear + expMaxLifetime;\r\n\r\n        return resultWrapper(valid, valid);\r\n    };\r\n});\r\n","Magento_Payment/js/view/payment/iframe.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/view/payment/cc-form',\r\n    'Magento_Ui/js/model/messageList',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Checkout/js/action/set-payment-information',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Ui/js/modal/alert'\r\n], function (\r\n    $,\r\n    Component,\r\n    messageList,\r\n    $t,\r\n    fullScreenLoader,\r\n    setPaymentInformationAction,\r\n    additionalValidators,\r\n    alert\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Payment/payment/iframe',\r\n            timeoutId: null,\r\n            timeoutMessage: 'Sorry, but something went wrong.'\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getSource: function () {\r\n            return window.checkoutConfig.payment.iframe.source[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getControllerName: function () {\r\n            return window.checkoutConfig.payment.iframe.controllerName[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getPlaceOrderUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.placeOrderUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCgiUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.cgiUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getSaveOrderUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.saveOrderUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getDateDelim: function () {\r\n            return window.checkoutConfig.payment.iframe.dateDelim[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCardFieldsMap: function () {\r\n            return window.checkoutConfig.payment.iframe.cardFieldsMap[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getExpireYearLength: function () {\r\n            return window.checkoutConfig.payment.iframe.expireYearLength[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @param {Object} parent\r\n         * @returns {Function}\r\n         */\r\n        originalPlaceOrder: function (parent) {\r\n            return parent.placeOrder.bind(parent);\r\n        },\r\n\r\n        /**\r\n         * @returns {Number}\r\n         */\r\n        getTimeoutTime: function () {\r\n            return window.checkoutConfig.payment.iframe.timeoutTime[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getTimeoutMessage: function () {\r\n            return $t(this.timeoutMessage);\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        placeOrder: function () {\r\n            var self = this;\r\n\r\n            if (this.validateHandler() &&\r\n                additionalValidators.validate() &&\r\n                this.isPlaceOrderActionAllowed() === true\r\n            ) {\r\n                fullScreenLoader.startLoader();\r\n\r\n                this.isPlaceOrderActionAllowed(false);\r\n\r\n                $.when(\r\n                    this.setPaymentInformation()\r\n                ).done(\r\n                    this.done.bind(this)\r\n                ).fail(\r\n                    this.fail.bind(this)\r\n                ).always(\r\n                    function () {\r\n                        self.isPlaceOrderActionAllowed(true);\r\n                    }\r\n                );\r\n\r\n                this.initTimeoutHandler();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        setPaymentInformation: function () {\r\n            return setPaymentInformationAction(\r\n                this.messageContainer,\r\n                {\r\n                    method: this.getCode()\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        initTimeoutHandler: function () {\r\n            this.timeoutId = setTimeout(\r\n                this.timeoutHandler.bind(this),\r\n                this.getTimeoutTime()\r\n            );\r\n\r\n            $(window).off('clearTimeout')\r\n                .on('clearTimeout', this.clearTimeout.bind(this));\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        clearTimeout: function () {\r\n            clearTimeout(this.timeoutId);\r\n            this.fail();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        timeoutHandler: function () {\r\n            this.clearTimeout();\r\n\r\n            alert(\r\n                {\r\n                    content: this.getTimeoutMessage(),\r\n                    actions: {\r\n\r\n                        /**\r\n                         * {Function}\r\n                         */\r\n                        always: this.alertActionHandler.bind(this)\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.fail();\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        alertActionHandler: function () {\r\n            fullScreenLoader.startLoader();\r\n            window.location.reload();\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        fail: function () {\r\n            fullScreenLoader.stopLoader();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        done: function () {\r\n            this.placeOrderHandler().fail(function () {\r\n                fullScreenLoader.stopLoader();\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Payment/js/view/payment/payments.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n], function (Component, rendererList) {\r\n    'use strict';\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'free',\r\n            component: 'Magento_Payment/js/view/payment/method-renderer/free-method'\r\n        }\r\n    );\r\n\r\n    /** Add view logic here if needed */\r\n    return Component.extend({});\r\n});\r\n","Magento_Payment/js/view/payment/cc-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n    'mage/translate'\r\n], function (_, Component, creditCardData, cardNumberValidator, $t) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            creditCardType: '',\r\n            creditCardExpYear: '',\r\n            creditCardExpMonth: '',\r\n            creditCardNumber: '',\r\n            creditCardSsStartMonth: '',\r\n            creditCardSsStartYear: '',\r\n            creditCardSsIssue: '',\r\n            creditCardVerificationNumber: '',\r\n            selectedCardType: null\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'creditCardType',\r\n                    'creditCardExpYear',\r\n                    'creditCardExpMonth',\r\n                    'creditCardNumber',\r\n                    'creditCardVerificationNumber',\r\n                    'creditCardSsStartMonth',\r\n                    'creditCardSsStartYear',\r\n                    'creditCardSsIssue',\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init component\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            //Set credit card number to credit card data object\r\n            this.creditCardNumber.subscribe(function (value) {\r\n                var result;\r\n\r\n                self.selectedCardType(null);\r\n\r\n                if (value === '' || value === null) {\r\n                    return false;\r\n                }\r\n                result = cardNumberValidator(value);\r\n\r\n                if (!result.isPotentiallyValid && !result.isValid) {\r\n                    return false;\r\n                }\r\n\r\n                if (result.card !== null) {\r\n                    self.selectedCardType(result.card.type);\r\n                    creditCardData.creditCard = result.card;\r\n                }\r\n\r\n                if (result.isValid) {\r\n                    creditCardData.creditCardNumber = value;\r\n                    self.creditCardType(result.card.type);\r\n                }\r\n            });\r\n\r\n            //Set expiration year to credit card data object\r\n            this.creditCardExpYear.subscribe(function (value) {\r\n                creditCardData.expirationYear = value;\r\n            });\r\n\r\n            //Set expiration month to credit card data object\r\n            this.creditCardExpMonth.subscribe(function (value) {\r\n                creditCardData.expirationMonth = value;\r\n            });\r\n\r\n            //Set cvv code to credit card data object\r\n            this.creditCardVerificationNumber.subscribe(function (value) {\r\n                creditCardData.cvvCode = value;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return 'cc';\r\n        },\r\n\r\n        /**\r\n         * Get data\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            return {\r\n                'method': this.item.method,\r\n                'additional_data': {\r\n                    'cc_cid': this.creditCardVerificationNumber(),\r\n                    'cc_ss_start_month': this.creditCardSsStartMonth(),\r\n                    'cc_ss_start_year': this.creditCardSsStartYear(),\r\n                    'cc_ss_issue': this.creditCardSsIssue(),\r\n                    'cc_type': this.creditCardType(),\r\n                    'cc_exp_year': this.creditCardExpYear(),\r\n                    'cc_exp_month': this.creditCardExpMonth(),\r\n                    'cc_number': this.creditCardNumber()\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Get list of available credit card types\r\n         * @returns {Object}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            return window.checkoutConfig.payment.ccform.availableTypes[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get payment icons\r\n         * @param {String} type\r\n         * @returns {Boolean}\r\n         */\r\n        getIcons: function (type) {\r\n            return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                window.checkoutConfig.payment.ccform.icons[type]\r\n                : false;\r\n        },\r\n\r\n        /**\r\n         * Get list of months\r\n         * @returns {Object}\r\n         */\r\n        getCcMonths: function () {\r\n            return window.checkoutConfig.payment.ccform.months[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get list of years\r\n         * @returns {Object}\r\n         */\r\n        getCcYears: function () {\r\n            return window.checkoutConfig.payment.ccform.years[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Check if current payment has verification\r\n         * @returns {Boolean}\r\n         */\r\n        hasVerification: function () {\r\n            return window.checkoutConfig.payment.ccform.hasVerification[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Boolean}\r\n         */\r\n        hasSsCardType: function () {\r\n            return window.checkoutConfig.payment.ccform.hasSsCardType[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get image url for CVV\r\n         * @returns {String}\r\n         */\r\n        getCvvImageUrl: function () {\r\n            return window.checkoutConfig.payment.ccform.cvvImageUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get image for CVV\r\n         * @returns {String}\r\n         */\r\n        getCvvImageHtml: function () {\r\n            return '<img src=\"' + this.getCvvImageUrl() +\r\n                '\" alt=\"' + $t('Card Verification Number Visual Reference') +\r\n                '\" title=\"' + $t('Card Verification Number Visual Reference') +\r\n                '\" />';\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Object}\r\n         */\r\n        getSsStartYears: function () {\r\n            return window.checkoutConfig.payment.ccform.ssStartYears[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get list of available credit card types values\r\n         * @returns {Object}\r\n         */\r\n        getCcAvailableTypesValues: function () {\r\n            return _.map(this.getCcAvailableTypes(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'type': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get list of available month values\r\n         * @returns {Object}\r\n         */\r\n        getCcMonthsValues: function () {\r\n            return _.map(this.getCcMonths(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'month': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get list of available year values\r\n         * @returns {Object}\r\n         */\r\n        getCcYearsValues: function () {\r\n            return _.map(this.getCcYears(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'year': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Object}\r\n         */\r\n        getSsStartYearsValues: function () {\r\n            return _.map(this.getSsStartYears(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'year': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Is legend available to display\r\n         * @returns {Boolean}\r\n         */\r\n        isShowLegend: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Get available credit card type by code\r\n         * @param {String} code\r\n         * @returns {String}\r\n         */\r\n        getCcTypeTitleByCode: function (code) {\r\n            var title = '',\r\n                keyValue = 'value',\r\n                keyType = 'type';\r\n\r\n            _.each(this.getCcAvailableTypesValues(), function (value) {\r\n                if (value[keyValue] === code) {\r\n                    title = value[keyType];\r\n                }\r\n            });\r\n\r\n            return title;\r\n        },\r\n\r\n        /**\r\n         * Prepare credit card number to output\r\n         * @param {String} number\r\n         * @returns {String}\r\n         */\r\n        formatDisplayCcNumber: function (number) {\r\n            return 'xxxx-' + number.substr(-4);\r\n        },\r\n\r\n        /**\r\n         * Get credit card details\r\n         * @returns {Array}\r\n         */\r\n        getInfo: function () {\r\n            return [\r\n                {\r\n                    'name': 'Credit Card Type', value: this.getCcTypeTitleByCode(this.creditCardType())\r\n                },\r\n                {\r\n                    'name': 'Credit Card Number', value: this.formatDisplayCcNumber(this.creditCardNumber())\r\n                }\r\n            ];\r\n        }\r\n    });\r\n});\r\n","Magento_Payment/js/view/payment/method-renderer/free-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Payment/payment/free'\r\n        },\r\n\r\n        /** Returns is method available */\r\n        isAvailable: function () {\r\n            return quote.totals()['grand_total'] <= 0;\r\n        }\r\n    });\r\n});\r\n","Magento_ReCaptchaFrontendUi/js/reCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global grecaptcha */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'jquery',\r\n        'ko',\r\n        'underscore',\r\n        'Magento_ReCaptchaFrontendUi/js/registry',\r\n        'Magento_ReCaptchaFrontendUi/js/reCaptchaScriptLoader',\r\n        'Magento_ReCaptchaFrontendUi/js/nonInlineReCaptchaRenderer'\r\n    ], function (Component, $, ko, _, registry, reCaptchaLoader, nonInlineReCaptchaRenderer) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n                template: 'Magento_ReCaptchaFrontendUi/reCaptcha',\r\n                reCaptchaId: 'recaptcha'\r\n            },\r\n\r\n            /**\r\n             * @inheritdoc\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                this._loadApi();\r\n            },\r\n\r\n            /**\r\n             * Loads recaptchaapi API and triggers event, when loaded\r\n             * @private\r\n             */\r\n            _loadApi: function () {\r\n                if (this._isApiRegistered !== undefined) {\r\n                    if (this._isApiRegistered === true) {\r\n                        $(window).trigger('recaptchaapiready');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n                this._isApiRegistered = false;\r\n\r\n                // global function\r\n                window.globalOnRecaptchaOnLoadCallback = function () {\r\n                    this._isApiRegistered = true;\r\n                    $(window).trigger('recaptchaapiready');\r\n                }.bind(this);\r\n\r\n                reCaptchaLoader.addReCaptchaScriptTag();\r\n            },\r\n\r\n            /**\r\n             * Checking that reCAPTCHA is invisible type\r\n             * @returns {Boolean}\r\n             */\r\n            getIsInvisibleRecaptcha: function () {\r\n                return this.settings.invisible;\r\n            },\r\n\r\n            /**\r\n             * reCAPTCHA callback\r\n             * @param {String} token\r\n             */\r\n            reCaptchaCallback: function (token) {\r\n                if (this.getIsInvisibleRecaptcha()) {\r\n                    this.tokenField.value = token;\r\n                    this.$parentForm.submit();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Initialize reCAPTCHA after first rendering\r\n             */\r\n            initCaptcha: function () {\r\n                var $parentForm,\r\n                    $wrapper,\r\n                    $reCaptcha,\r\n                    widgetId,\r\n                    parameters;\r\n\r\n                if (this.captchaInitialized) {\r\n                    return;\r\n                }\r\n\r\n                this.captchaInitialized = true;\r\n\r\n                /*\r\n                 * Workaround for data-bind issue:\r\n                 * We cannot use data-bind to link a dynamic id to our component\r\n                 * See:\r\n                 * https://stackoverflow.com/questions/46657573/recaptcha-the-bind-parameter-must-be-an-element-or-id\r\n                 *\r\n                 * We create a wrapper element with a wrapping id and we inject the real ID with jQuery.\r\n                 * In this way we have no data-bind attribute at all in our reCAPTCHA div\r\n                 */\r\n                $wrapper = $('#' + this.getReCaptchaId() + '-wrapper');\r\n                $reCaptcha = $wrapper.find('.g-recaptcha');\r\n                $reCaptcha.attr('id', this.getReCaptchaId());\r\n\r\n                $parentForm = $wrapper.parents('form');\r\n\r\n                parameters = _.extend(\r\n                    {\r\n                        'callback': function (token) { // jscs:ignore jsDoc\r\n                            this.reCaptchaCallback(token);\r\n                            this.validateReCaptcha(true);\r\n                        }.bind(this),\r\n                        'expired-callback': function () {\r\n                            this.validateReCaptcha(false);\r\n                        }.bind(this)\r\n                    },\r\n                    this.settings.rendering\r\n                );\r\n\r\n                if (parameters.size === 'invisible' && parameters.badge !== 'inline') {\r\n                    nonInlineReCaptchaRenderer.add($reCaptcha, parameters);\r\n                }\r\n\r\n                // eslint-disable-next-line no-undef\r\n                widgetId = grecaptcha.render(this.getReCaptchaId(), parameters);\r\n                this.initParentForm($parentForm, widgetId);\r\n\r\n                registry.ids.push(this.getReCaptchaId());\r\n                registry.captchaList.push(widgetId);\r\n                registry.tokenFields.push(this.tokenField);\r\n\r\n            },\r\n\r\n            /**\r\n             * Initialize parent form.\r\n             *\r\n             * @param {Object} parentForm\r\n             * @param {String} widgetId\r\n             */\r\n            initParentForm: function (parentForm, widgetId) {\r\n                var listeners;\r\n\r\n                if (this.getIsInvisibleRecaptcha() && parentForm.length > 0) {\r\n                    parentForm.submit(function (event) {\r\n                        if (!this.tokenField.value) {\r\n                            // eslint-disable-next-line no-undef\r\n                            grecaptcha.execute(widgetId);\r\n                            event.preventDefault(event);\r\n                            event.stopImmediatePropagation();\r\n                        }\r\n                    }.bind(this));\r\n\r\n                    // Move our (last) handler topmost. We need this to avoid submit bindings with ko.\r\n                    listeners = $._data(parentForm[0], 'events').submit;\r\n                    listeners.unshift(listeners.pop());\r\n\r\n                    // Create a virtual token field\r\n                    this.tokenField = $('<input type=\"text\" name=\"token\" style=\"display: none\" />')[0];\r\n                    this.$parentForm = parentForm;\r\n                    parentForm.append(this.tokenField);\r\n                } else {\r\n                    this.tokenField = null;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Validates reCAPTCHA\r\n             * @param {*} state\r\n             * @returns {jQuery}\r\n             */\r\n            validateReCaptcha: function (state) {\r\n                if (!this.getIsInvisibleRecaptcha()) {\r\n                    return $(document).find('input[type=checkbox].required-captcha').prop('checked', state);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Render reCAPTCHA\r\n             */\r\n            renderReCaptcha: function () {\r\n                if (window.grecaptcha && window.grecaptcha.render) { // Check if reCAPTCHA is already loaded\r\n                    this.initCaptcha();\r\n                } else { // Wait for reCAPTCHA to be loaded\r\n                    $(window).on('recaptchaapiready', function () {\r\n                        this.initCaptcha();\r\n                    }.bind(this));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get reCAPTCHA ID\r\n             * @returns {String}\r\n             */\r\n            getReCaptchaId: function () {\r\n                return this.reCaptchaId;\r\n            }\r\n        });\r\n    });\r\n","Magento_ReCaptchaFrontendUi/js/nonInlineReCaptchaRenderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global grecaptcha */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var reCaptchaEntities = [],\r\n        initialized = false,\r\n        rendererRecaptchaId = 'recaptcha-invisible',\r\n        rendererReCaptcha = null;\r\n\r\n    return {\r\n        /**\r\n         * Add reCaptcha entity to checklist.\r\n         *\r\n         * @param {jQuery} reCaptchaEntity\r\n         * @param {Object} parameters\r\n         */\r\n        add: function (reCaptchaEntity, parameters) {\r\n            if (!initialized) {\r\n                this.init();\r\n                grecaptcha.render(rendererRecaptchaId, parameters);\r\n                setInterval(this.resolveVisibility, 100);\r\n                initialized = true;\r\n            }\r\n\r\n            reCaptchaEntities.push(reCaptchaEntity);\r\n        },\r\n\r\n        /**\r\n         * Show additional reCaptcha instance if any other should be visible, otherwise hide it.\r\n         */\r\n        resolveVisibility: function () {\r\n            reCaptchaEntities.some(function (entity) {\r\n                return entity.is(':visible') &&\r\n                    // 900 is some magic z-index value of modal popups.\r\n                    (entity.closest('[data-role=\\'modal\\']').length === 0 || entity.zIndex() > 900);\r\n            }) ? rendererReCaptcha.show() : rendererReCaptcha.hide();\r\n        },\r\n\r\n        /**\r\n         * Initialize additional reCaptcha instance.\r\n         */\r\n        init: function () {\r\n            rendererReCaptcha = $('<div/>', {\r\n                'id': rendererRecaptchaId\r\n            });\r\n            rendererReCaptcha.hide();\r\n            $('body').append(rendererReCaptcha);\r\n        }\r\n    };\r\n});\r\n","Magento_ReCaptchaFrontendUi/js/registry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['ko'], function (ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        ids: ko.observableArray([]),\r\n        captchaList: ko.observableArray([]),\r\n        tokenFields: ko.observableArray([])\r\n    };\r\n});\r\n","Magento_ReCaptchaFrontendUi/js/reCaptchaScriptLoader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var scriptTagAdded = false;\r\n\r\n    return {\r\n        /**\r\n         * Add script tag. Script tag should be added once\r\n         */\r\n        addReCaptchaScriptTag: function () {\r\n            var element, scriptTag;\r\n\r\n            if (!scriptTagAdded) {\r\n                element = document.createElement('script');\r\n                scriptTag = document.getElementsByTagName('script')[0];\r\n\r\n                element.async = true;\r\n                element.src = 'https://www.google.com/recaptcha/api.js' +\r\n                    '?onload=globalOnRecaptchaOnLoadCallback&render=explicit';\r\n\r\n                scriptTag.parentNode.insertBefore(element, scriptTag);\r\n                scriptTagAdded = true;\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_ReCaptchaFrontendUi/js/ui-messages-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['Magento_ReCaptchaFrontendUi/js/registry'], function (registry) {\r\n    'use strict';\r\n\r\n    return function (originalComponent) {\r\n        return originalComponent.extend({\r\n            /**\r\n             * Initialize reset on messages\r\n             * @returns {initialize}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                this.messageContainer.errorMessages.subscribe(function () {\r\n                    var\r\n                        i,\r\n                        captchaList = registry.captchaList(),\r\n                        tokenFieldsList = registry.tokenFields();\r\n\r\n                    for (i = 0; i < captchaList.length; i++) {\r\n                        // eslint-disable-next-line no-undef\r\n                        grecaptcha.reset(captchaList[i]);\r\n\r\n                        if (tokenFieldsList[i]) {\r\n                            tokenFieldsList[i].value = '';\r\n                        }\r\n                    }\r\n                }, null, 'arrayChange');\r\n\r\n                return this;\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Bundle/js/product-summary.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Bundle/js/price-bundle'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Widget product Summary:\r\n     * Handles rendering of Bundle options and displays them in the Summary box\r\n     */\r\n    $.widget('mage.productSummary', {\r\n        options: {\r\n            mainContainer:          '#product_addtocart_form',\r\n            templates: {\r\n                summaryBlock:       '[data-template=\"bundle-summary\"]',\r\n                optionBlock:        '[data-template=\"bundle-option\"]'\r\n            },\r\n            optionSelector:         '[data-container=\"options\"]',\r\n            summaryContainer:       '[data-container=\"product-summary\"]',\r\n            bundleSummaryContainer: '.bundle-summary'\r\n        },\r\n        cache: {},\r\n\r\n        /**\r\n         * Method attaches event observer to the product form\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element\r\n                .closest(this.options.mainContainer)\r\n                .on('updateProductSummary', $.proxy(this._renderSummaryBox, this))\r\n                .priceBundle({})\r\n            ;\r\n        },\r\n\r\n        /**\r\n         * Method extracts data from the event and renders Summary box\r\n         * using jQuery template mechanism\r\n         * @param {Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _renderSummaryBox: function (event, data) {\r\n            this.cache.currentElement = data.config;\r\n            this.cache.currentElementCount = 0;\r\n\r\n            // Clear Summary box\r\n            this.element.html('');\r\n            this.cache.currentElement.positions.forEach(function (optionId) {\r\n                this._renderOption(optionId, this.cache.currentElement.selected[optionId]);\r\n            }, this);\r\n            this.element\r\n                .parents(this.options.bundleSummaryContainer)\r\n                .toggleClass('empty', !this.cache.currentElementCount); // Zero elements equal '.empty' container\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} row\r\n         * @private\r\n         */\r\n        _renderOption: function (key, row) {\r\n            var template;\r\n\r\n            if (row && row.length > 0 && row[0] !== null) {\r\n                template = this.element\r\n                    .closest(this.options.summaryContainer)\r\n                    .find(this.options.templates.summaryBlock)\r\n                    .html();\r\n                template = mageTemplate($.trim(template), {\r\n                    data: {\r\n                        _label_: this.cache.currentElement.options[key].title\r\n                    }\r\n                });\r\n\r\n                this.cache.currentKey = key;\r\n                this.cache.summaryContainer = $(template);\r\n                this.element.append(this.cache.summaryContainer);\r\n\r\n                $.each(row, this._renderOptionRow.bind(this));\r\n                this.cache.currentElementCount += row.length;\r\n\r\n                //Reset Cache\r\n                this.cache.currentKey = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} optionIndex\r\n         * @private\r\n         */\r\n        _renderOptionRow: function (key, optionIndex) {\r\n            var template;\r\n\r\n            template = this.element\r\n                .closest(this.options.summaryContainer)\r\n                .find(this.options.templates.optionBlock)\r\n                .html();\r\n            template = mageTemplate($.trim(template), {\r\n                data: {\r\n                    _quantity_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].qty,\r\n                    _label_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].name\r\n                }\r\n            });\r\n            this.cache.summaryContainer\r\n                .find(this.options.optionSelector)\r\n                .append(template);\r\n        }\r\n    });\r\n\r\n    return $.mage.productSummary;\r\n});\r\n","Magento_Bundle/js/float.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.float', {\r\n        options: {\r\n            productOptionsSelector: '#product-options-wrapper'\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to scroll event\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(window).on('scroll', $.proxy(this._setTop, this));\r\n        },\r\n\r\n        /**\r\n         * float bundleSummary on windowScroll\r\n         * @private\r\n         */\r\n        _setTop: function () {\r\n            var starTop, offset, maxTop, allowedTop;\r\n\r\n            if (this.element.is(':visible')) {\r\n                starTop = $(this.options.productOptionsSelector).offset().top;\r\n                offset = $(document).scrollTop();\r\n                maxTop = this.element.parent().offset().top;\r\n\r\n                if (!this.options.top) {\r\n                    this.options.top = this.element.position().top;\r\n                    this.element.css('top', this.options.top);\r\n                }\r\n\r\n                if (starTop > offset) {\r\n                    return false;\r\n                }\r\n\r\n                if (offset < this.options.top) {\r\n                    offset = this.options.top;\r\n                }\r\n\r\n                allowedTop = this.options.top + offset - starTop;\r\n\r\n                if (allowedTop < maxTop) {\r\n                    this.element.css('top', allowedTop);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/price-bundle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        optionConfig: null,\r\n        productBundleSelector: 'input.bundle.option, select.bundle.option, textarea.bundle.option',\r\n        qtyFieldSelector: 'input.qty',\r\n        priceBoxSelector: '.price-box',\r\n        optionHandlers: {},\r\n        optionTemplate: '<%- data.label %>' +\r\n        '<% if (data.finalPrice.value) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd', // should be eliminated\r\n        priceFormat: {},\r\n        isFixedPrice: false,\r\n        optionTierPricesBlocksSelector: '#option-tier-prices-{1} [data-role=\"selection-tier-prices\"]',\r\n        isOptionsInitialized: false\r\n    };\r\n\r\n    $.widget('mage.priceBundle', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form);\r\n\r\n            options.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function createPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form),\r\n                qty = $(this.options.qtyFieldSelector, form);\r\n\r\n            this._updatePriceBox();\r\n            priceBox.on('price-box-initialized', this._updatePriceBox.bind(this));\r\n            options.on('change', this._onBundleOptionChanged.bind(this));\r\n            qty.on('change', this._onQtyFieldChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Update price box config with bundle option prices\r\n         * @private\r\n         */\r\n        _updatePriceBox: function () {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form);\r\n\r\n            if (!this.options.isOptionsInitialized) {\r\n                if (priceBox.data('magePriceBox') &&\r\n                    priceBox.priceBox('option') &&\r\n                    priceBox.priceBox('option').priceConfig\r\n                ) {\r\n                    if (priceBox.priceBox('option').priceConfig.optionTemplate) { //eslint-disable-line max-depth\r\n                        this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                    }\r\n                    this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n                    priceBox.priceBox('setDefault', this.options.optionConfig.prices);\r\n                    this.options.isOptionsInitialized = true;\r\n                }\r\n                this._applyOptionNodeFix(options);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle change on bundle option inputs\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onBundleOptionChanged: function onBundleOptionChanged(event) {\r\n            var changes,\r\n                bundleOption = $(event.target),\r\n                priceBox = $(this.options.priceBoxSelector, this.element),\r\n                handler = this.options.optionHandlers[bundleOption.data('role')];\r\n\r\n            bundleOption.data('optionContainer', bundleOption.closest(this.options.controlContainer));\r\n            bundleOption.data('qtyField', bundleOption.data('optionContainer').find(this.options.qtyFieldSelector));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(bundleOption, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(bundleOption, this.options.optionConfig);//eslint-disable-line\r\n            }\r\n\r\n            if (changes) {\r\n                priceBox.trigger('updatePrice', changes);\r\n            }\r\n\r\n            this._displayTierPriceBlock(bundleOption);\r\n            this.updateProductSummary();\r\n        },\r\n\r\n        /**\r\n         * Handle change on qty inputs near bundle option\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyFieldChanged: function onQtyFieldChanged(event) {\r\n            var field = $(event.target),\r\n                optionInstance,\r\n                optionConfig;\r\n\r\n            if (field.data('optionId') && field.data('optionValueId')) {\r\n                optionInstance = field.data('option');\r\n                optionConfig = this.options.optionConfig\r\n                    .options[field.data('optionId')]\r\n                    .selections[field.data('optionValueId')];\r\n                optionConfig.qty = field.val();\r\n\r\n                optionInstance.trigger('change');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix backend behavior:\r\n         *  - if default qty large than 1 then backend multiply price in config\r\n         *\r\n         * @deprecated\r\n         * @private\r\n         */\r\n        _applyQtyFix: function applyQtyFix() {\r\n            var config = this.options.optionConfig;\r\n\r\n            if (config.isFixedPrice) {\r\n                _.each(config.options, function (option) {\r\n                    _.each(option.selections, function (item) {\r\n                        if (item.qty && item.qty !== 1) {\r\n                            _.each(item.prices, function (price) {\r\n                                price.amount /= item.qty;\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionConfig = config.optionConfig && config.optionConfig.options[optionId].selections,\r\n                    value;\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue].prices;\r\n\r\n                    _.each(prices, function (price, type) {\r\n                        value = +price.amount;\r\n                        value += _.reduce(price.adjustments, function (sum, x) {//eslint-disable-line\r\n                            return sum + x;\r\n                        }, 0);\r\n                        toTemplate.data[type] = {\r\n                            value: value,\r\n                            formatted: utils.formatPrice(value, format)\r\n                        };\r\n                    });\r\n\r\n                    $option.html(template(toTemplate));\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            this._super(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show or hide option tier prices block\r\n         *\r\n         * @param {Object} optionElement\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionElement) {\r\n            var optionType = optionElement.prop('type'),\r\n                optionId,\r\n                optionValue,\r\n                optionTierPricesElements;\r\n\r\n            if (optionType === 'select-one') {\r\n                optionId = utils.findOptionId(optionElement[0]);\r\n                optionValue = optionElement.val() || null;\r\n                optionTierPricesElements = $(this.options.optionTierPricesBlocksSelector.replace('{1}', optionId));\r\n\r\n                _.each(optionTierPricesElements, function (tierPriceElement) {\r\n                    var selectionId = $(tierPriceElement).data('selection-id') + '';\r\n\r\n                    if (selectionId === optionValue) {\r\n                        $(tierPriceElement).show();\r\n                    } else {\r\n                        $(tierPriceElement).hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler to update productSummary box\r\n         */\r\n        updateProductSummary: function updateProductSummary() {\r\n            this.element.trigger('updateProductSummary', {\r\n                config: this.options.optionConfig\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBundle;\r\n\r\n    /**\r\n     * Converts option value to priceBox object\r\n     *\r\n     * @param   {jQuery} element\r\n     * @param   {Object} config\r\n     * @returns {Object|null} - priceBox object with additional prices\r\n     */\r\n    function defaultGetOptionValue(element, config) {\r\n        var changes = {},\r\n            optionHash,\r\n            tempChanges,\r\n            qtyField,\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionValue = element.val() || null,\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = config.options[optionId].selections,\r\n            optionQty = 0,\r\n            canQtyCustomize = false,\r\n            selectedIds = config.selected;\r\n\r\n        switch (optionType) {\r\n            case 'radio':\r\n            case 'select-one':\r\n\r\n                if (optionType === 'radio' && !element.is(':checked')) {\r\n                    return null;\r\n                }\r\n\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n\r\n                if (optionValue) {\r\n                    optionQty = optionConfig[optionValue].qty || 0;\r\n                    canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                    toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                    tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                    tempChanges = applyTierPrice(//eslint-disable-line\r\n                        tempChanges,\r\n                        optionQty,\r\n                        optionConfig[optionValue]\r\n                    );\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                } else {\r\n                    tempChanges = {};\r\n                    toggleQtyField(qtyField, '0', optionId, optionValue, false);//eslint-disable-line\r\n                }\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                optionValue = _.compact(optionValue);\r\n\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = 'bundle-option-' + optionName + '##' + optionValueCode;\r\n                    optionQty = row.qty || 0;\r\n                    tempChanges = utils.deepClone(row.prices);\r\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? tempChanges : {};\r\n                });\r\n\r\n                selectedIds[optionId] = optionValue || [];\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                changes[optionHash] = element.is(':checked') ? tempChanges : {};\r\n\r\n                selectedIds[optionId] = selectedIds[optionId] || [];\r\n\r\n                if (!_.contains(selectedIds[optionId], optionValue) && element.is(':checked')) {\r\n                    selectedIds[optionId].push(optionValue);\r\n                } else if (!element.is(':checked')) {\r\n                    selectedIds[optionId] = _.without(selectedIds[optionId], optionValue);\r\n                }\r\n                break;\r\n\r\n            case 'hidden':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n                toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    /**\r\n     * Helper to toggle qty field\r\n     * @param {jQuery} element\r\n     * @param {String|Number} value\r\n     * @param {String|Number} optionId\r\n     * @param {String|Number} optionValueId\r\n     * @param {Boolean} canEdit\r\n     */\r\n    function toggleQtyField(element, value, optionId, optionValueId, canEdit) {\r\n        element\r\n            .val(value)\r\n            .data('optionId', optionId)\r\n            .data('optionValueId', optionValueId)\r\n            .attr('disabled', !canEdit);\r\n\r\n        if (canEdit) {\r\n            element.removeClass('qty-disabled');\r\n        } else {\r\n            element.addClass('qty-disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper to multiply on qty\r\n     *\r\n     * @param   {Object} prices\r\n     * @param   {Number} qty\r\n     * @returns {Object}\r\n     */\r\n    function applyQty(prices, qty) {\r\n        _.each(prices, function (everyPrice) {\r\n            everyPrice.amount *= qty;\r\n            _.each(everyPrice.adjustments, function (el, index) {\r\n                everyPrice.adjustments[index] *= qty;\r\n            });\r\n        });\r\n\r\n        return prices;\r\n    }\r\n\r\n    /**\r\n     * Helper to limit price with tier price\r\n     *\r\n     * @param {Object} oneItemPrice\r\n     * @param {Number} qty\r\n     * @param {Object} optionConfig\r\n     * @returns {Object}\r\n     */\r\n    function applyTierPrice(oneItemPrice, qty, optionConfig) {\r\n        var tiers = optionConfig.tierPrice,\r\n            magicKey = _.keys(oneItemPrice)[0],\r\n            tiersFirstKey = _.keys(optionConfig)[0],\r\n            lowest = false;\r\n\r\n        if (!tiers) {//tiers is undefined when options has only one option\r\n            tiers = optionConfig[tiersFirstKey].tierPrice;\r\n        }\r\n\r\n        tiers.sort(function (a, b) {//sorting based on \"price_qty\"\r\n            return a['price_qty'] - b['price_qty'];\r\n        });\r\n\r\n        _.each(tiers, function (tier, index) {\r\n            if (tier['price_qty'] > qty) {\r\n                return;\r\n            }\r\n\r\n            if (tier.prices[magicKey].amount < oneItemPrice[magicKey].amount) {\r\n                lowest = index;\r\n            }\r\n        });\r\n\r\n        if (lowest !== false) {\r\n            oneItemPrice = utils.deepClone(tiers[lowest].prices);\r\n        }\r\n\r\n        return oneItemPrice;\r\n    }\r\n});\r\n","Magento_Bundle/js/slide.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.slide', {\r\n        options: {\r\n            slideSpeed: 1500,\r\n            slideSelector: '#bundle-slide',\r\n            slideBackSelector: '.bundle-slide-back',\r\n            bundleProductSelector: '#bundleProduct',\r\n            bundleOptionsContainer: '#options-container',\r\n            productViewContainer: '#productView',\r\n            slidedown: true\r\n\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if (this.options.slidedown === true) {\r\n                $(this.options.slideSelector).on('click', $.proxy(this._show, this));\r\n                $(this.options.slideBackSelector).on('click', $.proxy(this._hide, this));\r\n                this.options.autostart && this._show();\r\n            } else {\r\n                $(this.options.slideSelector).on('click', $.proxy(this._slide, this));\r\n                $(this.options.slideBackSelector).on('click', $.proxy(this._slideBack, this));\r\n                this.options.autostart && this._slide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * slide bundleOptionsContainer over to the main view area\r\n         * @private\r\n         */\r\n        _slide: function () {\r\n            $(this.options.bundleProductSelector).css('top', '0px');\r\n            $(this.options.bundleOptionsContainer).show();\r\n            this.element.css('height', $(this.options.productViewContainer).height() + 'px');\r\n            $(this.options.bundleProductSelector).css('left', '0px').animate(\r\n                {\r\n                    'left': '-' + this.element.width() + 'px'\r\n                },\r\n                this.options.slideSpeed,\r\n                $.proxy(function () {\r\n                    this.element.css('height', 'auto');\r\n                    $(this.options.productViewContainer).hide();\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * slideback productViewContainer to main view area\r\n         * @private\r\n         */\r\n        _slideBack: function () {\r\n            $(this.options.bundleProductSelector).css('top', '0px');\r\n            $(this.options.productViewContainer).show();\r\n            this.element.css('height', $(this.options.bundleOptionsContainer).height() + 'px');\r\n            $(this.options.bundleProductSelector).animate(\r\n                {\r\n                    'left': '0px'\r\n                },\r\n                this.options.slideSpeed,\r\n                $.proxy(function () {\r\n                    $(this.options.bundleOptionsContainer).hide();\r\n                    this.element.css('height', 'auto');\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _show: function () {\r\n            $(this.options.bundleOptionsContainer).slideDown(800);\r\n            $('html, body').animate({\r\n                scrollTop: $(this.options.bundleOptionsContainer).offset().top\r\n            }, 600);\r\n            $('#product-options-wrapper > fieldset').focus();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _hide: function () {\r\n            $('html, body').animate({\r\n                scrollTop: 0\r\n            }, 600);\r\n            $(this.options.bundleOptionsContainer).slideUp(800);\r\n        }\r\n    });\r\n\r\n    return $.mage.slide;\r\n});\r\n","Magento_Captcha/js/captcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @api\r\n     */\r\n    $.widget('mage.captcha', {\r\n        options: {\r\n            refreshClass: 'refreshing',\r\n            reloadSelector: '.captcha-reload',\r\n            imageSelector: '.captcha-img',\r\n            imageLoader: ''\r\n        },\r\n\r\n        /**\r\n         * Method binds click event to reload image\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\r\n        },\r\n\r\n        /**\r\n         * Method triggers an AJAX request to refresh the CAPTCHA image\r\n         */\r\n        refresh: function () {\r\n            var imageLoader = this.options.imageLoader;\r\n\r\n            if (imageLoader) {\r\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\r\n            }\r\n            this.element.addClass(this.options.refreshClass);\r\n\r\n            $.ajax({\r\n                url: this.options.url,\r\n                type: 'post',\r\n                async: false,\r\n                dataType: 'json',\r\n                context: this,\r\n                data: {\r\n                    'formId': this.options.type\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    if (response.imgSrc) {\r\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\r\n                    }\r\n                },\r\n\r\n                /** Complete callback. */\r\n                complete: function () {\r\n                    this.element.removeClass(this.options.refreshClass);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.captcha;\r\n});\r\n","Magento_Captcha/js/model/captchaList.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    var captchaList = [];\r\n\r\n    return {\r\n        /**\r\n         * @param {Object} captcha\r\n         */\r\n        add: function (captcha) {\r\n            captchaList.push(captcha);\r\n        },\r\n\r\n        /**\r\n         * @param {String} formId\r\n         * @return {Object}\r\n         */\r\n        getCaptchaByFormId: function (formId) {\r\n            var captcha = null;\r\n\r\n            $.each(captchaList, function (key, item) {\r\n                if (formId === item.formId) {\r\n                    captcha = item;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return captcha;\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getCaptchaList: function () {\r\n            return captchaList;\r\n        }\r\n    };\r\n});\r\n","Magento_Captcha/js/model/captcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'Magento_Captcha/js/action/refresh'\r\n], function ($, ko, refreshAction) {\r\n    'use strict';\r\n\r\n    return function (captchaData) {\r\n        return {\r\n            formId: captchaData.formId,\r\n            imageSource: ko.observable(captchaData.imageSrc),\r\n            visibility: ko.observable(false),\r\n            captchaValue: ko.observable(null),\r\n            isRequired: ko.observable(captchaData.isRequired),\r\n            isCaseSensitive: captchaData.isCaseSensitive,\r\n            imageHeight: captchaData.imageHeight,\r\n            refreshUrl: captchaData.refreshUrl,\r\n            isLoading: ko.observable(false),\r\n            timestamp: null,\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getFormId: function () {\r\n                return this.formId;\r\n            },\r\n\r\n            /**\r\n             * @param {String} formId\r\n             */\r\n            setFormId: function (formId) {\r\n                this.formId = formId;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsVisible: function () {\r\n                return this.visibility();\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsVisible: function (flag) {\r\n                this.visibility(flag);\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsRequired: function () {\r\n                return this.isRequired();\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsRequired: function (flag) {\r\n                this.isRequired(flag);\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsCaseSensitive: function () {\r\n                return this.isCaseSensitive;\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsCaseSensitive: function (flag) {\r\n                this.isCaseSensitive = flag;\r\n            },\r\n\r\n            /**\r\n             * @return {String|Number}\r\n             */\r\n            getImageHeight: function () {\r\n                return this.imageHeight;\r\n            },\r\n\r\n            /**\r\n             * @param {String|Number}height\r\n             */\r\n            setImageHeight: function (height) {\r\n                this.imageHeight = height;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getImageSource: function () {\r\n                return this.imageSource;\r\n            },\r\n\r\n            /**\r\n             * @param {String} imageSource\r\n             */\r\n            setImageSource: function (imageSource) {\r\n                this.imageSource(imageSource);\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getRefreshUrl: function () {\r\n                return this.refreshUrl;\r\n            },\r\n\r\n            /**\r\n             * @param {String} url\r\n             */\r\n            setRefreshUrl: function (url) {\r\n                this.refreshUrl = url;\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getCaptchaValue: function () {\r\n                return this.captchaValue;\r\n            },\r\n\r\n            /**\r\n             * @param {*} value\r\n             */\r\n            setCaptchaValue: function (value) {\r\n                this.captchaValue(value);\r\n            },\r\n\r\n            /**\r\n             * Refresh captcha.\r\n             */\r\n            refresh: function () {\r\n                var refresh,\r\n                    self = this;\r\n\r\n                this.isLoading(true);\r\n\r\n                refresh = refreshAction(this.getRefreshUrl(), this.getFormId(), this.getImageSource());\r\n                $.when(refresh).done(function () {\r\n                    self.isLoading(false);\r\n                });\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Captcha/js/view/checkout/defaultCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Captcha/js/model/captcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Customer/js/customer-data',\r\n    'underscore'\r\n], function ($, Component, Captcha, captchaList, customerData, _) {\r\n    'use strict';\r\n\r\n    var captchaConfig;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Captcha/checkout/captcha'\r\n        },\r\n        dataScope: 'global',\r\n        currentCaptcha: null,\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        captchaValue: function () {\r\n            return this.currentCaptcha.getCaptchaValue();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (window[this.configSource] && window[this.configSource].captcha) {\r\n                captchaConfig = window[this.configSource].captcha;\r\n                $.each(captchaConfig, function (formId, captchaData) {\r\n                    var captcha;\r\n\r\n                    captchaData.formId = formId;\r\n                    captcha = Captcha(captchaData);\r\n                    this.checkCustomerData(formId, customerData.get('captcha')(), captcha);\r\n                    this.subscribeCustomerData(formId, captcha);\r\n                    captchaList.add(captcha);\r\n                }.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check customer data for captcha configuration.\r\n         *\r\n         * @param {String} formId\r\n         * @param {Object} captchaData\r\n         * @param {Object} captcha\r\n         */\r\n        checkCustomerData: function (formId, captchaData, captcha) {\r\n            if (!_.isEmpty(captchaData) &&\r\n                !_.isEmpty(captchaData)[formId] &&\r\n                captchaData[formId].timestamp > captcha.timestamp\r\n            ) {\r\n                if (!captcha.isRequired() && captchaData[formId].isRequired) {\r\n                    captcha.refresh();\r\n                }\r\n                captcha.isRequired(captchaData[formId].isRequired);\r\n                captcha.timestamp = captchaData[formId].timestamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Subscribe for customer data updates.\r\n         *\r\n         * @param {String} formId\r\n         * @param {Object} captcha\r\n         */\r\n        subscribeCustomerData: function (formId, captcha) {\r\n            customerData.get('captcha').subscribe(function (captchaData) {\r\n                this.checkCustomerData(formId, captchaData, captcha);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        getIsLoading: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.isLoading : false;\r\n        },\r\n\r\n        /**\r\n         * @return {null|Object}\r\n         */\r\n        getCurrentCaptcha: function () {\r\n            return this.currentCaptcha;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} captcha\r\n         */\r\n        setCurrentCaptcha: function (captcha) {\r\n            this.currentCaptcha = captcha;\r\n        },\r\n\r\n        /**\r\n         * @return {String|null}\r\n         */\r\n        getFormId: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getFormId() : null;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        getIsVisible: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsVisible() : false;\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsVisible: function (flag) {\r\n            this.currentCaptcha.setIsVisible(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isRequired: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsRequired() : false;\r\n        },\r\n\r\n        /**\r\n         * Set isRequired on current captcha model.\r\n         *\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsRequired: function (flag) {\r\n            this.currentCaptcha.setIsRequired(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isCaseSensitive: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsCaseSensitive() : false;\r\n        },\r\n\r\n        /**\r\n         * @return {String|Number|null}\r\n         */\r\n        imageHeight: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageHeight() : null;\r\n        },\r\n\r\n        /**\r\n         * @return {String|null}\r\n         */\r\n        getImageSource: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageSource() : null;\r\n        },\r\n\r\n        /**\r\n         * Refresh captcha.\r\n         */\r\n        refresh: function () {\r\n            this.currentCaptcha.refresh();\r\n        }\r\n    });\r\n});\r\n","Magento_Captcha/js/view/checkout/loginCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Customer/js/action/login',\r\n    'underscore'\r\n],\r\nfunction (defaultCaptcha, captchaList, loginAction, _) {\r\n    'use strict';\r\n\r\n    return defaultCaptcha.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var self = this,\r\n                currentCaptcha;\r\n\r\n            this._super();\r\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (currentCaptcha != null) {\r\n                currentCaptcha.setIsVisible(true);\r\n                this.setCurrentCaptcha(currentCaptcha);\r\n\r\n                loginAction.registerLoginCallback(function (loginData) {\r\n                    if (loginData['captcha_form_id'] &&\r\n                        loginData['captcha_form_id'] === self.formId &&\r\n                        self.isRequired()\r\n                    ) {\r\n                        _.defer(self.refresh.bind(self));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Captcha/js/action/refresh.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'mage/storage'\r\n], function (storage) {\r\n    'use strict';\r\n\r\n    return function (refreshUrl, formId, imageSource) {\r\n        return storage.post(\r\n            refreshUrl,\r\n            JSON.stringify({\r\n                'formId': formId\r\n            }),\r\n            false\r\n        ).done(\r\n            function (response) {\r\n                if (response.imgSrc) {\r\n                    imageSource(response.imgSrc);\r\n                }\r\n            }\r\n        );\r\n    };\r\n});\r\n","Magento_Weee/js/tax-toggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {jQuery.Event} e\r\n     */\r\n    function onToggle(config, e) {\r\n        var elem = $(e.currentTarget),\r\n            expandedClassName = config.expandedClassName || 'cart-tax-total-expanded';\r\n\r\n        elem.toggleClass(expandedClassName);\r\n\r\n        $(config.itemTaxId).toggle();\r\n    }\r\n\r\n    return function (data, el) {\r\n        $(el).on('click', onToggle.bind(null, data));\r\n    };\r\n});\r\n","Magento_Weee/js/price/adjustment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Weee/price/adjustment',\r\n            dataSource: '${ $.parentName }.provider',\r\n            //Weee configuration constants can be configured from backend\r\n            inclFptWithDesc: 1,//show FPT and description\r\n            inclFpt: 0, //show FPT attribute\r\n            exclFpt: 2, //do not show FPT\r\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\r\n        },\r\n\r\n        /**\r\n         * Get Weee attributes.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeAttributes: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee without Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithoutTax: function (taxAmount) {\r\n            return taxAmount['amount_excl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee with Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithTax: function (taxAmount) {\r\n            return taxAmount['tax_amount_incl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee Tax name.\r\n         *\r\n         * @param {String} taxAmount\r\n         * @return {String} Weee name\r\n         */\r\n        getWeeTaxAttributeName: function (taxAmount) {\r\n            return taxAmount['attribute_code'];\r\n        },\r\n\r\n        /**\r\n         * Set price type.\r\n         *\r\n         * @param {String} priceType\r\n         * @return {Object}\r\n         */\r\n        setPriceType: function (priceType) {\r\n            this.taxPriceType = priceType;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if Weee Tax must be shown.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isShown: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\r\n        },\r\n\r\n        /**\r\n         * Get Weee final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee final price html\r\n         */\r\n        getWeeeAdjustment: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_adjustment'];\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including FPT only.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFpt: function () {\r\n            return +this.source.data.displayWeee === this.inclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * price including FPT and FPT description.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price\r\n         * excluding FPT but including FPT description and final price.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding FPT.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFpt: function () {\r\n            return +this.source.data.displayWeee === this.bothFptPrices;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclTax: function () {\r\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclTax: function () {\r\n            return +this.source.data.displayTaxes === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * both price including tax and price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayBothPricesTax: function () {\r\n            return +this.source.data.displayTaxes === this.bothFptPrices;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Catalog/js/price-utils'\r\n], function (Component, quote, totals) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/weee'\r\n        },\r\n        isIncludedInSubtotal: window.checkoutConfig.isIncludedInSubtotal,\r\n        totals: totals.totals,\r\n\r\n        /**\r\n         * @returns {Number}\r\n         */\r\n        getWeeeTaxSegment: function () {\r\n            var weee = totals.getSegment('weee_tax') || totals.getSegment('weee');\r\n\r\n            if (weee !== null && weee.hasOwnProperty('value')) {\r\n                return weee.value;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Get weee value\r\n         * @returns {String}\r\n         */\r\n        getValue: function () {\r\n            return this.getFormattedPrice(this.getWeeeTaxSegment());\r\n        },\r\n\r\n        /**\r\n         * Weee display flag\r\n         * @returns {Boolean}\r\n         */\r\n        isDisplayed: function () {\r\n            return this.isFullMode() && this.getWeeeTaxSegment() > 0;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Boolean}\r\n         */\r\n        isDisplayPriceWithWeeeDetails: function (item) {\r\n            if (!parseFloat(item['weee_tax_applied_amount']) || parseFloat(item['weee_tax_applied_amount'] <= 0)) {\r\n                return false;\r\n            }\r\n\r\n            return window.checkoutConfig.isDisplayPriceWithWeeeDetails;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Boolean}\r\n         */\r\n        isDisplayFinalPrice: function (item) {\r\n            if (!parseFloat(item['weee_tax_applied_amount'])) {\r\n                return false;\r\n            }\r\n\r\n            return window.checkoutConfig.isDisplayFinalPrice;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Array}\r\n         */\r\n        getWeeeTaxApplied: function (item) {\r\n            if (item['weee_tax_applied']) {\r\n                return JSON.parse(item['weee_tax_applied']);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/row_excl_tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\r\n], function (weee) {\r\n    'use strict';\r\n\r\n    return weee.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/item/price/row_excl_tax'\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getFinalRowDisplayPriceExclTax: function (item) {\r\n            var rowTotalExclTax = parseFloat(item['row_total']);\r\n\r\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalExclTax += parseFloat(item['weee_tax_applied_amount']);\r\n            }\r\n\r\n            return rowTotalExclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowDisplayPriceExclTax: function (item) {\r\n            var rowTotalExclTax = parseFloat(item['row_total']);\r\n\r\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalExclTax += this.getRowWeeeTaxExclTax(item);\r\n            }\r\n\r\n            return rowTotalExclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowWeeeTaxExclTax: function (item) {\r\n            var totalWeeeTaxExclTaxApplied = 0,\r\n                weeeTaxAppliedAmounts;\r\n\r\n            if (item['weee_tax_applied']) {\r\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\r\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\r\n                    totalWeeeTaxExclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount'], 0));\r\n                });\r\n            }\r\n\r\n            return totalWeeeTaxExclTaxApplied;\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/row_incl_tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\r\n], function (weee) {\r\n    'use strict';\r\n\r\n    return weee.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/item/price/row_incl_tax',\r\n            displayArea: 'row_incl_tax'\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getFinalRowDisplayPriceInclTax: function (item) {\r\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\r\n\r\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\r\n            }\r\n\r\n            return rowTotalInclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowDisplayPriceInclTax: function (item) {\r\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\r\n\r\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\r\n            }\r\n\r\n            return rowTotalInclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object}item\r\n         * @return {Number}\r\n         */\r\n        getRowWeeeTaxInclTax: function (item) {\r\n            var totalWeeeTaxInclTaxApplied = 0,\r\n                weeeTaxAppliedAmounts;\r\n\r\n            if (item['weee_tax_applied']) {\r\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\r\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\r\n                    totalWeeeTaxInclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount_incl_tax'], 0));\r\n                });\r\n            }\r\n\r\n            return totalWeeeTaxInclTaxApplied;\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/weee'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        isFullMode: function () {\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","magnifier/magnify.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'magnifier/magnifier'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n\r\n        var isTouchEnabled = 'ontouchstart' in document.documentElement,\r\n            gallerySelector = '[data-gallery-role=\"gallery\"]',\r\n            magnifierSelector = '[data-gallery-role=\"magnifier\"]',\r\n            magnifierZoomSelector = '[data-gallery-role=\"magnifier-zoom\"]',\r\n            zoomInButtonSelector = '[data-gallery-role=\"fotorama__zoom-in\"]',\r\n            zoomOutButtonSelector = '[data-gallery-role=\"fotorama__zoom-out\"]',\r\n            fullscreenImageSelector = '[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"] .fotorama__img--full',\r\n            imageDraggableClass = 'fotorama__img--draggable',\r\n            imageZoommable = 'fotorama__img--zoommable',\r\n            zoomInLoaded = 'zoom-in-loaded',\r\n            zoomOutLoaded = 'zoom-out-loaded',\r\n            zoomInDisabled = 'fotorama__zoom-in--disabled',\r\n            zoomOutDisabled = 'fotorama__zoom-out--disabled',\r\n            keyboardNavigation,\r\n            videoContainerClass = 'fotorama-video-container',\r\n            hideMagnifier,\r\n            dragFlag,\r\n            endX,\r\n            transitionEnabled,\r\n            transitionActive = false,\r\n            tapFlag = 0,\r\n            allowZoomOut = false,\r\n            allowZoomIn = true;\r\n\r\n        (function () {\r\n            var style = document.documentElement.style,\r\n                transitionEnabled = style.transition !== undefined ||\r\n                style.WebkitTransition !== undefined ||\r\n                style.MozTransition !== undefined ||\r\n                style.MsTransition !== undefined ||\r\n                style.OTransition !== undefined;\r\n        })();\r\n\r\n        /**\r\n         * Return width and height of original image\r\n         * @param img original image node\r\n         * @returns {{rw: number, rh: number}}\r\n         */\r\n        function getImageSize(img) {\r\n            return {\r\n                rw: img.naturalWidth,\r\n                rh: img.naturalHeight\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Sets min-height and min-width for image to avoid transition bug\r\n         * @param $image - fullscreen image\r\n         */\r\n        function calculateMinSize($image) {\r\n\r\n            var minHeight,\r\n                minWidth,\r\n                height = $image.height(),\r\n                width = $image.width(),\r\n                parentHeight = $image.parent().height(),\r\n                parentWidth = $image.parent().width();\r\n\r\n            if (width > parentWidth || height > parentHeight) {\r\n\r\n                if (width / height < parentWidth / parentHeight) {\r\n                    minHeight = parentHeight;\r\n                    minWidth = width * (parentHeight / height);\r\n                } else {\r\n                    minWidth = parentWidth;\r\n                    minHeight = height * parentWidth / width;\r\n                }\r\n                $image.css({\r\n                    'min-width': minWidth,\r\n                    'min-height': minHeight\r\n                });\r\n            }\r\n        }\r\n\r\n        function toggleZoomable($image, flag) {\r\n            if (flag) {\r\n                $image.css({\r\n                    'min-width': $image.width(),\r\n                    'min-height': $image.height(),\r\n                    'width': $image.width(),\r\n                    'height': $image.height()\r\n                }).addClass(imageZoommable);\r\n            } else {\r\n                $image.css({\r\n                    width: '',\r\n                    height: '',\r\n                    top: '',\r\n                    left: '',\r\n                    right: '',\r\n                    bottom: ''\r\n                }).removeClass(imageZoommable);\r\n                calculateMinSize($image);\r\n            }\r\n        }\r\n\r\n        function resetVars($image) {\r\n            allowZoomIn = true;\r\n            allowZoomOut = dragFlag = transitionActive = false;\r\n            $image.hasClass(imageDraggableClass) && $image.removeClass(imageDraggableClass);\r\n            toggleZoomable($image, false);\r\n        }\r\n\r\n        /**\r\n         * Set state for zoom controls.\r\n         * If state is true, zoom controls will be visible.\r\n         * IF state is false, zoom controls will be hidden.\r\n         * @param isHide\r\n         */\r\n        function hideZoomControls(isHide) {\r\n            if (isHide) {\r\n                $(zoomInButtonSelector).addClass(zoomInDisabled);\r\n                $(zoomOutButtonSelector).addClass(zoomOutDisabled);\r\n            } else {\r\n                $(zoomInButtonSelector).removeClass(zoomInDisabled);\r\n                $(zoomOutButtonSelector).removeClass(zoomOutDisabled);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Asynchronus control visibility of zoom buttons.\r\n         * If image bigger than her wrapper. Zoom controls must visible.\r\n         * @param path - image source path\r\n         * @param $image\r\n         */\r\n        function asyncToggleZoomButtons(path, $image) {\r\n            var img = new Image();\r\n\r\n            img.onload = function () {\r\n                this.height > $image.parent().height() || this.width > $image.parent().width() ?\r\n                    hideZoomControls(false) : hideZoomControls(true);\r\n            };\r\n            img.src = path;\r\n        }\r\n\r\n        /**\r\n         * Control visibility of zoom buttons.\r\n         * Zoom controls must be invisible for video content and touch devices.\r\n         * On touch devices active pinchIn/pinchOut.\r\n         * @param $image\r\n         * @param isTouchScreen - true for touch devices\r\n         * @param isVideoActiveFrame - true for active video frame\r\n         */\r\n        function toggleZoomButtons($image, isTouchScreen, isVideoActiveFrame) {\r\n            var path = $image.attr('src');\r\n\r\n            if (path && !isTouchScreen && !isVideoActiveFrame) {\r\n                asyncToggleZoomButtons(path, $image);\r\n            } else {\r\n                hideZoomControls(true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Handle resize event in fullscreen.\r\n         * @param $image - Fullscreen image.\r\n         * @param e - Event.\r\n         */\r\n        function resizeHandler(e, $image) {\r\n            var imageSize,\r\n                parentWidth,\r\n                parentHeight,\r\n                isImageSmall,\r\n                isImageFit;\r\n\r\n            if (!e.data.$image || !e.data.$image.length)\r\n                return;\r\n\r\n            imageSize = getImageSize($(fullscreenImageSelector)[0]);\r\n            parentWidth = e.data.$image.parent().width();\r\n            parentHeight = e.data.$image.parent().height();\r\n            isImageSmall = parentWidth >= imageSize.rw && parentHeight >= imageSize.rh;\r\n            isImageFit = parentWidth > e.data.$image.width() && parentHeight > e.data.$image.height();\r\n\r\n            toggleZoomButtons(e.data.$image, isTouchEnabled, checkForVideo(e.data.fotorama.activeFrame.$stageFrame));\r\n            calculateMinSize(e.data.$image);\r\n\r\n            if (e.data.$image.hasClass(imageZoommable) && !allowZoomOut || isImageSmall || isImageFit) {\r\n                resetVars(e.data.$image);\r\n            }\r\n\r\n            if (!isImageSmall) {\r\n                toggleStandartNavigation();\r\n            }\r\n        }\r\n\r\n        function getTopValue($image, topProp, step, height, containerHeight) {\r\n            var top;\r\n\r\n            if (parseInt($image.css('marginTop')) || parseInt($image.css('marginLeft'))) {\r\n                top = dragFlag ? topProp - step / 4 : 0;\r\n                top = top < containerHeight - height ? containerHeight - height : top;\r\n                top = top > height - containerHeight ? height - containerHeight : top;\r\n            } else {\r\n                top = topProp + step / 2;\r\n                top = top < containerHeight - height ? containerHeight - height : top;\r\n                top = top > 0 ? 0 : top;\r\n\r\n                if (!dragFlag && step < 0) {\r\n                    top = top < (containerHeight - height) / 2 ? (containerHeight - height) / 2 : top;\r\n                }\r\n            }\r\n\r\n            return top;\r\n        }\r\n\r\n        function getLeftValue(leftProp, step, width, containerWidth) {\r\n            var left;\r\n\r\n            left = leftProp + step / 2;\r\n            left = left < containerWidth - width ? containerWidth - width : left;\r\n            left = left > 0 ? 0 : left;\r\n\r\n            if (!dragFlag && step < 0) {\r\n                left = left < (containerWidth - width) / 2 ? (containerWidth - width) / 2 : left;\r\n            }\r\n\r\n            return left;\r\n        }\r\n\r\n        function checkFullscreenImagePosition($image, dimentions, widthStep, heightStep) {\r\n            var $imageContainer,\r\n                containerWidth,\r\n                containerHeight,\r\n                settings,\r\n                top,\r\n                left,\r\n                right,\r\n                bottom,\r\n                ratio;\r\n\r\n            if ($(gallerySelector).data('fotorama').fullScreen) {\r\n                transitionActive = true;\r\n                $imageContainer = $image.parent();\r\n                containerWidth = $imageContainer.width();\r\n                containerHeight = $imageContainer.height();\r\n                top = $image.position().top;\r\n                left = $image.position().left;\r\n                ratio = $image.width() / $image.height();\r\n                dimentions.height = isNaN(dimentions.height) ? dimentions.width / ratio : dimentions.height;\r\n                dimentions.width = isNaN(dimentions.width) ? dimentions.height * ratio : dimentions.width;\r\n\r\n                top = dimentions.height >= containerHeight ?\r\n                    getTopValue($image, top, heightStep, dimentions.height, containerHeight) : 0;\r\n\r\n                left = dimentions.width >= containerWidth ?\r\n                    getLeftValue(left, widthStep, dimentions.width, containerWidth) : 0;\r\n\r\n                right = dragFlag && left < (containerWidth - dimentions.width) / 2 ? 0 : left;\r\n                bottom = dragFlag ? 0 : top;\r\n\r\n                settings = $.extend(dimentions, {\r\n                    top: top,\r\n                    left: left,\r\n                    right: right\r\n                });\r\n\r\n                $image.css(settings);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles fotorama's keyboard and mouse/touch navigation.\r\n         */\r\n        function toggleStandartNavigation() {\r\n            var $selectable =\r\n                    $('a[href], area[href], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\r\n                    .not('[tabindex=-1], [disabled], :hidden'),\r\n                fotorama = $(gallerySelector).data('fotorama'),\r\n                $focus = $(':focus'),\r\n                index;\r\n\r\n            if (fotorama.fullScreen) {\r\n\r\n                $selectable.each(function (number) {\r\n\r\n                    if ($(this).is($focus)) {\r\n                        index = number;\r\n                    }\r\n                });\r\n\r\n                fotorama.setOptions({\r\n                    swipe: !allowZoomOut,\r\n                    keyboard: !allowZoomOut\r\n                });\r\n\r\n                if (_.isNumber(index)) {\r\n                    $selectable.eq(index).focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        function zoomIn(e, xStep, yStep) {\r\n            var $image,\r\n                imgOriginalSize,\r\n                imageWidth,\r\n                imageHeight,\r\n                zoomWidthStep,\r\n                zoomHeightStep,\r\n                widthResult,\r\n                heightResult,\r\n                ratio,\r\n                dimentions = {};\r\n\r\n            if (allowZoomIn && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\r\n                !$(zoomInButtonSelector).hasClass(zoomInDisabled))) {\r\n                $image = $(fullscreenImageSelector);\r\n                imgOriginalSize = getImageSize($image[0]);\r\n                imageWidth = $image.width();\r\n                imageHeight = $image.height();\r\n                ratio = imageWidth / imageHeight;\r\n                allowZoomOut = true;\r\n                toggleStandartNavigation();\r\n\r\n                if (!$image.hasClass(imageZoommable)) {\r\n                    toggleZoomable($image, true);\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                if (imageWidth >= imageHeight) {\r\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\r\n                    widthResult = imageWidth + zoomWidthStep;\r\n\r\n                    if (widthResult >= imgOriginalSize.rw) {\r\n                        widthResult = imgOriginalSize.rw;\r\n                        zoomWidthStep = xStep || widthResult - imageWidth;\r\n                        allowZoomIn = false;\r\n                    }\r\n                    heightResult = widthResult / ratio;\r\n                    zoomHeightStep = yStep || heightResult - imageHeight;\r\n                } else {\r\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\r\n                    heightResult = imageHeight + zoomHeightStep;\r\n\r\n                    if (heightResult >= imgOriginalSize.rh) {\r\n                        heightResult = imgOriginalSize.rh;\r\n                        zoomHeightStep = yStep || heightResult - imageHeight;\r\n                        allowZoomIn = false;\r\n                    }\r\n                    widthResult = heightResult * ratio;\r\n                    zoomWidthStep = xStep || widthResult - imageWidth;\r\n                }\r\n\r\n                if (imageWidth >= imageHeight && imageWidth !== imgOriginalSize.rw) {\r\n                    dimentions = $.extend(dimentions, {\r\n                        width: widthResult,\r\n                        height: 'auto'\r\n                    });\r\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\r\n\r\n                } else if (imageWidth < imageHeight && imageHeight !== imgOriginalSize.rh) {\r\n                    dimentions = $.extend(dimentions, {\r\n                        width: 'auto',\r\n                        height: heightResult\r\n                    });\r\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function zoomOut(e, xStep, yStep) {\r\n            var $image,\r\n                widthResult,\r\n                heightResult,\r\n                dimentions,\r\n                parentWidth,\r\n                parentHeight,\r\n                imageWidth,\r\n                imageHeight,\r\n                zoomWidthStep,\r\n                zoomHeightStep,\r\n                ratio,\r\n                fitIntoParent;\r\n\r\n            if (allowZoomOut && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\r\n                !$(zoomOutButtonSelector).hasClass(zoomOutDisabled))) {\r\n                allowZoomIn = true;\r\n                $image = $(fullscreenImageSelector);\r\n                parentWidth = $image.parent().width();\r\n                parentHeight = $image.parent().height();\r\n                imageWidth = $image.width();\r\n                imageHeight = $image.height();\r\n                ratio = imageWidth / imageHeight;\r\n\r\n                e.preventDefault();\r\n\r\n                if (imageWidth >= imageHeight) {\r\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\r\n                    widthResult = imageWidth - zoomWidthStep;\r\n                    heightResult = widthResult / ratio;\r\n                    zoomHeightStep = yStep || imageHeight - heightResult;\r\n                } else {\r\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\r\n                    heightResult = imageHeight - zoomHeightStep;\r\n                    widthResult = heightResult * ratio;\r\n                    zoomWidthStep = xStep || imageWidth - widthResult;\r\n                }\r\n\r\n                fitIntoParent = function () {\r\n                    if (ratio > parentWidth / parentHeight) {\r\n                        widthResult = parentWidth;\r\n                        zoomWidthStep = imageWidth - widthResult;\r\n                        heightResult = widthResult / ratio;\r\n                        zoomHeightStep = imageHeight - heightResult;\r\n                        dimentions = {\r\n                            width: widthResult,\r\n                            height: 'auto'\r\n                        };\r\n                    } else {\r\n                        heightResult = parentHeight;\r\n                        zoomHeightStep = imageHeight - heightResult;\r\n                        widthResult = heightResult * ratio;\r\n                        zoomWidthStep = imageWidth - widthResult;\r\n                        dimentions = {\r\n                            width: 'auto',\r\n                            height: heightResult\r\n                        };\r\n                    }\r\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\r\n                };\r\n\r\n                if (imageWidth >= imageHeight) {\r\n                    if (widthResult > parentWidth) {\r\n                        dimentions = {\r\n                            width: widthResult,\r\n                            height: 'auto'\r\n                        };\r\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\r\n                    } else if (heightResult > parentHeight) {\r\n                        dimentions = {\r\n                            width: widthResult,\r\n                            height: 'auto'\r\n                        };\r\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\r\n                    } else {\r\n                        allowZoomOut = dragFlag = false;\r\n                        toggleStandartNavigation();\r\n                        fitIntoParent();\r\n                    }\r\n                } else if (heightResult > parentHeight) {\r\n                    dimentions = {\r\n                        width: 'auto',\r\n                        height: heightResult\r\n                    };\r\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\r\n                } else if (widthResult > parentWidth) {\r\n                    dimentions = {\r\n                        width: 'auto',\r\n                        height: heightResult\r\n                    };\r\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\r\n                } else {\r\n                    allowZoomOut = dragFlag = false;\r\n                    toggleStandartNavigation();\r\n                    fitIntoParent();\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Bind event on scroll on active item in fotorama\r\n         * @param e\r\n         * @param fotorama - object of fotorama\r\n         */\r\n        function mousewheel(e, fotorama, element) {\r\n            var $fotoramaStage = fotorama.activeFrame.$stageFrame,\r\n                fotoramaStage = $fotoramaStage.get(0);\r\n\r\n            function onWheel(e) {\r\n                var delta = e.deltaY || e.wheelDelta,\r\n                    ev = e || window.event;\r\n\r\n                if ($(gallerySelector).data('fotorama').fullScreen) {\r\n\r\n                    if (e.deltaY) {\r\n                        if (delta > 0) {\r\n                            zoomOut(ev);\r\n                        } else {\r\n                            zoomIn(ev);\r\n                        }\r\n                    } else if (delta > 0) {\r\n                        zoomIn(ev);\r\n                    } else {\r\n                        zoomOut(ev);\r\n                    }\r\n\r\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\r\n                }\r\n            }\r\n\r\n            if (!$fotoramaStage.hasClass('magnify-wheel-loaded')) {\r\n                if (fotoramaStage && fotoramaStage.addEventListener) {\r\n                    if ('onwheel' in document) {\r\n                        fotoramaStage.addEventListener('wheel', onWheel);\r\n                    } else if ('onmousewheel' in document) {\r\n                        fotoramaStage.addEventListener('mousewheel', onWheel);\r\n                    } else {\r\n                        fotoramaStage.addEventListener('MozMousePixelScroll', onWheel);\r\n                    }\r\n                    $fotoramaStage.addClass('magnify-wheel-loaded');\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Method which makes draggable picture. Also work on touch devices.\r\n         */\r\n        function magnifierFullscreen(fotorama) {\r\n            var isDragActive = false,\r\n                startX,\r\n                startY,\r\n                imagePosX,\r\n                imagePosY,\r\n                touch,\r\n                swipeSlide,\r\n                $gallery = $(gallerySelector),\r\n                $image = $(fullscreenImageSelector, $gallery),\r\n                $imageContainer = $('[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"]'),\r\n                gallery = $gallery.data('fotorama'),\r\n                pinchDimention;\r\n\r\n            swipeSlide = _.throttle(function (direction) {\r\n                $(gallerySelector).data('fotorama').show(direction);\r\n            }, 500, {\r\n                trailing: false\r\n            });\r\n\r\n            /**\r\n             * Returns top position value for passed jQuery object.\r\n             *\r\n             * @param $el\r\n             * @return {number}\r\n             */\r\n            function getTop($el) {\r\n                return parseInt($el.get(0).style.top);\r\n            }\r\n\r\n            function shiftImage(dx, dy, e) {\r\n                var top = +imagePosY + dy,\r\n                    left = +imagePosX + dx,\r\n                    swipeCondition = $image.width() / 10 + 20;\r\n\r\n                dragFlag = true;\r\n\r\n                if ($image.offset().left === $imageContainer.offset().left + $imageContainer.width() - $image.width() && e.keyCode === 39 ||\r\n                    endX - 1 < $imageContainer.offset().left + $imageContainer.width() - $image.width() && dx < 0 &&\r\n                    _.isNumber(endX) &&\r\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\r\n                    endX = null;\r\n                    swipeSlide('>');\r\n\r\n                    return;\r\n                }\r\n\r\n                if ($image.offset().left === $imageContainer.offset().left && dx !== 0 && e.keyCode === 37 ||\r\n                    endX === $imageContainer.offset().left && dx > 0 &&\r\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\r\n                    endX = null;\r\n                    swipeSlide('<');\r\n\r\n                    return;\r\n                }\r\n\r\n                if ($image.height() > $imageContainer.height()) {\r\n                    if ($imageContainer.height() > $image.height() + top) {\r\n                        $image.css('top', $imageContainer.height() - $image.height());\r\n                    } else {\r\n                        top = $image.height() - getTop($image) - $imageContainer.height();\r\n                        dy = dy < top ? dy : top;\r\n                        $image.css('top', getTop($image) + dy);\r\n                    }\r\n                }\r\n\r\n                if ($image.width() > $imageContainer.width()) {\r\n\r\n                    if ($imageContainer.offset().left + $imageContainer.width() > left + $image.width()) {\r\n                        left = $imageContainer.offset().left + $imageContainer.width() - $image.width();\r\n                    } else {\r\n                        left = $imageContainer.offset().left < left ? $imageContainer.offset().left : left;\r\n                    }\r\n                    $image.offset({\r\n                        'left': left\r\n                    });\r\n                    $image.css('right', '');\r\n                } else if (Math.abs(dy) < 1 && allowZoomOut &&\r\n                    !(e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\r\n                    dx < 0 ? $(gallerySelector).data('fotorama').show('>') : $(gallerySelector).data('fotorama').show('<');\r\n                }\r\n\r\n                if ($image.width() <= $imageContainer.width() && allowZoomOut &&\r\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove') &&\r\n                    Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > swipeCondition) {\r\n                    dx < 0 ? swipeSlide('>') : swipeSlide('<');\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Sets image size to original or fit in parent block\r\n             * @param e - event object\r\n             */\r\n            function dblClickHandler(e) {\r\n                var imgOriginalSize = getImageSize($image[0]),\r\n                    proportions;\r\n\r\n                if (imgOriginalSize.rh < $image.parent().height() && imgOriginalSize.rw < $image.parent().width()) {\r\n                    return;\r\n                }\r\n\r\n                proportions = imgOriginalSize.rw / imgOriginalSize.rh;\r\n\r\n                if (allowZoomIn) {\r\n                    zoomIn(e, imgOriginalSize.rw - $image.width(), imgOriginalSize.rh - $image.height());\r\n                } else if (proportions > $imageContainer.width() / $imageContainer.height()) {\r\n                    zoomOut(e, imgOriginalSize.rw - $imageContainer.width(), imgOriginalSize.rw / proportions);\r\n                } else {\r\n                    zoomOut(e, imgOriginalSize.rw * proportions, imgOriginalSize.rh - $imageContainer.height());\r\n                }\r\n            }\r\n\r\n            function detectDoubleTap(e) {\r\n                var now = new Date().getTime(),\r\n                    timesince = now - tapFlag;\r\n\r\n                if (timesince < 400 && timesince > 0) {\r\n                    transitionActive = false;\r\n                    tapFlag = 0;\r\n                    dblClickHandler(e);\r\n                } else {\r\n                    tapFlag = new Date().getTime();\r\n                }\r\n            }\r\n\r\n            if (isTouchEnabled) {\r\n                $image.off('tap');\r\n                $image.on('tap', function (e) {\r\n                    if (e.originalEvent.originalEvent.touches.length === 0) {\r\n                        detectDoubleTap(e);\r\n                    }\r\n                });\r\n            } else {\r\n                $image.unbind('dblclick');\r\n                $image.dblclick(dblClickHandler);\r\n            }\r\n\r\n            if (gallery.fullScreen) {\r\n                toggleZoomButtons($image, isTouchEnabled, checkForVideo(fotorama.activeFrame.$stageFrame));\r\n            }\r\n\r\n            function getDimention(event) {\r\n                return Math.sqrt(\r\n                    (event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX) +\r\n                    (event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY));\r\n            }\r\n\r\n            $image.off(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown');\r\n            $image.on(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown', function (e) {\r\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\r\n                    e.preventDefault();\r\n                    pinchDimention = getDimention(e.originalEvent);\r\n                    isDragActive = false;\r\n\r\n                    if ($image.hasClass(imageDraggableClass)) {\r\n                        $image.removeClass(imageDraggableClass);\r\n                    }\r\n                } else if (gallery.fullScreen && (!transitionEnabled || !transitionActive)) {\r\n                    imagePosY = getTop($image);\r\n                    imagePosX = $image.offset().left;\r\n\r\n                    if (isTouchEnabled) {\r\n                        touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n                        e.clientX = touch.pageX;\r\n                        e.clientY = touch.pageY;\r\n                    }\r\n                    startX = e.clientX || e.originalEvent.clientX;\r\n                    startY = e.clientY || e.originalEvent.clientY;\r\n                    isDragActive = true;\r\n                }\r\n\r\n                if ($image.offset() && $image.width() > $imageContainer.width()) {\r\n                    endX = $image.offset().left;\r\n                }\r\n            });\r\n\r\n            $image.off(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove');\r\n            $image.on(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove', function (e) {\r\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\r\n                    e.preventDefault();\r\n                    var currentDimention = getDimention(e.originalEvent);\r\n\r\n                    if ($image.hasClass(imageDraggableClass)) {\r\n                        $image.removeClass(imageDraggableClass);\r\n                    }\r\n\r\n                    if (currentDimention < pinchDimention) {\r\n                        zoomOut(e);\r\n                        pinchDimention = currentDimention;\r\n                    } else if (currentDimention > pinchDimention) {\r\n                        zoomIn(e);\r\n                        pinchDimention = currentDimention;\r\n                    }\r\n                } else {\r\n                    var clientX,\r\n                        clientY;\r\n\r\n                    if (gallery.fullScreen && isDragActive && (!transitionEnabled || !transitionActive)) {\r\n\r\n                        if (allowZoomOut && !$image.hasClass(imageDraggableClass)) {\r\n                            $image.addClass(imageDraggableClass);\r\n                        }\r\n                        clientX = e.clientX || e.originalEvent.clientX;\r\n                        clientY = e.clientY || e.originalEvent.clientY;\r\n\r\n                        e.preventDefault();\r\n\r\n                        if (isTouchEnabled) {\r\n                            touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n                            clientX = touch.pageX;\r\n                            clientY = touch.pageY;\r\n                        }\r\n\r\n                        if (allowZoomOut) {\r\n                            imagePosY = getTop($(fullscreenImageSelector, $gallery));\r\n                            shiftImage(clientX - startX, clientY - startY, e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            $image.off('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd ');\r\n            $image.on('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd', function () {\r\n                transitionActive = false;\r\n            });\r\n\r\n            if (keyboardNavigation) {\r\n                $(document).unbind('keydown', keyboardNavigation);\r\n            }\r\n\r\n            /**\r\n             * Replaces original navigations with better one\r\n             * @param e - event object\r\n             */\r\n            keyboardNavigation = function (e) {\r\n                var step = 40,\r\n                    $focus = $(':focus'),\r\n                    isFullScreen = $(gallerySelector).data('fotorama').fullScreen,\r\n                    initVars = function () {\r\n                        imagePosX = $(fullscreenImageSelector, $gallery).offset().left;\r\n                        imagePosY = getTop($(fullscreenImageSelector, $gallery));\r\n                    };\r\n\r\n                if (($focus.attr('data-gallery-role') || !$focus.length) && allowZoomOut) {\r\n                    if (isFullScreen) {\r\n                        imagePosX = $(fullscreenImageSelector, $(gallerySelector)).offset().left;\r\n                        imagePosY = getTop($(fullscreenImageSelector, $(gallerySelector)));\r\n                    }\r\n\r\n                    if (e.keyCode === 39) {\r\n\r\n                        if (isFullScreen) {\r\n                            initVars();\r\n                            shiftImage(-step, 0, e);\r\n                        }\r\n                    }\r\n\r\n                    if (e.keyCode === 38) {\r\n\r\n                        if (isFullScreen) {\r\n                            initVars();\r\n                            shiftImage(0, step, e);\r\n                        }\r\n                    }\r\n\r\n                    if (e.keyCode === 37) {\r\n\r\n                        if (isFullScreen) {\r\n                            initVars();\r\n                            shiftImage(step, 0, e);\r\n                        }\r\n                    }\r\n\r\n                    if (e.keyCode === 40) {\r\n\r\n                        if (isFullScreen) {\r\n                            e.preventDefault();\r\n                            initVars();\r\n                            shiftImage(0, -step, e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (e.keyCode === 27 && isFullScreen && allowZoomOut) {\r\n                    $(gallerySelector).data('fotorama').cancelFullScreen();\r\n                }\r\n            };\r\n\r\n            /**\r\n             * @todo keyboard navigation through Fotorama Api.\r\n             */\r\n            $(document).keydown(keyboardNavigation);\r\n\r\n            $(document).on(isTouchEnabled ? 'touchend' : 'mouseup pointerup MSPointerUp', function (e) {\r\n                if (gallery.fullScreen) {\r\n\r\n                    if ($image.offset() && $image.width() > $imageContainer.width()) {\r\n                        endX = $image.offset().left;\r\n                    }\r\n\r\n                    isDragActive = false;\r\n                    $image.removeClass(imageDraggableClass);\r\n                }\r\n            });\r\n\r\n            $(window).off('resize', resizeHandler);\r\n            $(window).on('resize', {\r\n                $image: $image,\r\n                fotorama: fotorama\r\n            }, resizeHandler);\r\n        }\r\n\r\n        /**\r\n         * Hides magnifier preview and zoom blocks.\r\n         */\r\n        hideMagnifier = function () {\r\n            $(magnifierSelector).empty().hide();\r\n            $(magnifierZoomSelector).remove();\r\n        };\r\n\r\n        /**\r\n         * Check is active frame in gallery include video content.\r\n         * If true activeFrame contain video.\r\n         * @param $stageFrame - active frame in gallery\r\n         * @returns {*|Boolean}\r\n         */\r\n        function checkForVideo($stageFrame) {\r\n            return $stageFrame.hasClass(videoContainerClass);\r\n        }\r\n\r\n        /**\r\n         * Hides magnifier on drag and while arrow click.\r\n         */\r\n        function behaveOnDrag(e, initPos) {\r\n            var pos = [e.pageX, e.pageY],\r\n                isArrow = $(e.target).data('gallery-role') === 'arrow',\r\n                isClick = initPos[0] === pos[0] && initPos[1] === pos[1],\r\n                isImg = $(e.target).parent().data('active');\r\n\r\n            if (isArrow || isImg && !isClick) {\r\n                hideMagnifier();\r\n            }\r\n        }\r\n\r\n        if (config.magnifierOpts.enabled) {\r\n            $(element).on('pointerdown mousedown MSPointerDown', function (e) {\r\n                var pos = [e.pageX, e.pageY];\r\n\r\n                $(element).on('mousemove pointermove MSPointerMove', function (ev) {\r\n                    navigator.msPointerEnabled ? hideMagnifier() : behaveOnDrag(ev, pos);\r\n                });\r\n                $(document).on('mouseup pointerup MSPointerUp', function () {\r\n                    $(element).off('mousemove pointermove MSPointerMove');\r\n                });\r\n            });\r\n        }\r\n\r\n        $.extend(config.magnifierOpts, {\r\n            zoomable: false,\r\n            thumb: '.fotorama__img',\r\n            largeWrapper: '[data-gallery-role=\"magnifier\"]',\r\n            height: config.magnifierOpts.height || function () {\r\n                return $('[data-active=\"true\"]').height();\r\n            },\r\n            width: config.magnifierOpts.width || function () {\r\n                var productMedia = $(gallerySelector).parent().parent();\r\n\r\n                return productMedia.parent().width() - productMedia.width() - 20;\r\n            },\r\n            left: config.magnifierOpts.left || function () {\r\n                return $(gallerySelector).offset().left + $(gallerySelector).width() + 20;\r\n            },\r\n            top: config.magnifierOpts.top || function () {\r\n                return $(gallerySelector).offset().top;\r\n            }\r\n        });\r\n\r\n        $(element).on('fotorama:load fotorama:showend fotorama:fullscreenexit fotorama:ready', function (e, fotorama) {\r\n            var $activeStageFrame = $(gallerySelector).data('fotorama').activeFrame.$stageFrame;\r\n\r\n            if (!$activeStageFrame.find(magnifierZoomSelector).length) {\r\n                hideMagnifier();\r\n\r\n                if (config.magnifierOpts) {\r\n                    config.magnifierOpts.large = $(gallerySelector).data('fotorama').activeFrame.img;\r\n                    config.magnifierOpts.full = fotorama.data[fotorama.activeIndex].original;\r\n                    !checkForVideo($activeStageFrame) && $($activeStageFrame).magnify(config.magnifierOpts);\r\n                }\r\n            }\r\n        });\r\n\r\n        $(element).on('gallery:loaded', function (e) {\r\n            var $prevImage;\r\n\r\n            $(element).find(gallerySelector)\r\n                .on('fotorama:ready', function (e, fotorama) {\r\n                    var $zoomIn = $(zoomInButtonSelector),\r\n                        $zoomOut = $(zoomOutButtonSelector);\r\n\r\n                    if (!$zoomIn.hasClass(zoomInLoaded)) {\r\n                        $zoomIn.on('click touchstart', zoomIn);\r\n                        $zoomIn.on('mousedown', function (e) {\r\n                            e.stopPropagation();\r\n                        });\r\n\r\n                        $zoomIn.keyup(function (e) {\r\n\r\n                            if (e.keyCode === 13) {\r\n                                zoomIn(e);\r\n                            }\r\n                        });\r\n\r\n                        $(window).keyup(function (e) {\r\n\r\n                            if (e.keyCode === 107 || fotorama.fullscreen) {\r\n                                zoomIn(e);\r\n                            }\r\n                        });\r\n\r\n                        $zoomIn.addClass(zoomInLoaded);\r\n                    }\r\n\r\n                    if (!$zoomOut.hasClass(zoomOutLoaded)) {\r\n                        $zoomOut.on('click touchstart', zoomOut);\r\n                        $zoomOut.on('mousedown', function (e) {\r\n                            e.stopPropagation();\r\n                        });\r\n\r\n                        $zoomOut.keyup(function (e) {\r\n\r\n                            if (e.keyCode === 13) {\r\n                                zoomOut(e);\r\n                            }\r\n                        });\r\n\r\n                        $(window).keyup(function (e) {\r\n\r\n                            if (e.keyCode === 109 || fotorama.fullscreen) {\r\n                                zoomOut(e);\r\n                            }\r\n                        });\r\n\r\n                        $zoomOut.addClass(zoomOutLoaded);\r\n                    }\r\n                })\r\n                .on('fotorama:fullscreenenter fotorama:showend', function (e, fotorama) {\r\n                    hideMagnifier();\r\n\r\n                    if (!$(fullscreenImageSelector).is($prevImage)) {\r\n                        resetVars($(fullscreenImageSelector));\r\n                    }\r\n                    magnifierFullscreen(fotorama);\r\n                    mousewheel(e, fotorama, element);\r\n\r\n                    if ($prevImage) {\r\n                        calculateMinSize($prevImage);\r\n\r\n                        if (!$(fullscreenImageSelector).is($prevImage)) {\r\n                            resetVars($prevImage);\r\n                        }\r\n                    }\r\n\r\n                    toggleStandartNavigation();\r\n                })\r\n                .on('fotorama:load', function (e, fotorama) {\r\n                    if ($(gallerySelector).data('fotorama').fullScreen) {\r\n                        toggleZoomButtons($(fullscreenImageSelector), isTouchEnabled,\r\n                            checkForVideo(fotorama.activeFrame.$stageFrame));\r\n                    }\r\n                    magnifierFullscreen(fotorama);\r\n                })\r\n                .on('fotorama:show', function (e, fotorama) {\r\n                    $prevImage = _.clone($(fullscreenImageSelector));\r\n                    hideMagnifier();\r\n                })\r\n                .on('fotorama:fullscreenexit', function (e, fotorama) {\r\n                    resetVars($(fullscreenImageSelector));\r\n                    hideMagnifier();\r\n                    hideZoomControls(true);\r\n                });\r\n        });\r\n\r\n        return config;\r\n    };\r\n});\r\n","magnifier/magnifier.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n(function ($) {\r\n    $.fn.magnify = function (options) {\r\n        'use strict';\r\n\r\n        var magnify = new Magnify($(this), options);\r\n\r\n        /* events must be tracked here */\r\n\r\n        /**\r\n         * Return that from _init function\r\n         *\r\n         */\r\n        return magnify;\r\n    };\r\n\r\n    function Magnify(element, options) {\r\n        var customUserOptions = options || {},\r\n            $box = $(element),\r\n            $thumb,\r\n            that = this,\r\n            largeWrapper = options.largeWrapper || '.magnifier-preview',\r\n            $magnifierPreview = $(largeWrapper);\r\n\r\n        curThumb = null,\r\n        magnifierOptions = {\r\n            x: 0,\r\n            y: 0,\r\n            w: 0,\r\n            h: 0,\r\n            lensW: 0,\r\n            lensH: 0,\r\n            lensBgX: 0,\r\n            lensBgY: 0,\r\n            largeW: 0,\r\n            largeH: 0,\r\n            largeL: 0,\r\n            largeT: 0,\r\n            zoom: 2,\r\n            zoomMin: 1.1,\r\n            zoomMax: 5,\r\n            mode: 'outside',\r\n            eventType: 'click',\r\n            status: 0,\r\n            zoomAttached: false,\r\n            zoomable: customUserOptions.zoomable !== undefined ?\r\n                customUserOptions.zoomable\r\n                : false,\r\n            onthumbenter: customUserOptions.onthumbenter !== undefined ?\r\n                customUserOptions.onthumbenter\r\n                : null,\r\n            onthumbmove: customUserOptions.onthumbmove !== undefined ?\r\n                customUserOptions.onthumbmove\r\n                : null,\r\n            onthumbleave: customUserOptions.onthumbleave !== undefined ?\r\n                customUserOptions.onthumbleave\r\n                : null,\r\n            onzoom: customUserOptions.onzoom !== undefined ?\r\n                customUserOptions.onzoom\r\n                : null\r\n        },\r\n        pos = {\r\n            t: 0,\r\n            l: 0,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        gId = 0,\r\n        status = 0,\r\n        curIdx = '',\r\n        curLens = null,\r\n        curLarge = null,\r\n        lensbg = customUserOptions.bg !== undefined ?\r\n            customUserOptions.lensbg\r\n            : true,\r\n        gZoom = customUserOptions.zoom !== undefined ?\r\n            customUserOptions.zoom\r\n            : magnifierOptions.zoom,\r\n        gZoomMin = customUserOptions.zoomMin !== undefined ?\r\n            customUserOptions.zoomMin\r\n            : magnifierOptions.zoomMin,\r\n        gZoomMax = customUserOptions.zoomMax !== undefined ?\r\n            customUserOptions.zoomMax\r\n            : magnifierOptions.zoomMax,\r\n        gMode = customUserOptions.mode || magnifierOptions.mode,\r\n        gEventType = customUserOptions.eventType || magnifierOptions.eventType,\r\n        data = {},\r\n        inBounds = false,\r\n        isOverThumb = false,\r\n        rate = 1,\r\n        paddingX = 0,\r\n        paddingY = 0,\r\n        enabled = true,\r\n        showWrapper = true;\r\n\r\n        var MagnifyCls = {\r\n            magnifyHidden: 'magnify-hidden',\r\n            magnifyOpaque: 'magnify-opaque',\r\n            magnifyFull: 'magnify-fullimage'\r\n        };\r\n\r\n        /**\r\n         * Update Lens positon on.\r\n         *\r\n         */\r\n        that.update = function () {\r\n            updateLensOnLoad();\r\n        };\r\n\r\n        /**\r\n         * Init new Magnifier\r\n         *\r\n         */\r\n        that.init = function () {\r\n            _init($box, options);\r\n        };\r\n\r\n        function _toBoolean(str) {\r\n            if (typeof str === 'string') {\r\n                if (str === 'true') {\r\n                    return true;\r\n                } else if (str === 'false' || '') {\r\n                    return false;\r\n                }\r\n                console.warn('Wrong type: can\\'t be transformed to Boolean');\r\n\r\n            } else if (typeof str === 'boolean') {\r\n                return str;\r\n            }\r\n        }\r\n\r\n        function createLens(thumb) {\r\n            if ($(thumb).siblings('.magnify-lens').length) {\r\n                return false;\r\n            }\r\n            var lens = $('<div class=\"magnify-lens magnify-hidden\" data-gallery-role=\"magnifier-zoom\"></div>');\r\n\r\n            $(thumb).parent().append(lens);\r\n        }\r\n\r\n        function updateLensOnLoad(idSelectorMainImg, thumb, largeImgInMagnifyLens, largeWrapper) {\r\n            var magnifyLensElement= $box.find('.magnify-lens'),\r\n                textWrapper;\r\n\r\n            if (data[idSelectorMainImg].status === 1) {\r\n                textWrapper = $('<div class=\"magnifier-loader-text\"></div>');\r\n                magnifyLensElement.className = 'magnifier-loader magnify-hidden';\r\n                textWrapper.html('Loading...');\r\n                magnifyLensElement.html('').append(textWrapper);\r\n            } else if (data[idSelectorMainImg].status === 2) {\r\n                magnifyLensElement.addClass(MagnifyCls.magnifyHidden);\r\n                magnifyLensElement.html('');\r\n\r\n                largeImgInMagnifyLens.id = idSelectorMainImg + '-large';\r\n                largeImgInMagnifyLens.style.width = data[idSelectorMainImg].largeImgInMagnifyLensWidth + 'px';\r\n                largeImgInMagnifyLens.style.height = data[idSelectorMainImg].largeImgInMagnifyLensHeight + 'px';\r\n                largeImgInMagnifyLens.className = 'magnifier-large magnify-hidden';\r\n\r\n                if (data[idSelectorMainImg].mode === 'inside') {\r\n                    magnifyLensElement.append(largeImgInMagnifyLens);\r\n                } else {\r\n                    largeWrapper.html('').append(largeImgInMagnifyLens);\r\n                }\r\n            }\r\n\r\n            data[idSelectorMainImg].lensH = data[idSelectorMainImg].lensH > $thumb.height() ? $thumb.height() : data[idSelectorMainImg].lensH;\r\n\r\n            if (Math.round(data[idSelectorMainImg].lensW) === 0) {\r\n                magnifyLensElement.css('display', 'none');\r\n            } else {\r\n                magnifyLensElement.css({\r\n                    width: Math.round(data[idSelectorMainImg].lensW) + 'px',\r\n                    height: Math.round(data[idSelectorMainImg].lensH) + 'px',\r\n                    display: ''\r\n                });\r\n            }\r\n        }\r\n\r\n        function getMousePos() {\r\n            var xPos = pos.x - magnifierOptions.x,\r\n                yPos = pos.y - magnifierOptions.y,\r\n                t,\r\n                l;\r\n\r\n            inBounds =  xPos < 0 || yPos < 0 || xPos > magnifierOptions.w || yPos > magnifierOptions.h  ? false : true;\r\n\r\n            l = xPos - magnifierOptions.lensW / 2;\r\n            t = yPos - magnifierOptions.lensH / 2;\r\n\r\n            if (xPos < magnifierOptions.lensW / 2) {\r\n                l = 0;\r\n            }\r\n\r\n            if (yPos < magnifierOptions.lensH / 2) {\r\n                t = 0;\r\n            }\r\n\r\n            if (xPos - magnifierOptions.w + Math.ceil(magnifierOptions.lensW / 2) > 0) {\r\n                l = magnifierOptions.w - Math.ceil(magnifierOptions.lensW + 2);\r\n            }\r\n\r\n            if (yPos - magnifierOptions.h + Math.ceil(magnifierOptions.lensH / 2) > 0) {\r\n                t = magnifierOptions.h - Math.ceil(magnifierOptions.lensH);\r\n            }\r\n\r\n            pos.l = l;\r\n            pos.t = t;\r\n\r\n            magnifierOptions.lensBgX = pos.l;\r\n            magnifierOptions.lensBgY = pos.t;\r\n\r\n            if (magnifierOptions.mode === 'inside') {\r\n                magnifierOptions.largeL = Math.round(xPos * (magnifierOptions.zoom - magnifierOptions.lensW / magnifierOptions.w));\r\n                magnifierOptions.largeT = Math.round(yPos * (magnifierOptions.zoom - magnifierOptions.lensH / magnifierOptions.h));\r\n            } else {\r\n                magnifierOptions.largeL = Math.round(magnifierOptions.lensBgX * magnifierOptions.zoom * (magnifierOptions.largeWrapperW / magnifierOptions.w));\r\n                magnifierOptions.largeT = Math.round(magnifierOptions.lensBgY * magnifierOptions.zoom * (magnifierOptions.largeWrapperH / magnifierOptions.h));\r\n            }\r\n        }\r\n\r\n        function onThumbEnter() {\r\n            if (_toBoolean(enabled)) {\r\n                magnifierOptions = data[curIdx];\r\n                curLens = $box.find('.magnify-lens');\r\n\r\n                if (magnifierOptions.status === 2) {\r\n                    curLens.removeClass(MagnifyCls.magnifyOpaque);\r\n                    curLarge = $('#' + curIdx + '-large');\r\n                    curLarge.removeClass(MagnifyCls.magnifyHidden);\r\n                } else if (magnifierOptions.status === 1) {\r\n                    curLens.className = 'magnifier-loader';\r\n                }\r\n            }\r\n        }\r\n\r\n        function onThumbLeave() {\r\n            if (magnifierOptions.status > 0) {\r\n                var handler = magnifierOptions.onthumbleave;\r\n\r\n                if (handler !== null) {\r\n                    handler({\r\n                        thumb: curThumb,\r\n                        lens: curLens,\r\n                        large: curLarge,\r\n                        x: pos.x,\r\n                        y: pos.y\r\n                    });\r\n                }\r\n\r\n                if (!curLens.hasClass(MagnifyCls.magnifyHidden)) {\r\n                    curLens.addClass(MagnifyCls.magnifyHidden);\r\n\r\n                    //$curThumb.removeClass(MagnifyCls.magnifyOpaque);\r\n                    if (curLarge !== null) {\r\n                        curLarge.addClass(MagnifyCls.magnifyHidden);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function move() {\r\n            if (_toBoolean(enabled)) {\r\n                if (status !== magnifierOptions.status) {\r\n                    onThumbEnter();\r\n                }\r\n\r\n                if (magnifierOptions.status > 0) {\r\n                    curThumb.className = magnifierOptions.thumbCssClass + ' magnify-opaque';\r\n\r\n                    if (magnifierOptions.status === 1) {\r\n                        curLens.className = 'magnifier-loader';\r\n                    } else if (magnifierOptions.status === 2) {\r\n                        curLens.removeClass(MagnifyCls.magnifyHidden);\r\n                        curLarge.removeClass(MagnifyCls.magnifyHidden);\r\n                        curLarge.css({\r\n                            left: '-' + magnifierOptions.largeL + 'px',\r\n                            top: '-' + magnifierOptions.largeT + 'px'\r\n                        });\r\n                    }\r\n\r\n                    var borderOffset = 2; // Offset for magnify-lens border\r\n                    pos.t = pos.t <= 0 ? 0 : pos.t - borderOffset;\r\n\r\n                    curLens.css({\r\n                        left: pos.l + paddingX + 'px',\r\n                        top: pos.t + paddingY + 'px'\r\n                    });\r\n\r\n                    if (lensbg) {\r\n                        curLens.css({\r\n                            'background-color': 'rgba(f,f,f,.5)'\r\n                        });\r\n                    } else {\r\n                        curLens.get(0).style.backgroundPosition = '-' +\r\n                        magnifierOptions.lensBgX + 'px -' +\r\n                        magnifierOptions.lensBgY + 'px';\r\n                    }\r\n                    var handler = magnifierOptions.onthumbmove;\r\n\r\n                    if (handler !== null) {\r\n                        handler({\r\n                            thumb: curThumb,\r\n                            lens: curLens,\r\n                            large: curLarge,\r\n                            x: pos.x,\r\n                            y: pos.y\r\n                        });\r\n                    }\r\n                }\r\n\r\n                status = magnifierOptions.status;\r\n            }\r\n        }\r\n\r\n        function setThumbData(mainImage, mainImageData) {\r\n            var thumbBounds = mainImage.getBoundingClientRect(),\r\n                w = 0,\r\n                h = 0;\r\n\r\n            mainImageData.x = Math.round(thumbBounds.left);\r\n            mainImageData.y = Math.round(thumbBounds.top);\r\n            mainImageData.w = Math.round(thumbBounds.right - mainImageData.x);\r\n            mainImageData.h = Math.round(thumbBounds.bottom - mainImageData.y);\r\n\r\n            if (mainImageData.mode === 'inside') {\r\n                w = mainImageData.w;\r\n                h = mainImageData.h;\r\n            } else {\r\n                w = mainImageData.largeWrapperW;\r\n                h = mainImageData.largeWrapperH;\r\n            }\r\n\r\n            mainImageData.largeImgInMagnifyLensWidth = Math.round(mainImageData.zoom * w);\r\n            mainImageData.largeImgInMagnifyLensHeight = Math.round(mainImageData.zoom * h);\r\n\r\n            mainImageData.lensW = Math.round(mainImageData.w / mainImageData.zoom);\r\n            mainImageData.lensH = Math.round(mainImageData.h / mainImageData.zoom);\r\n        }\r\n\r\n        function _init($box, options) {\r\n            var opts = {};\r\n\r\n            if (options.thumb === undefined) {\r\n                return false;\r\n            }\r\n\r\n            $thumb = $box.find(options.thumb);\r\n\r\n            if ($thumb.length) {\r\n                for (var key in options) {\r\n                    opts[key] = options[key];\r\n                }\r\n\r\n                opts.thumb = $thumb;\r\n                enabled = opts.enabled;\r\n\r\n                if (_toBoolean(enabled)) {\r\n\r\n                    $magnifierPreview.show().css('display', '');\r\n                    $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\r\n                    set(opts);\r\n                } else {\r\n                    $magnifierPreview.empty().hide();\r\n                }\r\n            }\r\n\r\n            return that;\r\n        }\r\n\r\n        function hoverEvents(thumb) {\r\n            $(thumb).on('mouseover', function (e) {\r\n\r\n                if (showWrapper) {\r\n\r\n                    if (magnifierOptions.status !== 0) {\r\n                        onThumbLeave();\r\n                    }\r\n                    handleEvents(e);\r\n                    isOverThumb = inBounds;\r\n                }\r\n            }).trigger('mouseover');\r\n        }\r\n\r\n        function clickEvents(thumb) {\r\n            $(thumb).on('click', function (e) {\r\n\r\n                if (showWrapper) {\r\n                    if (!isOverThumb) {\r\n                        if (magnifierOptions.status !== 0) {\r\n                            onThumbLeave();\r\n                        }\r\n                        handleEvents(e);\r\n                        isOverThumb = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function bindEvents(eType, thumb) {\r\n            switch (eType) {\r\n                case 'hover':\r\n                    hoverEvents(thumb);\r\n                    break;\r\n\r\n                case 'click':\r\n                    clickEvents(thumb);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function handleEvents(e) {\r\n            var src = e.target;\r\n\r\n            curIdx = src.id;\r\n            curThumb = src;\r\n\r\n            onThumbEnter(src);\r\n\r\n            setThumbData(curThumb, magnifierOptions);\r\n\r\n            pos.x = e.clientX;\r\n            pos.y = e.clientY;\r\n\r\n            getMousePos();\r\n            move();\r\n\r\n            var handler = magnifierOptions.onthumbenter;\r\n\r\n            if (handler !== null) {\r\n                handler({\r\n                    thumb: curThumb,\r\n                    lens: curLens,\r\n                    large: curLarge,\r\n                    x: pos.x,\r\n                    y: pos.y\r\n                });\r\n            }\r\n        }\r\n\r\n        function set(options) {\r\n            if (data[options.thumb.id] !== undefined) {\r\n                curThumb = options.thumb;\r\n\r\n                return false;\r\n            }\r\n\r\n            var thumbObj = new Image(),\r\n                largeObj = new Image(),\r\n                $thumb = options.thumb,\r\n                thumb = $thumb.get(0),\r\n                idx = thumb.id,\r\n                largeUrl,\r\n                largeWrapper = $(options.largeWrapper),\r\n                zoom = options.zoom || thumb.getAttribute('data-zoom') || gZoom,\r\n                zoomMin = options.zoomMin || gZoomMin,\r\n                zoomMax = options.zoomMax || gZoomMax,\r\n                mode = options.mode || thumb.getAttribute('data-mode') || gMode,\r\n                eventType = options.eventType || thumb.getAttribute('data-eventType') || gEventType,\r\n                onthumbenter = options.onthumbenter !== undefined ?\r\n                    options.onthumbenter\r\n                    : magnifierOptions.onthumbenter,\r\n                onthumbleave = options.onthumbleave !== undefined ?\r\n                    options.onthumbleave\r\n                    : magnifierOptions.onthumbleave,\r\n                onthumbmove = options.onthumbmove !== undefined ?\r\n                    options.onthumbmove\r\n                    : magnifierOptions.onthumbmove;\r\n\r\n            largeUrl = $thumb.data('original') || customUserOptions.full || $thumb.attr('src');\r\n\r\n            if (thumb.id === '') {\r\n                idx = thumb.id = 'magnifier-item-' + gId;\r\n                gId += 1;\r\n            }\r\n\r\n            createLens(thumb, idx);\r\n\r\n            if (options.width) {\r\n                largeWrapper.width(options.width);\r\n            }\r\n\r\n            if (options.height) {\r\n                largeWrapper.height(options.height);\r\n            }\r\n\r\n            if (options.top) {\r\n                if (typeof options.top == 'function') {\r\n                    var top = options.top() + 'px';\r\n                } else {\r\n                    var top = options.top + 'px';\r\n                }\r\n\r\n                if (largeWrapper.length) {\r\n                    largeWrapper[0].style.top = top.replace('%px', '%');\r\n                }\r\n            }\r\n\r\n            if (options.left) {\r\n                if (typeof options.left == 'function') {\r\n                    var left = options.left() + 'px';\r\n                } else {\r\n                    var left = options.left + 'px';\r\n                }\r\n\r\n                if (largeWrapper.length) {\r\n                    largeWrapper[0].style.left = left.replace('%px', '%');\r\n                }\r\n            }\r\n\r\n            data[idx] = {\r\n                zoom: zoom,\r\n                zoomMin: zoomMin,\r\n                zoomMax: zoomMax,\r\n                mode: mode,\r\n                eventType: eventType,\r\n                thumbCssClass: thumb.className,\r\n                zoomAttached: false,\r\n                status: 0,\r\n                largeUrl: largeUrl,\r\n                largeWrapperId: mode === 'outside' ? largeWrapper.attr('id') : null,\r\n                largeWrapperW: mode === 'outside' ? largeWrapper.width() : null,\r\n                largeWrapperH: mode === 'outside' ? largeWrapper.height() : null,\r\n                onthumbenter: onthumbenter,\r\n                onthumbleave: onthumbleave,\r\n                onthumbmove: onthumbmove\r\n            };\r\n\r\n            paddingX = ($thumb.parent().width() - $thumb.width()) / 2;\r\n            paddingY = ($thumb.parent().height() - $thumb.height()) / 2;\r\n\r\n            showWrapper = false;\r\n            $(thumbObj).on('load', function () {\r\n                data[idx].status = 1;\r\n\r\n                $(largeObj).on('load', function () {\r\n\r\n                    if (largeObj.width > largeWrapper.width() || largeObj.height > largeWrapper.height()) {\r\n                        showWrapper = true;\r\n                        bindEvents(eventType, thumb);\r\n                        data[idx].status = 2;\r\n                        if (largeObj.width > largeObj.height) {\r\n                            data[idx].zoom = largeObj.width / largeWrapper.width();\r\n                        } else {\r\n                            data[idx].zoom = largeObj.height / largeWrapper.height();\r\n                        }\r\n                        setThumbData(thumb, data[idx]);\r\n                        updateLensOnLoad(idx, thumb, largeObj, largeWrapper);\r\n                    }\r\n                });\r\n\r\n                largeObj.src = data[idx].largeUrl;\r\n            });\r\n\r\n            thumbObj.src = thumb.src;\r\n        }\r\n\r\n        /**\r\n         * Hide magnifier when mouse exceeds image bounds.\r\n         */\r\n        function onMouseLeave() {\r\n            onThumbLeave();\r\n            isOverThumb = false;\r\n            $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\r\n        }\r\n\r\n        function onMousemove(e) {\r\n            pos.x = e.clientX;\r\n            pos.y = e.clientY;\r\n\r\n            getMousePos();\r\n\r\n            if (gEventType === 'hover') {\r\n                isOverThumb = inBounds;\r\n            }\r\n\r\n            if (inBounds && isOverThumb) {\r\n                if (gMode === 'outside') {\r\n                    $magnifierPreview.removeClass(MagnifyCls.magnifyHidden);\r\n                }\r\n                move();\r\n            }\r\n        }\r\n\r\n        function onScroll() {\r\n            if (curThumb !== null) {\r\n                setThumbData(curThumb, magnifierOptions);\r\n            }\r\n        }\r\n\r\n        $(window).on('scroll', onScroll);\r\n        $(window).resize(function () {\r\n            _init($box, customUserOptions);\r\n        });\r\n\r\n        $box.on('mousemove', onMousemove);\r\n        $box.on('mouseleave', onMouseLeave);\r\n\r\n        _init($box, customUserOptions);\r\n    }\r\n}(jQuery));\r\n","Dotdigitalgroup_Email/js/newsletterPreferences.js":"require([\r\n    'jquery',\r\n    'mage/calendar',\r\n    'domReady!'\r\n    ], function ($) {\r\n    'use strict';\r\n\r\n    var li = $('li a[href*=\"newsletter/manage\"]').first();\r\n    $('.date-field').each(function () {\r\n        $(this).calendar({\r\n            showTime: false\r\n        });\r\n    });\r\n\r\n    li.parent().addClass('current');\r\n    li.replaceWith(\"<strong>\" + li.text() + \"</strong>\");\r\n});\r\n","Dotdigitalgroup_Email/js/formDataCapture.js":"// See Dotdigitalgroup_Enterprise/view/base/web/js/content-type/dotdigitalgroup-form/appearance/default/widget.js\r\ndefine([\r\n    'jquery',\r\n    'mage/url',\r\n], function ($, url) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n\r\n        let formId = $(element).data('page-id');\r\n        let shouldSubscribe = $(element).data('add-respondent') === 1;\r\n\r\n        ecPF.onComplete(function (formData) {\r\n            let hasContactEmail = formData.contactEmail != null && formData.contactEmail.length > 0;\r\n\r\n            if (typeof window.dmPt !== 'undefined' && hasContactEmail) {\r\n                window.dmPt('identify', formData.contactEmail);\r\n            }\r\n\r\n            if (shouldSubscribe && hasContactEmail) {\r\n                $.post(url.build('newsletter/subscriber/new'), {\r\n                    email: formData.contactEmail\r\n                }).done(function() {\r\n                    window.scrollTo(0,0);\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        }, formId);\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/roiCode.js":"define(['jquery', 'dmmpt'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * ROI\r\n     * @param {Array} items\r\n     * @param {Float} total\r\n     */\r\n    function init(items, total) {\r\n        var fLen = items.length,\r\n            i = 0;\r\n\r\n        for (i; i < fLen; i++) {\r\n            window._dmTrack('product', items[i]);\r\n        }\r\n        window._dmTrack('CheckOutAmount', total);\r\n        window._dmCallHandler();\r\n    }\r\n\r\n    /**\r\n     * Export/return tracking code init\r\n     * @param {Object} roiCode\r\n     */\r\n    return function (roiCode) {\r\n        $(document).ready(function () {\r\n            init(roiCode.items, roiCode.total);\r\n        });\r\n    };\r\n});\r\n\r\n","Dotdigitalgroup_Email/js/webBehaviorTracking.js":"define([\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'jquery'\r\n], function (storage, $) {\r\n    'use strict';\r\n\r\n    return {\r\n        identifiersConfig: {\r\n            namespace: 'product_data_storage'\r\n        },\r\n\r\n        productStorageConfig: {\r\n            namespace: 'product_data_storage',\r\n            customerDataProvider: 'product_data_storage',\r\n            className: 'DataStorage'\r\n        },\r\n\r\n        initIdsStorage: function () {\r\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\r\n            return this;\r\n        },\r\n\r\n        idsStorageHandler: function (idsStorage) {\r\n            this.productStorage = storage.createStorage(this.productStorageConfig);\r\n            this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\r\n            return this;\r\n        },\r\n\r\n        dataCollectionHandler: function (data) {\r\n            let productData;\r\n            let productId;\r\n\r\n            productId = parseInt(\r\n                document.querySelector('[data-product-id]')\r\n                    .getAttribute('data-product-id')\r\n            );\r\n\r\n            if (typeof data[productId] === 'undefined') {\r\n                productId = parseInt(\r\n                    $('[name=product]').val()\r\n                );\r\n            }\r\n\r\n            productData = data[productId];\r\n\r\n            if (productData != null) {\r\n                var trackingData = {\r\n                    product_name: productData.name || '',\r\n                    product_url: productData.url || '',\r\n                    product_currency: productData.currency_code || '',\r\n                    product_status: parseInt(productData.is_salable) === 1 ? 'In stock' : 'Out of stock',\r\n                    product_price: productData.price_info.final_price || 0,\r\n                    product_specialPrice: productData.price_info.special_price || 0,\r\n                    product_sku: productData.extension_attributes.ddg_sku || '',\r\n                    product_brand: productData.extension_attributes.ddg_brand || '',\r\n                    product_categories: (productData.extension_attributes.ddg_categories || []).join(','),\r\n                    product_image_path: productData.extension_attributes.ddg_image || '',\r\n                    product_description: productData.extension_attributes.ddg_description || ''\r\n                };\r\n\r\n                this.wbtTrack(trackingData);\r\n            }\r\n        },\r\n\r\n        initWbt: function (id) {\r\n            window.dm_insight_id = id;\r\n\r\n            (function(w,d,u,t,o,c){w['dmtrackingobjectname']=o;c=d.createElement(t);c.async=1;c.src=u;t=d.getElementsByTagName\r\n            (t)[0];t.parentNode.insertBefore(c,t);w[o]=w[o]||function(){(w[o].q=w[o].q||[]).push(arguments);};\r\n            })(window, document, '//static.trackedweb.net/js/_dmptv4.js', 'script', 'dmPt');\r\n\r\n            return this;\r\n        },\r\n\r\n        wbtTrack: function (data) {\r\n            window.dmPt('track', data || {});\r\n        },\r\n\r\n        /**\r\n         * @param settings\r\n         * @constructor\r\n         */\r\n        'Dotdigitalgroup_Email/js/webBehaviorTracking': function (settings) {\r\n            this.initWbt(settings.id)\r\n                .initIdsStorage();\r\n\r\n            var body = document.getElementsByTagName('body')[0];\r\n\r\n            if (body.classList.contains('catalogsearch-result-index')) {\r\n                var search = document.getElementById('search');\r\n                this.wbtTrack({\r\n                    'searched_term' : search.getAttribute('value')\r\n                });\r\n            } else if (!body.classList.contains('catalog-product-view')) {\r\n                this.wbtTrack();\r\n            }\r\n        }\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/emailCapture.js":"define(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    var previousEmail;\r\n\r\n    /**\r\n     * Email validation\r\n     * @param {String} sEmail\r\n     * @returns {Boolean}\r\n     */\r\n    function validateEmail(sEmail) {\r\n        return /^([+\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\r\n            .test(sEmail);\r\n    }\r\n\r\n    /**\r\n     * Send captured email\r\n     * For checkout, post email to emailCapture controller\r\n     * For all types, de-anonymise the user in the tracking script (if present)\r\n     *\r\n     * @param selectors\r\n     * @param type (checkout, newsletter, login)\r\n     * @param url\r\n     */\r\n    function emailCapture(selectors, type, url) {\r\n        $(document).on('blur', selectors.join(', '), function() {\r\n            var email = $(this).val();\r\n            if (!email || email === previousEmail || !validateEmail(email)) {\r\n                return;\r\n            }\r\n\r\n            if (typeof window.dmPt !== 'undefined') {\r\n                window.dmPt('identify', email);\r\n            }\r\n\r\n            if (type === 'checkout') {\r\n                $.post(url, {\r\n                    email: email\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Exported/return email capture\r\n     * @param {Object} config\r\n     */\r\n    return function (config) {\r\n        let selectors = [];\r\n        switch (config.type) {\r\n            case 'checkout' :\r\n                selectors.push('input[id=\"customer-email\"]');\r\n                break;\r\n\r\n            case 'newsletter' :\r\n                selectors.push('input[id=\"newsletter\"]');\r\n                break;\r\n\r\n            case 'login' :\r\n                selectors.push('input[id=\"email\"]');\r\n                break;\r\n        }\r\n\r\n        if (selectors.length !== 0) {\r\n            var ajaxUrl = config.url ? config.url : null;\r\n            emailCapture(selectors, config.type, ajaxUrl);\r\n        }\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/form/element/manage-coupon-codes.js":"define([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/form/components/fieldset',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'jquery',\r\n], function (_, uiRegistry, fieldset, async, $) {\r\n    'use strict';\r\n\r\n    return fieldset.extend({\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Initialize element\r\n         *\r\n         * @returns {Abstract} Chainable\r\n         */\r\n        initialize: function (elems, position) {\r\n            this._super();\r\n            let obj = this;\r\n\r\n            async.async('#ddg-sales-rule-form-tab-coupons', document.getElementById('container'), function (node) {\r\n                uiRegistry\r\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                    .on('checked', function () {\r\n                        obj.enableDisableFields();\r\n                    });\r\n\r\n                this.enableDisableFields();\r\n            }.bind(this));\r\n\r\n            // bind to window\r\n            window.updateEdcCouponUrl = this.updateEdcCouponUrl;\r\n\r\n            return this;\r\n        },\r\n\r\n        updateEdcCouponUrl: function () {\r\n            var couponAttributes = [];\r\n            var ddgEnabled = document.getElementById('ddg_coupons_enabled').getValue();\r\n            var inputCouponUrl = document.getElementById('ddg_coupons_edc_url');\r\n            var allowResend = parseInt(document.getElementById('ddg_coupons_allow_resend').getValue());\r\n            var cancelSendField = document.getElementById('ddg_coupons_cancel_send');\r\n            var couponUrl = inputCouponUrl.getAttribute('data-baseurl') + '/';\r\n            var expiresAfter = document.getElementById('ddg_coupons_expires_after');\r\n            var expireDays = expiresAfter.getValue();\r\n\r\n            if (!parseInt(expireDays) || parseInt(expireDays) < 1) {\r\n                expiresAfter.value = '';\r\n            }\r\n\r\n            if (allowResend === 0 && ddgEnabled) {\r\n                cancelSendField.setAttribute('disabled', 'disabled');\r\n            } else {\r\n                cancelSendField.removeAttribute('disabled');\r\n            }\r\n\r\n            ['prefix', 'suffix', 'format', 'allow_resend', 'cancel_send', 'expires_after']\r\n                .forEach(function (field) {\r\n                    var inputField = document.getElementById('ddg_coupons_' + field);\r\n                    if (!!inputField.getValue() && !inputField.hasAttribute('disabled')) {\r\n                        couponAttributes.push('code_' + field + '/' + inputField.getValue());\r\n                    }\r\n                });\r\n\r\n            couponAttributes.push(inputCouponUrl.getAttribute('data-email-merge-field'));\r\n            inputCouponUrl.setValue(couponUrl + couponAttributes.join('/'));\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n        /*eslint-disable lines-around-comment*/\r\n\r\n        /**\r\n         * Enable/disable fields on Coupons tab\r\n         */\r\n        enableDisableFields: function () {\r\n            var ddgEnabled = document.getElementById('ddg_coupons_enabled').getValue();\r\n            var isExistingRule = !!document.querySelector('#ddg_coupons_rule_id').getValue();\r\n            var disableAuto;\r\n            var isUseAutoGenerationChecked = uiRegistry\r\n                .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                .checked();\r\n\r\n            if (isExistingRule) {\r\n                this.updateEdcCouponUrl();\r\n            }\r\n\r\n            disableAuto = (isUseAutoGenerationChecked && isExistingRule && ddgEnabled);\r\n            this.disableFields(!disableAuto);\r\n        },\r\n\r\n        disableFields : function(toDisable) {\r\n            var selector = '#ddg-sales-rule-form-tab-coupons input,' +\r\n                '#ddg-sales-rule-form-tab-coupons select,' +\r\n                '#ddg-sales-rule-form-tab-coupons textarea';\r\n\r\n            _.each(\r\n                document.querySelectorAll(selector),\r\n                function (element) {\r\n                    element.disabled = toDisable;\r\n                }\r\n            );\r\n\r\n            if (uiRegistry.get('sales_rule_form.sales_rule_form.rule_information.to_date').value() !== '') {\r\n                document.querySelector('#ddg-sales-rule-form-tab-coupons #ddg_coupons_expires_after').disabled = true;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_SendFriend/requirejs-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\nvar config = {\r\n    map: {\r\n        '*': {\r\n            'Magento_SendFriend/back-event': 'Magento_SendFriend/js/back-event'\r\n        }\r\n    }\r\n};\r\n","Magento_SendFriend/js/back-event.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).on('click', function () {\r\n            history.back();\r\n\r\n            return false;\r\n        });\r\n    };\r\n});\r\n","PayPal_Braintree/js/validator.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return {\r\n        config: {},\r\n\r\n        /**\r\n         * Set configuration\r\n         * @param {Object} config\r\n         */\r\n        setConfig: function (config) {\r\n            this.config = config;\r\n        },\r\n\r\n        /**\r\n         * Get List of available card types\r\n         * @returns {*|exports.defaults.availableCardTypes|{}}\r\n         */\r\n        getAvailableCardTypes: function () {\r\n            return this.config.availableCardTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types\r\n         * @returns {Object}\r\n         */\r\n        getCcTypesMapper: function () {\r\n            return this.config.ccTypesMapper;\r\n        },\r\n\r\n        /**\r\n         * Find mage card type by Braintree type\r\n         * @param {String} type\r\n         * @param {Object} availableTypes\r\n         * @returns {*}\r\n         */\r\n        getMageCardType: function (type, availableTypes) {\r\n            var storedCardType = null,\r\n                mapper = this.getCcTypesMapper();\r\n\r\n            if (type && typeof mapper[type] !== 'undefined') {\r\n                storedCardType = mapper[type];\r\n\r\n                if (_.indexOf(availableTypes, storedCardType) !== -1) {\r\n                    return storedCardType;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Filter list of available card types\r\n         * @param {Object} availableTypes\r\n         * @param {Object} countrySpecificCardTypes\r\n         * @returns {Object}\r\n         */\r\n        collectTypes: function (availableTypes, countrySpecificCardTypes) {\r\n            var key,\r\n                filteredTypes = [];\r\n\r\n            for (key in availableTypes) {\r\n                if (_.indexOf(countrySpecificCardTypes, availableTypes[key]) !== -1) {\r\n                    filteredTypes.push(availableTypes[key]);\r\n                }\r\n            }\r\n\r\n            return filteredTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types for country\r\n         * @param {String} countryId\r\n         * @returns {*}\r\n         */\r\n        getCountrySpecificCardTypes: function (countryId) {\r\n            if (typeof this.config.countrySpecificCardTypes[countryId] !== 'undefined') {\r\n                return this.config.countrySpecificCardTypes[countryId];\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","PayPal_Braintree/js/form-builder.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'underscore',\r\n        'mage/template'\r\n    ],\r\n    function ($, _, mageTemplate) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * @param {Object} formData\r\n             * @returns {*|jQuery}\r\n             */\r\n            build: function (formData) {\r\n                var formTmpl = mageTemplate('<form action=\"<%= data.action %>\"' +\r\n                    ' method=\"POST\" hidden enctype=\"application/x-www-form-urlencoded\">' +\r\n                        '<% _.each(data.fields, function(val, key){ %>' +\r\n                            '<input value=\\'<%= val %>\\' name=\"<%= key %>\" type=\"hidden\">' +\r\n                        '<% }); %>' +\r\n                    '</form>');\r\n\r\n                return $(formTmpl({\r\n                    data: {\r\n                        action: formData.action,\r\n                        fields: formData.fields\r\n                    }\r\n                })).appendTo($('[data-container=\"body\"]'));\r\n            }\r\n        };\r\n    }\r\n);\r\n","PayPal_Braintree/js/paypal/product-page.js":"define(\r\n    ['PayPal_Braintree/js/paypal/button', 'jquery'],\r\n    function (button, $) {\r\n        'use strict';\r\n\r\n        return button.extend({\r\n\r\n            defaults: {\r\n                label: 'buynow',\r\n                branding: true,\r\n            },\r\n\r\n            /**\r\n             * The validation on the add-to-cart form is done after the PayPal window has opened.\r\n             * This is because the validate method exposed by the PP Button requires an event to disable/enable the button.\r\n             * We can't fire an event due to the way the mage.validation widget works and we can't do something gross like\r\n             * an interval because the validation() method shows the error messages and focuses the user's input on the\r\n             * first erroring input field.\r\n             * @param payload\r\n             * @returns {*}\r\n             */\r\n            beforeSubmit: function (payload) {\r\n                var form = $(\"#product_addtocart_form\");\r\n\r\n                if (!(form.validation() && form.validation('isValid'))) {\r\n                    return false;\r\n                }\r\n\r\n                payload.additionalData = form.serialize();\r\n\r\n                return payload;\r\n            }\r\n        });\r\n    }\r\n);","PayPal_Braintree/js/paypal/button.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'rjsResolver',\r\n        'uiRegistry',\r\n        'uiComponent',\r\n        'underscore',\r\n        'jquery',\r\n        'braintree',\r\n        'braintreeDataCollector',\r\n        'braintreePayPalCheckout',\r\n        'braintreeCheckoutPayPalAdapter',\r\n        'PayPal_Braintree/js/form-builder',\r\n        'domReady!',\r\n        'https://www.paypalobjects.com/api/checkout.js'\r\n    ],\r\n    function (\r\n        resolver,\r\n        registry,\r\n        Component,\r\n        _,\r\n        $,\r\n        braintree,\r\n        dataCollector,\r\n        paypalCheckout,\r\n        paypalAdapter,\r\n        formBuilder\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n\r\n                integrationName: 'braintreePaypal.currentIntegration',\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                displayName: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                environment: 'sandbox',\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                clientToken: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                color: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                shape: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                size: null,\r\n\r\n                /**\r\n                 * {Bool}\r\n                 */\r\n                fundingicons: null,\r\n\r\n                /**\r\n                 * {Bool}\r\n                 */\r\n                branding: null,\r\n\r\n                /**\r\n                 * {Bool}\r\n                 */\r\n                tagline: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                label: null,\r\n\r\n                /**\r\n                 * {String}\r\n                 */\r\n                offerCredit: false,\r\n\r\n                /**\r\n                 * {Object}\r\n                 */\r\n                disabledFunding: {\r\n                    card: false,\r\n                    elv: false\r\n                },\r\n\r\n                /**\r\n                 * {Object}\r\n                 */\r\n                events: {\r\n                    onClick: null,\r\n                    onCancel: null,\r\n                    onError: null\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super()\r\n                    .initComponent();\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initComponent: function () {\r\n                var $this = $('#' + this.id),\r\n                    data = {\r\n                        amount: $this.data('amount'),\r\n                        locale: $this.data('locale'),\r\n                        currency: $this.data('currency'),\r\n                        flow: 'checkout',\r\n                        enableShippingAddress: true,\r\n                        displayName: this.displayName,\r\n                        offerCredit: this.offerCredit\r\n                    };\r\n\r\n                this.initCallback(data);\r\n                return this;\r\n            },\r\n\r\n            initCallback: function (data) {\r\n                braintree.create({\r\n                    authorization: this.clientToken,\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        console.error('paypalCheckout error', clientErr);\r\n                        return this.showError(\"PayPal Checkout could not be initialized. Please contact the store owner.\");\r\n                    }\r\n\r\n                    dataCollector.create({\r\n                        client: clientInstance,\r\n                        paypal: true\r\n                    }, function (err, dataCollectorInstance) {\r\n                        if (err) {\r\n                            return console.log(err);\r\n                        }\r\n                    });\r\n\r\n                    paypalCheckout.create({\r\n                        client: clientInstance\r\n                    }, function (createErr, paypalCheckoutInstance) {\r\n                        if (createErr) {\r\n                            console.error('paypalCheckout instantiation error', createErr);\r\n                            return;\r\n                        }\r\n\r\n                        let style = {\r\n                            color: this.color,\r\n                            shape: this.shape,\r\n                            size: this.size\r\n                        };\r\n\r\n                        if (typeof this.fundingicons === 'boolean') {\r\n                            style.fundingicons = this.fundingicons;\r\n                        }\r\n                        if (typeof this.branding === 'boolean') {\r\n                            style.branding = this.branding;\r\n                        }\r\n                        if (typeof this.label === 'string') {\r\n                            style.label = this.label;\r\n                        }\r\n                        if (typeof this.tagline === 'boolean') {\r\n                            style.tagline = this.tagline;\r\n                        }\r\n\r\n                        // PayPal Credit funding options\r\n                        var funding = {\r\n                            allowed: [],\r\n                            disallowed: []\r\n                        };\r\n                        if (this.offerCredit === true) {\r\n                            //funding.allowed.push(paypal.FUNDING.CREDIT);\r\n                            style.label = 'credit'\r\n                        } else {\r\n                            //funding.disallowed.push(paypal.FUNDING.CREDIT);\r\n                        }\r\n\r\n                        // Disabled function options\r\n                        var disabledFunding = this.disabledFunding;\r\n                        if (true === disabledFunding.card) {\r\n                            //funding.disallowed.push(paypal.FUNDING.CARD);\r\n                        }\r\n                        if (true === disabledFunding.elv) {\r\n                            funding.disallowed.push(paypal.FUNDING.ELV);\r\n                        }\r\n\r\n                        // Render\r\n                        var actionSuccess = this.actionSuccess,\r\n                            beforeSubmit = this.beforeSubmit,\r\n                            events = this.events;\r\n\r\n                        paypal.Button.render({\r\n                            env: this.environment,\r\n                            style: style,\r\n                            funding: funding,\r\n                            locale: data.locale,\r\n\r\n                            payment: function () {\r\n                                return paypalCheckoutInstance.createPayment(data);\r\n                            },\r\n\r\n                            onCancel: function (data) {\r\n                                jQuery(\"#maincontent\").trigger('processStop');\r\n\r\n                                if (typeof events.onCancel === 'function') {\r\n                                    events.onCancel();\r\n                                }\r\n                            },\r\n\r\n                            onError: function (err) {\r\n                                console.error('paypalCheckout button render error', err);\r\n                                jQuery(\"#maincontent\").trigger('processStop');\r\n\r\n\r\n                                if (typeof events.onError === 'function') {\r\n                                    events.onError(err);\r\n                                }\r\n                            },\r\n\r\n                            onClick: function(data) {\r\n                                if (typeof events.onClick === 'function') {\r\n                                    events.onClick(data);\r\n                                }\r\n                            },\r\n\r\n                            /**\r\n                             * Pass the payload (and payload.nonce) through to the implementation's onPaymentMethodReceived method\r\n                             * @param data\r\n                             * @param actions\r\n                             */\r\n                            onAuthorize: function (data, actions) {\r\n                                return paypalCheckoutInstance.tokenizePayment(data)\r\n                                    .then(function (payload) {\r\n                                        if (typeof beforeSubmit === 'function') {\r\n                                            if (!beforeSubmit(payload)) {\r\n                                                return false;\r\n                                            }\r\n                                        }\r\n\r\n                                        jQuery(\"#maincontent\").trigger('processStart');\r\n\r\n                                        // Map the shipping address correctly\r\n                                        var address = payload.details.shippingAddress;\r\n                                        var recipientName = address.recipientName.split(\" \");\r\n                                        payload.details.shippingAddress = {\r\n                                            streetAddress: typeof address.line2 !== 'undefined' ? address.line1.replace(/'/g, \"&apos;\") + \" \" + address.line2.replace(/'/g, \"&apos;\") : address.line1.replace(/'/g, \"&apos;\"),\r\n                                            locality: address.city.replace(/'/g, \"&apos;\"),\r\n                                            postalCode: address.postalCode,\r\n                                            countryCodeAlpha2: address.countryCode,\r\n                                            email: payload.details.email.replace(/'/g, \"&apos;\"),\r\n                                            firstname: recipientName[0].replace(/'/g, \"&apos;\"),\r\n                                            lastname: recipientName[1].replace(/'/g, \"&apos;\"),\r\n                                            telephone: typeof payload.details.phone !== 'undefined' ? payload.details.phone : '',\r\n                                            region: typeof address.state !== 'undefined' ? address.state.replace(/'/g, \"&apos;\") : ''\r\n                                        };\r\n\r\n                                        formBuilder.build(\r\n                                            {\r\n                                                action: actionSuccess,\r\n                                                fields: {\r\n                                                    result: JSON.stringify(payload)\r\n                                                }\r\n                                            }\r\n                                        ).submit();\r\n                                    });\r\n                            }\r\n                        }, '#' + this.id).then(function (data) {\r\n                            if (typeof events.onRender === 'function') {\r\n                                events.onRender(data);\r\n                            }\r\n                        });\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            },\r\n\r\n            beforeSubmit: function () {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n\r\n","PayPal_Braintree/js/paypal/form-builder.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'underscore',\r\n        'mage/template'\r\n    ],\r\n    function ($, _, mageTemplate) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * @param {Object} formData\r\n             * @returns {*|jQuery}\r\n             */\r\n            build: function (formData) {\r\n                var formTmpl = mageTemplate('<form action=\"<%= data.action %>\"' +\r\n                    ' method=\"POST\" hidden enctype=\"application/x-www-form-urlencoded\">' +\r\n                        '<% _.each(data.fields, function(val, key){ %>' +\r\n                            '<input value=\\'<%= val %>\\' name=\"<%= key %>\" type=\"hidden\">' +\r\n                        '<% }); %>' +\r\n                    '</form>');\r\n\r\n                return $(formTmpl({\r\n                    data: {\r\n                        action: formData.action,\r\n                        fields: formData.fields\r\n                    }\r\n                })).appendTo($('[data-container=\"body\"]'));\r\n            }\r\n        };\r\n    }\r\n);\r\n","PayPal_Braintree/js/paypal/credit/calculator.js":"define([\r\n    'underscore',\r\n    'uiComponent',\r\n    'jquery'\r\n], function (_, Component, $) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: \"PayPal_Braintree/credit/calculator\",\r\n            displaySummary: true, // \"From X per month\"\r\n            displayInterestDetails: false, // Display the more in-depth summary of interest rates\r\n            instalmentsFrom: 0,\r\n            currentInstalment: {\r\n                term: 0,\r\n                monthlyPayment: 0,\r\n                apr: 0,\r\n                cost: 0,\r\n                costIncInterest: 0\r\n            },\r\n            endpoint: null,\r\n            instalments: [],\r\n            visible: false,\r\n            merchantName: ''\r\n        },\r\n\r\n        initObservable: function () {\r\n            this._super();\r\n            if (this.instalments.length > 0) {\r\n                this.currentInstalment = this.instalments[0];\r\n                this.instalmentsFrom = this.instalments[this.instalments.length-1].monthlyPayment;\r\n                this.visible = true;\r\n            } else {\r\n                this.loadInstalments();\r\n            }\r\n\r\n            this.observe(['instalments', 'currentInstalment', 'instalmentsFrom', 'visible']);\r\n            return this;\r\n        },\r\n\r\n        isCurrentInstalment: function (term) {\r\n            return (this.currentInstalment().term === term);\r\n        },\r\n\r\n        setCurrentInstalment: function (instalment) {\r\n            this.currentInstalment(instalment);\r\n        },\r\n\r\n        loadInstalments: function () {\r\n            if (!this.endpoint) {\r\n                return false;\r\n            }\r\n\r\n            var self = this;\r\n            require(['Magento_Checkout/js/model/quote', 'jquery'], function (quote, $) {\r\n                if (typeof quote.totals().base_grand_total === 'undefined') {\r\n                    return false;\r\n                }\r\n\r\n                $.getJSON(self.endpoint, {amount: quote.totals().base_grand_total}, function (response) {\r\n                    self.instalments(response);\r\n                    self.setCurrentInstalment(response[0]);\r\n                    self.visible(true);\r\n                });\r\n            });\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/applepay/button.js":"/**\r\n * Braintree Apple Pay button\r\n **/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        \"knockout\",\r\n        \"jquery\",\r\n        'braintree',\r\n        'braintreeApplePay',\r\n        'mage/translate'\r\n        ],\r\n    function (\r\n        Component,\r\n        ko,\r\n        jQuery,\r\n        braintree,\r\n        applePay,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        var that;\r\n\r\n        return {\r\n            init: function (element, context) {\r\n                // No element or context\r\n                if (!element || !context) {\r\n                    return;\r\n                }\r\n\r\n                // Context must implement these methods\r\n                if (typeof context.getClientToken !== 'function') {\r\n                    console.error(\"Braintree ApplePay Context passed does not provide a getClientToken method\", context);\r\n                    return;\r\n                }\r\n                if (typeof context.getPaymentRequest !== 'function') {\r\n                    console.error(\"Braintree ApplePay Context passed does not provide a getPaymentRequest method\", context);\r\n                    return;\r\n                }\r\n                if (typeof context.startPlaceOrder !== 'function') {\r\n                    console.error(\"Braintree ApplePay Context passed does not provide a startPlaceOrder method\", context);\r\n                    return;\r\n                }\r\n\r\n                if (this.deviceSupported() === false) {\r\n                    return;\r\n                }\r\n\r\n                // init braintree api\r\n                braintree.create({\r\n                    authorization: context.getClientToken()\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        console.error('Error creating client:', clientErr);\r\n                        return;\r\n                    }\r\n\r\n                    applePay.create({\r\n                        client: clientInstance\r\n                    }, function (applePayErr, applePayInstance) {\r\n                        // No instance\r\n                        if (applePayErr) {\r\n                            console.error('Braintree ApplePay Error creating applePayInstance:', applePayErr);\r\n                            return;\r\n                        }\r\n\r\n                        // Create a button within the KO element, as apple pay can only be instantiated through\r\n                        // a valid on click event (ko onclick bind interferes with this).\r\n                        var el = document.createElement('div');\r\n                        el.className = \"braintree-apple-pay-button\";\r\n                        el.title = $t(\"Pay with Apple Pay\");\r\n                        el.alt = $t(\"Pay with Apple Pay\");\r\n                        el.addEventListener('click', function (e) {\r\n                            e.preventDefault();\r\n\r\n                            // Payment request object\r\n                            var paymentRequest = applePayInstance.createPaymentRequest(context.getPaymentRequest());\r\n                            if (!paymentRequest) {\r\n                                alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\r\n                                console.error('Braintree ApplePay Unable to create paymentRequest', paymentRequest);\r\n                                return;\r\n                            }\r\n\r\n                            // Show the loader\r\n                            jQuery(\"body\").loader('show');\r\n\r\n                            // Init apple pay session\r\n                            try {\r\n                                var session = new ApplePaySession(1, paymentRequest);\r\n                            } catch (err) {\r\n                                jQuery(\"body\").loader('hide');\r\n                                console.error('Braintree ApplePay Unable to create ApplePaySession', err);\r\n                                alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\r\n                                return false;\r\n                            }\r\n\r\n                            // Handle invalid merchant\r\n                            session.onvalidatemerchant = function (event) {\r\n                                applePayInstance.performValidation({\r\n                                    validationURL: event.validationURL,\r\n                                    displayName: context.getDisplayName()\r\n                                }, function (validationErr, merchantSession) {\r\n                                    if (validationErr) {\r\n                                        session.abort();\r\n                                        console.error('Braintree ApplePay Error validating merchant:', validationErr);\r\n                                        alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\r\n                                        return;\r\n                                    }\r\n\r\n                                    session.completeMerchantValidation(merchantSession);\r\n                                });\r\n                            };\r\n\r\n                            // Attach payment auth event\r\n                            session.onpaymentauthorized = function (event) {\r\n                                applePayInstance.tokenize({\r\n                                    token: event.payment.token\r\n                                }, function (tokenizeErr, payload) {\r\n                                    if (tokenizeErr) {\r\n                                        console.error('Error tokenizing Apple Pay:', tokenizeErr);\r\n                                        session.completePayment(ApplePaySession.STATUS_FAILURE);\r\n                                        return;\r\n                                    }\r\n\r\n                                    // Pass the nonce back to the payment method\r\n                                    context.startPlaceOrder(payload.nonce, event, session);\r\n                                });\r\n                            };\r\n\r\n                            // Attach onShippingContactSelect method\r\n                            if (typeof context.onShippingContactSelect === 'function') {\r\n                                session.onshippingcontactselected = function (event) {\r\n                                    return context.onShippingContactSelect(event, session);\r\n                                };\r\n                            }\r\n\r\n                            // Attach onShippingMethodSelect method\r\n                            if (typeof context.onShippingMethodSelect === 'function') {\r\n                                session.onshippingmethodselected = function (event) {\r\n                                    return context.onShippingMethodSelect(event, session);\r\n                                };\r\n                            }\r\n\r\n                            // Hook\r\n                            if (typeof context.onButtonClick === 'function') {\r\n                                context.onButtonClick(session, this, e);\r\n                            } else {\r\n                                jQuery(\"body\").loader('hide');\r\n                                session.begin();\r\n                            }\r\n                        });\r\n                        element.appendChild(el);\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Check the site is using HTTPS & apple pay is supported on this device.\r\n             * @return boolean\r\n             */\r\n            deviceSupported: function () {\r\n                if (location.protocol != 'https:') {\r\n                    console.warn(\"Braintree Apple Pay requires your checkout be served over HTTPS\");\r\n                    return false;\r\n                }\r\n\r\n                if ((window.ApplePaySession && ApplePaySession.canMakePayments()) !== true) {\r\n                    console.warn(\"Braintree Apple Pay is not supported on this device/browser\");\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n);","PayPal_Braintree/js/applepay/api.js":"/**\r\n * Braintree Apple Pay button API\r\n *\r\n **/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'mage/translate',\r\n        'mage/storage'\r\n    ],\r\n    function (\r\n        Component,\r\n        $t,\r\n        storage\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                clientToken: null,\r\n                quoteId: 0,\r\n                displayName: null,\r\n                actionSuccess: null,\r\n                grandTotalAmount: 0,\r\n                isLoggedIn: false,\r\n                storeCode: \"default\",\r\n                shippingAddress: {},\r\n                countryDirectory: null,\r\n                shippingMethods: {}\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n                if (!this.countryDirectory) {\r\n                    storage.get(\"rest/V1/directory/countries\").done(function (result) {\r\n                        this.countryDirectory = {};\r\n                        let i, data, x, region;\r\n                        for (i = 0; i < result.length; ++i) {\r\n                            data = result[i];\r\n                            this.countryDirectory[data.two_letter_abbreviation] = {};\r\n                            if (typeof data.available_regions !== 'undefined') {\r\n                                for (x = 0; x < data.available_regions.length; ++x) {\r\n                                    region = data.available_regions[x];\r\n                                    this.countryDirectory[data.two_letter_abbreviation][region.name.toLowerCase().replace(/[^A-Z0-9]/ig, '')] = region.id;\r\n                                }\r\n                            }\r\n                        }\r\n                    }.bind(this));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get region ID\r\n             */\r\n            getRegionId: function (countryCode, regionName) {\r\n                if (typeof regionName !== 'string') {\r\n                    return null;\r\n                }\r\n\r\n                regionName = regionName.toLowerCase().replace(/[^A-Z0-9]/ig, '');\r\n\r\n                if (typeof this.countryDirectory[countryCode] !== 'undefined' && typeof this.countryDirectory[countryCode][regionName] !== 'undefined') {\r\n                    return this.countryDirectory[countryCode][regionName];\r\n                }\r\n\r\n                return 0;\r\n            },\r\n\r\n            /**\r\n             * Set & get api token\r\n             */\r\n            setClientToken: function (value) {\r\n                this.clientToken = value;\r\n            },\r\n            getClientToken: function () {\r\n                return this.clientToken;\r\n            },\r\n\r\n            /**\r\n             * Set and get quote id\r\n             */\r\n            setQuoteId: function (value) {\r\n                this.quoteId = value;\r\n            },\r\n            getQuoteId: function () {\r\n                return this.quoteId;\r\n            },\r\n\r\n            /**\r\n             * Set and get display name\r\n             */\r\n            setDisplayName: function (value) {\r\n                this.displayName = value;\r\n            },\r\n            getDisplayName: function () {\r\n                return this.displayName;\r\n            },\r\n\r\n            /**\r\n             * Set and get success redirection url\r\n             */\r\n            setActionSuccess: function (value) {\r\n                this.actionSuccess = value;\r\n            },\r\n            getActionSuccess: function () {\r\n                return this.actionSuccess;\r\n            },\r\n\r\n            /**\r\n             * Set and get grand total\r\n             */\r\n            setGrandTotalAmount: function (value) {\r\n                this.grandTotalAmount = parseFloat(value).toFixed(2);\r\n            },\r\n            getGrandTotalAmount: function () {\r\n                return parseFloat(this.grandTotalAmount);\r\n            },\r\n\r\n            /**\r\n             * Set and get is logged in\r\n             */\r\n            setIsLoggedIn: function (value) {\r\n                this.isLoggedIn = value;\r\n            },\r\n            getIsLoggedIn: function () {\r\n                return this.isLoggedIn;\r\n            },\r\n\r\n            /**\r\n             * Set and get store code\r\n             */\r\n            setStoreCode: function (value) {\r\n                this.storeCode = value;\r\n            },\r\n            getStoreCode: function () {\r\n                return this.storeCode;\r\n            },\r\n\r\n            /**\r\n             * API Urls for logged in / guest\r\n             */\r\n            getApiUrl: function (uri) {\r\n                if (this.getIsLoggedIn() === true) {\r\n                    return \"rest/\" + this.getStoreCode() + \"/V1/carts/mine/\" + uri;\r\n                } else {\r\n                    return \"rest/\" + this.getStoreCode() + \"/V1/guest-carts/\" + this.getQuoteId() + \"/\" + uri;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Payment request info\r\n             */\r\n            getPaymentRequest: function () {\r\n                return {\r\n                    total: {\r\n                        label: this.getDisplayName(),\r\n                        amount: this.getGrandTotalAmount()\r\n                    },\r\n                    requiredShippingContactFields: ['postalAddress', 'name', 'email', 'phone'],\r\n                    requiredBillingContactFields: ['postalAddress', 'name']\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Retrieve shipping methods based on address\r\n             */\r\n            onShippingContactSelect: function (event, session) {\r\n                // Get the address.\r\n                let address = event.shippingContact;\r\n\r\n                // Create a payload.\r\n                let payload = {\r\n                    address: {\r\n                        city: address.locality,\r\n                        region: address.administrativeArea,\r\n                        country_id: address.countryCode.toUpperCase(),\r\n                        postcode: address.postalCode,\r\n                        save_in_address_book: 0\r\n                    }\r\n                };\r\n\r\n                this.shippingAddress = payload.address;\r\n\r\n                // POST to endpoint for shipping methods.\r\n                storage.post(\r\n                    this.getApiUrl(\"estimate-shipping-methods\"),\r\n                    JSON.stringify(payload)\r\n                ).done(function (result) {\r\n                    // Stop if no shipping methods.\r\n                    if (result.length === 0) {\r\n                        session.abort();\r\n                        alert($t(\"There are no shipping methods available for you right now. Please try again or use an alternative payment method.\"));\r\n                        return false;\r\n                    }\r\n\r\n                    let shippingMethods = [];\r\n                    this.shippingMethods = {};\r\n\r\n                    // Format shipping methods array.\r\n                    for (let i = 0; i < result.length; i++) {\r\n                        if (typeof result[i].method_code !== 'string') {\r\n                            continue;\r\n                        }\r\n\r\n                        let method = {\r\n                            identifier: result[i].method_code,\r\n                            label: result[i].method_title,\r\n                            detail: result[i].carrier_title ? result[i].carrier_title : \"\",\r\n                            amount: parseFloat(result[i].amount).toFixed(2)\r\n                        };\r\n\r\n                        // Add method object to array.\r\n                        shippingMethods.push(method);\r\n\r\n                        this.shippingMethods[result[i].method_code] = result[i];\r\n\r\n                        if (!this.shippingMethod) {\r\n                            this.shippingMethod = result[i].method_code;\r\n                        }\r\n                    }\r\n\r\n                    // Create payload to get totals\r\n                    let totalsPayload = {\r\n                        \"addressInformation\": {\r\n                            \"address\": {\r\n                                \"countryId\": this.shippingAddress.country_id,\r\n                                \"region\": this.shippingAddress.region,\r\n                                \"regionId\": this.getRegionId(this.shippingAddress.country_id, this.shippingAddress.region),\r\n                                \"postcode\": this.shippingAddress.postcode\r\n                            },\r\n                            \"shipping_method_code\": this.shippingMethods[shippingMethods[0].identifier].method_code,\r\n                            \"shipping_carrier_code\": this.shippingMethods[shippingMethods[0].identifier].carrier_code\r\n                        }\r\n                    };\r\n\r\n                    // POST to endpoint to get totals, using 1st shipping method\r\n                    storage.post(\r\n                        this.getApiUrl(\"totals-information\"),\r\n                        JSON.stringify(totalsPayload)\r\n                    ).done(function (result) {\r\n                        // Set total\r\n                        this.setGrandTotalAmount(result.base_grand_total);\r\n\r\n                        // Pass shipping methods back\r\n                        session.completeShippingContactSelection(\r\n                            ApplePaySession.STATUS_SUCCESS,\r\n                            shippingMethods,\r\n                            {\r\n                                label: this.getDisplayName(),\r\n                                amount: this.getGrandTotalAmount()\r\n                            },\r\n                            [{\r\n                                type: 'final',\r\n                                label: $t('Shipping'),\r\n                                amount: shippingMethods[0].amount\r\n                            }]\r\n                        );\r\n                    }.bind(this)).fail(function (result) {\r\n                        session.abort();\r\n                        alert($t(\"We're unable to fetch the cart totals for you. Please try an alternative payment method.\"));\r\n                        console.error(\"Braintree ApplePay: Unable to get totals\", result);\r\n                        return false;\r\n                    });\r\n\r\n                }.bind(this)).fail(function (result) {\r\n                    session.abort();\r\n                    alert($t(\"We're unable to find any shipping methods for you. Please try an alternative payment method.\"));\r\n                    console.error(\"Braintree ApplePay: Unable to find shipping methods for estimate-shipping-methods\", result);\r\n                    return false;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Record which shipping method has been selected & Updated totals\r\n             */\r\n            onShippingMethodSelect: function (event, session) {\r\n                let shippingMethod = event.shippingMethod;\r\n                this.shippingMethod = shippingMethod.identifier;\r\n\r\n                let payload = {\r\n                    \"addressInformation\": {\r\n                        \"address\": {\r\n                            \"countryId\": this.shippingAddress.country_id,\r\n                            \"region\": this.shippingAddress.region,\r\n                            \"regionId\": this.getRegionId(this.shippingAddress.country_id, this.shippingAddress.region),\r\n                            \"postcode\": this.shippingAddress.postcode\r\n                        },\r\n                        \"shipping_method_code\": this.shippingMethods[this.shippingMethod].method_code,\r\n                        \"shipping_carrier_code\": this.shippingMethods[this.shippingMethod].carrier_code\r\n                    }\r\n                };\r\n\r\n                storage.post(\r\n                    this.getApiUrl(\"totals-information\"),\r\n                    JSON.stringify(payload)\r\n                ).done(function (r) {\r\n                    this.setGrandTotalAmount(r.base_grand_total);\r\n\r\n                    session.completeShippingMethodSelection(\r\n                        ApplePaySession.STATUS_SUCCESS,\r\n                        {\r\n                            label: this.getDisplayName(),\r\n                            amount: this.getGrandTotalAmount()\r\n                        },\r\n                        [{\r\n                            type: 'final',\r\n                            label: $t('Shipping'),\r\n                            amount: shippingMethod.amount\r\n                        }]\r\n                    );\r\n                }.bind(this));\r\n            },\r\n\r\n            /**\r\n             * Place the order\r\n             */\r\n            startPlaceOrder: function (nonce, event, session) {\r\n                let shippingContact = event.payment.shippingContact,\r\n                    billingContact = event.payment.billingContact,\r\n                    payload = {\r\n                        \"addressInformation\": {\r\n                            \"shipping_address\": {\r\n                                \"email\": shippingContact.emailAddress,\r\n                                \"telephone\": shippingContact.phoneNumber,\r\n                                \"firstname\": shippingContact.givenName,\r\n                                \"lastname\": shippingContact.familyName,\r\n                                \"street\": shippingContact.addressLines,\r\n                                \"city\": shippingContact.locality,\r\n                                \"region\": shippingContact.administrativeArea,\r\n                                \"region_id\": this.getRegionId(shippingContact.countryCode.toUpperCase(), shippingContact.administrativeArea),\r\n                                \"region_code\": null,\r\n                                \"country_id\": shippingContact.countryCode.toUpperCase(),\r\n                                \"postcode\": shippingContact.postalCode,\r\n                                \"same_as_billing\": 0,\r\n                                \"customer_address_id\": 0,\r\n                                \"save_in_address_book\": 0\r\n                            },\r\n                            \"billing_address\": {\r\n                                \"email\": shippingContact.emailAddress,\r\n                                \"telephone\": '0000000000',\r\n                                \"firstname\": billingContact.givenName,\r\n                                \"lastname\": billingContact.familyName,\r\n                                \"street\": billingContact.addressLines,\r\n                                \"city\": billingContact.locality,\r\n                                \"region\": billingContact.administrativeArea,\r\n                                \"region_id\": this.getRegionId(billingContact.countryCode.toUpperCase(), billingContact.administrativeArea),\r\n                                \"region_code\": null,\r\n                                \"country_id\": billingContact.countryCode.toUpperCase(),\r\n                                \"postcode\": billingContact.postalCode,\r\n                                \"same_as_billing\": 0,\r\n                                \"customer_address_id\": 0,\r\n                                \"save_in_address_book\": 0\r\n                            },\r\n                            \"shipping_method_code\": this.shippingMethods[this.shippingMethod].method_code,\r\n                            \"shipping_carrier_code\": this.shippingMethods[this.shippingMethod].carrier_code\r\n                        }\r\n                    };\r\n\r\n                // Set addresses\r\n                storage.post(\r\n                    this.getApiUrl(\"shipping-information\"),\r\n                    JSON.stringify(payload)\r\n                ).done(function () {\r\n                    // Submit payment information\r\n                    storage.post(\r\n                        this.getApiUrl(\"payment-information\"),\r\n                        JSON.stringify(\r\n                            {\r\n                                \"email\": shippingContact.emailAddress,\r\n                                \"paymentMethod\": {\r\n                                    \"method\": \"braintree_applepay\",\r\n                                    \"additional_data\": {\r\n                                        \"payment_method_nonce\": nonce\r\n                                    },\r\n                                    \"extension_attributes\": {\r\n                                        \"agreement_ids\": [1]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    ).done(function (r) {\r\n                        document.location = this.getActionSuccess();\r\n                        session.completePayment(ApplePaySession.STATUS_SUCCESS);\r\n                    }.bind(this)).fail(function (r) {\r\n                        session.completePayment(ApplePaySession.STATUS_FAILURE);\r\n                        session.abort();\r\n                        alert($t(\"We're unable to take your payment through Apple Pay. Please try an again or use an alternative payment method.\"));\r\n                        console.error(\"Braintree ApplePay Unable to take payment\", r);\r\n                        return false;\r\n                    });\r\n\r\n                }.bind(this)).fail(function (r) {\r\n                    console.error(\"Braintree ApplePay Unable to set shipping information\", r);\r\n                    session.completePayment(ApplePaySession.STATUS_INVALID_BILLING_POSTAL_ADDRESS);\r\n                });\r\n            }\r\n        });\r\n    });\r\n","PayPal_Braintree/js/applepay/implementations/shortcut.js":"/**\r\n * Braintree Apple Pay mini cart payment method integration.\r\n **/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'PayPal_Braintree/js/applepay/button',\r\n        'PayPal_Braintree/js/applepay/api',\r\n        'mage/translate',\r\n        'domReady!'\r\n    ],\r\n    function (\r\n        Component,\r\n        button,\r\n        buttonApi,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n                id: null,\r\n                clientToken: null,\r\n                quoteId: 0,\r\n                displayName: null,\r\n                actionSuccess: null,\r\n                grandTotalAmount: 0,\r\n                isLoggedIn: false,\r\n                storeCode: \"default\"\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                if (!this.displayName) {\r\n                    this.displayName = $t('Store');\r\n                }\r\n\r\n                var api = new buttonApi();\r\n                api.setGrandTotalAmount(parseFloat(this.grandTotalAmount).toFixed(2));\r\n                api.setClientToken(this.clientToken);\r\n                api.setDisplayName(this.displayName);\r\n                api.setQuoteId(this.quoteId);\r\n                api.setActionSuccess(this.actionSuccess);\r\n                api.setIsLoggedIn(this.isLoggedIn);\r\n                api.setStoreCode(this.storeCode);\r\n\r\n                // Attach the button\r\n                button.init(\r\n                    document.getElementById(this.id),\r\n                    api\r\n                );\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n);\r\n","PayPal_Braintree/js/applepay/implementations/core-checkout/method-applepay.js":"define(\r\n    ['uiComponent', 'Magento_Checkout/js/model/payment/renderer-list'],\r\n    function (Component, rendererList) {\r\n        'use strict';\r\n\r\n        rendererList.push(\r\n            {\r\n                type: 'braintree_applepay',\r\n                component: 'PayPal_Braintree/js/applepay/implementations/core-checkout/method-renderer/applepay'\r\n            }\r\n        );\r\n\r\n        return Component.extend({});\r\n    }\r\n);","PayPal_Braintree/js/applepay/implementations/core-checkout/method-renderer/applepay.js":"/**\r\n * Braintree Apple Pay payment method integration.\r\n **/\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Checkout/js/model/quote',\r\n    'PayPal_Braintree/js/applepay/button'\r\n], function (\r\n    Component,\r\n    quote,\r\n    button\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'PayPal_Braintree/applepay/core-checkout',\r\n            paymentMethodNonce: null,\r\n            grandTotalAmount: 0,\r\n            deviceSupported: button.deviceSupported()\r\n        },\r\n\r\n        /**\r\n         * Inject the apple pay button into the target element\r\n         */\r\n        getApplePayBtn: function (id) {\r\n            button.init(\r\n                document.getElementById(id),\r\n                this\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Subscribe to grand totals\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\r\n\r\n            quote.totals.subscribe(function () {\r\n                if (this.grandTotalAmount !== quote.totals()['base_grand_total']) {\r\n                    this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Apple pay place order method\r\n         */\r\n        startPlaceOrder: function (nonce, event, session) {\r\n            this.setPaymentMethodNonce(nonce);\r\n            this.placeOrder();\r\n\r\n            session.completePayment(ApplePaySession.STATUS_SUCCESS);\r\n        },\r\n\r\n        /**\r\n         * Save nonce\r\n         */\r\n        setPaymentMethodNonce: function (nonce) {\r\n            this.paymentMethodNonce = nonce;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the client token\r\n         * @returns null|string\r\n         */\r\n        getClientToken: function () {\r\n            return window.checkoutConfig.payment[this.getCode()].clientToken;\r\n        },\r\n\r\n        /**\r\n         * Payment request data\r\n         */\r\n        getPaymentRequest: function () {\r\n            return {\r\n                total: {\r\n                    label: this.getDisplayName(),\r\n                    amount: this.grandTotalAmount\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Merchant display name\r\n         */\r\n        getDisplayName: function () {\r\n            return window.checkoutConfig.payment[this.getCode()].merchantName;\r\n        },\r\n\r\n        /**\r\n         * Get data\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            var data = {\r\n                'method': this.getCode(),\r\n                'additional_data': {\r\n                    'payment_method_nonce': this.paymentMethodNonce\r\n                }\r\n            };\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Return image url for the apple pay mark\r\n         */\r\n        getPaymentMarkSrc: function () {\r\n            return window.checkoutConfig.payment[this.getCode()].paymentMarkSrc;\r\n        }\r\n    });\r\n});","PayPal_Braintree/js/model/step-navigator-mixin.js":"define([\r\n    'mage/utils/wrapper',\r\n    'jquery'\r\n], function (wrapper, $) {\r\n    'use strict';\r\n\r\n    let mixin = {\r\n        handleHash: function (originalFn) {\r\n            var hashString = window.location.hash.replace('#', '');\r\n            return (hashString.includes('venmo')) ? false : originalFn();\r\n        }\r\n    };\r\n\r\n    return function (target) {\r\n        return wrapper.extend(target, mixin);\r\n    };\r\n});\r\n","PayPal_Braintree/js/googlepay/button.js":"/**\r\n * Braintree Google Pay button\r\n **/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        \"knockout\",\r\n        \"jquery\",\r\n        'braintree',\r\n        'braintreeGooglePay',\r\n        'mage/translate',\r\n        'googlePayLibrary'\r\n        ],\r\n    function (\r\n        Component,\r\n        ko,\r\n        jQuery,\r\n        braintree,\r\n        googlePay,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        return {\r\n            init: function (element, context) {\r\n                // No element or context\r\n                if (!element || !context || !this.deviceSupported()) {\r\n                    return;\r\n                }\r\n\r\n                // Context must implement these methods\r\n                if (typeof context.getClientToken !== 'function') {\r\n                    console.error(\"Braintree GooglePay Context passed does not provide a getClientToken method\", context);\r\n                    return;\r\n                }\r\n                if (typeof context.getPaymentRequest !== 'function') {\r\n                    console.error(\"Braintree GooglePay Context passed does not provide a getPaymentRequest method\", context);\r\n                    return;\r\n                }\r\n                if (typeof context.startPlaceOrder !== 'function') {\r\n                    console.error(\"Braintree GooglePay Context passed does not provide a startPlaceOrder method\", context);\r\n                    return;\r\n                }\r\n\r\n                // init google pay object\r\n                var paymentsClient = new google.payments.api.PaymentsClient({\r\n                    environment: context.getEnvironment()\r\n                });\r\n\r\n                // Create a button within the KO element, as google pay can only be instantiated through\r\n                // a valid on click event (ko onclick bind interferes with this).\r\n                var button = document.createElement('button');\r\n                button.className = \"braintree-googlepay-button long \" + (context.getBtnColor() == 1 ? 'black' : 'white');\r\n                button.title = $t(\"Buy with Google Pay\");\r\n\r\n                // init braintree api\r\n                braintree.create({\r\n                    authorization: context.getClientToken()\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        console.error('Error creating client:', clientErr);\r\n                        return;\r\n                    }\r\n\r\n                    googlePay.create({\r\n                        client: clientInstance\r\n                    }, function (googlePayErr, googlePaymentInstance) {\r\n                        // No instance\r\n                        if (googlePayErr) {\r\n                            console.error('Braintree GooglePay Error creating googlePayInstance:', googlePayErr);\r\n                            return;\r\n                        }\r\n\r\n                        paymentsClient.isReadyToPay({\r\n                            allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods\r\n                        }).then(function(response) {\r\n                            if (response.result) {\r\n                                button.addEventListener('click', function (event) {\r\n                                    event.preventDefault();\r\n                                    jQuery(\"body\").loader('show');\r\n                                    var responseData;\r\n\r\n                                    var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest(context.getPaymentRequest());\r\n                                    paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\r\n                                        // Persist the paymentData (shipping address etc)\r\n                                        responseData = paymentData;\r\n                                        // Return the braintree nonce promise\r\n                                        return googlePaymentInstance.parseResponse(paymentData);\r\n                                    }).then(function (result) {\r\n                                        context.startPlaceOrder(result.nonce, responseData);\r\n                                    }).catch(function (err) {\r\n                                        // Handle errors\r\n                                        // err = {statusCode: \"CANCELED\"}\r\n                                        console.error(err);\r\n                                        jQuery(\"body\").loader('hide');\r\n                                    });\r\n                                });\r\n\r\n                                element.appendChild(button);\r\n                            }\r\n                        }).catch(function (err) {\r\n                            console.error(err);\r\n                            jQuery(\"body\").loader('hide');\r\n                        });\r\n                    });\r\n                });\r\n            },\r\n\r\n            deviceSupported: function() {\r\n                return !!(window.PaymentRequest);\r\n            }\r\n        };\r\n    }\r\n);","PayPal_Braintree/js/googlepay/api.js":"/**\r\n * Braintree Google Pay button api\r\n **/\r\ndefine([\r\n    'uiComponent',\r\n    'mage/translate',\r\n    'mage/storage',\r\n    'jquery',\r\n    'PayPal_Braintree/js/form-builder'\r\n], function (Component, $t, storage, jQuery, formBuilder) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            clientToken: null,\r\n            merchantId: null,\r\n            currencyCode: null,\r\n            actionSuccess: null,\r\n            amount: null,\r\n            cardTypes: [],\r\n            btnColor: 0\r\n        },\r\n\r\n        /**\r\n         * Set & get environment\r\n         * \"PRODUCTION\" or \"TEST\"\r\n         */\r\n        setEnvironment: function (value) {\r\n            this.environment = value;\r\n        },\r\n        getEnvironment: function () {\r\n            return this.environment;\r\n        },\r\n\r\n        /**\r\n         * Set & get api token\r\n         */\r\n        setClientToken: function (value) {\r\n            this.clientToken = value;\r\n        },\r\n        getClientToken: function () {\r\n            return this.clientToken;\r\n        },\r\n\r\n        /**\r\n         * Set and get display name\r\n         */\r\n        setMerchantId: function (value) {\r\n            this.merchantId = value;\r\n        },\r\n        getMerchantId: function () {\r\n            return this.merchantId;\r\n        },\r\n\r\n        /**\r\n         * Set and get currency code\r\n         */\r\n        setAmount: function (value) {\r\n            this.amount = parseFloat(value).toFixed(2);\r\n        },\r\n        getAmount: function () {\r\n            return this.amount;\r\n        },\r\n\r\n        /**\r\n         * Set and get currency code\r\n         */\r\n        setCurrencyCode: function (value) {\r\n            this.currencyCode = value;\r\n        },\r\n        getCurrencyCode: function () {\r\n            return this.currencyCode;\r\n        },\r\n\r\n        /**\r\n         * Set and get success redirection url\r\n         */\r\n        setActionSuccess: function (value) {\r\n            this.actionSuccess = value;\r\n        },\r\n        getActionSuccess: function () {\r\n            return this.actionSuccess;\r\n        },\r\n\r\n        /**\r\n         * Set and get success redirection url\r\n         */\r\n        setCardTypes: function (value) {\r\n            this.cardTypes = value;\r\n        },\r\n        getCardTypes: function () {\r\n            return this.cardTypes;\r\n        },\r\n\r\n        /**\r\n         * BTN Color\r\n         */\r\n        setBtnColor: function (value) {\r\n            this.btnColor = value;\r\n        },\r\n        getBtnColor: function () {\r\n            return this.btnColor;\r\n        },\r\n\r\n        /**\r\n         * Payment request info\r\n         */\r\n        getPaymentRequest: function () {\r\n            var result = {\r\n                transactionInfo: {\r\n                    totalPriceStatus: 'ESTIMATED',\r\n                    totalPrice: this.getAmount(),\r\n                    currencyCode: this.getCurrencyCode()\r\n                },\r\n                allowedPaymentMethods: ['CARD'],\r\n                phoneNumberRequired: true,\r\n                emailRequired: true,\r\n                shippingAddressRequired: true,\r\n                cardRequirements: {\r\n                    billingAddressRequired: true,\r\n                    billingAddressFormat: 'FULL',\r\n                    allowedCardNetworks: this.getCardTypes()\r\n                }\r\n            };\r\n\r\n            if (this.getEnvironment() !== \"TEST\") {\r\n                result['merchantId'] = this.getMerchantId();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Place the order\r\n         */\r\n        startPlaceOrder: function (nonce, paymentData) {\r\n            var payload = {\r\n                details: {\r\n                    shippingAddress: {\r\n                        streetAddress: paymentData.shippingAddress.address1 + \"\\n\"\r\n                        + paymentData.shippingAddress.address2,\r\n                        locality: paymentData.shippingAddress.locality,\r\n                        postalCode: paymentData.shippingAddress.postalCode,\r\n                        countryCodeAlpha2: paymentData.shippingAddress.countryCode,\r\n                        email: paymentData.email,\r\n                        name: paymentData.shippingAddress.name,\r\n                        telephone: typeof paymentData.shippingAddress.phoneNumber !== 'undefined' ? paymentData.shippingAddress.phoneNumber : '',\r\n                        region: typeof paymentData.shippingAddress.administrativeArea !== 'undefined' ? paymentData.shippingAddress.administrativeArea : ''\r\n                    },\r\n                    billingAddress: {\r\n                        streetAddress: paymentData.cardInfo.billingAddress.address1 + \"\\n\"\r\n                        + paymentData.cardInfo.billingAddress.address2,\r\n                        locality: paymentData.cardInfo.billingAddress.locality,\r\n                        postalCode: paymentData.cardInfo.billingAddress.postalCode,\r\n                        countryCodeAlpha2: paymentData.cardInfo.billingAddress.countryCode,\r\n                        email: paymentData.email,\r\n                        name: paymentData.cardInfo.billingAddress.name,\r\n                        telephone: typeof paymentData.cardInfo.billingAddress.phoneNumber !== 'undefined' ? paymentData.cardInfo.billingAddress.phoneNumber : '',\r\n                        region: typeof paymentData.cardInfo.billingAddress.administrativeArea !== 'undefined' ? paymentData.cardInfo.billingAddress.administrativeArea : ''\r\n                    }\r\n                },\r\n                nonce: nonce\r\n            };\r\n\r\n            formBuilder.build({\r\n                action: this.getActionSuccess(),\r\n                fields: {\r\n                    result: JSON.stringify(payload)\r\n                }\r\n            }).submit();\r\n        }\r\n    });\r\n});","PayPal_Braintree/js/googlepay/implementations/shortcut.js":"/**\r\n * Braintree Google Pay mini cart payment method integration.\r\n **/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'PayPal_Braintree/js/googlepay/button',\r\n        'PayPal_Braintree/js/googlepay/api',\r\n        'mage/translate',\r\n        'domReady!'\r\n    ],\r\n    function (\r\n        Component,\r\n        button,\r\n        buttonApi,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n                id: null,\r\n                clientToken: null,\r\n                merchantId: null,\r\n                currencyCode: null,\r\n                actionSuccess: null,\r\n                amount: null,\r\n                environment: \"TEST\",\r\n                cardType: [],\r\n                btnColor: 0\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                var api = new buttonApi();\r\n                api.setEnvironment(this.environment);\r\n                api.setCurrencyCode(this.currencyCode);\r\n                api.setClientToken(this.clientToken);\r\n                api.setMerchantId(this.merchantId);\r\n                api.setActionSuccess(this.actionSuccess);\r\n                api.setAmount(this.amount);\r\n                api.setCardTypes(this.cardTypes)\r\n                api.setBtnColor(this.btnColor);\r\n\r\n                // Attach the button\r\n                button.init(\r\n                    document.getElementById(this.id),\r\n                    api\r\n                );\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n);\r\n","PayPal_Braintree/js/googlepay/implementations/core-checkout/method-googlepay.js":"define(\r\n    ['uiComponent', 'Magento_Checkout/js/model/payment/renderer-list'],\r\n    function (Component, rendererList) {\r\n        'use strict';\r\n\r\n        rendererList.push(\r\n            {\r\n                type: 'braintree_googlepay',\r\n                component: 'PayPal_Braintree/js/googlepay/implementations/core-checkout/method-renderer/googlepay'\r\n            }\r\n        );\r\n\r\n        return Component.extend({});\r\n    }\r\n);"}
}});
