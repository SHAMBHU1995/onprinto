require.config({"config": {
        "jsbuild":{"Magento_Catalog/js/product/list/columns/final-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection'\r\n], function (_, registry, utils, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: false,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            showMinimalPrice: false,\r\n            showMaximumPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            bodyTmpl: 'Magento_Catalog/product/final_price',\r\n            priceWrapperCssClasses: '',\r\n            priceWrapperAttr: {}\r\n        },\r\n\r\n        /**\r\n         * Get product final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} final price html\r\n         */\r\n        getPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product regular price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} regular price html\r\n         */\r\n        getRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has a price range.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} special price html\r\n         */\r\n        hasSpecialPrice: function (row) {\r\n            return row['price_info']['regular_price'] > row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        isMinimalPrice: function (row) {\r\n            return row['price_info']['minimal_price'] < row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        getMinimalPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product is salable.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isSalable: function (row) {\r\n            return row['is_salable'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum price html\r\n         */\r\n        getMaxPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum regular price html\r\n         */\r\n        getMaxRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal regular price html\r\n         */\r\n        getMinRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get adjustments names and return as string.\r\n         *\r\n         * @return {String} adjustments classes\r\n         */\r\n        getAdjustmentCssClasses: function () {\r\n            return _.pluck(this.getAdjustments(), 'index').join(' ');\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal price amount\r\n         */\r\n        getMinimalPriceAmount: function (row) {\r\n            return row['price_info']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal regular price amount\r\n         */\r\n        getMinimalRegularPriceAmount: function (row) {\r\n            return row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum price amount\r\n         */\r\n        getMaximumPriceAmount: function (row) {\r\n            return row['price_info']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum regular price amount\r\n         */\r\n        getMaximumRegularPriceAmount: function (row) {\r\n            return row['price_info']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if minimal regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMinRegularPrice: function (row) {\r\n            return this.getMinimalPriceAmount(row) < this.getMinimalRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Check if maximum regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMaxRegularPrice: function (row) {\r\n            return this.getMaximumPriceAmount(row) < this.getMaximumRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Get path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get all price adjustments.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getAdjustments: function () {\r\n            var adjustments = this.elems();\r\n\r\n            _.each(adjustments, function (adjustment) {\r\n                adjustment.setPriceType(this.priceType);\r\n                adjustment.source = this.source;\r\n            }, this);\r\n\r\n            return adjustments;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/price-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection',\r\n    'Magento_Catalog/js/product/list/column-status-validator',\r\n    'uiLayout'\r\n], function (ko, _, registry, utils, Collection, columnStatusValidator, layout) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: '',\r\n            hasSpecialPrice: false,\r\n            showMinimalPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            visible: true,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            bodyTmpl: 'Magento_Catalog/product/price/price_box',\r\n            disableAction: false,\r\n            controlVisibility: true,\r\n            sortable: false,\r\n            sorting: false,\r\n            draggable: true,\r\n            fieldClass: {},\r\n            renders: {\r\n                default: {}\r\n            },\r\n            ignoreTmpls: {\r\n                fieldAction: true\r\n            },\r\n            statefull: {\r\n                visible: true,\r\n                sorting: true\r\n            },\r\n            imports: {\r\n                exportSorting: 'sorting'\r\n            },\r\n            listens: {\r\n                elems: ''\r\n            },\r\n            modules: {\r\n                source: '${ $.provider }'\r\n            },\r\n            pricesInit: {}\r\n        },\r\n\r\n        /**\r\n         * Sort prices api\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        sort: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check whether is allowed to render price or not\r\n         *\r\n         * @returns {*}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'price', 'show_attributes');\r\n        },\r\n\r\n        /**\r\n         * Retrieve array of prices, that should be rendered for specific product\r\n         *\r\n         * @param {Array} row\r\n         * @return {Array}\r\n         */\r\n        getPrices: function (row) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                result;\r\n\r\n            //we cant take type of product from row\r\n            this.initPrices(row);\r\n            result = _.filter(elems, function (elem) {\r\n                return elem.productType === row.type;\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Recursive Merging of objects\r\n         *\r\n         * @param {Array} target\r\n         * @param {Array} source\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _deepObjectExtend: function (target, source) {\r\n            var _target = utils.copy(target);\r\n\r\n            _.each(source, function (value, key) {\r\n                if (_.keys(value).length && typeof _target[key] !== 'undefined') {\r\n                    _target[key] = this._deepObjectExtend(_target[key], value);\r\n                } else {\r\n                    _target[key] = value;\r\n                }\r\n            }, this);\r\n\r\n            return _target;\r\n        },\r\n\r\n        /**\r\n         * Init price type box, in cases when product type has custom component or bodyTmpl\r\n         *\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPriceWithCustomMetaData: function (productType) {\r\n            var price = this._deepObjectExtend(\r\n                this.renders.prices['default'],\r\n                this.renders.prices[productType]\r\n            );\r\n\r\n            price.name = productType + '.default';\r\n            price.parent = this.name;\r\n            price.source = this.source;\r\n            price.productType = productType;\r\n            layout([price]);\r\n        },\r\n\r\n        /**\r\n         * Init Prices by product type and add them to layout\r\n         *\r\n         * @param {Array} _priceData\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPricesForProductType: function (_priceData, productType) {\r\n            var prices = [];\r\n\r\n            this._setPriceNamesToPrices(_priceData, productType);\r\n            _.sortBy(_priceData, this._comparePrices);\r\n\r\n            _.each(_priceData, function (priceData) {\r\n                if (!priceData.component) {\r\n                    return;\r\n                }\r\n\r\n                priceData.parent = this.name;\r\n                priceData.provider = this.provider;\r\n                priceData.productType = productType;\r\n                priceData = utils.template(priceData, this);\r\n                prices.push(priceData);\r\n            }, this);\r\n\r\n            layout(prices);\r\n        },\r\n\r\n        /**\r\n         * Init dynamic price components\r\n         *\r\n         * @param {Array} row\r\n         * @returns {void}\r\n         */\r\n        initPrices: function (row) {\r\n            var _priceData = [],\r\n                productType = row.type,\r\n                defaultPrice = this.renders.prices['default'];\r\n\r\n            if (this.pricesInit[productType]) {\r\n                return true;\r\n            }\r\n\r\n            this.pricesInit[productType] = true;\r\n\r\n            if (this.renders.prices[productType] && this._needToApplyCustomTemplate(this.renders.prices[productType])) {\r\n                return this._initPriceWithCustomMetaData(productType);\r\n            }\r\n\r\n            if (this.renders.prices[productType] && this.renders.prices[productType].children) {\r\n                _priceData = this._deepObjectExtend(defaultPrice.children, this.renders.prices[productType].children);\r\n            } else {\r\n                _priceData = defaultPrice.children;\r\n            }\r\n\r\n            return this._initPricesForProductType(_priceData, productType);\r\n        },\r\n\r\n        /**\r\n         * Set name to all price components\r\n         *\r\n         * @param {Array} prices\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _setPriceNamesToPrices: function (prices, productType) {\r\n            _.each(prices, function (price, name) {\r\n                price.priceType = name;\r\n                price.name = name + '.' + productType;\r\n            });\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Sort callback to compare prices by sort order\r\n         *\r\n         * @param {Number} firstPrice\r\n         * @param {Number} secondPrice\r\n         * @returns {Number}\r\n         * @private\r\n         */\r\n        _comparePrices: function (firstPrice, secondPrice) {\r\n            if (firstPrice.sortOrder < secondPrice.sortOrder) {\r\n                return -1;\r\n            }\r\n\r\n            if (firstPrice.sortOrder > secondPrice.sortOrder) {\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Check whether metadata of product type prices was changed, and we should\r\n         * to apply custom template or custom component\r\n         *\r\n         * @param {Array} productData\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _needToApplyCustomTemplate: function (productData) {\r\n            return productData.bodyTmpl || productData.component;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get price label.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/pricetype-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiCollection'\r\n], function (ko, _, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        /**\r\n         * Find from all price ui components, price with specific code, init source on it and set priceType\r\n         *\r\n         * @param {String} code\r\n         * @returns {*|T}\r\n         */\r\n        getPriceByCode: function (code) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                price;\r\n\r\n            price = _.filter(elems, function (elem) {\r\n                return elem.index.split('.').shift() === code;\r\n            }, this).pop();\r\n\r\n            price.source = this.source();\r\n            price.priceType = code;\r\n\r\n            return price;\r\n        },\r\n\r\n        /**\r\n         * Retrieve body template\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Check whether price has price range, depends on different options, that can be choose\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (_, Element, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Catalog/product/list/columns/image',\r\n            imageCode: 'default',\r\n            image: {}\r\n        },\r\n\r\n        /**\r\n         * Find image by code in scope of images\r\n         *\r\n         * @param {Object} images\r\n         * @returns {*|T}\r\n         */\r\n        getImage: function (images) {\r\n            return _.filter(images, function (image) {\r\n                return this.imageCode === image.code;\r\n            }, this).pop();\r\n        },\r\n\r\n        /**\r\n         * Get image path.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getImageUrl: function (row) {\r\n            return this.getImage(row.images).url;\r\n        },\r\n\r\n        /**\r\n         * Get image box width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getWidth: function (row) {\r\n            return this.getImage(row.images).width;\r\n        },\r\n\r\n        /**\r\n         * Get image box height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getHeight: function (row) {\r\n            return this.getImage(row.images).height;\r\n        },\r\n\r\n        /**\r\n         * Get resized image width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageWidth: function (row) {\r\n            return this.getImage(row.images)['resized_width'];\r\n        },\r\n\r\n        /**\r\n         * Get resized image height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageHeight: function (row) {\r\n            return this.getImage(row.images)['resized_height'];\r\n        },\r\n\r\n        /**\r\n         * Get image alt text.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getLabel: function (row) {\r\n            if (!this.imageExists(row)) {\r\n                return this._super();\r\n            }\r\n\r\n            return this.getImage(row.images).label;\r\n        },\r\n\r\n        /**\r\n         * Check if image exist.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        imageExists: function (row) {\r\n            return this.getImage(row.images) !== 'undefined';\r\n        },\r\n\r\n        /**\r\n         * Check if component must be shown.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'image', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/form/element/action-delete.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (_, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            prefixName: '',\r\n            prefixElementName: '',\r\n            elementName: '',\r\n            suffixName: ''\r\n        },\r\n\r\n        /**\r\n         * Parses options and merges the result with instance\r\n         *\r\n         * @param  {Object} config\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function (config) {\r\n            this._super(config);\r\n\r\n            this.configureDataScope();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure data scope.\r\n         */\r\n        configureDataScope: function () {\r\n            var recordId,\r\n                prefixName,\r\n                suffixName;\r\n\r\n            // Get recordId\r\n            recordId = this.parentName.split('.').last();\r\n\r\n            prefixName = this.dataScopeToHtmlArray(this.prefixName);\r\n            this.elementName = this.prefixElementName + recordId;\r\n\r\n            suffixName = '';\r\n\r\n            if (!_.isEmpty(this.suffixName) || _.isNumber(this.suffixName)) {\r\n                suffixName = '[' + this.suffixName + ']';\r\n            }\r\n            this.inputName = prefixName + '[' + this.elementName + ']' + suffixName;\r\n\r\n            suffixName = '';\r\n\r\n            if (!_.isEmpty(this.suffixName) || _.isNumber(this.suffixName)) {\r\n                suffixName = '.' + this.suffixName;\r\n            }\r\n            this.dataScope = 'data.' + this.prefixName + '.' + this.elementName + suffixName;\r\n\r\n            this.links.value = this.provider + ':' + this.dataScope;\r\n        },\r\n\r\n        /**\r\n         * Get HTML array from data scope.\r\n         *\r\n         * @param {String} dataScopeString\r\n         * @returns {String}\r\n         */\r\n        dataScopeToHtmlArray: function (dataScopeString) {\r\n            var dataScopeArray, dataScope, reduceFunction;\r\n\r\n            /**\r\n             * Reduce\r\n             *\r\n             * @param {String} prev\r\n             * @param {String} curr\r\n             * @returns {String}\r\n             */\r\n            reduceFunction = function (prev, curr) {\r\n                return prev + '[' + curr + ']';\r\n            };\r\n\r\n            dataScopeArray = dataScopeString.split('.');\r\n\r\n            dataScope = dataScopeArray.shift();\r\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\r\n\r\n            return dataScope;\r\n        },\r\n\r\n        /**\r\n         * Delete record instance\r\n         * update data provider dataScope\r\n         *\r\n         * @param {Object} parents\r\n         */\r\n        deleteRecord: function (parents) {\r\n            this.value(1);\r\n            parents[1].deleteRecord(parents[0].index, parents[0].recordId);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/form/element/checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Checkbox) {\r\n    'use strict';\r\n\r\n    return Checkbox.extend({\r\n        defaults: {\r\n            inputCheckBoxName: '',\r\n            prefixElementName: '',\r\n            parentDynamicRowName: 'visual_swatch'\r\n        },\r\n\r\n        /**\r\n         * Parses options and merges the result with instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this.configureDataScope();\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.rows && this.rows().elems().length === 0) {\r\n                this.checked(true);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure data scope.\r\n         */\r\n        configureDataScope: function () {\r\n            var recordId,\r\n                value;\r\n\r\n            recordId = this.parentName.split('.').last();\r\n            value = this.prefixElementName + recordId;\r\n\r\n            this.dataScope = 'data.' + this.inputCheckBoxName;\r\n            this.inputName = this.dataScopeToHtmlArray(this.inputCheckBoxName);\r\n\r\n            this.initialValue = value;\r\n\r\n            this.links.value = this.provider + ':' + this.dataScope;\r\n        },\r\n\r\n        /**\r\n         * Get HTML array from data scope.\r\n         *\r\n         * @param {String} dataScopeString\r\n         * @returns {String}\r\n         */\r\n        dataScopeToHtmlArray: function (dataScopeString) {\r\n            var dataScopeArray, dataScope, reduceFunction;\r\n\r\n            /**\r\n             * Add new level of nesting.\r\n             *\r\n             * @param {String} prev\r\n             * @param {String} curr\r\n             * @returns {String}\r\n             */\r\n            reduceFunction = function (prev, curr) {\r\n                return prev + '[' + curr + ']';\r\n            };\r\n\r\n            dataScopeArray = dataScopeString.split('.');\r\n\r\n            dataScope = dataScopeArray.shift();\r\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\r\n\r\n            return dataScope;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/form/element/input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (_, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            prefixName: '',\r\n            prefixElementName: '',\r\n            elementName: '',\r\n            suffixName: ''\r\n        },\r\n\r\n        /**\r\n         * Parses options and merges the result with instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this.configureDataScope();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure data scope.\r\n         */\r\n        configureDataScope: function () {\r\n            var recordId,\r\n                prefixName,\r\n                suffixName;\r\n\r\n            // Get recordId\r\n            recordId = this.parentName.split('.').last();\r\n\r\n            prefixName = this.dataScopeToHtmlArray(this.prefixName);\r\n            this.elementName = this.prefixElementName + recordId;\r\n\r\n            suffixName = '';\r\n\r\n            if (!_.isEmpty(this.suffixName) || _.isNumber(this.suffixName)) {\r\n                suffixName = '[' + this.suffixName + ']';\r\n            }\r\n            this.inputName = prefixName + '[' + this.elementName + ']' + suffixName;\r\n\r\n            suffixName = '';\r\n\r\n            if (!_.isEmpty(this.suffixName) || _.isNumber(this.suffixName)) {\r\n                suffixName = '.' + this.suffixName;\r\n            }\r\n\r\n            this.exportDataLink = 'data.' + this.prefixName + '.' + this.elementName + suffixName;\r\n            this.exports.value = this.provider + ':' + this.exportDataLink;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.source.remove(this.exportDataLink);\r\n        },\r\n\r\n        /**\r\n         * Get HTML array from data scope.\r\n         *\r\n         * @param {String} dataScopeString\r\n         * @returns {String}\r\n         */\r\n        dataScopeToHtmlArray: function (dataScopeString) {\r\n            var dataScopeArray, dataScope, reduceFunction;\r\n\r\n            /**\r\n             * Add new level of nesting.\r\n             *\r\n             * @param {String} prev\r\n             * @param {String} curr\r\n             * @returns {String}\r\n             */\r\n            reduceFunction = function (prev, curr) {\r\n                return prev + '[' + curr + ']';\r\n            };\r\n\r\n            dataScopeArray = dataScopeString.split('.');\r\n\r\n            dataScope = dataScopeArray.shift();\r\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\r\n\r\n            return dataScope;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/utils/percentage-price-calculator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(['Magento_Ui/js/lib/validation/utils'], function (utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Calculates the price input value when entered percentage value.\r\n     *\r\n     * @param {String} price\r\n     * @param {String} input\r\n     *\r\n     * @returns {String}\r\n     */\r\n    return function (price, input) {\r\n        var result,\r\n            lastInputSymbol = input.slice(-1),\r\n            inputPercent = input.slice(0, -1),\r\n            parsedPercent = utils.parseNumber(inputPercent),\r\n            parsedPrice = utils.parseNumber(price);\r\n\r\n        if (lastInputSymbol !== '%') {\r\n            result = input;\r\n        } else if (\r\n            input === '%' ||\r\n            isNaN(parsedPrice) ||\r\n            parsedPercent != inputPercent || /* eslint eqeqeq:0 */\r\n            isNaN(parsedPercent) ||\r\n            input === ''\r\n        ) {\r\n            result = '';\r\n        } else if (parsedPercent > 100) {\r\n            result = '0.00';\r\n        } else if (lastInputSymbol === '%') {\r\n            result = parsedPrice - parsedPrice * (inputPercent / 100);\r\n            result = result.toFixed(2);\r\n        } else {\r\n            result = input;\r\n        }\r\n\r\n        return result;\r\n    };\r\n});\r\n","Magento_Catalog/js/components/dynamic-rows-import-custom-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/dynamic-rows/dynamic-rows-grid',\r\n    'underscore',\r\n    'mageUtils'\r\n], function (DynamicRows, _, utils) {\r\n    'use strict';\r\n\r\n    return DynamicRows.extend({\r\n        defaults: {\r\n            mappingSettings: {\r\n                enabled: false,\r\n                distinct: false\r\n            },\r\n            update: true,\r\n            map: {\r\n                'option_id': 'option_id'\r\n            },\r\n            identificationProperty: 'option_id',\r\n            identificationDRProperty: 'option_id'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        processingInsertData: function (data) {\r\n            var options = [],\r\n                currentOption,\r\n                generalContext = this;\r\n\r\n            if (!data) {\r\n                return;\r\n            }\r\n            _.each(data, function (item) {\r\n                if (!item.options) {\r\n                    return;\r\n                }\r\n                _.each(item.options, function (option) {\r\n                    currentOption = utils.copy(option);\r\n\r\n                    if (currentOption.hasOwnProperty('sort_order')) {\r\n                        delete currentOption['sort_order'];\r\n                    }\r\n\r\n                    if (currentOption.hasOwnProperty('option_id')) {\r\n                        delete currentOption['option_id'];\r\n                    }\r\n\r\n                    if (currentOption.values.length > 0) {\r\n                        generalContext.removeOptionsIds(currentOption.values);\r\n                    }\r\n                    options.push(currentOption);\r\n                });\r\n            });\r\n\r\n            if (!options.length) {\r\n                return;\r\n            }\r\n            this.cacheGridData = options;\r\n            _.each(options, function (opt) {\r\n                this.mappingValue(opt);\r\n            }, this);\r\n\r\n            this.insertData([]);\r\n        },\r\n\r\n        /**\r\n         * Removes option_id and option_type_id from every option\r\n         *\r\n         * @param {Array} options\r\n         */\r\n        removeOptionsIds: function (options) {\r\n            _.each(options, function (optionValue) {\r\n                delete optionValue['option_id'];\r\n                delete optionValue['option_type_id'];\r\n            });\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        processingAddChild: function (ctx, index, prop) {\r\n            if (!ctx) {\r\n                this.showSpinner(true);\r\n                this.addChild(ctx, index, prop);\r\n\r\n                return;\r\n            }\r\n\r\n            this._super(ctx, index, prop);\r\n        },\r\n\r\n        /**\r\n         * Set empty array to dataProvider\r\n         */\r\n        clearDataProvider: function () {\r\n            this.source.set(this.dataProvider, []);\r\n        },\r\n\r\n        /**\r\n         * Mutes parent method\r\n         */\r\n        updateInsertData: function () {\r\n            return false;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/dynamic-rows-tier-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/dynamic-rows/dynamic-rows'\r\n], function (_, DynamicRows) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @deprecated Parent method contains labels sorting.\r\n     * @see Magento_Ui/js/dynamic-rows/dynamic-rows\r\n     */\r\n    return DynamicRows.extend({\r\n\r\n        /**\r\n         * Init header elements\r\n         */\r\n        initHeader: function () {\r\n            var labels;\r\n\r\n            this._super();\r\n            labels = _.clone(this.labels());\r\n            labels = _.sortBy(labels, function (label) {\r\n                return label.sortOrder;\r\n            });\r\n\r\n            this.labels(labels);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/new-attribute-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/form/form',\r\n    'Magento_Ui/js/modal/prompt',\r\n    'Magento_Ui/js/modal/alert'\r\n], function ($, Form, prompt, alert) {\r\n    'use strict';\r\n\r\n    return Form.extend({\r\n        defaults: {\r\n            newSetPromptMessage: '',\r\n            listens: {\r\n                responseData: 'processResponseData'\r\n            },\r\n            modules: {\r\n                productForm: 'product_form.product_form'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process response data\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        processResponseData: function (data) {\r\n            if (data.params['new_attribute_set_id']) {\r\n                this.productForm().params = {\r\n                    set: data.params['new_attribute_set_id']\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process Save In New Attribute Set prompt\r\n         */\r\n        saveAttributeInNewSet: function () {\r\n\r\n            var self = this;\r\n\r\n            this.validate();\r\n\r\n            if (!this.additionalInvalid && !this.source.get('params.invalid')) {\r\n                prompt({\r\n                    content: this.newSetPromptMessage,\r\n                    actions: {\r\n\r\n                        /**\r\n                         * @param {String} val\r\n                         * @this {actions}\r\n                         */\r\n                        confirm: function (val) {\r\n                            var rules = ['required-entry', 'validate-no-html-tags'],\r\n                                editForm = self,\r\n                                newAttributeSetName = val,\r\n                                i,\r\n                                params = {};\r\n\r\n                            if (!newAttributeSetName) {\r\n                                return;\r\n                            }\r\n\r\n                            for (i = 0; i < rules.length; i++) {\r\n                                if (!$.validator.methods[rules[i]](newAttributeSetName)) {\r\n                                    alert({\r\n                                        content: $.validator.messages[rules[i]]\r\n                                    });\r\n\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            params['new_attribute_set_name'] = newAttributeSetName;\r\n                            editForm.setAdditionalData(params);\r\n                            editForm.save();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.focusInvalid();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/custom-options-component.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (_, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.addBefore(this.addbefore);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            this.observe('addBefore');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'knockout'\r\n], function (Abstract, ko) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('checked');\r\n\r\n            this.value = ko.pureComputed({\r\n\r\n                /**\r\n                 * use 'mappedValue' as value if checked\r\n                 */\r\n                read: function () {\r\n                    return this.checked() ? this.mappedValue : '';\r\n                },\r\n\r\n                /**\r\n                 * any value made checkbox checked\r\n                 */\r\n                write: function (val) {\r\n                    if (val) {\r\n                        this.checked(true);\r\n                    }\r\n                },\r\n                owner: this\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/attributes-insert-listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiRegistry',\r\n    'underscore',\r\n    'Magento_Ui/js/form/components/insert-listing'\r\n], function ($, registry, _, InsertListing) {\r\n    'use strict';\r\n\r\n    return InsertListing.extend({\r\n        defaults: {\r\n            addAttributeUrl: '',\r\n            attributeSetId: '',\r\n            attributeIds: '',\r\n            groupCode: '',\r\n            groupName: '',\r\n            groupSortOrder: 0,\r\n            productId: 0,\r\n            formProvider: '',\r\n            modules: {\r\n                form: '${ $.formProvider }',\r\n                modal: '${ $.parentName }'\r\n            },\r\n            productType: ''\r\n        },\r\n\r\n        /**\r\n         * Render attribute\r\n         */\r\n        render: function () {\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Save attribute\r\n         */\r\n        save: function () {\r\n            this.addSelectedAttributes();\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Add selected attributes\r\n         */\r\n        addSelectedAttributes: function () {\r\n            $.ajax({\r\n                url: this.addAttributeUrl,\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                data: {\r\n                    attributeIds: this.selections().getSelections(),\r\n                    templateId: this.attributeSetId,\r\n                    groupCode: this.groupCode,\r\n                    groupName: this.groupName,\r\n                    groupSortOrder: this.groupSortOrder,\r\n                    productId: this.productId,\r\n                    componentJson: 1\r\n                },\r\n                success: function () {\r\n                    this.form().params = {\r\n                        set: this.attributeSetId,\r\n                        id: this.productId,\r\n                        type: this.productType\r\n                    };\r\n                    this.form().reload();\r\n                    this.modal().state(false);\r\n                    this.reload();\r\n                }.bind(this)\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/disable-hide-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy',\r\n    'Magento_Catalog/js/components/disable-on-option/strategy'\r\n], function (Element, visibleStrategy, disableStrategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(visibleStrategy).extend(disableStrategy);\r\n});\r\n","Magento_Catalog/js/components/select-handle-required.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select'\r\n], function (Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n\r\n        /**\r\n         * Disable required validation, when 'use config option' checked\r\n         */\r\n        handleRequired: function (newValue) {\r\n            this.validation['required-entry'] = !newValue;\r\n            this.required(!newValue);\r\n            this.error(false);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/new-category.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/ui-select'\r\n], function (Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n\r\n        /**\r\n         * Parse data and set it to options.\r\n         *\r\n         * @param {Object} data - Response data object.\r\n         * @returns {Object}\r\n         */\r\n        setParsed: function (data) {\r\n            var option = this.parseData(data);\r\n\r\n            if (data.error) {\r\n                return this;\r\n            }\r\n\r\n            this.options([]);\r\n            this.setOption(option);\r\n            this.set('newOption', option);\r\n        },\r\n\r\n        /**\r\n         * Normalize option object.\r\n         *\r\n         * @param {Object} data - Option object.\r\n         * @returns {Object}\r\n         */\r\n        parseData: function (data) {\r\n            return {\r\n                'is_active': data.category['is_active'],\r\n                level: data.category.level,\r\n                value: data.category['entity_id'],\r\n                label: data.category.name,\r\n                parent: data.category.parent\r\n            };\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/input-handle-required.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n\r\n        /**\r\n         * Disable required validation, when 'use config option' checked\r\n         */\r\n        handleRequired: function (newValue) {\r\n            this.validation['required-entry'] = !newValue;\r\n            this.required(!newValue);\r\n            this.error(false);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/attributes-grid-paging.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/paging/paging',\r\n    'underscore'\r\n], function (Paging, _) {\r\n    'use strict';\r\n\r\n    return Paging.extend({\r\n        defaults: {\r\n            totalTmpl: 'Magento_Catalog/attributes/grid/paging',\r\n            modules: {\r\n                selectionColumn: '${ $.selectProvider }'\r\n            },\r\n            listens: {\r\n                '${ $.selectProvider }:selected': 'changeLabel'\r\n            },\r\n            label: '',\r\n            selectedAttrs: []\r\n        },\r\n\r\n        /**\r\n         * Change label.\r\n         *\r\n         * @param {Array} selected\r\n         */\r\n        changeLabel: function (selected) {\r\n            this.selectedAttrs = [];\r\n            _.each(this.selectionColumn().rows(), function (row) {\r\n                if (selected.indexOf(row['attribute_id']) !== -1) {\r\n                    this.selectedAttrs.push(row['attribute_code']);\r\n                }\r\n            }, this);\r\n\r\n            this.label(this.selectedAttrs.join(', '));\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('label');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/import-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'underscore',\r\n    'uiRegistry'\r\n], function (Abstract, _, registry) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            allowImport: true,\r\n            autoImportIfEmpty: false,\r\n            values: {},\r\n            mask: '',\r\n            queryTemplate: 'ns = ${ $.ns }, index = '\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.allowImport) {\r\n                this.setHandlers();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Split mask placeholder and attach events to placeholder fields.\r\n         */\r\n        setHandlers: function () {\r\n            var str = this.mask || '',\r\n                placeholders;\r\n\r\n            placeholders = str.match(/{{(.*?)}}/g); // Get placeholders\r\n\r\n            _.each(placeholders, function (placeholder) {\r\n                placeholder = placeholder.replace(/[{{}}]/g, ''); // Remove curly braces\r\n\r\n                registry.get(this.queryTemplate + placeholder, function (component) {\r\n                    this.values[placeholder] = component.getPreview();\r\n                    component.on('value', this.updateValue.bind(this, placeholder, component));\r\n                    component.valueUpdate = 'keyup';\r\n                }.bind(this));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Update field with mask value, if it's allowed.\r\n         *\r\n         * @param {Object} placeholder\r\n         * @param {Object} component\r\n         */\r\n        updateValue: function (placeholder, component) {\r\n            var string = this.mask || '',\r\n                nonEmptyValueFlag = false;\r\n\r\n            if (placeholder) {\r\n                this.values[placeholder] = component.getPreview() || '';\r\n            }\r\n\r\n            if (!this.allowImport) {\r\n                return;\r\n            }\r\n\r\n            _.each(this.values, function (propertyValue, propertyName) {\r\n                string = string.replace('{{' + propertyName + '}}', propertyValue);\r\n                nonEmptyValueFlag = nonEmptyValueFlag || !!propertyValue;\r\n            });\r\n\r\n            if (nonEmptyValueFlag) {\r\n                string = string.replace(/(<([^>]+)>)/ig, ''); // Remove html tags\r\n                this.value(string);\r\n            } else {\r\n                this.value('');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disallow import when initial value isn't empty string\r\n         *\r\n         * @returns {*}\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            if (this.initialValue !== '') {\r\n                this.allowImport = false;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *  Callback when value is changed by user,\r\n         *  and disallow/allow import value\r\n         */\r\n        userChanges: function () {\r\n\r\n            /**\r\n             *  As userChanges is called before updateValue,\r\n             *  we forced to get value from component by reference\r\n             */\r\n            var actualValue = arguments[1].currentTarget.value;\r\n\r\n            this._super();\r\n\r\n            if (actualValue === '') {\r\n                this.allowImport = true;\r\n\r\n                if (this.autoImportIfEmpty) {\r\n                    this.updateValue(null, null);\r\n                }\r\n            } else {\r\n                this.allowImport = false;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/url-key-handle-changes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Checkbox) {\r\n    'use strict';\r\n\r\n    return Checkbox.extend({\r\n        defaults: {\r\n            imports: {\r\n                handleUseDefault: '${ $.parentName }.use_default.url_key:checked',\r\n                urlKey: '${ $.provider }:data.url_key'\r\n            },\r\n            listens: {\r\n                urlKey: 'handleChanges'\r\n            },\r\n            modules: {\r\n                useDefault: '${ $.parentName }.use_default.url_key'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable checkbox field, when 'url_key' field without changes or 'use default' field is checked\r\n         */\r\n        handleChanges: function (newValue) {\r\n            this.disabled(newValue === this.valueMap['true'] || this.useDefault.checked);\r\n        },\r\n\r\n        /**\r\n         * Disable checkbox field, when 'url_key' field without changes or 'use default' field is checked\r\n         */\r\n        handleUseDefault: function (checkedUseDefault) {\r\n            this.disabled(this.urlKey === this.valueMap['true'] || checkedUseDefault);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/attribute-set-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/ui-select'\r\n], function (Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            listens: {\r\n                'value': 'changeFormSubmitUrl'\r\n            },\r\n            modules: {\r\n                formProvider: '${ $.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change set parameter in save and validate urls of form\r\n         *\r\n         * @param {String|Number} value\r\n         */\r\n        changeFormSubmitUrl: function (value) {\r\n            var pattern = /(set\\/)(\\d)*?\\//,\r\n                change = '$1' + value + '/';\r\n\r\n            this.formProvider().client.urls.save = this.formProvider().client.urls.save.replace(pattern, change);\r\n            this.formProvider().client.urls.beforeSave = this.formProvider().client.urls.beforeSave.replace(\r\n                pattern,\r\n                change\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/custom-options-price-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/select',\r\n    'uiRegistry'\r\n], function (_, Select, uiRegistry) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        onUpdate: function () {\r\n            this._super();\r\n\r\n            this.updateAddBeforeForPrice();\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.updateAddBeforeForPrice();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update addbefore for price field. Change it to currency or % depends of price_type value.\r\n         */\r\n        updateAddBeforeForPrice: function () {\r\n            var addBefore, currentValue, priceIndex, priceName, uiPrice;\r\n\r\n            priceIndex = typeof this.imports.priceIndex == 'undefined' ? 'price' : this.imports.priceIndex;\r\n            priceName = this.parentName + '.' + priceIndex;\r\n\r\n            uiPrice = uiRegistry.get(priceName);\r\n\r\n            if (uiPrice && uiPrice.addbeforePool) {\r\n                currentValue = this.value();\r\n\r\n                uiPrice.addbeforePool.forEach(function (item) {\r\n                    if (item.value === currentValue) {\r\n                        addBefore = item.label;\r\n                    }\r\n                });\r\n\r\n                if (typeof addBefore != 'undefined') {\r\n                    uiPrice.addBefore(addBefore);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/new-attribute-insert-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/insert-form'\r\n], function (InsertForm) {\r\n    'use strict';\r\n\r\n    return InsertForm.extend({\r\n        defaults: {\r\n            modules: {\r\n                productForm: 'product_form.product_form'\r\n            },\r\n            listens: {\r\n                responseStatus: 'processResponseStatus'\r\n            },\r\n            attributeSetId: 0,\r\n            productId: 0\r\n        },\r\n\r\n        /**\r\n         * Process response status.\r\n         */\r\n        processResponseStatus: function () {\r\n            if (this.responseStatus()) {\r\n\r\n                if (this.productForm().params === undefined) {\r\n                    this.productForm().params = {\r\n                        set: this.attributeSetId\r\n                    };\r\n                }\r\n\r\n                if (this.productId) {\r\n                    this.productForm().params.id = this.productId;\r\n                }\r\n                this.productForm().params.type = this.productType;\r\n\r\n                this.productForm().reload();\r\n                this.resetForm();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/select-to-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n\r\n        /**\r\n         * Converts initial value to integer\r\n         *\r\n         * @returns {Abstract}\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n            this.value(+this.value());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts new value to integer\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        onUpdate: function () {\r\n            this._super();\r\n            this.value(+this.value());\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/product-status.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'underscore'\r\n], function (Abstract, _) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            'mappingValues': {\r\n                '1': true,\r\n                '2': false\r\n            },\r\n            'checked': false,\r\n            'mappedValue': '',\r\n            'links': {\r\n                value: false,\r\n                'mappedValue': '${ $.provider }:${ $.dataScope }'\r\n            },\r\n            imports: {\r\n                checked: 'mappedValue'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {*}\r\n         */\r\n        setMappedValue: function () {\r\n            var newValue;\r\n\r\n            _.some(this.mappingValues, function (item, key) {\r\n                if (item === this.value()) {\r\n                    newValue = key;\r\n\r\n                    return true;\r\n                }\r\n            }, this);\r\n\r\n            return newValue;\r\n        },\r\n\r\n        /**\r\n         * @returns {*}\r\n         */\r\n        initObservable: function () {\r\n            return this.observe('mappedValue checked')._super();\r\n        },\r\n\r\n        /**\r\n         * @returns {*}\r\n         */\r\n        setInitialValue: function () {\r\n            this.value(this.mappedValue());\r\n            this._super();\r\n            this.mappedValue(this.initialValue);\r\n            this.value(this.mappingValues[this.initialValue]);\r\n            this.initialValue = this.value();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @returns {*}\r\n         */\r\n        onUpdate: function () {\r\n            this.mappedValue(this.setMappedValue());\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/product-ui-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated see Magento/Ui/view/base/web/js/grid/filters/elements/ui-select.js\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/ui-select',\r\n    'jquery',\r\n    'underscore'\r\n], function (Select, $, _) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            validationUrl: false,\r\n            loadedOption: [],\r\n            validationLoading: true\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.validateInitialValue();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate initial value actually exists\r\n         */\r\n        validateInitialValue: function () {\r\n            if (!_.isEmpty(this.value())) {\r\n                $.ajax({\r\n                    url: this.validationUrl,\r\n                    type: 'GET',\r\n                    dataType: 'json',\r\n                    context: this,\r\n                    data: {\r\n                        productId: this.value()\r\n                    },\r\n\r\n                    /** @param {Object} response */\r\n                    success: function (response) {\r\n                        if (!_.isEmpty(response)) {\r\n                            this.options([response]);\r\n                            this.loadedOption = response;\r\n                        }\r\n                    },\r\n\r\n                    /** set empty array if error occurs */\r\n                    error: function () {\r\n                        this.options([]);\r\n                    },\r\n\r\n                    /** stop loader */\r\n                    complete: function () {\r\n                        this.validationLoading(false);\r\n                        this.setCaption();\r\n                    }\r\n                });\r\n            } else {\r\n                this.validationLoading(false);\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        getSelected: function () {\r\n            var options = this._super();\r\n\r\n            if (!_.isEmpty(this.loadedOption)) {\r\n                return this.value() === this.loadedOption.value ? [this.loadedOption] : options;\r\n            }\r\n\r\n            return options;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/multiselect-handle-required.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/multiselect'\r\n], function (Multiselect) {\r\n    'use strict';\r\n\r\n    return Multiselect.extend({\r\n\r\n        /**\r\n         * Disable required validation, when 'use config option' checked\r\n         */\r\n        handleRequired: function (newValue) {\r\n            this.validation['required-entry'] = !newValue;\r\n            this.required(!newValue);\r\n            this.error(false);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/attributes-fieldset.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/fieldset',\r\n    'Magento_Ui/js/core/app'\r\n], function (Fieldset, app) {\r\n    'use strict';\r\n\r\n    return Fieldset.extend({\r\n        defaults: {\r\n            listens: {\r\n                '${ $.provider }:additionalAttributes': 'onAttributeAdd'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * On attribute add trigger\r\n         *\r\n         * @param {Object} listOfNewAttributes\r\n         */\r\n        onAttributeAdd: function (listOfNewAttributes) {\r\n            app(listOfNewAttributes, true);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/html'\r\n], function (Html) {\r\n    'use strict';\r\n\r\n    return Html.extend({\r\n        defaults: {\r\n            form: '${ $.namespace }.${ $.namespace }',\r\n            visible: false,\r\n            imports: {\r\n                responseData: '${ $.form }:responseData',\r\n                visible: 'responseData.error',\r\n                content: 'responseData.messages'\r\n            },\r\n            listens: {\r\n                '${ $.provider }:data.reset': 'hide'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show messages.\r\n         */\r\n        show: function () {\r\n            this.visible(true);\r\n        },\r\n\r\n        /**\r\n         * Hide messages.\r\n         */\r\n        hide: function () {\r\n            this.visible(false);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/components/disable-on-option/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'Magento_Catalog/js/components/disable-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/disable-on-option/strategy.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        defaults: {\r\n            valuesForEnable: [],\r\n            disabled: true,\r\n            imports: {\r\n                toggleDisable:\r\n                    'product_attribute_add_form.product_attribute_add_form.base_fieldset.frontend_input:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle disabled state.\r\n         *\r\n         * @param {Number} selected\r\n         */\r\n        toggleDisable: function (selected) {\r\n            this.disabled(!(selected in this.valuesForEnable));\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/js/components/disable-on-option/input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'Magento_Catalog/js/components/disable-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/disable-on-option/yesno.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox',\r\n    'Magento_Catalog/js/components/disable-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    var comp = Element.extend(strategy).extend({\r\n\r\n        defaults: {\r\n            listens: {\r\n                disabled: 'updateValueForDisabledField',\r\n                visible: 'updateValueForDisabledField'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.updateValueForDisabledField();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set element value to O(No) if element is invisible and disabled\r\n         * Set element value to initialValue if element becomes visible and enable\r\n         */\r\n        updateValueForDisabledField: function () {\r\n            if (!this.disabled() && this.visible()) {\r\n                this.set('value', this.initialValue);\r\n            } else {\r\n                this.set('value', 0);\r\n            }\r\n        }\r\n    });\r\n\r\n    return comp.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/textarea.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/textarea',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/strategy.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        defaults: {\r\n            valuesForOptions: [],\r\n            imports: {\r\n                toggleVisibility:\r\n                    'product_attribute_add_form.product_attribute_add_form.base_fieldset.frontend_input:value'\r\n            },\r\n            isShown: false,\r\n            inverseVisibility: false\r\n        },\r\n\r\n        /**\r\n         * Toggle visibility state.\r\n         *\r\n         * @param {Number} selected\r\n         */\r\n        toggleVisibility: function (selected) {\r\n            this.isShown = selected in this.valuesForOptions;\r\n            this.visible(this.inverseVisibility ? !this.isShown : this.isShown);\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/fieldset.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/components/fieldset',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Fieldset, strategy) {\r\n    'use strict';\r\n\r\n    return Fieldset.extend(strategy).extend(\r\n        {\r\n            defaults: {\r\n                openOnShow: true\r\n            },\r\n\r\n            /**\r\n             * Toggle visibility state.\r\n             */\r\n            toggleVisibility: function () {\r\n                this._super();\r\n\r\n                if (this.openOnShow) {\r\n                    this.opened(this.inverseVisibility ? !this.isShown : this.isShown);\r\n                }\r\n            }\r\n        }\r\n    );\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/date',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/visible-on-option/yesno.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox',\r\n    'Magento_Catalog/js/components/visible-on-option/strategy'\r\n], function (Element, strategy) {\r\n    'use strict';\r\n\r\n    return Element.extend(strategy);\r\n});\r\n","Magento_Catalog/js/components/use-parent-settings/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component;\r\n});\r\n","Magento_Catalog/js/components/use-parent-settings/textarea.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/textarea'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component;\r\n});\r\n","Magento_Catalog/js/components/use-parent-settings/toggle-disabled-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var mixin = {\r\n        defaults: {\r\n            imports: {\r\n                toggleDisabled: '${ $.parentName }.custom_use_parent_settings:checked'\r\n            },\r\n            useParent: false,\r\n            useDefaults: false\r\n        },\r\n\r\n        /**\r\n         * Disable form input if settings for parent section is used\r\n         * or default value is applied.\r\n         *\r\n         * @param {Boolean} isUseParent\r\n         */\r\n        toggleDisabled: function (isUseParent) {\r\n            var disabled = this.useParent = isUseParent;\r\n\r\n            if (!disabled && !_.isUndefined(this.service)) {\r\n                disabled = !!this.isUseDefault();\r\n            }\r\n\r\n            this.saveUseDefaults();\r\n            this.disabled(disabled);\r\n        },\r\n\r\n        /**\r\n         * Stores original state of the field.\r\n         */\r\n        saveUseDefaults: function () {\r\n            this.useDefaults = this.disabled();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        setInitialValue: function () {\r\n            this._super();\r\n            this.isUseDefault(this.useDefaults);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        toggleUseDefault: function (state) {\r\n            this._super();\r\n            this.disabled(state || this.useParent);\r\n        }\r\n    };\r\n\r\n    return function (target) {\r\n        return target.extend(mixin);\r\n    };\r\n});\r\n","Magento_Catalog/js/components/use-parent-settings/single-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component;\r\n});\r\n","Magento_Catalog/js/tier-price/percentage-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiElement',\r\n    'underscore',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'Magento_Catalog/js/utils/percentage-price-calculator'\r\n], function (Element, _, $, percentagePriceCalculator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            priceElem: '${ $.parentName }.price',\r\n            selector: 'input',\r\n            imports: {\r\n                priceValue: '${ $.priceElem }:priceValue'\r\n            },\r\n            exports: {\r\n                calculatedVal: '${ $.priceElem }:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            _.bindAll(this, 'initPriceListener', 'onInput');\r\n\r\n            $.async({\r\n                component: this.priceElem,\r\n                selector: this.selector\r\n            }, this.initPriceListener);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe(['visible']);\r\n        },\r\n\r\n        /**\r\n         * Handles keyup event on price input.\r\n         *\r\n         * {@param} HTMLElement elem\r\n         */\r\n        initPriceListener: function (elem) {\r\n            $(elem).on('keyup.priceCalc', this.onInput);\r\n        },\r\n\r\n        /**\r\n         * Delegates calculation of the price input value to percentagePriceCalculator.\r\n         *\r\n         * {@param} object event\r\n         */\r\n        onInput: function (event) {\r\n            var value = event.currentTarget.value;\r\n\r\n            if (value.slice(-1) === '%') {\r\n                value = percentagePriceCalculator(this.priceValue, value);\r\n                this.set('calculatedVal', value);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/tier-price/value-type-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'uiRegistry',\r\n    'underscore'\r\n], function (Select, uiRegistry, _) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            prices: {}\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            delete this.prices.__disableTmpl;\r\n            this.prepareForm();\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        setInitialValue: function () {\r\n            this.initialValue = this.getInitialValue();\r\n\r\n            if (this.value.peek() !== this.initialValue) {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.isUseDefault(this.disabled());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        prepareForm: function () {\r\n            var elements = this.getElementsByPrices(),\r\n                prices = this.prices,\r\n                currencyType = _.keys(prices)[0],\r\n                select = this;\r\n\r\n            uiRegistry.get(elements, function () {\r\n                _.each(arguments, function (currentValue) {\r\n                    if (parseFloat(currentValue.value()) > 0) {\r\n                        _.each(prices, function (priceValue, priceKey) {\r\n                            if (priceValue === currentValue.name) {\r\n                                currencyType = priceKey;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                select.value(currencyType);\r\n                select.on('value', select.onUpdate.bind(select));\r\n                select.onUpdate();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @returns {Array}\r\n         */\r\n        getElementsByPrices: function () {\r\n            var elements = [];\r\n\r\n            _.each(this.prices, function (currentValue) {\r\n                elements.push(currentValue);\r\n            });\r\n\r\n            return elements;\r\n        },\r\n\r\n        /**\r\n         * Callback that fires when 'value' property is updated\r\n         */\r\n        onUpdate: function () {\r\n            var value = this.value(),\r\n                prices = this.prices,\r\n                select = this,\r\n                parentDataScopeArr = this.dataScope.split('.'),\r\n                parentDataScope,\r\n                elements = this.getElementsByPrices();\r\n\r\n            parentDataScopeArr.pop();\r\n            parentDataScope = parentDataScopeArr.join('.');\r\n\r\n            uiRegistry.get(elements, function () {\r\n                var sourceData = select.source.get(parentDataScope);\r\n\r\n                _.each(arguments, function (currentElement) {\r\n                    var index;\r\n\r\n                    _.each(prices, function (priceValue, priceKey) {\r\n                        if (priceValue === currentElement.name) {\r\n                            index = priceKey;\r\n                        }\r\n                    });\r\n\r\n                    if (value === index) {\r\n                        currentElement.visible(true);\r\n                        sourceData[currentElement.index] = currentElement.value();\r\n                    } else {\r\n                        currentElement.value('');\r\n                        currentElement.visible(false);\r\n                        delete sourceData[currentElement.index];\r\n                    }\r\n                });\r\n                select.source.set(parentDataScope, sourceData);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/catalog/product-attributes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'jquery/ui',\r\n    'mage/translate'\r\n], function ($, _, registry) {\r\n    'use strict';\r\n\r\n    $.widget('mage.productAttributes', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._on({\r\n                'click': '_showPopup'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initModal: function () {\r\n            var self = this;\r\n\r\n            this.modal = $('<div id=\"create_new_attribute\"/>').modal({\r\n                title: $.mage.__('New Attribute'),\r\n                type: 'slide',\r\n                buttons: [],\r\n\r\n                /** @inheritdoc */\r\n                opened: function () {\r\n                    $(this).parent().addClass('modal-content-new-attribute');\r\n                    self.iframe = $('<iframe id=\"create_new_attribute_container\">').attr({\r\n                        src: self._prepareUrl(),\r\n                        frameborder: 0\r\n                    });\r\n                    self.modal.append(self.iframe);\r\n                    self._changeIframeSize();\r\n                    $(window).off().on('resize.modal', _.debounce(self._changeIframeSize.bind(self), 400));\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                closed: function () {\r\n                    var doc = self.iframe.get(0).document;\r\n\r\n                    if (doc && $.isFunction(doc.execCommand)) {\r\n                        //IE9 break script loading but not execution on iframe removing\r\n                        doc.execCommand('stop');\r\n                        self.iframe.remove();\r\n                    }\r\n                    self.modal.data('modal').modal.remove();\r\n                    $(window).off('resize.modal');\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         * @private\r\n         */\r\n        _getHeight: function () {\r\n            var modal = this.modal.data('modal').modal,\r\n                modalHead = modal.find('header'),\r\n                modalHeadHeight = modalHead.outerHeight(),\r\n                modalHeight = modal.outerHeight(),\r\n                modalContentPadding = this.modal.parent().outerHeight() - this.modal.parent().height();\r\n\r\n            return modalHeight - modalHeadHeight - modalContentPadding;\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         * @private\r\n         */\r\n        _getWidth: function () {\r\n            return this.modal.width();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _changeIframeSize: function () {\r\n            this.modal.parent().outerHeight(this._getHeight());\r\n            this.iframe.outerHeight(this._getHeight());\r\n            this.iframe.outerWidth(this._getWidth());\r\n\r\n        },\r\n\r\n        /**\r\n         * @return {String}\r\n         * @private\r\n         */\r\n        _prepareUrl: function () {\r\n            var productSource,\r\n                attributeSetId = '';\r\n\r\n            if (this.options.dataProvider) {\r\n                try {\r\n                    productSource = registry.get(this.options.dataProvider);\r\n                    attributeSetId = productSource.data.product['attribute_set_id'];\r\n                } catch (e) {}\r\n            }\r\n\r\n            return this.options.url +\r\n                (/\\?/.test(this.options.url) ? '&' : '?') +\r\n                'set=' + attributeSetId;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _showPopup: function () {\r\n            this._initModal();\r\n            this.modal.modal('openModal');\r\n        }\r\n    });\r\n\r\n    return $.mage.productAttributes;\r\n});\r\n","Magento_Catalog/catalog/base-image-uploader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global alert:true*/\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery/ui',\r\n    'jquery/file-uploader',\r\n    'mage/translate',\r\n    'mage/backend/notification'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.baseImage', {\r\n        /**\r\n         * Button creation\r\n         * @protected\r\n         */\r\n        options: {\r\n            maxImageUploadCount: 10\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var $container = this.element,\r\n                imageTmpl = mageTemplate(this.element.find('[data-template=image]').html()),\r\n                $dropPlaceholder = this.element.find('.image-placeholder'),\r\n                $galleryContainer = $('#media_gallery_content'),\r\n                mainClass = 'base-image',\r\n                maximumImageCount = 5,\r\n                $fieldCheckBox = $container.closest('[data-attribute-code=image]').find(':checkbox'),\r\n                isDefaultChecked = $fieldCheckBox.is(':checked'),\r\n                findElement, updateVisibility;\r\n\r\n            if (isDefaultChecked) {\r\n                $fieldCheckBox.trigger('click');\r\n            }\r\n\r\n            /**\r\n             * @param {Object} data\r\n             * @return {HTMLElement}\r\n             */\r\n            findElement = function (data) {\r\n                return $container.find('.image:not(.image-placeholder)').filter(function () {\r\n                    if (!$(this).data('image')) {\r\n                        return false;\r\n                    }\r\n\r\n                    return $(this).data('image').file === data.file;\r\n                }).first();\r\n            };\r\n\r\n            /** Update image visibility. */\r\n            updateVisibility = function () {\r\n                var elementsList = $container.find('.image:not(.removed-item)');\r\n\r\n                elementsList.each(function (index) {\r\n                    $(this)[index < maximumImageCount ? 'show' : 'hide']();\r\n                });\r\n                $dropPlaceholder[elementsList.length > maximumImageCount ? 'hide' : 'show']();\r\n            };\r\n\r\n            $galleryContainer.on('setImageType', function (event, data) {\r\n                if (data.type === 'image') {\r\n                    $container.find('.' + mainClass).removeClass(mainClass);\r\n\r\n                    if (data.imageData) {\r\n                        findElement(data.imageData).addClass(mainClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            $galleryContainer.on('addItem', function (event, data) {\r\n                var tmpl = imageTmpl({\r\n                    data: data\r\n                });\r\n\r\n                $(tmpl).data('image', data).insertBefore($dropPlaceholder);\r\n\r\n                updateVisibility();\r\n            });\r\n\r\n            $galleryContainer.on('removeItem', function (event, image) {\r\n                findElement(image).addClass('removed-item').hide();\r\n                updateVisibility();\r\n            });\r\n\r\n            $galleryContainer.on('moveElement', function (event, data) {\r\n                var $element = findElement(data.imageData),\r\n                    $after;\r\n\r\n                if (data.position === 0) {\r\n                    $container.prepend($element);\r\n                } else {\r\n                    $after = $container.find('.image').eq(data.position);\r\n\r\n                    if (!$element.is($after)) {\r\n                        $element.insertAfter($after);\r\n                    }\r\n                }\r\n                updateVisibility();\r\n            });\r\n\r\n            $container.on('click', '[data-role=make-base-button]', function (event) {\r\n                var data;\r\n\r\n                event.preventDefault();\r\n                data = $(event.target).closest('.image').data('image');\r\n                $galleryContainer.productGallery('setBase', data);\r\n            });\r\n\r\n            $container.on('click', '[data-role=delete-button]', function (event) {\r\n                event.preventDefault();\r\n                $galleryContainer.trigger('removeItem', $(event.target).closest('.image').data('image'));\r\n            });\r\n\r\n            $container.sortable({\r\n                axis: 'x',\r\n                items: '.image:not(.image-placeholder)',\r\n                distance: 8,\r\n                tolerance: 'pointer',\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 * @param {Object} data\r\n                 */\r\n                stop: function (event, data) {\r\n                    $galleryContainer.trigger('setPosition', {\r\n                        imageData: data.item.data('image'),\r\n                        position: $container.find('.image').index(data.item)\r\n                    });\r\n                    $galleryContainer.trigger('resort');\r\n                }\r\n            }).disableSelection();\r\n\r\n            this.element.find('input[type=\"file\"]').fileupload({\r\n                dataType: 'json',\r\n                dropZone: $dropPlaceholder.closest('[data-attribute-code]'),\r\n                acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\r\n                maxFileSize: this.element.data('maxFileSize'),\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 * @param {Object} data\r\n                 */\r\n                done: function (event, data) {\r\n                    $dropPlaceholder.find('.progress-bar').text('').removeClass('in-progress');\r\n\r\n                    if (!data.result) {\r\n                        return;\r\n                    }\r\n\r\n                    if (!data.result.error) {\r\n                        $galleryContainer.trigger('addItem', data.result);\r\n                    } else {\r\n                        alert({\r\n                            content: $.mage.__('We don\\'t recognize or support this file extension type.')\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 * @param {Object} data\r\n                 */\r\n                change: function (e, data) {\r\n                    if (data.files.length > this.options.maxImageUploadCount) {\r\n                        $('body').notification('clear').notification('add', {\r\n                            error: true,\r\n                            message: $.mage.__('You can\\'t upload more than ' + this.options.maxImageUploadCount +\r\n                                ' images in one time'),\r\n\r\n                            /**\r\n                             * @param {*} message\r\n                             */\r\n                            insertMethod: function (message) {\r\n                                $('.page-main-actions').after(message);\r\n                            }\r\n                        });\r\n\r\n                        return false;\r\n                    }\r\n                }.bind(this),\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 * @param {*} data\r\n                 */\r\n                add: function (event, data) {\r\n                    $(this).fileupload('process', data).done(function () {\r\n                        data.submit();\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 * @param {Object} data\r\n                 */\r\n                progress: function (e, data) {\r\n                    var progress = parseInt(data.loaded / data.total * 100, 10);\r\n\r\n                    $dropPlaceholder.find('.progress-bar').addClass('in-progress').text(progress + '%');\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                start: function (event) {\r\n                    var uploaderContainer = $(event.target).closest('.image-placeholder');\r\n\r\n                    uploaderContainer.addClass('loading');\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                stop: function (event) {\r\n                    var uploaderContainer = $(event.target).closest('.image-placeholder');\r\n\r\n                    uploaderContainer.removeClass('loading');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.baseImage;\r\n});\r\n","Magento_Catalog/catalog/type-events.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return {\r\n        $type: $('#product_type_id'),\r\n\r\n        /**\r\n         * Init\r\n         */\r\n        init: function () {\r\n            this.type = {\r\n                init: this.$type.val(),\r\n                current: this.$type.val()\r\n            };\r\n\r\n            this.bindAll();\r\n        },\r\n\r\n        /**\r\n         * Bind all\r\n         */\r\n        bindAll: function () {\r\n            $(document).on('setTypeProduct', function (event, type) {\r\n                this.setType(type);\r\n            }.bind(this));\r\n\r\n            //direct change type input\r\n            this.$type.on('change', function () {\r\n                this.type.current = this.$type.val();\r\n                this._notifyType();\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Set type\r\n         * @param {String} type - type product (downloadable, simple, virtual ...)\r\n         * @returns {*}\r\n         */\r\n        setType: function (type) {\r\n            return this.$type.val(type || this.type.init).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Notify type\r\n         * @private\r\n         */\r\n        _notifyType: function () {\r\n            $(document).trigger('changeTypeProduct', this.type);\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/catalog/product.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\nrequire([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    window.Product = {};\r\n\r\n    /**\r\n     * @param {String} id\r\n     * @return {*|jQuery|HTMLElement}\r\n     */\r\n    function byId(id) {\r\n        return $('#' + id);\r\n    }\r\n\r\n    /**\r\n     * @param {String} fieldId\r\n     */\r\n    function disableFieldEditMode(fieldId) {\r\n        var field = byId(fieldId);\r\n\r\n        field.prop('disabled', true);\r\n\r\n        if (field.next().hasClass('addafter')) {\r\n            field.parent().addClass('_update-attributes-disabled');\r\n        }\r\n\r\n        if (byId(fieldId + '_hidden').length) {\r\n            byId(fieldId + '_hidden').prop('disabled', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {String} fieldId\r\n     */\r\n    function enableFieldEditMode(fieldId) {\r\n        var field = byId(fieldId);\r\n\r\n        field.prop('disabled', false);\r\n\r\n        if (field.parent().hasClass('_update-attributes-disabled')) {\r\n            field.parent().removeClass('_update-attributes-disabled');\r\n        }\r\n\r\n        if (byId(fieldId + '_hidden').length) {\r\n            byId(fieldId + '_hidden').prop('disabled', false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {String} toogleIdentifier\r\n     * @param {String} fieldId\r\n     */\r\n    function toogleFieldEditMode(toogleIdentifier, fieldId) {\r\n        if ($(toogleIdentifier).is(':checked')) {\r\n            enableFieldEditMode(fieldId);\r\n        } else {\r\n            disableFieldEditMode(fieldId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On complete disable.\r\n     */\r\n    function onCompleteDisableInited() {\r\n        var item;\r\n\r\n        $.each($('[data-disable]'), function () {\r\n            item = $(this).data('disable');\r\n            disableFieldEditMode(item);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {String} urlKey\r\n     */\r\n    function onUrlkeyChanged(urlKey) {\r\n        var hidden, chbx, oldValue;\r\n\r\n        urlKey = byId(urlKey);\r\n        hidden = urlKey.siblings('input[type=hidden]');\r\n        chbx = urlKey.siblings('input[type=checkbox]');\r\n        oldValue = chbx.val();\r\n\r\n        chbx.prop('disabled', oldValue === urlKey.val());\r\n        hidden.prop('disabled', chbx.prop('disabled'));\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} element\r\n     */\r\n    function onCustomUseParentChanged(element) {\r\n        var useParent, parent;\r\n\r\n        element = $(element);\r\n        useParent = element.val() == 1; //eslint-disable-line eqeqeq\r\n        parent = element.offsetParent().parent();\r\n\r\n        parent.find('input, select, textarea').each(function (i, el) {\r\n            el = $(el);\r\n\r\n            if (element.prop('id') !== el.prop('id')) {\r\n                el.prop('disabled', useParent);\r\n            }\r\n        });\r\n\r\n        parent.find('img').each(function (i, el) {\r\n            if (useParent) {\r\n                $(el).hide();\r\n            } else {\r\n                $(el).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    window.onCustomUseParentChanged = onCustomUseParentChanged;\r\n    window.onUrlkeyChanged = onUrlkeyChanged;\r\n    window.toogleFieldEditMode = toogleFieldEditMode;\r\n\r\n    $(onCompleteDisableInited);\r\n});\r\n","Magento_Catalog/catalog/apply-to-type-switcher.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/catalog/type-events'\r\n], function ($, productType) {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Bind event\r\n         */\r\n        bindAll: function () {\r\n            $('[data-form=edit-product] [data-role=tabs]').on(\r\n                'contentUpdated',\r\n                this._switchToTypeByApplyAttr.bind(this)\r\n            );\r\n\r\n            $('#product_info_tabs').on(\r\n                'beforePanelsMove tabscreate tabsactivate',\r\n                this._switchToTypeByApplyAttr.bind(this)\r\n            );\r\n\r\n            $(document).on('changeTypeProduct', this._switchToTypeByApplyAttr.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Constructor component\r\n         */\r\n        'Magento_Catalog/catalog/apply-to-type-switcher': function () {\r\n            this.bindAll();\r\n            this._switchToTypeByApplyAttr();\r\n        },\r\n\r\n        /**\r\n         * Show/hide elements based on type\r\n         *\r\n         * @private\r\n         */\r\n        _switchToTypeByApplyAttr: function () {\r\n            $('[data-apply-to]:not(.removed)').each(function (index, element) {\r\n                var attrContainer = $(element),\r\n                    applyTo = attrContainer.data('applyTo') || [],\r\n                    $inputs = attrContainer.find('select, input, textarea');\r\n\r\n                if (applyTo.length === 0 || $.inArray(productType.type.current, applyTo) !== -1) {\r\n                    attrContainer.removeClass('not-applicable-attribute');\r\n                    $inputs.removeClass('ignore-validate');\r\n                } else {\r\n                    attrContainer.addClass('not-applicable-attribute');\r\n                    $inputs.addClass('ignore-validate');\r\n                }\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/catalog/product/composite/configure.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'jquery/ui',\r\n    'mage/translate',\r\n    'prototype',\r\n    'Magento_Ui/js/modal/modal'\r\n], function (jQuery) {\r\n\r\n    window.ProductConfigure = Class.create();\r\n\r\n    ProductConfigure.prototype = {\r\n\r\n        listTypes:                  $H({}),\r\n        current:                    $H({}),\r\n        itemsFilter:                $H({}),\r\n        blockWindow:                null,\r\n        blockForm:                  null,\r\n        blockFormFields:            null,\r\n        blockFormAdd:               null,\r\n        blockFormConfirmed:         null,\r\n        blockConfirmed:             null,\r\n        blockIFrame:                null,\r\n        blockCancelBtn:             null,\r\n        blockMask:                  null,\r\n        blockMsg:                   null,\r\n        blockMsgError:              null,\r\n        windowHeight:               null,\r\n        confirmedCurrentId:         null,\r\n        confirmCallback:            {},\r\n        cancelCallback:             {},\r\n        onLoadIFrameCallback:       {},\r\n        showWindowCallback:         {},\r\n        beforeSubmitCallback:       {},\r\n        iFrameJSVarname:            null,\r\n        _listTypeId:                1,\r\n\r\n        /**\r\n         * Initialize object\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._initWindowElements();\r\n            jQuery.async('#product_composite_configure', function (el) {\r\n                self.dialog = jQuery(el).modal({\r\n                    title: jQuery.mage.__('Configure Product'),\r\n                    type: 'slide',\r\n                    buttons: [{\r\n                        text: jQuery.mage.__('OK'),\r\n                        'class': 'action-primary',\r\n                        click: function () {\r\n                            self.onConfirmBtn();\r\n                        }\r\n                    }]\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initialize window elements\r\n         */\r\n        _initWindowElements: function () {\r\n            this.blockWindow                = $('product_composite_configure');\r\n            this.blockForm                  = $('product_composite_configure_form');\r\n            this.blockFormFields            = $('product_composite_configure_form_fields');\r\n            this.blockFormAdd               = $('product_composite_configure_form_additional');\r\n            this.blockFormConfirmed         = $('product_composite_configure_form_confirmed');\r\n            this.blockConfirmed             = $('product_composite_configure_confirmed');\r\n            this.blockIFrame                = $('product_composite_configure_iframe');\r\n            this.blockCancelBtn             = $('product_composite_configure_form_cancel');\r\n            this.blockMsg                   = $('product_composite_configure_messages');\r\n            this.blockMsgError              = this.blockMsg.select('.message.error div')[0];\r\n            this.iFrameJSVarname            = this.blockForm.select('input[name=\"as_js_varname\"]')[0].value;\r\n        },\r\n\r\n        /**\r\n         * Returns next unique list type id\r\n         */\r\n        _generateListTypeId: function () {\r\n            return '_internal_lt_' + this._listTypeId++;\r\n        },\r\n\r\n        /**\r\n         * Add product list types as scope and their urls\r\n         * example: addListType('product_to_add', {urlFetch: 'http://magento...'})\r\n         * example: addListType('wishlist', {urlSubmit: 'http://magento...'})\r\n         *\r\n         * @param type types as scope\r\n         * @param urls obj can be\r\n         *             - {urlFetch: 'http://magento...'} for fetching configuration fields through ajax\r\n         *             - {urlConfirm: 'http://magento...'} for submit configured data through iFrame when clicked confirm button\r\n         *             - {urlSubmit: 'http://magento...'} for submit configured data through iFrame\r\n         */\r\n        addListType: function (type, urls) {\r\n            if ('undefined' == typeof this.listTypes[type]) {\r\n                this.listTypes[type] = {};\r\n            }\r\n            Object.extend(this.listTypes[type], urls);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds complex list type - that is used to submit several list types at once\r\n         * Only urlSubmit is possible for this list type\r\n         * example: addComplexListType(['wishlist', 'product_list'], 'http://magento...')\r\n         *\r\n         * @param type types as scope\r\n         * @param urls obj can be\r\n         *             - {urlSubmit: 'http://magento...'} for submit configured data through iFrame\r\n         * @return type string\r\n         */\r\n        addComplexListType: function (types, urlSubmit) {\r\n            var type = this._generateListTypeId();\r\n\r\n            this.listTypes[type] = {};\r\n            this.listTypes[type].complexTypes = types;\r\n            this.listTypes[type].urlSubmit = urlSubmit;\r\n\r\n            return type;\r\n        },\r\n\r\n        /**\r\n         * Add filter of items\r\n         *\r\n         * @param listType scope name\r\n         * @param itemsFilter\r\n         */\r\n        addItemsFilter: function (listType, itemsFilter) {\r\n            if (!listType || !itemsFilter) {\r\n                return false;\r\n            }\r\n\r\n            if ('undefined' == typeof this.itemsFilter[listType]) {\r\n                this.itemsFilter[listType] = [];\r\n            }\r\n            this.itemsFilter[listType] = this.itemsFilter[listType].concat(itemsFilter);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns id of block where configuration for an item is stored\r\n         *\r\n         * @param listType scope name\r\n         * @param itemId\r\n         * @return string\r\n         */\r\n        _getConfirmedBlockId: function (listType, itemId) {\r\n            return this.blockConfirmed.id + '[' + listType + '][' + itemId + ']';\r\n        },\r\n\r\n        /**\r\n         * Checks whether item has some configuration fields\r\n         *\r\n         * @param listType scope name\r\n         * @param itemId\r\n         * @return bool\r\n         */\r\n        itemConfigured: function (listType, itemId) {\r\n            var confirmedBlockId = this._getConfirmedBlockId(listType, itemId);\r\n            var itemBlock = $(confirmedBlockId);\r\n\r\n            return !!(itemBlock && itemBlock.innerHTML);\r\n        },\r\n\r\n        /**\r\n         * Show configuration fields of item, if it not found then get it through ajax\r\n         *\r\n         * @param listType scope name\r\n         * @param itemId\r\n         */\r\n        showItemConfiguration: function (listType, itemId) {\r\n            if (!listType || !itemId) {\r\n                return false;\r\n            }\r\n\r\n            this.initialize();\r\n            this.current.listType = listType;\r\n            this.current.itemId = itemId;\r\n            this.confirmedCurrentId = this._getConfirmedBlockId(listType, itemId);\r\n\r\n            if (!this.itemConfigured(listType, itemId)) {\r\n                this._requestItemConfiguration(listType, itemId);\r\n            } else {\r\n                this._processFieldsData('item_restore');\r\n                this._showWindow();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get configuration fields of product through ajax and show them\r\n         *\r\n         * @param listType scope name\r\n         * @param itemId\r\n         */\r\n        _requestItemConfiguration: function (listType, itemId) {\r\n            if (!this.listTypes[listType].urlFetch) {\r\n                return false;\r\n            }\r\n            var url = this.listTypes[listType].urlFetch;\r\n\r\n            if (url) {\r\n                new Ajax.Request(url, {\r\n                    parameters: {\r\n                        id: itemId\r\n                    },\r\n                    onSuccess: function (transport) {\r\n                        var response = transport.responseText;\r\n\r\n                        if (response.isJSON()) {\r\n                            response = response.evalJSON();\r\n\r\n                            if (response.error) {\r\n                                this.blockMsg.show();\r\n                                this.blockMsgError.innerHTML = response.message;\r\n                                this.blockCancelBtn.hide();\r\n                                this.setConfirmCallback(listType, null);\r\n                                this._showWindow();\r\n                            }\r\n                        } else if (response) {\r\n                            response += '';\r\n                            this.blockFormFields.update(response);\r\n\r\n                            // Add special div to hold mage data, e.g. scripts to execute on every popup show\r\n                            var mageData = {};\r\n                            var scripts = response.extractScripts();\r\n\r\n                            mageData.scripts = scripts;\r\n\r\n                            var scriptHolder = new Element('div', {\r\n                                'style': 'display:none'\r\n                            });\r\n\r\n                            scriptHolder.mageData = mageData;\r\n                            this.blockFormFields.insert(scriptHolder);\r\n\r\n                            // Show window\r\n                            this._showWindow();\r\n                        }\r\n                    }.bind(this)\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Triggered on confirm button click\r\n         * Do submit configured data through iFrame if needed\r\n         */\r\n        onConfirmBtn: function () {\r\n            if (jQuery(this.blockForm).valid()) {\r\n                if (this.listTypes[this.current.listType].urlConfirm) {\r\n                    this.submit();\r\n                } else {\r\n                    this._processFieldsData('item_confirm');\r\n                    this._closeWindow();\r\n\r\n                    if (Object.isFunction(this.confirmCallback[this.current.listType])) {\r\n                        this.confirmCallback[this.current.listType]();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered on cancel button click\r\n         */\r\n        onCancelBtn: function () {\r\n            this._closeWindow();\r\n\r\n            if (Object.isFunction(this.cancelCallback[this.current.listType])) {\r\n                this.cancelCallback[this.current.listType]();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Submit configured data through iFrame\r\n         *\r\n         * @param listType scope name\r\n         */\r\n        submit: function (listType) {\r\n            // prepare data\r\n            if (listType) {\r\n                this.current.listType = listType;\r\n                this.current.itemId = null;\r\n            }\r\n            var urlConfirm = this.listTypes[this.current.listType].urlConfirm;\r\n            var urlSubmit = this.listTypes[this.current.listType].urlSubmit;\r\n\r\n            if (!urlConfirm && !urlSubmit) {\r\n                return false;\r\n            }\r\n\r\n            if (urlConfirm) {\r\n                this.blockForm.action = urlConfirm;\r\n                this.addFields([new Element('input', {\r\n                    type: 'hidden', name: 'id', value: this.current.itemId\r\n                })]);\r\n            } else {\r\n                this.blockForm.action = urlSubmit;\r\n\r\n                var complexTypes = this.listTypes[this.current.listType].complexTypes;\r\n\r\n                if (complexTypes) {\r\n                    this.addFields([new Element('input', {\r\n                        type: 'hidden', name: 'configure_complex_list_types', value: complexTypes.join(',')\r\n                    })]);\r\n                }\r\n\r\n                this._processFieldsData('current_confirmed_to_form');\r\n\r\n                // Disable item controls that duplicate added fields (e.g. sometimes qty controls can intersect)\r\n                // so they won't be submitted\r\n                var tagNames = ['input', 'select', 'textarea'];\r\n\r\n                var names = {}; // Map of added field names\r\n\r\n                for (var i = 0, len = tagNames.length; i < len; i++) {\r\n                    var tagName = tagNames[i];\r\n                    var elements = this.blockFormAdd.getElementsByTagName(tagName);\r\n\r\n                    for (var index = 0, elLen = elements.length; index < elLen; index++) {\r\n                        names[elements[index].name] = true;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0, len = tagNames.length; i < len; i++) {\r\n                    var tagName = tagNames[i];\r\n                    var elements = this.blockFormConfirmed.getElementsByTagName(tagName);\r\n\r\n                    for (var index = 0, elLen = elements.length; index < elLen; index++) {\r\n                        var element = elements[index];\r\n\r\n                        if (names[element.name]) {\r\n                            element.setAttribute('configure_disabled', 1);\r\n                            element.setAttribute('configure_prev_disabled', element.disabled ? 1 : 0);\r\n                            element.disabled = true;\r\n                        } else {\r\n                            element.setAttribute('configure_disabled', 0);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // do submit\r\n            if (Object.isFunction(this.beforeSubmitCallback[this.current.listType])) {\r\n                this.beforeSubmitCallback[this.current.listType]();\r\n            }\r\n            this.blockForm.submit();\r\n\r\n            // Show loader\r\n            jQuery(this.blockForm).trigger('processStart');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add dynamically additional fields for form\r\n         *\r\n         * @param fields\r\n         */\r\n        addFields: function (fields) {\r\n            fields.each(function (elm) {\r\n                this.blockFormAdd.insert(elm);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered when form was submitted and iFrame was loaded. Get response from iFrame and handle it\r\n         */\r\n        onLoadIFrame: function () {\r\n            this.blockFormConfirmed.select('[configure_disabled=1]').each(function (element) {\r\n                element.disabled = element.getAttribute('configure_prev_disabled') == '1';\r\n            });\r\n\r\n            this._processFieldsData('form_confirmed_to_confirmed');\r\n\r\n            var response = this.blockIFrame.contentWindow[this.iFrameJSVarname];\r\n\r\n            if (response && 'object' == typeof response) {\r\n                if (this.listTypes[this.current.listType].urlConfirm) {\r\n                    if (response.ok) {\r\n                        this._closeWindow();\r\n                        this.clean('current');\r\n                    } else if (response.error) {\r\n                        this.showItemConfiguration(this.current.listType, this.current.itemId);\r\n                        this.blockMsg.show();\r\n                        this.blockMsgError.innerHTML = response.message;\r\n                        this._showWindow();\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (Object.isFunction(this.onLoadIFrameCallback[this.current.listType])) {\r\n                    this.onLoadIFrameCallback[this.current.listType](response);\r\n                }\r\n                document.fire(this.current.listType + ':afterIFrameLoaded');\r\n            }\r\n            // Hide loader\r\n            jQuery(this.blockForm).trigger('processStop');\r\n\r\n            this.clean('current');\r\n            this.initialize();\r\n        },\r\n\r\n        /**\r\n         * Helper for fetching content from iFrame\r\n         */\r\n        _getIFrameContent: function () {\r\n            var content = this.blockIFrame.contentWindow || this.blockIFrame.contentDocument;\r\n\r\n            if (content.document) {\r\n                content = content.document;\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        /**\r\n         * Helper to find qty of currently confirmed item\r\n         */\r\n        getCurrentConfirmedQtyElement: function () {\r\n            var elms = $(this.confirmedCurrentId).getElementsByTagName('input');\r\n\r\n            for (var i = 0; i < elms.length; i++) {\r\n                if (elms[i].name == 'qty') {\r\n                    return elms[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to find qty of active form\r\n         */\r\n        getCurrentFormQtyElement: function () {\r\n            var elms = this.blockFormFields.getElementsByTagName('input');\r\n\r\n            for (var i = 0; i < elms.length; i++) {\r\n                if (elms[i].name == 'qty') {\r\n                    return elms[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show configuration window\r\n         */\r\n        _showWindow: function () {\r\n            this.dialog.modal('openModal');\r\n            //this._toggleSelectsExceptBlock(false);\r\n\r\n            if (Object.isFunction(this.showWindowCallback[this.current.listType])) {\r\n                this.showWindowCallback[this.current.listType]();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close configuration window\r\n         */\r\n        _closeWindow: function () {\r\n            this.dialog.modal('closeModal');\r\n            //this.blockWindow.style.display = 'none';\r\n            //this.clean('window');\r\n        },\r\n\r\n        /**\r\n         * Attach callback function triggered when confirm button was clicked\r\n         *\r\n         * @param confirmCallback\r\n         */\r\n        setConfirmCallback: function (listType, confirmCallback) {\r\n            this.confirmCallback[listType] = confirmCallback;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback function triggered when cancel button was clicked\r\n         *\r\n         * @param cancelCallback\r\n         */\r\n        setCancelCallback: function (listType, cancelCallback) {\r\n            this.cancelCallback[listType] = cancelCallback;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback function triggered when iFrame was loaded\r\n         *\r\n         * @param onLoadIFrameCallback\r\n         */\r\n        setOnLoadIFrameCallback: function (listType, onLoadIFrameCallback) {\r\n            this.onLoadIFrameCallback[listType] = onLoadIFrameCallback;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback function triggered when iFrame was loaded\r\n         *\r\n         * @param showWindowCallback\r\n         */\r\n        setShowWindowCallback: function (listType, showWindowCallback) {\r\n            this.showWindowCallback[listType] = showWindowCallback;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback function triggered before submitting form\r\n         *\r\n         * @param beforeSubmitCallback\r\n         */\r\n        setBeforeSubmitCallback: function (listType, beforeSubmitCallback) {\r\n            this.beforeSubmitCallback[listType] = beforeSubmitCallback;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Clean object data\r\n         *\r\n         * @param method can be 'all' or 'current'\r\n         */\r\n        clean: function (method) {\r\n            var listInfo = null;\r\n            var listTypes = null;\r\n            var removeConfirmed = function (listTypes) {\r\n                this.blockConfirmed.childElements().each(function (elm) {\r\n                    for (var i = 0, len = listTypes.length; i < len; i++) {\r\n                        var pattern = this.blockConfirmed.id + '[' + listTypes[i] + ']';\r\n\r\n                        if (elm.id.indexOf(pattern) == 0) {\r\n                            elm.remove();\r\n                            break;\r\n                        }\r\n                    }\r\n                }.bind(this));\r\n            }.bind(this);\r\n\r\n            switch (method) {\r\n                case 'current':\r\n                    listInfo = this.listTypes[this.current.listType];\r\n                    listTypes = [this.current.listType];\r\n\r\n                    if (listInfo && listInfo.complexTypes) {\r\n                        listTypes = listTypes.concat(listInfo.complexTypes);\r\n                    }\r\n                    removeConfirmed(listTypes);\r\n                    break;\r\n\r\n                case 'window':\r\n                    this.blockFormFields.update();\r\n                    this.blockMsg.hide();\r\n                    this.blockMsgError.update();\r\n                    this.blockCancelBtn.show();\r\n                    break;\r\n                default:\r\n                    // search in list types for its cleaning\r\n                    if (this.listTypes[method]) {\r\n                        listInfo = this.listTypes[method];\r\n                        listTypes = [method];\r\n\r\n                        if (listInfo.complexTypes) {\r\n                            listTypes = listTypes.concat(listInfo.complexTypes);\r\n                        }\r\n                        removeConfirmed(listTypes);\r\n                        // clean all\r\n                    } else if (!method) {\r\n                        this.current = $H({});\r\n                        this.blockConfirmed.update();\r\n                        this.blockFormFields.update();\r\n                        this.blockMsg.hide();\r\n                        this.blockMsgError.update();\r\n                        this.blockCancelBtn.show();\r\n                    }\r\n                    break;\r\n            }\r\n            this._getIFrameContent().body.innerHTML = '';\r\n            this.blockIFrame.contentWindow[this.iFrameJSVarname] = {};\r\n            this.blockFormAdd.update();\r\n            this.blockFormConfirmed.update();\r\n            this.blockForm.action = '';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Process fields data: save, restore, move saved to form and back\r\n         *\r\n         * @param method can be 'item_confirm', 'item_restore', 'current_confirmed_to_form', 'form_confirmed_to_confirmed'\r\n         */\r\n        _processFieldsData: function (method) {\r\n\r\n            /**\r\n             * Internal function for rename fields names of some list type\r\n             * if listType is not specified, then it won't be added as prefix to all names\r\n             *\r\n             * @param method can be 'current_confirmed_to_form', 'form_confirmed_to_confirmed'\r\n             * @param blockItem\r\n             */\r\n            var _renameFields = function (method, blockItem, listType) {\r\n                var pattern         = null;\r\n                var patternFlat     = null;\r\n                var replacement     = null;\r\n                var replacementFlat = null;\r\n                var scopeArr        = blockItem.id.match(/.*\\[\\w+\\]\\[([^\\]]+)\\]$/);\r\n                var itemId          = scopeArr[1];\r\n\r\n                if (method == 'current_confirmed_to_form') {\r\n                    pattern         = RegExp('(\\\\w+)(\\\\[?)');\r\n                    patternFlat     = RegExp('(\\\\w+)');\r\n                    replacement     = 'item[' + itemId + '][$1]$2';\r\n                    replacementFlat = 'item_' + itemId + '_$1';\r\n\r\n                    if (listType) {\r\n                        replacement = 'list[' + listType + '][item][' + itemId + '][$1]$2';\r\n                        replacementFlat = 'list_' + listType + '_' + replacementFlat;\r\n                    }\r\n                } else if (method == 'form_confirmed_to_confirmed') {\r\n                    var stPattern = 'item\\\\[' + itemId + '\\\\]\\\\[(\\\\w+)\\\\](.*)';\r\n                    var stPatternFlat = 'item_' + itemId + '_(\\\\w+)';\r\n\r\n                    if (listType) {\r\n                        stPattern = 'list\\\\[' + listType + '\\\\]\\\\[item\\\\]\\\\[' + itemId + '\\\\]\\\\[(\\\\w+)\\\\](.*)';\r\n                        stPatternFlat = 'list_' + listType + '_' + stPatternFlat;\r\n                    }\r\n                    pattern         = new RegExp(stPattern);\r\n                    patternFlat     = new RegExp(stPatternFlat);\r\n                    replacement     = '$1$2';\r\n                    replacementFlat = '$1';\r\n                } else {\r\n                    return false;\r\n                }\r\n                var rename = function (elms) {\r\n                    for (var i = 0; i < elms.length; i++) {\r\n                        if (elms[i].name && elms[i].type == 'file') {\r\n                            elms[i].name = elms[i].name.replace(patternFlat, replacementFlat);\r\n                        } else if (elms[i].name) {\r\n                            elms[i].name = elms[i].name.replace(pattern, replacement);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                rename(blockItem.getElementsByTagName('input'));\r\n                rename(blockItem.getElementsByTagName('select'));\r\n                rename(blockItem.getElementsByTagName('textarea'));\r\n            };\r\n\r\n            switch (method) {\r\n                case 'item_confirm':\r\n                    if (!$(this.confirmedCurrentId)) {\r\n                        this.blockConfirmed.insert(new Element('div', {\r\n                            id: this.confirmedCurrentId\r\n                        }));\r\n                    } else {\r\n                        $(this.confirmedCurrentId).update();\r\n                    }\r\n                    this.blockFormFields.childElements().each(function (elm) {\r\n                        $(this.confirmedCurrentId).insert(elm);\r\n                    }.bind(this));\r\n                    break;\r\n\r\n                case 'item_restore':\r\n                    this.blockFormFields.update();\r\n\r\n                    // clone confirmed to form\r\n                    var mageData = null;\r\n\r\n                    $(this.confirmedCurrentId).childElements().each(function (elm) {\r\n                        var cloned = elm.cloneNode(true);\r\n\r\n                        if (elm.mageData) {\r\n                            cloned.mageData = elm.mageData;\r\n                            mageData = elm.mageData;\r\n                        }\r\n                        this.blockFormFields.insert(cloned);\r\n                    }.bind(this));\r\n\r\n                    // get confirmed values\r\n                    var fieldsValue = {};\r\n                    var getConfirmedValues = function (elms) {\r\n                        for (var i = 0; i < elms.length; i++) {\r\n                            if (elms[i].name) {\r\n                                if ('undefined' == typeof fieldsValue[elms[i].name]) {\r\n                                    fieldsValue[elms[i].name] = {};\r\n                                }\r\n\r\n                                if (elms[i].type == 'checkbox') {\r\n                                    fieldsValue[elms[i].name][elms[i].value] = elms[i].checked;\r\n                                } else if (elms[i].type == 'radio') {\r\n                                    if (elms[i].checked) {\r\n                                        fieldsValue[elms[i].name] = elms[i].value;\r\n                                    }\r\n                                } else {\r\n                                    fieldsValue[elms[i].name] = Form.Element.getValue(elms[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('input'));\r\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('select'));\r\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('textarea'));\r\n\r\n                    // restore confirmed values\r\n                    var restoreConfirmedValues = function (elms) {\r\n                        for (var i = 0; i < elms.length; i++) {\r\n                            if ('undefined' != typeof fieldsValue[elms[i].name]) {\r\n                                if (elms[i].type != 'file') {\r\n                                    if (elms[i].type == 'checkbox') {\r\n                                        elms[i].checked = fieldsValue[elms[i].name][elms[i].value];\r\n                                    } else if (elms[i].type == 'radio') {\r\n                                        if (elms[i].value == fieldsValue[elms[i].name]) {\r\n                                            elms[i].checked = true;\r\n                                        }\r\n                                    } else {\r\n                                        elms[i].setValue(fieldsValue[elms[i].name]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('input'));\r\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('select'));\r\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('textarea'));\r\n\r\n                    // Execute scripts\r\n                    if (mageData && mageData.scripts) {\r\n                        this.restorePhase = true;\r\n\r\n                        try {\r\n                            mageData.scripts.map(function (script) {\r\n                                return eval(script);\r\n                            });\r\n                        } catch (e) {\r\n\r\n                        }\r\n                        this.restorePhase = false;\r\n                    }\r\n                    break;\r\n\r\n                case 'current_confirmed_to_form':\r\n                    var allowedListTypes = {};\r\n\r\n                    allowedListTypes[this.current.listType] = true;\r\n                    var listInfo = this.listTypes[this.current.listType];\r\n\r\n                    if (listInfo.complexTypes) {\r\n                        for (var i = 0, len = listInfo.complexTypes.length; i < len; i++) {\r\n                            allowedListTypes[listInfo.complexTypes[i]] = true;\r\n                        }\r\n                    }\r\n\r\n                    this.blockFormConfirmed.update();\r\n                    this.blockConfirmed.childElements().each(function (blockItem) {\r\n                        var scopeArr    = blockItem.id.match(/.*\\[(\\w+)\\]\\[([^\\]]+)\\]$/);\r\n                        var listType    = scopeArr[1];\r\n                        var itemId    = scopeArr[2];\r\n\r\n                        if (allowedListTypes[listType] && (!this.itemsFilter[listType] ||\r\n                            this.itemsFilter[listType].indexOf(itemId) != -1)) {\r\n                            _renameFields(method, blockItem, listInfo.complexTypes ? listType : null);\r\n                            this.blockFormConfirmed.insert(blockItem);\r\n                        }\r\n                    }.bind(this));\r\n                    break;\r\n\r\n                case 'form_confirmed_to_confirmed':\r\n                    var listInfo = this.listTypes[this.current.listType];\r\n\r\n                    this.blockFormConfirmed.childElements().each(function (blockItem) {\r\n                        var scopeArr = blockItem.id.match(/.*\\[(\\w+)\\]\\[([^\\]]+)\\]$/);\r\n                        var listType = scopeArr[1];\r\n\r\n                        _renameFields(method, blockItem, listInfo.complexTypes ? listType : null);\r\n                        this.blockConfirmed.insert(blockItem);\r\n                    }.bind(this));\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if qty selected correctly\r\n         *\r\n         * @param object element\r\n         * @param object event\r\n         */\r\n        changeOptionQty: function (element, event) {\r\n            var checkQty = true;\r\n\r\n            if ('undefined' != typeof event) {\r\n                if (event.keyCode == 8 || event.keyCode == 46) {\r\n                    checkQty = false;\r\n                }\r\n            }\r\n\r\n            if (checkQty && (Number(element.value) <= 0 || isNaN(Number(element.value)))) {\r\n                element.value = 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    productConfigure = new ProductConfigure();\r\n    jQuery(document).trigger('productConfigure:inited');\r\n    jQuery(document).data('productConfigureInited', true);\r\n});\r\n","Magento_Catalog/catalog/product/edit/attribute.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).mage('form').validation({\r\n            validationUrl: config.validationUrl\r\n        });\r\n    };\r\n});\r\n","Magento_Catalog/catalog/product/attribute/unique-validate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/backend/validation'\r\n], function (jQuery) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var msg = '',\r\n            _config = jQuery.extend({\r\n                element: null,\r\n                message: '',\r\n                uniqueClass: 'required-unique'\r\n            }, config),\r\n\r\n            /** @inheritdoc */\r\n            messager = function () {\r\n                return msg;\r\n            };\r\n\r\n        if (typeof _config.element === 'string') {\r\n            jQuery.validator.addMethod(\r\n                _config.element,\r\n\r\n                function (value, element) {\r\n                    var inputs = jQuery(element)\r\n                            .closest('table')\r\n                            .find('.' + _config.uniqueClass + ':visible'),\r\n                        valuesHash = {},\r\n                        isValid = true,\r\n                        duplicates = [];\r\n\r\n                    inputs.each(function (el) {\r\n                        var inputValue = inputs[el].value;\r\n\r\n                        if (typeof valuesHash[inputValue] !== 'undefined') {\r\n                            isValid = false;\r\n                            duplicates.push(inputValue);\r\n                        }\r\n                        valuesHash[inputValue] = el;\r\n                    });\r\n\r\n                    if (!isValid) {\r\n                        msg = _config.message + ' (' + duplicates.join(', ') + ')';\r\n                    }\r\n\r\n                    return isValid;\r\n                },\r\n\r\n                messager\r\n            );\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/catalog/category/edit.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Create/edit some category\r\n * @deprecated since version 2.2.0\r\n */\r\n\r\n/* global tree */\r\ndefine([\r\n    'jquery',\r\n    'prototype'\r\n], function (jQuery) {\r\n    'use strict';\r\n\r\n    /** Category submit. */\r\n    var categorySubmit = function () {\r\n        var activeTab = $('active_tab_id'),\r\n            params = {},\r\n            fields, i,categoryId, isCreating, path, parentId, currentNode, oldClass, newClass;\r\n\r\n        if (activeTab) {\r\n            if (activeTab.tabsJsObject && activeTab.tabsJsObject.tabs('activeAnchor')) {\r\n                activeTab.value = activeTab.tabsJsObject.tabs('activeAnchor').prop('id');\r\n            }\r\n        }\r\n\r\n        fields = $('category_edit_form').getElementsBySelector('input', 'select');\r\n\r\n        for (i = 0; i < fields.length; i++) {\r\n            if (!fields[i].name) {\r\n                continue;//jscs:ignore\r\n            }\r\n            params[fields[i].name] = fields[i].getValue();\r\n        }\r\n\r\n        // Get info about what we're submitting - to properly update tree nodes\r\n        categoryId = params['general[id]'] ? params['general[id]'] : 0;\r\n        isCreating = categoryId == 0; // eslint-disable-line eqeqeq\r\n        path = params['general[path]'].split('/');\r\n        parentId = path.pop();\r\n\r\n        if (parentId == categoryId) { // eslint-disable-line eqeqeq\r\n            parentId = path.pop();\r\n        }\r\n\r\n        // Make operations with category tree\r\n        if (isCreating) {\r\n            /* Some specific tasks for creating category */\r\n            if (!tree.currentNodeId) {\r\n                // First submit of form - select some node to be current\r\n                tree.currentNodeId = parentId;\r\n            }\r\n            tree.addNodeTo = parentId;\r\n        } else {\r\n            /* Some specific tasks for editing category */\r\n            // Maybe change category enabled/disabled style\r\n            if (tree && tree.storeId == 0) {// eslint-disable-line eqeqeq, no-lonely-if\r\n                currentNode = tree.getNodeById(categoryId);\r\n\r\n                if (currentNode) {//eslint-disable-line max-depth\r\n                    if (parseInt(params['general[is_active]'])) {//eslint-disable-line radix, max-depth\r\n                        oldClass = 'no-active-category';\r\n                        newClass = 'active-category';\r\n                    } else {\r\n                        oldClass = 'active-category';\r\n                        newClass = 'no-active-category';\r\n                    }\r\n\r\n                    Element.removeClassName(currentNode.ui.wrap.firstChild, oldClass);\r\n                    Element.addClassName(currentNode.ui.wrap.firstChild, newClass);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Submit form\r\n        jQuery('#category_edit_form').trigger('submit');\r\n    };\r\n\r\n    return function (config, element) {\r\n        config = config || {};\r\n        jQuery(element).on('click', function () {\r\n            categorySubmit();\r\n        });\r\n    };\r\n});\r\n","Magento_Catalog/catalog/category/form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var categoryForm = {\r\n            options: {\r\n                categoryIdSelector: 'input[name=\"id\"]',\r\n                categoryPathSelector: 'input[name=\"path\"]',\r\n                categoryParentSelector: 'input[name=\"parent\"]',\r\n                categoryLevelSelector: 'input[name=\"level\"]',\r\n                refreshUrl: config.refreshUrl\r\n            },\r\n\r\n            /**\r\n             * Sending ajax to server to refresh field 'path'\r\n             * @protected\r\n             */\r\n            refreshPath: function () {\r\n                if (!$(this.options.categoryIdSelector)) {\r\n                    return false;\r\n                }\r\n                $.ajax({\r\n                    url: this.options.refreshUrl,\r\n                    method: 'GET',\r\n                    showLoader: true\r\n                }).done(this._refreshPathSuccess.bind(this));\r\n            },\r\n\r\n            /**\r\n             * Refresh field 'path' on ajax success\r\n             * @param {Object} data\r\n             * @private\r\n             */\r\n            _refreshPathSuccess: function (data) {\r\n                if (data.error) {\r\n                    alert({\r\n                        content: data.message\r\n                    });\r\n                } else {\r\n                    $(this.options.categoryIdSelector).val(data.id).change();\r\n                    $(this.options.categoryPathSelector).val(data.path).change();\r\n                    $(this.options.categoryParentSelector).val(data.parentId).change();\r\n                    $(this.options.categoryLevelSelector).val(data.level).change();\r\n                }\r\n            }\r\n        };\r\n\r\n        $('body').on('categoryMove.tree', $.proxy(categoryForm.refreshPath.bind(categoryForm), this));\r\n    };\r\n});\r\n","Magento_Catalog/catalog/category/assign-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global $, $H */\r\n\r\ndefine([\r\n    'mage/adminhtml/grid'\r\n], function () {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var selectedProducts = config.selectedProducts,\r\n            categoryProducts = $H(selectedProducts),\r\n            gridJsObject = window[config.gridJsObjectName],\r\n            tabIndex = 1000;\r\n\r\n        $('in_category_products').value = Object.toJSON(categoryProducts);\r\n\r\n        /**\r\n         * Register Category Product\r\n         *\r\n         * @param {Object} grid\r\n         * @param {Object} element\r\n         * @param {Boolean} checked\r\n         */\r\n        function registerCategoryProduct(grid, element, checked) {\r\n            if (checked) {\r\n                if (element.positionElement) {\r\n                    element.positionElement.disabled = false;\r\n                    categoryProducts.set(element.value, element.positionElement.value);\r\n                }\r\n            } else {\r\n                if (element.positionElement) {\r\n                    element.positionElement.disabled = true;\r\n                }\r\n                categoryProducts.unset(element.value);\r\n            }\r\n            $('in_category_products').value = Object.toJSON(categoryProducts);\r\n            grid.reloadParams = {\r\n                'selected_products[]': categoryProducts.keys()\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Click on product row\r\n         *\r\n         * @param {Object} grid\r\n         * @param {String} event\r\n         */\r\n        function categoryProductRowClick(grid, event) {\r\n            var trElement = Event.findElement(event, 'tr'),\r\n                eventElement = Event.element(event),\r\n                isInputCheckbox = eventElement.tagName === 'INPUT' && eventElement.type === 'checkbox',\r\n                isInputPosition = grid.targetElement &&\r\n                    grid.targetElement.tagName === 'INPUT' &&\r\n                    grid.targetElement.name === 'position',\r\n                checked = false,\r\n                checkbox = null;\r\n\r\n            if (eventElement.tagName === 'LABEL' &&\r\n                trElement.querySelector('#' + eventElement.htmlFor) &&\r\n                trElement.querySelector('#' + eventElement.htmlFor).type === 'checkbox'\r\n            ) {\r\n                event.stopPropagation();\r\n                trElement.querySelector('#' + eventElement.htmlFor).trigger('click');\r\n\r\n                return;\r\n            }\r\n\r\n            if (trElement && !isInputPosition) {\r\n                checkbox = Element.getElementsBySelector(trElement, 'input');\r\n\r\n                if (checkbox[0]) {\r\n                    checked = isInputCheckbox ? checkbox[0].checked : !checkbox[0].checked;\r\n                    gridJsObject.setCheckboxChecked(checkbox[0], checked);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Change product position\r\n         *\r\n         * @param {String} event\r\n         */\r\n        function positionChange(event) {\r\n            var element = Event.element(event);\r\n\r\n            if (element && element.checkboxElement && element.checkboxElement.checked) {\r\n                categoryProducts.set(element.checkboxElement.value, element.value);\r\n                $('in_category_products').value = Object.toJSON(categoryProducts);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Initialize category product row\r\n         *\r\n         * @param {Object} grid\r\n         * @param {String} row\r\n         */\r\n        function categoryProductRowInit(grid, row) {\r\n            var checkbox = $(row).getElementsByClassName('checkbox')[0],\r\n                position = $(row).getElementsByClassName('input-text')[0];\r\n\r\n            if (checkbox && position) {\r\n                checkbox.positionElement = position;\r\n                position.checkboxElement = checkbox;\r\n                position.disabled = !checkbox.checked;\r\n                position.tabIndex = tabIndex++;\r\n                Event.observe(position, 'keyup', positionChange);\r\n            }\r\n        }\r\n\r\n        gridJsObject.rowClickCallback = categoryProductRowClick;\r\n        gridJsObject.initRowCallback = categoryProductRowInit;\r\n        gridJsObject.checkboxCheckCallback = registerCategoryProduct;\r\n\r\n        if (gridJsObject.rows) {\r\n            gridJsObject.rows.each(function (row) {\r\n                categoryProductRowInit(gridJsObject, row);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_CurrencySymbol/js/symbols-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element)\r\n            .mage('form')\r\n            .mage('validation');\r\n\r\n        /**\r\n         * Toggle the field to use the default value\r\n         *\r\n         * @param {String} code\r\n         * @param {String} value\r\n         */\r\n        function toggleUseDefault(code, value) {\r\n            var checkbox = $('#custom_currency_symbol_inherit' + code),\r\n                input = $('#custom_currency_symbol' + code);\r\n\r\n            if (checkbox.is(':checked')) {\r\n                input.val(value);\r\n                input.prop('disabled', true);\r\n            } else {\r\n                input.prop('disabled', false);\r\n            }\r\n        }\r\n\r\n        window.toggleUseDefault = toggleUseDefault;\r\n    };\r\n});\r\n","Magento_AdvancedSearch/js/testconnection.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery/ui'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.testConnection', {\r\n        options: {\r\n            url: '',\r\n            elementId: '',\r\n            successText: '',\r\n            failedText: '',\r\n            fieldMapping: ''\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to events\r\n         */\r\n        _create: function () {\r\n            this._on({\r\n                'click': $.proxy(this._connect, this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Method triggers an AJAX request to check search engine connection\r\n         * @private\r\n         */\r\n        _connect: function () {\r\n            var result = this.options.failedText,\r\n                element =  $('#' + this.options.elementId),\r\n                self = this,\r\n                params = {},\r\n                msg = '',\r\n                fieldToCheck = this.options.fieldToCheck || 'success';\r\n\r\n            element.removeClass('success').addClass('fail');\r\n            $.each($.parseJSON(this.options.fieldMapping), function (key, el) {\r\n                params[key] = $('#' + el).val();\r\n            });\r\n            $.ajax({\r\n                url: this.options.url,\r\n                showLoader: true,\r\n                data: params,\r\n                headers: this.options.headers || {}\r\n            }).done(function (response) {\r\n                if (response[fieldToCheck]) {\r\n                    element.removeClass('fail').addClass('success');\r\n                    result = self.options.successText;\r\n                } else {\r\n                    msg = response.errorMessage;\r\n\r\n                    if (msg) {\r\n                        alert({\r\n                            content: msg\r\n                        });\r\n                    }\r\n                }\r\n            }).always(function () {\r\n                $('#' + self.options.elementId + '_result').text(result);\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.testConnection;\r\n});\r\n","Magento_CatalogInventory/js/components/use-config-settings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (checkbox) {\r\n    'use strict';\r\n\r\n    return checkbox.extend({\r\n        defaults: {\r\n            valueFromConfig: '',\r\n            linkedValue: '',\r\n            disableParent: false,\r\n            listens: {\r\n                disabled: 'processState',\r\n                checked: 'processState onCheckedChanged'\r\n            },\r\n            imports: {\r\n                readOnly: 'ns = ${ $.ns }, index = stock_data:disabled'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {Element}\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe(['valueFromConfig', 'linkedValue', 'disableParent']);\r\n        },\r\n\r\n        /**\r\n         * Handle checked and disabled changes to calculate disableParent value\r\n         */\r\n        processState: function () {\r\n            this.disableParent(this.checked() || this.readOnly);\r\n\r\n            if (this.readOnly) {\r\n                this.disable();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            if (newChecked) {\r\n                this.linkedValue(this.valueFromConfig());\r\n            }\r\n\r\n            this._super(newChecked);\r\n        }\r\n    });\r\n});\r\n","Magento_CatalogInventory/js/components/use-config-min-sale-qty.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox',\r\n    'underscore',\r\n    'uiRegistry'\r\n], function (checkbox, _, registry) {\r\n    'use strict';\r\n\r\n    return checkbox.extend({\r\n        defaults: {\r\n            valueFromConfig: ''\r\n        },\r\n\r\n        /**\r\n         * @returns {Element}\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe(['valueFromConfig']);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.onCheckedChanged(this.checked());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            var valueFromConfig = this.valueFromConfig();\r\n\r\n            if (newChecked && (_.isArray(valueFromConfig) && valueFromConfig.length === 0 || valueFromConfig === 1)) {\r\n                this.changeVisibleDisabled(this.inputField, true, true, 1);\r\n            } else if (newChecked && _.isObject(valueFromConfig)) {\r\n                this.changeVisibleDisabled(this.inputField, false, true, null);\r\n                this.changeVisibleDisabled(this.dynamicRowsField, true, true, null);\r\n            } else if (newChecked && _.isNumber(valueFromConfig)) {\r\n                this.changeVisibleDisabled(this.inputField, true, true, null);\r\n                this.changeVisibleDisabled(this.dynamicRowsField, false, true, null);\r\n            } else {\r\n                this.changeVisibleDisabled(this.inputField, true, this.disabled() || false, null);\r\n                this.changeVisibleDisabled(this.dynamicRowsField, false, true, null);\r\n            }\r\n\r\n            this._super(newChecked);\r\n        },\r\n\r\n        /**\r\n         * Change visible and disabled\r\n         *\r\n         * @param {String} filter\r\n         * @param {Boolean} visible\r\n         * @param {Boolean} disabled\r\n         * @param {Null|Number} valueFromConfig\r\n         */\r\n        changeVisibleDisabled: function (filter, visible, disabled, valueFromConfig) {\r\n            registry.async(filter)(\r\n                function (currentComponent) {\r\n                    var initialValue = currentComponent.initialValue;\r\n\r\n                    if (_.isString(initialValue) || initialValue === 0 || valueFromConfig === 1) {\r\n                        currentComponent.value(1);\r\n                    } else if (initialValue) {\r\n                        currentComponent.value(initialValue);\r\n                    }\r\n\r\n                    currentComponent.visible(visible);\r\n                    currentComponent.disabled(disabled);\r\n                }\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_CatalogInventory/js/components/qty-validator-changer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            valueUpdate: 'input'\r\n        },\r\n\r\n        /**\r\n         * Change validator\r\n         */\r\n        handleChanges: function (value) {\r\n            var isDigits = value !== 1;\r\n\r\n            this.validation['validate-integer'] = isDigits;\r\n            this.validation['less-than-equals-to'] = isDigits ? 99999999 : 99999999.9999;\r\n            this.validate();\r\n        }\r\n    });\r\n});\r\n","Magento_Security/js/escaper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * A loose JavaScript version of Magento\\Framework\\Escaper\r\n *\r\n * Due to differences in how XML/HTML is processed in PHP vs JS there are a couple of minor differences in behavior\r\n * from the PHP counterpart.\r\n *\r\n * The first difference is that the default invocation of escapeHtml without allowedTags will double-escape existing\r\n * entities as the intention of such an invocation is that the input isn't supposed to contain any HTML.\r\n *\r\n * The second difference is that escapeHtml will not escape quotes. Since the input is actually being processed by the\r\n * DOM there is no chance of quotes being mixed with HTML syntax. And, since escapeHtml is not\r\n * intended to be used with raw injection into a HTML attribute, this is acceptable.\r\n *\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        neverAllowedElements: ['script', 'img', 'embed', 'iframe', 'video', 'source', 'object', 'audio'],\r\n        generallyAllowedAttributes: ['id', 'class', 'href', 'title', 'style'],\r\n        forbiddenAttributesByElement: {\r\n            a: ['style']\r\n        },\r\n\r\n        /**\r\n         * Escape a string for safe injection into HTML\r\n         *\r\n         * @param {String} data\r\n         * @param {Array|null} allowedTags\r\n         * @returns {String}\r\n         */\r\n        escapeHtml: function (data, allowedTags) {\r\n            var domParser = new DOMParser(),\r\n                fragment = domParser.parseFromString('<div></div>', 'text/html');\r\n\r\n            fragment = fragment.body.childNodes[0];\r\n            allowedTags = typeof allowedTags === 'object' && allowedTags.length ? allowedTags : null;\r\n\r\n            if (allowedTags) {\r\n                fragment.innerHTML = data || '';\r\n                allowedTags = this._filterProhibitedTags(allowedTags);\r\n\r\n                this._removeComments(fragment);\r\n                this._removeNotAllowedElements(fragment, allowedTags);\r\n                this._removeNotAllowedAttributes(fragment);\r\n\r\n                return fragment.innerHTML;\r\n            }\r\n\r\n            fragment.textContent = data || '';\r\n\r\n            return fragment.innerHTML;\r\n        },\r\n\r\n        /**\r\n         * Remove the always forbidden tags from a list of provided tags\r\n         *\r\n         * @param {Array} tags\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _filterProhibitedTags: function (tags) {\r\n            return tags.filter(function (n) {\r\n                return this.neverAllowedElements.indexOf(n) === -1;\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Remove comment nodes from the given node\r\n         *\r\n         * @param {Node} node\r\n         * @private\r\n         */\r\n        _removeComments: function (node) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_COMMENT,\r\n                    function () {\r\n                        return NodeFilter.FILTER_ACCEPT;\r\n                    },\r\n                    false\r\n                ),\r\n                nodesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                nodesToRemove.push(treeWalker.currentNode);\r\n            }\r\n\r\n            nodesToRemove.forEach(function (nodeToRemove) {\r\n                nodeToRemove.parentNode.removeChild(nodeToRemove);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Strip the given node of all disallowed tags while permitting any nested text nodes\r\n         *\r\n         * @param {Node} node\r\n         * @param {Array|null} allowedTags\r\n         * @private\r\n         */\r\n        _removeNotAllowedElements: function (node, allowedTags) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_ELEMENT,\r\n                    function (currentNode) {\r\n                        return allowedTags.indexOf(currentNode.nodeName.toLowerCase()) === -1 ?\r\n                            NodeFilter.FILTER_ACCEPT\r\n                            // SKIP instead of REJECT because REJECT also rejects child nodes\r\n                            : NodeFilter.FILTER_SKIP;\r\n                    },\r\n                false\r\n                ),\r\n                nodesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                if (allowedTags.indexOf(treeWalker.currentNode.nodeName.toLowerCase()) === -1) {\r\n                    nodesToRemove.push(treeWalker.currentNode);\r\n                }\r\n            }\r\n\r\n            nodesToRemove.forEach(function (nodeToRemove) {\r\n                nodeToRemove.parentNode.replaceChild(\r\n                    node.ownerDocument.createTextNode(nodeToRemove.textContent),\r\n                    nodeToRemove\r\n                );\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Remove any invalid attributes from the given node\r\n         *\r\n         * @param {Node} node\r\n         * @private\r\n         */\r\n        _removeNotAllowedAttributes: function (node) {\r\n            var treeWalker = node.ownerDocument.createTreeWalker(\r\n                    node,\r\n                    NodeFilter.SHOW_ELEMENT,\r\n                    function () {\r\n                        return NodeFilter.FILTER_ACCEPT;\r\n                    },\r\n                false\r\n                ),\r\n                i,\r\n                attribute,\r\n                nodeName,\r\n                attributesToRemove = [];\r\n\r\n            while (treeWalker.nextNode()) {\r\n                for (i = 0; i < treeWalker.currentNode.attributes.length; i++) {\r\n                    attribute = treeWalker.currentNode.attributes[i];\r\n                    nodeName = treeWalker.currentNode.nodeName.toLowerCase();\r\n\r\n                    if (this.generallyAllowedAttributes.indexOf(attribute.name) === -1 || // eslint-disable-line max-depth,max-len\r\n                        this.forbiddenAttributesByElement[nodeName] &&\r\n                        this.forbiddenAttributesByElement[nodeName].indexOf(attribute.name) !== -1\r\n                    ) {\r\n                        attributesToRemove.push(attribute);\r\n                    }\r\n                }\r\n            }\r\n\r\n            attributesToRemove.forEach(function (attributeToRemove) {\r\n                attributeToRemove.ownerElement.removeAttribute(attributeToRemove.name);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Security/js/confirm-redirect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*eslint-disable no-undef*/\r\ndefine(\r\n    ['jquery'],\r\n    function ($) {\r\n        'use strict';\r\n\r\n        return function (config, element) {\r\n            $(element).click(config, function () {\r\n                confirmSetLocation(config.message, config.url);\r\n            });\r\n        };\r\n    }\r\n);\r\n","Magento_UrlRewrite/js/url-rewrite-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/backend/form',\r\n    'mage/backend/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        $(element).form().validation({\r\n            validationUrl: data.url\r\n        });\r\n    };\r\n});\r\n","Magento_Theme/js/sortable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * JQuery UI Widget declaration: 'mage.sortable'\r\n *\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Widget panel\r\n     */\r\n    $.widget('mage.sortable', $.ui.sortable, {\r\n        options: {\r\n            moveUpEvent:   'moveUp',\r\n            moveDownEvent: 'moveDown'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._super();\r\n            this.initButtons();\r\n            this.bind();\r\n        },\r\n\r\n        /**\r\n         * Init buttons.\r\n         */\r\n        initButtons: function () {\r\n            this.element.find('input.up').on('click', $.proxy(function (event) {\r\n                $('body').trigger(this.options.moveUpEvent, {\r\n                    item: $(event.target).parent('li')\r\n                });\r\n            }, this));\r\n            this.element.find('input.down').on('click', $.proxy(function (event) {\r\n                $('body').trigger(this.options.moveDownEvent, {\r\n                    item: $(event.target).parent('li')\r\n                });\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Bind.\r\n         */\r\n        bind: function () {\r\n            var $body = $('body');\r\n\r\n            $body.on(this.options.moveUpEvent, $.proxy(this._onMoveUp, this));\r\n            $body.on(this.options.moveDownEvent, $.proxy(this._onMoveDown, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _onMoveUp: function (event, data) {\r\n            data.item.insertBefore(data.item.prev());\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _onMoveDown: function (event, data) {\r\n            data.item.insertAfter(data.item.next());\r\n        }\r\n    });\r\n\r\n    return $.mage.sortable;\r\n});\r\n","Magento_Theme/js/custom-js-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('theme.themeJsList', {\r\n        options: {\r\n            templateId: null,\r\n            emptyTemplateId: null,\r\n            refreshFileListEvent: null,\r\n            prefixItemId: '',\r\n            suffixItemId: ''\r\n        },\r\n\r\n        /**\r\n         * Initialize widget\r\n         *\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers\r\n         *\r\n         * @protected\r\n         */\r\n        _bind: function () {\r\n            $('body').on(this.options.refreshFileListEvent, $.proxy(this._onRefreshList, this));\r\n        },\r\n\r\n        /**\r\n         * Render js files list\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} data\r\n         * @protected\r\n         */\r\n        _onRefreshList: function (event, data) {\r\n            $(this.element).html('');\r\n\r\n            if (data.jsList.length) {\r\n                this._renderList(data.jsList);\r\n            } else {\r\n                this._renderEmptyList();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get item js list id\r\n         *\r\n         * @param {*} fileId\r\n         * @return {String}\r\n         * @protected\r\n         */\r\n        _getItemId: function (fileId) {\r\n            return this.options.prefixItemId + fileId + this.options.suffixItemId;\r\n        },\r\n\r\n        /**\r\n         * Render js list\r\n         *\r\n         * @param {Array} jsList\r\n         * @protected\r\n         */\r\n        _renderList: function (jsList) {\r\n            var itemTmpl,\r\n                index,\r\n                tmpl;\r\n\r\n            for (index = 0; index < jsList.length; index++) {\r\n                itemTmpl = $('<li></li>').html($(this.options.templateId).html());\r\n\r\n                $(itemTmpl).attr('class', $(this.options.templateId).attr('class'));\r\n\r\n                itemTmpl.attr('id', this._getItemId(jsList[index].id));\r\n\r\n                tmpl = mageTemplate(itemTmpl.html(), {\r\n                    data: jsList[index]\r\n                });\r\n\r\n                itemTmpl.html(tmpl);\r\n\r\n                itemTmpl.removeClass('no-display');\r\n                itemTmpl.appendTo(this.element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set empty js list\r\n         *\r\n         * @protected\r\n         */\r\n        _renderEmptyList: function () {\r\n            var itemTmpl = $('<li></li>').html($(this.options.emptyTemplateId).html());\r\n\r\n            $(itemTmpl).attr('class', $(this.options.emptyTemplateId).attr('class'));\r\n\r\n            itemTmpl.attr('id', 'empty-js-list');\r\n            itemTmpl.removeClass('no-display');\r\n            itemTmpl.appendTo(this.element);\r\n        }\r\n    });\r\n});\r\n","Magento_Theme/js/form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'prototype'\r\n], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} selected\r\n     * @param {Object} defaultsById\r\n     */\r\n    function parentThemeOnChange(selected, defaultsById) {\r\n        var statusBar = $$('.tab-item-link')[0],\r\n            isChanged = statusBar.hasClassName('changed'),\r\n            defaults;\r\n\r\n        if (!isChanged) {\r\n            defaults = defaultsById[selected];\r\n            $('theme_title').value = defaults['theme_title'];\r\n        }\r\n    }\r\n\r\n    window.parentThemeOnChange = parentThemeOnChange;\r\n});\r\n","Magento_Theme/js/bootstrap.js":"/**\r\n *\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\nrequire([\r\n    'jquery/fileUploader/jquery.fileupload-ui',\r\n    'mage/adminhtml/browser',\r\n    'Magento_Theme/js/form'\r\n]);\r\n","Magento_Theme/js/form/component/robots-reset-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/components/button',\r\n    'uiRegistry'\r\n], function (Button, registry) {\r\n    'use strict';\r\n\r\n    return Button.extend({\r\n        defaults: {\r\n            customInstructionField: '${ $.parentName }.custom_instructions',\r\n            label: '',\r\n            buttonTpl: 'Magento_Theme/form/element/button'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @param {String} json\r\n         * @return {String}\r\n         */\r\n        _parseJson: function (json) {\r\n            return JSON.parse(json);\r\n        },\r\n\r\n        /**\r\n         * @param {String} defaultRobotsTxt\r\n         */\r\n        reset: function (defaultRobotsTxt) {\r\n            var customInstructions = registry.get(this.customInstructionField);\r\n\r\n            if (customInstructions) {\r\n                customInstructions.set('value', this._parseJson(defaultRobotsTxt));\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/edit/post-wrapper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate'\r\n], function ($, confirm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} url\r\n     * @returns {Object}\r\n     */\r\n    function getForm(url) {\r\n        return $('<form>', {\r\n            'action': url,\r\n            'method': 'POST'\r\n        }).append($('<input>', {\r\n            'name': 'form_key',\r\n            'value': window.FORM_KEY,\r\n            'type': 'hidden'\r\n        }));\r\n    }\r\n\r\n    $('#customer-edit-delete-button').click(function () {\r\n        var msg = $.mage.__('Are you sure you want to do this?'),\r\n            url = $('#customer-edit-delete-button').data('url');\r\n\r\n        confirm({\r\n            'content': msg,\r\n            'actions': {\r\n\r\n                /**\r\n                 * 'Confirm' action handler.\r\n                 */\r\n                confirm: function () {\r\n                    getForm(url).appendTo('body').submit();\r\n                }\r\n            }\r\n        });\r\n\r\n        return false;\r\n    });\r\n});\r\n","Magento_Customer/edit/tab/js/addresses.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery/ui',\r\n    'mage/backend/tabs'\r\n], function ($, mageTemplate, confirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addressTabs', $.mage.tabs, {\r\n        options: {\r\n            itemCount: 0,\r\n            baseItemId: 'new_item',\r\n            templatePrefix: '_templatePrefix_',\r\n            regionsUrl: null,\r\n            defaultCountries: [],\r\n            optionalZipCountries: [],\r\n            requiredStateForCountries: [],\r\n            deleteConfirmPrompt: '',\r\n            formTemplateSelector: '[data-template=\"address-form\"]',\r\n            tabTemplateSelector: '[data-template=\"address-tab\"]',\r\n            tabAddressTemplateSelector: '[data-template=\"tab-address-content\"]',\r\n            formsSelector: '[data-container=\"address-forms\"]',\r\n            addAddressSelector: '[data-container=\"add-address\"]',\r\n            formFirstNameSelector: ':input' +\r\n                '[data-ui-id=\"adminhtml-edit-tab-addresses-fieldset-element-text-address-template-firstname\"]',\r\n            accountFirstNameSelector: ':input' +\r\n                '[data-ui-id=\"adminhtml-edit-tab-account-fieldset-element-text-account-firstname\"]',\r\n            formLastNameSelector: ':input' +\r\n                '[data-ui-id=\"adminhtml-edit-tab-addresses-fieldset-element-text-address-template-lastname\"]',\r\n            accountLastNameSelector: ':input' +\r\n                '[data-ui-id=\"adminhtml-edit-tab-account-fieldset-element-text-account-lastname\"]',\r\n            accountWebsiteIdSelector: ':input' +\r\n                '[data-ui-id=\"store-switcher-form-renderer-fieldset-element-select-account-website-id\"]',\r\n            formCountrySelector: 'customer-edit-tab-addresses-fieldset-element-form-field-country-id',\r\n            addAddressButtonSelector: ':button[data-ui-id=\"adminhtml-edit-tab-addresses-add-address-button\"]'\r\n        },\r\n\r\n        /**\r\n         * This method adds a new address - tab and form to the widget.\r\n         */\r\n        _addNewAddress: function () {\r\n            var formName, newForm, formTemplate, itemTemplate, firstname, accountWebsiteId;\r\n\r\n            this.options.itemCount++;\r\n\r\n            // prevent duplication of ids\r\n            while (this.element.find('div[data-item=' + this.options.itemCount + ']').length) {\r\n                this.options.itemCount++;\r\n            }\r\n\r\n            formName = this.options.baseItemId + this.options.itemCount;\r\n            newForm = $('#form_' + formName);\r\n            formTemplate = this.element.find(this.options.formTemplateSelector).html();\r\n            itemTemplate = this.element.find(this.options.tabTemplateSelector).html();\r\n\r\n            formTemplate = mageTemplate(formTemplate, {\r\n                data: {\r\n                    formName: formName,\r\n                    itemCount: this.options.itemCount\r\n                }\r\n            });\r\n\r\n            itemTemplate = mageTemplate(itemTemplate, {\r\n                data: {\r\n                    'itemId': this.options.itemCount\r\n                }\r\n            });\r\n\r\n            this.element.find(this.options.formsSelector).append(this._prepareTemplate(formTemplate));\r\n\r\n            // add the new address to the tabs list before the add new action list\r\n            this.element.find(this.options.addAddressSelector).before(itemTemplate);\r\n\r\n            // refresh the widget to pick up the newly added tab.\r\n            this.refresh();\r\n\r\n            // activate the newly added tab\r\n            this.option('active', -1);\r\n\r\n            this.element.trigger('contentUpdated', $(formName));\r\n\r\n            // pre-fill form with account firstname, lastname, and country\r\n            firstname = newForm.find(this.options.formFirstNameSelector);\r\n            firstname.val($(this.options.accountFirstNameSelector).val());\r\n            newForm.find(this.options.formLastNameSelector).val($(this.options.accountLastNameSelector).val());\r\n\r\n            accountWebsiteId = $(this.options.accountWebsiteIdSelector).val();\r\n\r\n            if (accountWebsiteId !== '' && typeof this.options.defaultCountries[accountWebsiteId] !== 'undefined') {\r\n                newForm.find(this.options.formCountrySelector).val(this.options.defaultCountries[accountWebsiteId]);\r\n            }\r\n\r\n            // .val does not trigger change event, so manually trigger.\r\n            // (Triggering change of any field will handle update of all fields.)\r\n            firstname.trigger('change');\r\n\r\n            this._bindCountryRegionRelation(newForm);\r\n        },\r\n\r\n        /**\r\n         * This method is used to bind events associated with this widget.\r\n         */\r\n        _bind: function () {\r\n            this._on(this.element.find(this.options.addAddressButtonSelector), {\r\n                'click': '_addNewAddress'\r\n            });\r\n            this._on({\r\n                'formchange': '_updateAddress',\r\n                'dataItemDelete': '_deleteItemPrompt'\r\n            });\r\n            this.element.find('.countries').addressCountry({\r\n                regionsUrl: this.options.regionsUrl,\r\n                optionalZipCountries: this.options.optionalZipCountries,\r\n                requiredStateForCountries: this.options.requiredStateForCountries\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create, Initialize this widget.\r\n         */\r\n        _create: function () {\r\n            this._super();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method deletes the item in the list.\r\n         * @private\r\n         */\r\n        _deleteItem: function (dataItem) {\r\n            // remove the elements from the page\r\n            this.element.find('[data-item=\"' + dataItem + '\"]').remove();\r\n\r\n            // refresh the widget to pick up the removed tab\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * This method prompts the user to confirm the deletion of the item in the list.\r\n         * @private\r\n         */\r\n        _deleteItemPrompt: function (event, data) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.options.deleteConfirmPrompt,\r\n                actions: {\r\n\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        self._deleteItem(data.item);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initialize form template variables for the new address item.\r\n         * @param {Element} template - Address form html 'template'.\r\n         * @private\r\n         */\r\n        _prepareTemplate: function (template) {\r\n            var re = new RegExp(this.options.templatePrefix, 'g');\r\n\r\n            return template.replace(re, '_item' + this.options.itemCount);\r\n        },\r\n\r\n        /**\r\n         * This method is used to grab the data from the form and display it nicely.\r\n         * @param {Element} container - Address form container.\r\n         * @private\r\n         */\r\n        _syncFormData: function (container) {\r\n            var data = {},\r\n                itemContainer, tmpl;\r\n\r\n            if (container) {\r\n                $(container).find(':input').each(function (index, inputField) {\r\n                    var id = inputField.id,\r\n                        value, tagName, values, l, j, o, option, text;\r\n\r\n                    if (id) {\r\n                        id = id.replace(/^(_item)?[0-9]+/, '');\r\n                        id = id.replace(/^(id)?[0-9]+/, '');\r\n                        value = inputField.getValue();\r\n                        tagName = inputField.tagName.toLowerCase();\r\n\r\n                        if (tagName === 'select') {\r\n                            if (inputField.multiple) { //eslint-disable-line max-depth\r\n                                values = $([]);\r\n                                l = inputField.options.length;\r\n\r\n                                for (j = 0; j < l; j++) { //eslint-disable-line max-depth\r\n                                    o = inputField.options[j];\r\n\r\n                                    if (o.selected === true) { //eslint-disable-line max-depth\r\n                                        values[values.length] = o.text.escapeHTML();\r\n                                    }\r\n                                }\r\n                                data[id] = values.join(', ');\r\n                            } else {\r\n                                option = inputField.options[inputField.selectedIndex];\r\n                                text = option.value == '0' || option.value === '' ? '' : option.text; //eslint-disable-line\r\n                                data[id] = text.escapeHTML();\r\n                            }\r\n                        } else if (value !== null) {\r\n                            data[id] = value.escapeHTML();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Set name of state to 'region' if list of states are in 'region_id' selectbox\r\n                if (!data.region && data['region_id']) {\r\n                    data.region = data['region_id'];\r\n                    delete data['region_id'];\r\n                }\r\n\r\n                // Set data to html\r\n                itemContainer = this.element.find('[aria-selected=\"true\"] address');\r\n\r\n                if (itemContainer.length && itemContainer[0]) {\r\n                    tmpl = mageTemplate(this.options.tabAddressTemplateSelector, {\r\n                        data: data\r\n                    });\r\n\r\n                    itemContainer[0].innerHTML = tmpl;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * This method processes the event associated with a form field changing.\r\n         * @param {EventObject} event - Event occurring.\r\n         * @private\r\n         */\r\n        _updateAddress: function (event) {\r\n            this._syncFormData(this._getFormContainer(event.target));\r\n        },\r\n\r\n        /**\r\n         * This method returns the form containing this element.\r\n         * @param {JQuery|Element} element - JQuery object or DOM element.\r\n         * @private\r\n         */\r\n        _getFormContainer: function (element) {\r\n            if (!(element instanceof $)) {\r\n                element = $(element);\r\n            }\r\n\r\n            return element.closest('[data-item]');\r\n        },\r\n\r\n        /**\r\n         * This method binds a country element on the given form to the addressCountry widget.\r\n         * @param {JQuery} formElement - The form containing the country.\r\n         * @private\r\n         */\r\n        _bindCountryRegionRelation: function (formElement) {\r\n            $(formElement).find('.countries').addressCountry({\r\n                regionsUrl: this.options.regionsUrl,\r\n                optionalZipCountries: this.options.optionalZipCountries,\r\n                requiredStateForCountries: this.options.requiredStateForCountries\r\n            });\r\n        }\r\n    });\r\n\r\n    $.widget('mage.addressCountry', {\r\n        options: {\r\n            regionsUrl: null,\r\n            optionalZipCountries: [],\r\n            requiredStateForCountries: [],\r\n            countryElement: null,\r\n            regionIdElement: null,\r\n            regionElement: null\r\n        },\r\n\r\n        /**\r\n         * This method is used to bind events associated with this widget.\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                'change': '_onAddressCountryChange'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create, Initialize this widget.\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method updates country dependent fields; region input, and region and zipCode required indicator.\r\n         * @param {Event} event - Change event occurring.\r\n         * @private\r\n         */\r\n        _onAddressCountryChange: function (event) {\r\n            var countryElement = event.target,\r\n                formElement = $(countryElement).closest('[data-item]'),\r\n                fieldElement = $(formElement).find('.field-region'),\r\n                regionElement = $(fieldElement).find('.input-text');\r\n\r\n            this.options.countryElement = countryElement;\r\n\r\n            if ($(regionElement).prop('tagName').toLowerCase() === 'select') {\r\n                this.options.regionIdElement = regionElement;\r\n                this.options.regionElement = regionElement.next();\r\n            } else {\r\n                this.options.regionElement = regionElement;\r\n                this.options.regionIdElement = regionElement.next();\r\n            }\r\n\r\n            if (countryElement.value) {\r\n                // obtain regions for the country\r\n                $.ajax({\r\n                    url: this.options.regionsUrl,\r\n                    type: 'post',\r\n                    dataType: 'json',\r\n                    showLoader: true,\r\n                    data: {\r\n                        parent: countryElement.value\r\n                    },\r\n                    context: this,\r\n                    success: $.proxy(this._refreshRegionField, this)\r\n                });\r\n            } else {\r\n                // Set empty text field in region\r\n                this._refreshRegionField({});\r\n            }\r\n            // set Zip optional/required\r\n            this._setPostcodeOptional(countryElement);\r\n        },\r\n\r\n        /**\r\n         * This method updates the region input from the server response.\r\n         * @param {Object} data - Regions (state/province) or empty if regions n/a for the country.\r\n         * @private\r\n         */\r\n        _refreshRegionField: function (data) {\r\n            var regionField = $(this.options.regionElement).closest('div.field'),\r\n                regionControl = regionField.find('.control'),\r\n                regionInput,\r\n                regionIdInput,\r\n                newInput,\r\n                regionValue;\r\n\r\n            // clear current region input/select\r\n            regionControl.empty();\r\n\r\n            if (data.length) {\r\n                // Create visible selectbox 'region_id' and hidden 'region'\r\n                regionIdInput = $('<select>').attr({\r\n                    'name': this.options.regionIdElement.attr('name'),\r\n                    'id': this.options.regionIdElement.attr('id'),\r\n                    'class': 'required-entry input-text select',\r\n                    'title': this.options.regionIdElement.attr('title')\r\n                }).appendTo(regionControl);\r\n\r\n                regionValue = this.options.regionElement.attr('value');\r\n\r\n                $.each(data, function (idx, item) {\r\n                    var regionOption = $('<option />').val(item.value).text(item.label);\r\n\r\n                    if (regionValue && regionValue == item.label) { //eslint-disable-line eqeqeq\r\n                        regionOption.attr('selected', 'selected');\r\n                    }\r\n\r\n                    regionIdInput.append(regionOption);\r\n                });\r\n\r\n                regionInput = $('<input>').attr({\r\n                    'name': this.options.regionElement.attr('name'),\r\n                    'id': this.options.regionElement.attr('id'),\r\n                    'type': 'hidden'\r\n                }).appendTo(regionControl);\r\n\r\n                newInput = regionIdInput;\r\n            } else {\r\n                // Create visible text input 'region' and hidden 'region_id'\r\n                regionInput = $('<input>').attr({\r\n                    'type': 'text',\r\n                    'name': this.options.regionElement.attr('name'),\r\n                    'id': this.options.regionElement.attr('id'),\r\n                    'class': 'input-text',\r\n                    'title': this.options.regionElement.attr('title')\r\n                }).appendTo(regionControl);\r\n\r\n                regionIdInput = $('<input>').attr({\r\n                    'type': 'hidden',\r\n                    'name': this.options.regionIdElement.attr('name'),\r\n                    'id': this.options.regionIdElement.attr('id')\r\n                }).appendTo(regionControl);\r\n\r\n                newInput = regionInput;\r\n            }\r\n\r\n            this.options.regionElement = regionInput;\r\n            this.options.regionIdElement = regionIdInput;\r\n\r\n            // Updating in address info\r\n            this.element.trigger('formchange');\r\n\r\n            // bind region input change event\r\n            newInput.on('change', $.proxy(this._triggerFormChange, this, newInput));\r\n\r\n            this._checkRegionRequired([regionInput, regionIdInput], newInput, regionField);\r\n        },\r\n\r\n        /**\r\n         * This method is used to trigger a change element for a given element.\r\n         */\r\n        _triggerFormChange: function (element) {\r\n            element.trigger('formchange');\r\n        },\r\n\r\n        /**\r\n         * This method updates the region input required/optional and validation classes.\r\n         * @param {Array} elements - Region elements\r\n         * @param {Element} activeElement - Active Region element\r\n         * @param {Element} regionField - Region section element\r\n         * @private\r\n         */\r\n        _checkRegionRequired: function (elements, activeElement, regionField) {\r\n            var regionRequired = this.options.requiredStateForCountries.indexOf(this.options.countryElement.value) >= 0;\r\n\r\n            elements.each(function (currentElement) {\r\n                var form = $(currentElement).closest('form'),\r\n                    validationInstance = form ? $(form).data('validation') : null;\r\n\r\n                if (validationInstance) {\r\n                    validationInstance.clearError(currentElement);\r\n                }\r\n\r\n                if (!regionRequired) {\r\n                    if (regionField.hasClass('required')) {\r\n                        regionField.removeClass('required');\r\n                    }\r\n\r\n                    if (currentElement.hasClass('required-entry')) {\r\n                        currentElement.removeClass('required-entry');\r\n                    }\r\n\r\n                    if (currentElement.prop('tagName').toLowerCase() === 'select' &&\r\n                        currentElement.hasClass('validate-select')) {\r\n                        currentElement.removeClass('validate-select');\r\n                    }\r\n                } else {\r\n                    if (regionField.hasClass('required') === false) {\r\n                        regionField.addClass('required');\r\n                    }\r\n\r\n                    if (activeElement == currentElement) { //eslint-disable-line eqeqeq\r\n                        if (!currentElement.hasClass('required-entry')) { //eslint-disable-line max-depth\r\n                            currentElement.addClass('required-entry');\r\n                        }\r\n\r\n                        if (currentElement.prop('tagName').toLowerCase() === 'select' && //eslint-disable-line max-depth\r\n                            !currentElement.hasClass('validate-select')) {\r\n                            currentElement.addClass('validate-select');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * This method shows/hides the zip/postalCode code required indicator.\r\n         * @param {Element} countryElement\r\n         * @private\r\n         */\r\n        _setPostcodeOptional: function (countryElement) {\r\n            var formElement = $(countryElement).closest('[data-item]'),\r\n                fieldElement = $(formElement).find('.field-postcode'),\r\n                zipElement = $(fieldElement).find('.input-text'),\r\n                zipField = $(zipElement).closest('.field-postcode');\r\n\r\n            if (this.options.optionalZipCountries.indexOf(countryElement.value) !== -1) {\r\n                if ($(zipElement).hasClass('required-entry')) {\r\n                    $(zipElement).removeClass('required-entry');\r\n                }\r\n                $(zipField).removeClass('required');\r\n            } else {\r\n                $(zipElement).addClass('required-entry');\r\n                $(zipField).addClass('required');\r\n            }\r\n        }\r\n    });\r\n\r\n    $.widget('mage.observableInputs', {\r\n        options: {\r\n            name: ''\r\n        },\r\n\r\n        /**\r\n         * This method is used to bind events associated with this widget.\r\n         */\r\n        _bind: function () {\r\n            this._on(this.element.find(':input').not('.countries'), {\r\n                'change': '_triggerChange'\r\n            });\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._super();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method is used to trigger a change element for a given entity.\r\n         */\r\n        _triggerChange: function (element) {\r\n            // send the name of the captor and the field that changed\r\n            this.element.trigger('formchange', {\r\n                'name': this.options.name,\r\n                'element': element.target\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This widget is used to trigger a message to delete a data item (i.e. D of CRUD).\r\n     */\r\n    $.widget('mage.dataItemDeleteButton', {\r\n        options: {\r\n            item: ''\r\n        },\r\n\r\n        /**\r\n         * This method is used to bind events associated with this widget.\r\n         */\r\n        _bind: function () {\r\n            this._on(this.element.find('[data-role=\"delete\"]'), {\r\n                'click': '_triggerDelete'\r\n            });\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var dataItemContainer;\r\n\r\n            this._super();\r\n            this._bind();\r\n\r\n            // if the item was not specified, find the data-item element wrapper\r\n            if (this.options.item.length === 0) {\r\n                dataItemContainer = this.element.parents('[data-item]');\r\n\r\n                if (dataItemContainer.length === 1) {\r\n                    this.options.item = dataItemContainer.attr('data-item');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * This method is used to trigger a delete message for this item.\r\n         */\r\n        _triggerDelete: function () {\r\n            // send the name of the captor and the field that changed\r\n            this.element.trigger('dataItemDelete', {\r\n                'item': this.options.item\r\n            });\r\n\r\n            // we are handling the click, so stop processing\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return {\r\n        addressTabs: $.mage.addressTabs,\r\n        addressCountry: $.mage.addressCountry,\r\n        observableInputs: $.mage.observableInputs,\r\n        dataItemDeleteButton: $.mage.dataItemDeleteButton\r\n    };\r\n});\r\n","Magento_Customer/js/bootstrap/customer-post-action.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\nrequire([\r\n    'Magento_Customer/edit/post-wrapper'\r\n]);\r\n","Magento_Customer/js/form/element/website.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/website',\r\n    'uiRegistry'\r\n], function (Website, registry) {\r\n    'use strict';\r\n\r\n    return Website.extend({\r\n        /**\r\n         * On value change handler.\r\n         *\r\n         * @param {String} value\r\n         */\r\n        onUpdate: function (value) {\r\n            var groupIdFieldKey = 'group_id',\r\n                groupId = registry.get('index = ' + groupIdFieldKey),\r\n                option = this.getOption(value);\r\n\r\n            if (groupId) {\r\n                groupId.value(option[groupIdFieldKey]);\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/form/element/region.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/region'\r\n], function (Region) {\r\n    'use strict';\r\n\r\n    return Region.extend({\r\n        defaults: {\r\n            regionScope: 'data.region'\r\n        },\r\n\r\n        /**\r\n         * Set region to customer address form\r\n         *\r\n         * @param {String} value - region\r\n         */\r\n        setDifferedFromDefault: function (value) {\r\n            this._super();\r\n\r\n            if (parseFloat(value)) {\r\n                this.source.set(this.regionScope, this.indexedOptions[value].label);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/form/element/country.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/country'\r\n], function (Country) {\r\n    'use strict';\r\n\r\n    return Country.extend({\r\n        defaults: {\r\n            countryScope: 'data.country'\r\n        },\r\n\r\n        /**\r\n         * Set country to customer address form\r\n         *\r\n         * @param {String} value - country\r\n         */\r\n        setDifferedFromDefault: function (value) {\r\n            this._super();\r\n\r\n            if (value) {\r\n                this.source.set(this.countryScope, this.indexedOptions[value].label);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/form/components/insert-listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/insert-listing',\r\n    'underscore'\r\n], function (Insert, _) {\r\n    'use strict';\r\n\r\n    return Insert.extend({\r\n\r\n        /**\r\n         * On action call\r\n         *\r\n         * @param {Object} data - customer address and actions\r\n         */\r\n        onAction: function (data) {\r\n            this[data.action + 'Action'].call(this, data.data);\r\n        },\r\n\r\n        /**\r\n         * On mass action call\r\n         *\r\n         * @param {Object} data - customer address\r\n         */\r\n        onMassAction: function (data) {\r\n            this[data.action + 'Massaction'].call(this, data.data);\r\n        },\r\n\r\n        /**\r\n         * Set default billing address\r\n         *\r\n         * @param {Object} data - customer address\r\n         */\r\n        setDefaultBillingAction: function (data) {\r\n            this.source.set('data.default_billing_address', data);\r\n        },\r\n\r\n        /**\r\n         * Set default shipping address\r\n         *\r\n         * @param {Object} data - customer address\r\n         */\r\n        setDefaultShippingAction: function (data) {\r\n            this.source.set('data.default_shipping_address', data);\r\n        },\r\n\r\n        /**\r\n         * Delete customer address\r\n         *\r\n         * @param {Object} data - customer address\r\n         */\r\n        deleteAction: function (data) {\r\n            this._delete([parseFloat(data[data['id_field_name']])]);\r\n        },\r\n\r\n        /**\r\n         * Mass action delete\r\n         *\r\n         * @param {Object} data - customer address\r\n         */\r\n        deleteMassaction: function (data) {\r\n            var ids = _.map(data, function (val) {\r\n                return parseFloat(val);\r\n            });\r\n\r\n            this._delete(ids);\r\n        },\r\n\r\n        /**\r\n         * Delete customer address by ids\r\n         *\r\n         * @param {Array} ids\r\n         */\r\n        _delete: function (ids) {\r\n            var defaultShippingId = parseFloat(this.source.get('data.default_shipping_address.entity_id')),\r\n                defaultBillingId = parseFloat(this.source.get('data.default_billing_address.entity_id'));\r\n\r\n            if (ids.indexOf(defaultShippingId) !== -1) {\r\n                this.source.set('data.default_shipping_address', []);\r\n            }\r\n\r\n            if (ids.indexOf(defaultBillingId) !== -1) {\r\n                this.source.set('data.default_billing_address', []);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/form/components/insert-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/insert-form'\r\n], function (Insert) {\r\n    'use strict';\r\n\r\n    return Insert.extend({\r\n        defaults: {\r\n            listens: {\r\n                responseData: 'onResponse'\r\n            },\r\n            modules: {\r\n                addressListing: '${ $.addressListingProvider }',\r\n                addressModal: '${ $.addressModalProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal, reload customer address listing and save customer address\r\n         *\r\n         * @param {Object} responseData\r\n         */\r\n        onResponse: function (responseData) {\r\n            var data;\r\n\r\n            if (!responseData.error) {\r\n                this.addressModal().closeModal();\r\n                this.addressListing().reload({\r\n                    refresh: true\r\n                });\r\n                data = this.externalSource().get('data');\r\n                this.saveAddress(responseData, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Save customer address to customer form data source\r\n         *\r\n         * @param {Object} responseData\r\n         * @param {Object} data - customer address\r\n         */\r\n        saveAddress: function (responseData, data) {\r\n            data['entity_id'] = responseData.data['entity_id'];\r\n\r\n            if (parseFloat(data['default_billing'])) {\r\n                this.source.set('data.default_billing_address', data);\r\n            } else if (\r\n                parseFloat(this.source.get('data.default_billing_address')['entity_id']) === data['entity_id']\r\n            ) {\r\n                this.source.set('data.default_billing_address', []);\r\n            }\r\n\r\n            if (parseFloat(data['default_shipping'])) {\r\n                this.source.set('data.default_shipping_address', data);\r\n            } else if (\r\n                parseFloat(this.source.get('data.default_shipping_address')['entity_id']) === data['entity_id']\r\n            ) {\r\n                this.source.set('data.default_shipping_address', []);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event method that closes \"Edit customer address\" modal and refreshes grid after customer address\r\n         * was removed through \"Delete\" button on the \"Edit customer address\" modal\r\n         *\r\n         * @param {String} id - customer address ID to delete\r\n         */\r\n        onAddressDelete: function (id) {\r\n            this.addressModal().closeModal();\r\n            this.addressListing().reload({\r\n                refresh: true\r\n            });\r\n            this.addressListing()._delete([parseFloat(id)]);\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/form/components/form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Ui/js/form/form',\r\n    'underscore',\r\n    'mage/translate'\r\n], function ($, uiAlert, uiConfirm, Form, _, $t) {\r\n    'use strict';\r\n\r\n    return Form.extend({\r\n        defaults: {\r\n            deleteConfirmationMessage: '',\r\n            ajaxSettings: {\r\n                method: 'POST',\r\n                dataType: 'json'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delete customer address by provided url.\r\n         * Will call confirmation message to be sure that user is really wants to delete this address\r\n         *\r\n         * @param {String} url - ajax url\r\n         */\r\n        deleteAddress: function (url) {\r\n            var that = this;\r\n\r\n            uiConfirm({\r\n                content: this.deleteConfirmationMessage,\r\n                actions: {\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        that._delete(url);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous DELETE request to server.\r\n         * @param {String} url - ajax url\r\n         * @returns {Deferred}\r\n         */\r\n        _delete: function (url) {\r\n            var settings = _.extend({}, this.ajaxSettings, {\r\n                    url: url,\r\n                    data: {\r\n                        'form_key': window.FORM_KEY\r\n                    }\r\n                }),\r\n                that = this;\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            return $.ajax(settings)\r\n                .done(function (response) {\r\n                    if (response.error) {\r\n                        uiAlert({\r\n                            content: response.message\r\n                        });\r\n                    } else {\r\n                        that.trigger('deleteAddressAction', that.source.get('data.entity_id'));\r\n                    }\r\n                })\r\n                .fail(function () {\r\n                    uiAlert({\r\n                        content: $t('Sorry, there has been an error processing your request. Please try again later.')\r\n                    });\r\n                })\r\n                .always(function () {\r\n                    $('body').trigger('processStop');\r\n                });\r\n\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/grid/massactions.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/massactions',\r\n    'Magento_Ui/js/modal/alert',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate'\r\n], function (Massactions, uiAlert, _, $, $t) {\r\n    'use strict';\r\n\r\n    return Massactions.extend({\r\n        defaults: {\r\n            ajaxSettings: {\r\n                method: 'POST',\r\n                dataType: 'json'\r\n            },\r\n            listens: {\r\n                massaction: 'onAction'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload customer addresses listing\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        onAction: function (data) {\r\n            if (data.action === 'delete') {\r\n                this.source.reload({\r\n                    refresh: true\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Default action callback. Send selections data\r\n         * via POST request.\r\n         *\r\n         * @param {Object} action - Action data.\r\n         * @param {Object} data - Selections data.\r\n         */\r\n        defaultCallback: function (action, data) {\r\n            var itemsType, selections;\r\n\r\n            if (action.isAjax) {\r\n                itemsType = data.excludeMode ? 'excluded' : 'selected';\r\n                selections = {};\r\n\r\n                selections[itemsType] = data[itemsType];\r\n\r\n                if (!selections[itemsType].length) {\r\n                    selections[itemsType] = false;\r\n                }\r\n\r\n                _.extend(selections, data.params || {});\r\n\r\n                this.request(action.url, selections).done(function (response) {\r\n                    if (!response.error) {\r\n                        this.trigger('massaction', {\r\n                            action: action.type,\r\n                            data: selections\r\n                        });\r\n                    }\r\n                }.bind(this));\r\n            } else {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Send customer address listing mass action ajax request\r\n         *\r\n         * @param {String} href\r\n         * @param {Object} data\r\n         */\r\n        request: function (href, data) {\r\n            var settings = _.extend({}, this.ajaxSettings, {\r\n                url: href,\r\n                data: data\r\n            });\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            return $.ajax(settings)\r\n                .done(function (response) {\r\n                    if (response.error) {\r\n                        uiAlert({\r\n                            content: response.message\r\n                        });\r\n                    }\r\n                })\r\n                .fail(function () {\r\n                    uiAlert({\r\n                        content: $t('Sorry, there has been an error processing your request. Please try again later.')\r\n                    });\r\n                })\r\n                .always(function () {\r\n                    $('body').trigger('processStop');\r\n                });\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/grid/columns/actions.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/actions',\r\n    'Magento_Ui/js/modal/alert',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate'\r\n], function (Actions, uiAlert, _, $, $t) {\r\n    'use strict';\r\n\r\n    return Actions.extend({\r\n        defaults: {\r\n            ajaxSettings: {\r\n                method: 'POST',\r\n                dataType: 'json'\r\n            },\r\n            listens: {\r\n                action: 'onAction'\r\n            },\r\n            ignoreTmpls: {\r\n                fieldAction: true,\r\n                options: true,\r\n                action: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload customer address listing data source after customer address delete action\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        onAction: function (data) {\r\n            if (data.action === 'delete') {\r\n                this.source().reload({\r\n                    refresh: true\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Default action callback. Redirects to\r\n         * the specified in action's data url.\r\n         *\r\n         * @param {String} actionIndex - Action's identifier.\r\n         * @param {(Number|String)} recordId - Id of the record associated\r\n         *      with a specified action.\r\n         * @param {Object} action - Action's data.\r\n         */\r\n        defaultCallback: function (actionIndex, recordId, action) {\r\n            if (action.isAjax) {\r\n                this.request(action.href).done(function (response) {\r\n                    var data;\r\n\r\n                    if (!response.error) {\r\n                        data = _.findWhere(this.rows, {\r\n                            _rowIndex: action.rowIndex\r\n                        });\r\n\r\n                        this.trigger('action', {\r\n                            action: actionIndex,\r\n                            data: data\r\n                        });\r\n                    }\r\n                }.bind(this));\r\n\r\n            } else {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Send customer address listing ajax request\r\n         *\r\n         * @param {String} href\r\n         */\r\n        request: function (href) {\r\n            var settings = _.extend({}, this.ajaxSettings, {\r\n                url: href,\r\n                data: {\r\n                    'form_key': window.FORM_KEY\r\n                }\r\n            });\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            return $.ajax(settings)\r\n                .done(function (response) {\r\n                    if (response.error) {\r\n                        uiAlert({\r\n                            content: response.message\r\n                        });\r\n                    }\r\n                })\r\n                .fail(function () {\r\n                    uiAlert({\r\n                        content: $t('Sorry, there has been an error processing your request. Please try again later.')\r\n                    });\r\n                })\r\n                .always(function () {\r\n                    $('body').trigger('processStop');\r\n                });\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/grid/filters/filters.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/filters/filters'\r\n], function (Filters) {\r\n    'use strict';\r\n\r\n    return Filters.extend({\r\n        defaults: {\r\n            chipsConfig: {\r\n                name: '${ $.name }_chips',\r\n                provider: '${ $.chipsConfig.name }',\r\n                component: 'Magento_Customer/js/grid/filters/chips'\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/grid/filters/chips.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/filters/chips'\r\n], function (Chips) {\r\n    'use strict';\r\n\r\n    return Chips.extend({\r\n\r\n        /**\r\n         * Clear previous filters while initializing element to prevent filters sharing between customers\r\n         *\r\n         * @param {Object} elem\r\n         */\r\n        initElement: function (elem) {\r\n            this.clear();\r\n            this._super(elem);\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/address/default-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/button',\r\n    'underscore'\r\n], function (Button, _) {\r\n    'use strict';\r\n\r\n    return Button.extend({\r\n        defaults: {\r\n            entityId: null,\r\n            parentId: null,\r\n            listens: {\r\n                entity: 'changeVisibility'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Apply action on target component,\r\n         * but previously create this component from template if it is not existed\r\n         *\r\n         * @param {Object} action - action configuration\r\n         */\r\n        applyAction: function (action) {\r\n            if (action.params && action.params[0]) {\r\n                action.params[0]['entity_id'] = this.entityId;\r\n                action.params[0]['parent_id'] = this.parentId;\r\n            } else {\r\n                action.params = [{\r\n                    'entity_id': this.entityId,\r\n                    'parent_id': this.parentId\r\n                }];\r\n            }\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Change visibility of the default address shipping/billing blocks\r\n         *\r\n         * @param {Object} entity - customer address\r\n         */\r\n        changeVisibility: function (entity) {\r\n            this.visible(!_.isEmpty(entity));\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryBundleProductAdminUi/js/form/element/quantity-per-source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function ($t, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            elementTmpl: 'Magento_InventoryBundleProductAdminUi/dynamic-rows/cells/cell-source',\r\n            itemsToDisplay: 3,\r\n            isFullList: true,\r\n            showFullListDescription: $t('Show more...'),\r\n            listens: {\r\n                value: 'updateItems'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Observe elements.\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['items', 'isFullList']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare data to use.\r\n         *\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        updateItems: function (data) {\r\n            this.isFullList(data.length > this.itemsToDisplay);\r\n            this.isFullList() ? this.items(data.slice(0, this.itemsToDisplay)) : this.items(data);\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryBundleProductAdminUi/js/form/element/grid-column-quantity-per-source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function ($t, Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_InventoryBundleProductAdminUi/grid/column/quantity-per-source',\r\n            itemsToDisplay: 3,\r\n            showFullListDescription: $t('Show more...')\r\n        },\r\n\r\n        /**\r\n         * Get source items from product data.\r\n         *\r\n         * @param {Object} rowData\r\n         * @returns {Array}\r\n         */\r\n        getSourceItemsData: function (rowData) {\r\n            return rowData['quantity_per_source'];\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/downloadable-type-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/product/weight-handler',\r\n    'Magento_Catalog/catalog/type-events'\r\n], function ($, weight, productType) {\r\n    'use strict';\r\n\r\n    return {\r\n        $checkbox: $('[data-action=change-type-product-downloadable]'),\r\n        $items: $('#product_info_tabs_downloadable_items'),\r\n        $tab: null,\r\n        isDownloadable: false,\r\n\r\n        /**\r\n         * Show\r\n         */\r\n        show: function () {\r\n            this.$checkbox.prop('checked', true);\r\n            this.$items.show();\r\n        },\r\n\r\n        /**\r\n         * Hide\r\n         */\r\n        hide: function () {\r\n            this.$checkbox.prop('checked', false);\r\n            this.$items.hide();\r\n        },\r\n\r\n        /**\r\n         * Constructor component\r\n         * @param {Object} data - this backend data\r\n         */\r\n        'Magento_Downloadable/downloadable-type-handler': function (data) {\r\n            this.$tab = $('[data-tab=' + data.tabId + ']');\r\n            this.isDownloadable = data.isDownloadable;\r\n            this.bindAll();\r\n            this._initType();\r\n        },\r\n\r\n        /**\r\n         * Bind all\r\n         */\r\n        bindAll: function () {\r\n            this.$checkbox.on('change', function (event) {\r\n                $(document).trigger('setTypeProduct', $(event.target).prop('checked') ?\r\n                    'downloadable' :\r\n                    productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\r\n                );\r\n            });\r\n\r\n            $(document).on('changeTypeProduct', this._initType.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Init type\r\n         * @private\r\n         */\r\n        _initType: function () {\r\n            if (productType.type.current === 'downloadable') {\r\n                weight.change(false);\r\n                weight.$weightSwitcher().one('change', function () {\r\n                    $(document).trigger(\r\n                        'setTypeProduct',\r\n                        productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\r\n                    );\r\n                });\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Downloadable/js/components/upload-type-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'uiRegistry'\r\n], function (Select, registry) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            listens: {\r\n                value: 'changeTypeUpload'\r\n            },\r\n            typeUrl: 'file',\r\n            typeFile: 'link_url',\r\n            filterPlaceholder: 'ns = ${ $.ns }, parentScope = ${ $.parentScope }'\r\n        },\r\n\r\n        /**\r\n         * Initialize component.\r\n         * @returns {Element}\r\n         */\r\n        initialize: function () {\r\n            return this\r\n                ._super()\r\n                .changeTypeUpload(this.initialValue);\r\n        },\r\n\r\n        /**\r\n         * Callback that fires when 'value' property is updated.\r\n         *\r\n         * @param {String} currentValue\r\n         * @returns {*}\r\n         */\r\n        onUpdate: function (currentValue) {\r\n            this.changeTypeUpload(currentValue);\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Change visibility for typeUrl/typeFile based on current value.\r\n         *\r\n         * @param {String} currentValue\r\n         */\r\n        changeTypeUpload: function (currentValue) {\r\n            var componentFile = this.filterPlaceholder + ', index=' + this.typeFile,\r\n                componentUrl = this.filterPlaceholder + ', index=' + this.typeUrl;\r\n\r\n            switch (currentValue) {\r\n\r\n                case 'file':\r\n                    this.changeVisible(componentFile, true);\r\n                    this.changeVisible(componentUrl, false);\r\n                    break;\r\n\r\n                case 'url':\r\n                    this.changeVisible(componentFile, false);\r\n                    this.changeVisible(componentUrl, true);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change visible\r\n         *\r\n         * @param {String} filter\r\n         * @param {Boolean} visible\r\n         */\r\n        changeVisible: function (filter, visible) {\r\n            registry.async(filter)(\r\n                function (currentComponent) {\r\n                    currentComponent.visible(visible);\r\n                }\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/js/components/is-downloadable-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            listens: {\r\n                disabled: 'changeVisibility'\r\n            },\r\n            modules: {\r\n                samplesFieldset: '${ $.samplesFieldset }',\r\n                linksFieldset: '${ $.linksFieldset}'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change visibility for samplesFieldset & linksFieldset based on current statuses of checkbox.\r\n         */\r\n        changeVisibility: function () {\r\n            if (this.samplesFieldset() && this.linksFieldset()) {\r\n                if (this.checked() && !this.disabled()) {\r\n                    this.samplesFieldset().visible(true);\r\n                    this.linksFieldset().visible(true);\r\n                } else {\r\n                    this.samplesFieldset().visible(false);\r\n                    this.linksFieldset().visible(false);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle checked state changes for checkbox / radio button.\r\n         *\r\n         * @param {Boolean} newChecked\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            this.changeVisibility();\r\n            this._super(newChecked);\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/js/components/price-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            linksPurchasedSeparately: '0',\r\n            useDefaultPrice: false,\r\n            listens: {\r\n                linksPurchasedSeparately: 'changeDisabledStatus',\r\n                useDefaultPrice: 'changeDisabledStatus'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.changeDisabledStatus();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disable/enable price field\r\n         */\r\n        changeDisabledStatus: function () {\r\n            if (this.linksPurchasedSeparately === '1') {\r\n                if (this.useDefaultPrice) {\r\n                    this.disabled(true);\r\n                } else {\r\n                    this.disabled(false);\r\n                }\r\n            } else {\r\n                this.disabled(true);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/js/components/file-uploader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/file-uploader'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            fileInputName: ''\r\n        },\r\n\r\n        /**\r\n         * Adds provided file to the files list.\r\n         *\r\n         * @param {Object} file\r\n         * @returns {FileUploder} Chainable.\r\n         */\r\n        addFile: function (file) {\r\n            var processedFile = this.processFile(file),\r\n                tmpFile = [],\r\n                resultFile = {\r\n                'file': processedFile.file,\r\n                'name': processedFile.name,\r\n                'size': processedFile.size,\r\n                'status': processedFile.status ? processedFile.status : 'new'\r\n            };\r\n\r\n            tmpFile[0] = resultFile;\r\n\r\n            this.isMultipleFiles ?\r\n                this.value.push(tmpFile) :\r\n                this.value(tmpFile);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Downloadable/js/components/use-price-default-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            linksPurchasedSeparately: '0',\r\n            listens: {\r\n                linksPurchasedSeparately: 'changeVisibleStatus'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change visibility of checkbox\r\n         */\r\n        changeVisibleStatus: function () {\r\n            if (this.linksPurchasedSeparately === '1') {\r\n                this.visible(true);\r\n            } else {\r\n                this.visible(false);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Eav/js/input-types.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        $('select#frontend_input').each(function () {\r\n            var select = $(this),\r\n                currentValue = select.find('option:selected').val(),\r\n                compatibleTypes = config.inputTypes,\r\n                enabledTypes = [],\r\n                iterator,\r\n                warning = $('<label>')\r\n                    .hide()\r\n                    .text($.mage.__('These changes affect all related products.'))\r\n                    .addClass('mage-error')\r\n                    .attr({\r\n                        generated: true, for: select.attr('id')\r\n                    }),\r\n                hint = $('<p>')\r\n                    .hide()\r\n                    .addClass('note')\r\n                    .attr({\r\n                        generated: true\r\n                    }),\r\n                hints = config.hints,\r\n\r\n            /**\r\n             * Toggle hint about changes types\r\n             */\r\n            toggleWarning = function () {\r\n                if (select.find('option:selected').val() === currentValue) {\r\n                    warning.hide();\r\n                } else {\r\n                    warning.show();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Toggle hint\r\n             */\r\n            toggleHint = function () {\r\n                if (typeof hints[select.find('option:selected').val()] !== 'undefined') {\r\n                    select.after(hint.show().text(hints[select.find('option:selected').val()]));\r\n                } else {\r\n                    hint.hide();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove unsupported options\r\n             */\r\n            removeOption = function () {\r\n                if (!~enabledTypes.indexOf($(this).val())) {\r\n                    $(this).remove();\r\n                }\r\n            };\r\n\r\n            // find enabled types for switching dor current input type\r\n            for (iterator = 0; iterator < compatibleTypes.length; iterator++) {\r\n                if (compatibleTypes[iterator].indexOf(currentValue) >= 0) {\r\n                    enabledTypes = compatibleTypes[iterator];\r\n                }\r\n            }\r\n\r\n            // Check current type (allow only compatible types)\r\n            if (~enabledTypes.indexOf(currentValue)) {\r\n                // Enable select and keep only available options (all other will be removed)\r\n                select.removeAttr('disabled').find('option').each(removeOption);\r\n                // Add warning on page and event for show/hide it\r\n                select.after(warning).on('change', toggleWarning);\r\n            }\r\n            //bind hint toggling on change event\r\n            select.on('change', toggleHint);\r\n            //show hint for currently selected value\r\n            toggleHint();\r\n        });\r\n    };\r\n});\r\n","Magento_AdobeIms/js/user.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(['ko'], function (ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        isAuthorized: ko.observable(false),\r\n        name: ko.observable(''),\r\n        email: ko.observable('')\r\n    };\r\n});\r\n","Magento_AdobeIms/js/config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        loginUrl: 'https://ims-na1.adobelogin.com/ims/authorize',\r\n        profileUrl: 'adobe_ims/user/profile',\r\n        logoutUrl: 'adobe_ims/user/logout',\r\n        manageAccountLink: 'https://account.adobe.com/',\r\n        login: {\r\n            callbackParsingParams: {\r\n                regexpPattern: /auth\\[code=(success|error);message=(.+)\\]/,\r\n                codeIndex: 1,\r\n                messageIndex: 2,\r\n                nameIndex: 3,\r\n                successCode: 'success',\r\n                errorCode: 'error'\r\n            },\r\n            popupWindowParams: {\r\n                width: 500,\r\n                height: 600,\r\n                top: 100,\r\n                left: 300\r\n            },\r\n            popupWindowTimeout: 10000\r\n        }\r\n    };\r\n});\r\n\r\n","Magento_AdobeIms/js/signIn.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'jquery',\r\n    'Magento_AdobeIms/js/action/authorization'\r\n], function (Component, $, login) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            profileUrl: 'adobe_ims/user/profile',\r\n            logoutUrl: 'adobe_ims/user/logout',\r\n            user: {\r\n                isAuthorized: false,\r\n                name: '',\r\n                email: '',\r\n                image: ''\r\n            },\r\n            loginConfig: {\r\n                url: 'https://ims-na1.adobelogin.com/ims/authorize',\r\n                callbackParsingParams: {\r\n                    regexpPattern: /auth\\[code=(success|error);message=(.+)\\]/,\r\n                    codeIndex: 1,\r\n                    messageIndex: 2,\r\n                    nameIndex: 3,\r\n                    successCode: 'success',\r\n                    errorCode: 'error'\r\n                },\r\n                popupWindowParams: {\r\n                    width: 500,\r\n                    height: 600,\r\n                    top: 100,\r\n                    left: 300\r\n                },\r\n                popupWindowTimeout: 60000\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['user']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Login to Adobe\r\n         *\r\n         * @return {window.Promise}\r\n         */\r\n        login: function () {\r\n            var deferred = $.Deferred();\r\n\r\n            if (this.user().isAuthorized) {\r\n                deferred.resolve();\r\n            }\r\n            login(this.loginConfig)\r\n                .then(function (response) {\r\n                    this.loadUserProfile();\r\n                    deferred.resolve(response);\r\n                }.bind(this))\r\n                .fail(function (error) {\r\n                    deferred.reject(error);\r\n                });\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        /**\r\n         * Retrieve data to authorized user.\r\n         *\r\n         * @return array\r\n         */\r\n        loadUserProfile: function () {\r\n            $.ajax({\r\n                type: 'GET',\r\n                url: this.profileUrl,\r\n                showLoader: true,\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /**\r\n                 * @param {Object} response\r\n                 * @returns void\r\n                 */\r\n                success: function (response) {\r\n                    this.user({\r\n                        isAuthorized: true,\r\n                        name: response.result.name,\r\n                        email: response.result.email,\r\n                        image: response.result.image\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} response\r\n                 * @returns {String}\r\n                 */\r\n                error: function (response) {\r\n                    return response.message;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Logout from adobe account\r\n         */\r\n        logout: function () {\r\n            $.ajax({\r\n                type: 'POST',\r\n                url: this.logoutUrl,\r\n                data: {\r\n                    'form_key': window.FORM_KEY\r\n                },\r\n                dataType: 'json',\r\n                context: this,\r\n                showLoader: true,\r\n                success: function () {\r\n                    this.user({\r\n                        isAuthorized: false,\r\n                        name: '',\r\n                        email: '',\r\n                        image: ''\r\n                    });\r\n                }.bind(this),\r\n\r\n                /**\r\n                 * @param {Object} response\r\n                 * @returns {String}\r\n                 */\r\n                error: function (response) {\r\n                    return response.message;\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_AdobeIms/js/action/authorization.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build window params\r\n     * @param {Object} windowParams\r\n     * @returns {String}\r\n     */\r\n    function buildWindowParams(windowParams) {\r\n        var output = '',\r\n            coma = '',\r\n            paramName,\r\n            paramValue;\r\n\r\n        for (paramName in windowParams) {\r\n            if (windowParams[paramName]) {\r\n                paramValue = windowParams[paramName];\r\n                output += coma + paramName + '=' + paramValue;\r\n                coma = ',';\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    return function (config) {\r\n        var authWindow,\r\n            deferred = $.Deferred(),\r\n            watcherId,\r\n            stopWatcherId;\r\n\r\n        /**\r\n         * Close authorization window if already opened\r\n         */\r\n        if (window.adobeIMSAuthWindow) {\r\n            window.adobeIMSAuthWindow.close();\r\n        }\r\n\r\n        /**\r\n         * Opens authorization window with special parameters\r\n         */\r\n        authWindow = window.adobeIMSAuthWindow = window.open(\r\n            config.url,\r\n            'authorization_widnow',\r\n            buildWindowParams(\r\n                config.popupWindowParams || {\r\n                    width: 500,\r\n                    height: 300\r\n                }\r\n            )\r\n        );\r\n\r\n        /**\r\n         * Stop handle\r\n         */\r\n        function stopHandle() {\r\n            // Clear timers\r\n            clearTimeout(stopWatcherId);\r\n            clearInterval(watcherId);\r\n\r\n            // Close window\r\n            authWindow.close();\r\n        }\r\n\r\n        /**\r\n         * Start handle\r\n         */\r\n        function startHandle() {\r\n            var responseData;\r\n\r\n            try {\r\n\r\n                if (authWindow.document.domain !== document.domain ||\r\n                    authWindow.document.readyState !== 'complete') {\r\n                    return;\r\n                }\r\n\r\n                /**\r\n                 * If within 10 seconds the result is not received, then reject the request\r\n                 */\r\n                stopWatcherId = setTimeout(function () {\r\n                    stopHandle();\r\n                    deferred.reject(new Error('Time\\'s up.'));\r\n                }, config.popupWindowTimeout || 60000);\r\n\r\n                responseData = authWindow.document.body.innerHTML.match(\r\n                    config.callbackParsingParams.regexpPattern\r\n                );\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                stopHandle();\r\n\r\n                if (responseData[config.callbackParsingParams.codeIndex] ===\r\n                    config.callbackParsingParams.successCode) {\r\n                    deferred.resolve({\r\n                        isAuthorized: true,\r\n                        lastAuthSuccessMessage: responseData[config.callbackParsingParams.messageIndex]\r\n                    });\r\n                } else {\r\n                    deferred.reject(responseData[config.callbackParsingParams.messageIndex]);\r\n                }\r\n            } catch (e) {\r\n                if (authWindow.closed) {\r\n                    clearTimeout(stopWatcherId);\r\n                    clearInterval(watcherId);\r\n\r\n                    // eslint-disable-next-line max-depth\r\n                    if (window.adobeIMSAuthWindow && window.adobeIMSAuthWindow.closed) {\r\n                        deferred.reject(new Error('Authentication window was closed.'));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Watch a result 1 time per second\r\n         */\r\n        watcherId = setInterval(startHandle, 1000);\r\n\r\n        return deferred.promise();\r\n    };\r\n});\r\n","Magento_Vault/js/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent'\r\n], function ($, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            fieldset: '',\r\n            active: false,\r\n            imports: {\r\n                onActiveChange: 'active'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this,\r\n                paymentSelector = '[name=\"payment[method]\"][value=\"' + this.getCode() + '\"]:checked';\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            this._super()\r\n                .observe(['active']);\r\n\r\n            if (self.$selector.find(paymentSelector).length !== 0) {\r\n                this.active(true);\r\n            }\r\n\r\n            $('#' + self.fieldset).find('[name=\"payment[token_switcher]\"]')\r\n                .on('click', this.rememberTokenSwitcher.bind(this));\r\n\r\n            // re-init payment method events\r\n            self.$selector.off('changePaymentMethod.' + this.getCode())\r\n                .on('changePaymentMethod.' + this.getCode(), this.changePaymentMethod.bind(this));\r\n\r\n            if (this.active()) {\r\n                this.chooseTokenSwitcher();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable/disable current payment method\r\n         * @param {Object} event\r\n         * @param {String} method\r\n         * @returns {exports.changePaymentMethod}\r\n         */\r\n        changePaymentMethod: function (event, method) {\r\n            this.active(method === this.getCode());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Save last chosen token switcher\r\n         * @param {Object} event\r\n         * @returns {exports.rememberTokenSwitcher}\r\n         */\r\n        rememberTokenSwitcher: function (event) {\r\n            $('#' + this.selector).data('lastTokenSwitcherId', event.target.id);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Select token switcher\r\n         * @returns {exports.chooseTokenSwitcher}\r\n         */\r\n        chooseTokenSwitcher: function () {\r\n            var lastTokenSwitcherId = $('#' + this.selector).data('lastTokenSwitcherId');\r\n\r\n            if (lastTokenSwitcherId) {\r\n                $('#' + lastTokenSwitcherId).trigger('click');\r\n            } else {\r\n                $('#' + this.fieldset + ' input:radio:first').trigger('click');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered when payment changed\r\n         * @param {Boolean} isActive\r\n         */\r\n        onActiveChange: function (isActive) {\r\n            if (!isActive) {\r\n                this.$selector.trigger('setVaultNotActive.' + this.getCode());\r\n\r\n                return;\r\n            }\r\n            this.chooseTokenSwitcher();\r\n            window.order.addExcludedPaymentMethod(this.getCode());\r\n        },\r\n\r\n        /**\r\n         * Get payment method code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return this.code;\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryGroupedProductAdminUi/js/form/element/quantity-per-source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function ($t, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            elementTmpl: 'Magento_InventoryGroupedProductAdminUi/dynamic-rows/cells/cell-source',\r\n            itemsToDisplay: 3,\r\n            isFullList: true,\r\n            showFullListDescription: $t('Show more...'),\r\n            listens: {\r\n                value: 'updateItems'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Observe elements.\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['items', 'isFullList']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare data to use.\r\n         *\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        updateItems: function (data) {\r\n            this.isFullList(data.length > this.itemsToDisplay);\r\n            this.isFullList() ? this.items(data.slice(0, this.itemsToDisplay)) : this.items(data);\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryGroupedProductAdminUi/js/form/element/grid-column-quantity-per-source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function ($t, Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_InventoryGroupedProductAdminUi/grid/column/quantity-per-source',\r\n            itemsToDisplay: 3,\r\n            showFullListDescription: $t('Show more...')\r\n        },\r\n\r\n        /**\r\n         * Get source items from product data.\r\n         *\r\n         * @param {Object} rowData\r\n         * @returns {Array}\r\n         */\r\n        getSourceItemsData: function (rowData) {\r\n            return rowData['quantity_per_source'];\r\n        }\r\n    });\r\n});\r\n","Magento_Variable/variables.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global Variables, updateElementAtCursor, MagentovariablePlugin, Base64 */\r\ndefine([\r\n    'jquery',\r\n    'mage/backend/notification',\r\n    'mage/translate',\r\n    'wysiwygAdapter',\r\n    'uiRegistry',\r\n    'mage/apply/main',\r\n    'mageUtils',\r\n    'Magento_Variable/js/config-directive-generator',\r\n    'Magento_Variable/js/custom-directive-generator',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'jquery/ui',\r\n    'prototype',\r\n    'mage/adminhtml/tools'\r\n], function (jQuery, notification, $t, wysiwyg, registry, mageApply, utils, configGenerator, customGenerator, loader) {\r\n    'use strict';\r\n\r\n    window.Variables = {\r\n        textareaElementId: null,\r\n        variablesContent: null,\r\n        dialogWindow: null,\r\n        dialogWindowId: 'variables-chooser',\r\n        overlayShowEffectOptions: null,\r\n        overlayHideEffectOptions: null,\r\n        insertFunction: 'Variables.insertVariable',\r\n        selectedPlaceholder: null,\r\n        isEditMode: null,\r\n        editor: null,\r\n\r\n        /**\r\n         * Initialize Variables handler.\r\n         *\r\n         * @param {*} textareaElementId\r\n         * @param {Function} insertFunction\r\n         * @param {Object} editor\r\n         * @param {Object} selectedPlaceholder\r\n         */\r\n        init: function (textareaElementId, insertFunction, editor, selectedPlaceholder) {\r\n            if ($(textareaElementId)) {\r\n                this.textareaElementId = textareaElementId;\r\n            }\r\n\r\n            if (insertFunction) {\r\n                this.insertFunction = insertFunction;\r\n            }\r\n\r\n            if (selectedPlaceholder) {\r\n                this.selectedPlaceholder = selectedPlaceholder;\r\n            }\r\n\r\n            if (editor) {\r\n                this.editor = editor;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data.\r\n         */\r\n        resetData: function () {\r\n            this.variablesContent = null;\r\n            this.dialogWindow = null;\r\n        },\r\n\r\n        /**\r\n         * Open variables chooser slideout.\r\n         *\r\n         * @param {Object} variables\r\n         */\r\n        openVariableChooser: function (variables) {\r\n            if (variables) {\r\n                this.openDialogWindow(variables);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close variables chooser slideout dialog window.\r\n         */\r\n        closeDialogWindow: function () {\r\n            jQuery('#' + this.dialogWindowId).modal('closeModal');\r\n        },\r\n\r\n        /**\r\n         * Init ui component grid on the form\r\n         *\r\n         * @return void\r\n         */\r\n        initUiGrid: function () {\r\n            mageApply.apply(document.getElementById(this.dialogWindow));\r\n            jQuery('#' + this.dialogWindowId).applyBindings();\r\n            loader.get('variables_modal.variables_modal.variables').hide();\r\n        },\r\n\r\n        /**\r\n         * Open slideout dialog window.\r\n         *\r\n         * @param {*} variablesContent\r\n         * @param {Object} selectedElement\r\n         */\r\n        openDialogWindow: function (variablesContent, selectedElement) {\r\n\r\n            var html = utils.copy(variablesContent),\r\n                self = this;\r\n\r\n            jQuery('<div id=\"' + this.dialogWindowId + '\">' + html + '</div>').modal({\r\n                title: self.isEditMode ? $t('Edit Variable') : $t('Insert Variable'),\r\n                type: 'slide',\r\n                buttons: self.getButtonsConfig(self.isEditMode),\r\n\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 * @param {Object} modal\r\n                 */\r\n                closed: function (e, modal) {\r\n                    modal.modal.remove();\r\n                    registry.get(\r\n                        'variables_modal.variables_modal.variables.variable_selector',\r\n                        function (radioSelect) {\r\n                            radioSelect.selectedVariableCode('');\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n            this.selectedPlaceholder = selectedElement;\r\n\r\n            this.addNotAvailableMessage(selectedElement);\r\n\r\n            jQuery('#' + this.dialogWindowId).modal('openModal');\r\n\r\n            if (typeof selectedElement !== 'undefined') {\r\n                registry.get(\r\n                    'variables_modal.variables_modal.variables.variable_selector',\r\n                    function (radioSelect) {\r\n                        radioSelect.selectedVariableCode(MagentovariablePlugin.getElementVariablePath(selectedElement));\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add message to slide out that variable is no longer available\r\n         *\r\n         * @param {Object} selectedElement\r\n         */\r\n        addNotAvailableMessage: function (selectedElement) {\r\n            var name,\r\n                msg,\r\n                variablePath,\r\n                $wrapper,\r\n                lostVariableClass = 'magento-placeholder-error';\r\n\r\n            if (\r\n                this.isEditMode &&\r\n                typeof selectedElement !== 'undefined' &&\r\n                jQuery(selectedElement).hasClass(lostVariableClass)\r\n            ) {\r\n\r\n                variablePath = MagentovariablePlugin.getElementVariablePath(selectedElement);\r\n                name = variablePath.split(':');\r\n                msg = $t('The variable %1 is no longer available. Select a different variable.')\r\n                    .replace('%1', name[1]);\r\n\r\n                jQuery('body').notification('clear')\r\n                    .notification('add', {\r\n                        error: true,\r\n                        message: msg,\r\n\r\n                        /**\r\n                         * @param {String} message\r\n                         */\r\n                        insertMethod: function (message) {\r\n                            $wrapper = jQuery('<div/>').html(message);\r\n\r\n                            jQuery('.modal-header .page-main-actions').after($wrapper);\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get selected variable directive.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        getVariableCode: function () {\r\n            var code = registry.get('variables_modal.variables_modal.variables.variable_selector')\r\n                    .selectedVariableCode(),\r\n                directive = code;\r\n\r\n            // processing switch here as content must contain only path/code without type\r\n            if (typeof code !== 'undefined') {\r\n                if (code.match('^default:')) {\r\n                    directive = configGenerator.processConfig(code.replace('default:', ''));\r\n                } else if (code.match('^custom:')) {\r\n                    directive = customGenerator.processConfig(code.replace('custom:', ''));\r\n                }\r\n\r\n                return directive;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get buttons configuration for slideout dialog.\r\n         *\r\n         * @param {Boolean} isEditMode\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getButtonsConfig: function (isEditMode) {\r\n\r\n            var self = this,\r\n                buttonsData;\r\n\r\n            buttonsData = [\r\n                {\r\n\r\n                    text: $t('Cancel'),\r\n                    'class': 'action-scalable cancel',\r\n\r\n                    /**\r\n                     * @param {jQuery.Event} event\r\n                     */\r\n                    click: function (event) {\r\n                        this.closeModal(event);\r\n                    }\r\n                },\r\n                {\r\n\r\n                    text: isEditMode ? $t('Save') : $t('Insert Variable'),\r\n                    class: 'action-primary ' + (isEditMode ? '' : 'disabled'),\r\n                    attr: {\r\n                        'id': 'insert_variable'\r\n                    },\r\n\r\n                    /**\r\n                     * Insert Variable\r\n                     */\r\n                    click: function () {\r\n                        self.insertVariable(self.getVariableCode());\r\n                    }\r\n                }\r\n            ];\r\n\r\n            return buttonsData;\r\n        },\r\n\r\n        /**\r\n         * Prepare variables row.\r\n         *\r\n         * @param {String} varValue\r\n         * @param {*} varLabel\r\n         * @return {String}\r\n         * @deprecated This method isn't relevant after ui changes\r\n         */\r\n        prepareVariableRow: function (varValue, varLabel) {\r\n            var value = varValue.replace(/\"/g, '&quot;').replace(/'/g, '\\\\&#39;');\r\n\r\n            return '<a href=\"#\" onclick=\"' +\r\n                this.insertFunction +\r\n                '(\\'' +\r\n                value +\r\n                '\\');return false;\">' +\r\n                varLabel +\r\n                '</a>';\r\n        },\r\n\r\n        /**\r\n         * Insert variable into WYSIWYG editor.\r\n         *\r\n         * @param {*} value\r\n         * @return {Object}\r\n         */\r\n        insertVariable: function (value) {\r\n            var windowId = this.dialogWindowId,\r\n                textareaElm, scrollPos, wysiwygEditorFocused;\r\n\r\n            jQuery('#' + windowId).modal('closeModal');\r\n            textareaElm = $(this.textareaElementId);\r\n\r\n            //to support switching between wysiwyg editors\r\n            wysiwygEditorFocused = wysiwyg && wysiwyg.activeEditor();\r\n\r\n            if (wysiwygEditorFocused && wysiwyg.get(this.textareaElementId)) {\r\n                if (jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\r\n                    wysiwyg.setCaretOnElement(this.selectedPlaceholder, 1);\r\n                }\r\n                wysiwyg.insertContent(value, false);\r\n\r\n                if (this.selectedPlaceholder && jQuery(this.selectedPlaceholder).hasClass('magento-placeholder')) {\r\n                    this.selectedPlaceholder.remove();\r\n                }\r\n\r\n            } else if (textareaElm) {\r\n                scrollPos = textareaElm.scrollTop;\r\n                updateElementAtCursor(textareaElm, value);\r\n                textareaElm.focus();\r\n                textareaElm.scrollTop = scrollPos;\r\n                jQuery(textareaElm).change();\r\n                textareaElm = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n    };\r\n\r\n    window.MagentovariablePlugin = {\r\n        editor: null,\r\n        variables: null,\r\n        textareaId: null,\r\n\r\n        /**\r\n         * Bind editor.\r\n         *\r\n         * @param {*} editor\r\n         */\r\n        setEditor: function (editor) {\r\n            this.editor = editor;\r\n        },\r\n\r\n        /**\r\n         * Load variables chooser.\r\n         *\r\n         * @param {String} url\r\n         * @param {*} textareaId\r\n         * @param {Object} selectedElement\r\n         *\r\n         * @return {Object}\r\n         */\r\n        loadChooser: function (url, textareaId, selectedElement) {\r\n            this.textareaId = textareaId;\r\n\r\n            new Ajax.Request(url, {\r\n                parameters: {},\r\n                onComplete: function (transport) {\r\n                    Variables.init(this.textareaId, 'MagentovariablePlugin.insertVariable', this.editor);\r\n                    Variables.isEditMode = !!this.getElementVariablePath(selectedElement);\r\n                    this.variablesContent = transport.responseText;\r\n                    Variables.openDialogWindow(this.variablesContent, selectedElement);\r\n                    Variables.initUiGrid();\r\n                }.bind(this)\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open variables chooser window.\r\n         *\r\n         * @param {*} variables\r\n         * @deprecated This method isn't relevant after ui changes\r\n         */\r\n        openChooser: function (variables) {\r\n            Variables.openVariableChooser(variables);\r\n        },\r\n\r\n        /**\r\n         * Insert variable.\r\n         *\r\n         * @param {*} value\r\n         *\r\n         * @return {Object}\r\n         */\r\n        insertVariable: function (value) {\r\n            if (this.textareaId) {\r\n                Variables.init(this.textareaId);\r\n                Variables.insertVariable(value);\r\n            } else {\r\n                Variables.closeDialogWindow();\r\n                Variables.insertVariable(value);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get element variable path.\r\n         *\r\n         * @param {Object} element\r\n         * @returns {String}\r\n         */\r\n        getElementVariablePath: function (element) {\r\n            var type, code;\r\n\r\n            if (!element || !jQuery(element).hasClass('magento-variable')) {\r\n                return '';\r\n            }\r\n            type = jQuery(element).hasClass('magento-custom-var') ? 'custom' : 'default';\r\n            code = Base64.idDecode(element.getAttribute('id'));\r\n\r\n            return type + ':' + code;\r\n        }\r\n    };\r\n});\r\n","Magento_Variable/js/config-directive-generator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        directiveTemplate: '{{config path=\"%s\"}}',\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {String}\r\n         */\r\n        processConfig: function (path) {\r\n            return this.directiveTemplate.replace('%s', path);\r\n\r\n        }\r\n\r\n    });\r\n\r\n});\r\n","Magento_Variable/js/custom-directive-generator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        directiveTemplate: '{{customVar code=%s}}',\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {String}\r\n         */\r\n        processConfig: function (path) {\r\n            return this.directiveTemplate.replace('%s', path);\r\n        }\r\n\r\n    });\r\n\r\n});\r\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'jquery'\r\n], function (_, $t, Column, jQuery) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\r\n            draggable: false,\r\n            sortable: false,\r\n            selectedVariableCode: null,\r\n            selectedVariableType: null\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['selectedVariableCode']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove disable class from Insert Variable button after Variable has been chosen.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        selectVariable: function () {\r\n            if (jQuery('#insert_variable').hasClass('disabled')) {\r\n                jQuery('#insert_variable').removeClass('disabled');\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Swatches/js/product-attributes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/prompt',\r\n    'uiRegistry',\r\n    'collapsable'\r\n], function ($, alert, prompt, rg) {\r\n    'use strict';\r\n\r\n    return function (optionConfig) {\r\n        var activePanelClass = 'selected-type-options',\r\n            swatchProductAttributes = {\r\n                frontendInput: $('#frontend_input'),\r\n                isFilterable: $('#is_filterable'),\r\n                isFilterableInSearch: $('#is_filterable_in_search'),\r\n                backendType: $('#backend_type'),\r\n                usedForSortBy: $('#used_for_sort_by'),\r\n                frontendClass: $('#frontend_class'),\r\n                isWysiwygEnabled: $('#is_wysiwyg_enabled'),\r\n                isHtmlAllowedOnFront: $('#is_html_allowed_on_front'),\r\n                isRequired: $('#is_required'),\r\n                isUnique: $('#is_unique'),\r\n                defaultValueText: $('#default_value_text'),\r\n                defaultValueTextarea: $('#default_value_textarea'),\r\n                defaultValueDate: $('#default_value_date'),\r\n                defaultValueDatetime: $('#default_value_datetime'),\r\n                defaultValueYesno: $('#default_value_yesno'),\r\n                isGlobal: $('#is_global'),\r\n                useProductImageForSwatch: $('#use_product_image_for_swatch'),\r\n                updateProductPreviewImage: $('#update_product_preview_image'),\r\n                usedInProductListing: $('#used_in_product_listing'),\r\n                isVisibleOnFront: $('#is_visible_on_front'),\r\n                position: $('#position'),\r\n                attrTabsFront: $('#product_attribute_tabs_front'),\r\n\r\n                /**\r\n                 * @returns {*|jQuery|HTMLElement}\r\n                 */\r\n                get tabsFront() {\r\n                    return this.attrTabsFront.length ? this.attrTabsFront.closest('li') : $('#front_fieldset-wrapper');\r\n                },\r\n                selectFields: ['boolean', 'select', 'multiselect', 'price', 'swatch_text', 'swatch_visual'],\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                toggleApplyVisibility: function (select) {\r\n                    if ($(select).val() === 1) {\r\n                        $(select).next('select').removeClass('no-display');\r\n                        $(select).next('select').removeClass('ignore-validate');\r\n                    } else {\r\n                        $(select).next('select').addClass('no-display');\r\n                        $(select).next('select').addClass('ignore-validate');\r\n                        $(select).next('select option:selected').each(function () {\r\n                            this.selected = false;\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                checkOptionsPanelVisibility: function () {\r\n                    var selectOptionsPanel = $('#manage-options-panel'),\r\n                        visualOptionsPanel = $('#swatch-visual-options-panel'),\r\n                        textOptionsPanel = $('#swatch-text-options-panel');\r\n\r\n                    this._hidePanel(selectOptionsPanel);\r\n                    this._hidePanel(visualOptionsPanel);\r\n                    this._hidePanel(textOptionsPanel);\r\n\r\n                    switch (this.frontendInput.val()) {\r\n                        case 'swatch_visual':\r\n                            this._showPanel(visualOptionsPanel);\r\n                            break;\r\n\r\n                        case 'swatch_text':\r\n                            this._showPanel(textOptionsPanel);\r\n                            break;\r\n\r\n                        case 'select':\r\n                        case 'multiselect':\r\n                            this._showPanel(selectOptionsPanel);\r\n                            break;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                bindAttributeInputType: function () {\r\n                    this.checkOptionsPanelVisibility();\r\n                    this.switchDefaultValueField();\r\n\r\n                    if (!~$.inArray(this.frontendInput.val(), this.selectFields)) {\r\n                        // not in array\r\n                        this.isFilterable.selectedIndex = 0;\r\n                        this._disable(this.isFilterable);\r\n                        this._disable(this.isFilterableInSearch);\r\n                    } else {\r\n                        // in array\r\n                        this._enable(this.isFilterable);\r\n                        this._enable(this.isFilterableInSearch);\r\n                        this.backendType.val('int');\r\n                    }\r\n\r\n                    if (this.frontendInput.val() === 'multiselect' ||\r\n                        this.frontendInput.val() === 'gallery' ||\r\n                        this.frontendInput.val() === 'textarea'\r\n                    ) {\r\n                        this._disable(this.usedForSortBy);\r\n                    } else {\r\n                        this._enable(this.usedForSortBy);\r\n                    }\r\n\r\n                    if (this.frontendInput.val() === 'swatch_text') {\r\n                        $('.swatch-text-field-0').addClass('required-option');\r\n                    } else {\r\n                        $('.swatch-text-field-0').removeClass('required-option');\r\n                    }\r\n\r\n                    this.setRowVisibility(this.isWysiwygEnabled, false);\r\n                    this.setRowVisibility(this.isHtmlAllowedOnFront, false);\r\n\r\n                    switch (this.frontendInput.val()) {\r\n                        case 'textarea':\r\n                            this.setRowVisibility(this.isWysiwygEnabled, true);\r\n\r\n                            if (this.isWysiwygEnabled.val() === '0') {\r\n                                this._enable(this.isHtmlAllowedOnFront);\r\n                            }\r\n                            this.frontendClass.val('');\r\n                            this._disable(this.frontendClass);\r\n                            break;\r\n\r\n                        case 'text':\r\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\r\n                            this._enable(this.frontendClass);\r\n                            break;\r\n\r\n                        case 'select':\r\n                        case 'multiselect':\r\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\r\n                            this.frontendClass.val('');\r\n                            this._disable(this.frontendClass);\r\n                            break;\r\n                        default:\r\n                            this.frontendClass.val('');\r\n                            this._disable(this.frontendClass);\r\n                    }\r\n\r\n                    this.switchIsFilterable();\r\n                },\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                switchIsFilterable: function () {\r\n                    if (this.isFilterable.selectedIndex === 0) {\r\n                        this._disable(this.position);\r\n                    } else {\r\n                        this._enable(this.position);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                switchDefaultValueField: function () {\r\n                    var currentValue = this.frontendInput.val(),\r\n                        defaultValueTextVisibility = false,\r\n                        defaultValueTextareaVisibility = false,\r\n                        defaultValueDateVisibility = false,\r\n                        defaultValueDatetimeVisibility = false,\r\n                        defaultValueYesnoVisibility = false,\r\n                        scopeVisibility = true,\r\n                        useProductImageForSwatch = false,\r\n                        defaultValueUpdateImage = false,\r\n                        optionDefaultInputType = '',\r\n                        isFrontTabHidden = false,\r\n                        thing = this;\r\n\r\n                    if (!this.frontendInput.length) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (currentValue) {\r\n                        case 'select':\r\n                            optionDefaultInputType = 'radio';\r\n                            break;\r\n\r\n                        case 'multiselect':\r\n                            optionDefaultInputType = 'checkbox';\r\n                            break;\r\n\r\n                        case 'date':\r\n                            defaultValueDateVisibility = true;\r\n                            break;\r\n\r\n                        case 'datetime':\r\n                            defaultValueDatetimeVisibility = true;\r\n                            break;\r\n\r\n                        case 'boolean':\r\n                            defaultValueYesnoVisibility = true;\r\n                            break;\r\n\r\n                        case 'textarea':\r\n                        case 'texteditor':\r\n                            defaultValueTextareaVisibility = true;\r\n                            break;\r\n\r\n                        case 'media_image':\r\n                            defaultValueTextVisibility = false;\r\n                            break;\r\n\r\n                        case 'price':\r\n                            scopeVisibility = false;\r\n                            break;\r\n\r\n                        case 'swatch_visual':\r\n                            useProductImageForSwatch = true;\r\n                            defaultValueUpdateImage = true;\r\n                            defaultValueTextVisibility = false;\r\n                            break;\r\n\r\n                        case 'swatch_text':\r\n                            useProductImageForSwatch = false;\r\n                            defaultValueUpdateImage = true;\r\n                            defaultValueTextVisibility = false;\r\n                            break;\r\n                        default:\r\n                            defaultValueTextVisibility = true;\r\n                            break;\r\n                    }\r\n\r\n                    delete optionConfig.hiddenFields['swatch_visual'];\r\n                    delete optionConfig.hiddenFields['swatch_text'];\r\n\r\n                    if (currentValue === 'media_image') {\r\n                        this.tabsFront.hide();\r\n                        this.setRowVisibility(this.isRequired, false);\r\n                        this.setRowVisibility(this.isUnique, false);\r\n                        this.setRowVisibility(this.frontendClass, false);\r\n                    } else if (optionConfig.hiddenFields[currentValue]) {\r\n                        $.each(optionConfig.hiddenFields[currentValue], function (key, option) {\r\n                            switch (option) {\r\n                                case '_front_fieldset':\r\n                                    thing.tabsFront.hide();\r\n                                    isFrontTabHidden = true;\r\n                                    break;\r\n\r\n                                case '_default_value':\r\n                                    defaultValueTextVisibility = false;\r\n                                    defaultValueTextareaVisibility = false;\r\n                                    defaultValueDateVisibility = false;\r\n                                    defaultValueDatetimeVisibility = false;\r\n                                    defaultValueYesnoVisibility = false;\r\n                                    break;\r\n\r\n                                case '_scope':\r\n                                    scopeVisibility = false;\r\n                                    break;\r\n                                default:\r\n                                    thing.setRowVisibility($('#' + option), false);\r\n                            }\r\n                        });\r\n\r\n                        if (!isFrontTabHidden) {\r\n                            thing.tabsFront.show();\r\n                        }\r\n\r\n                    } else {\r\n                        this.tabsFront.show();\r\n                        this.showDefaultRows();\r\n                    }\r\n\r\n                    this.setRowVisibility(this.defaultValueText, defaultValueTextVisibility);\r\n                    this.setRowVisibility(this.defaultValueTextarea, defaultValueTextareaVisibility);\r\n                    this.setRowVisibility(this.defaultValueDate, defaultValueDateVisibility);\r\n                    this.setRowVisibility(this.defaultValueDatetime, defaultValueDatetimeVisibility);\r\n                    this.setRowVisibility(this.defaultValueYesno, defaultValueYesnoVisibility);\r\n                    this.setRowVisibility(this.isGlobal, scopeVisibility);\r\n\r\n                    /* swatch attributes */\r\n                    this.setRowVisibility(this.useProductImageForSwatch, useProductImageForSwatch);\r\n                    this.setRowVisibility(this.updateProductPreviewImage, defaultValueUpdateImage);\r\n\r\n                    $('input[name=\\'default[]\\']').each(function () {\r\n                        $(this).attr('type', optionDefaultInputType);\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                showDefaultRows: function () {\r\n                    this.setRowVisibility(this.isRequired, true);\r\n                    this.setRowVisibility(this.isUnique, true);\r\n                    this.setRowVisibility(this.frontendClass, true);\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} el\r\n                 * @param {Boolean} isVisible\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                setRowVisibility: function (el, isVisible) {\r\n                    if (isVisible) {\r\n                        el.show();\r\n                        el.closest('.field').show();\r\n                    } else {\r\n                        el.hide();\r\n                        el.closest('.field').hide();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} el\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                _disable: function (el) {\r\n                    el.attr('disabled', 'disabled');\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} el\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                _enable: function (el) {\r\n                    if (!el.attr('readonly')) {\r\n                        el.removeAttr('disabled');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} el\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                _showPanel: function (el) {\r\n                    el.closest('.fieldset').show();\r\n                    el.addClass(activePanelClass);\r\n                    this._render(el.attr('id'));\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} el\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                _hidePanel: function (el) {\r\n                    el.closest('.fieldset').hide();\r\n                    el.removeClass(activePanelClass);\r\n                },\r\n\r\n                /**\r\n                 * @param {String} id\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                _render: function (id) {\r\n                    rg.get(id, function () {\r\n                        $('#' + id).trigger('render');\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * @param {String} promptMessage\r\n                 * @this {swatchProductAttributes}\r\n                 */\r\n                saveAttributeInNewSet: function (promptMessage) {\r\n\r\n                    prompt({\r\n                        content: promptMessage,\r\n                        actions: {\r\n\r\n                            /**\r\n                             * @param {String} val\r\n                             * @this {actions}\r\n                             */\r\n                            confirm: function (val) {\r\n                                var rules = ['required-entry', 'validate-no-html-tags'],\r\n                                    newAttributeSetNameInputId = $('#new_attribute_set_name'),\r\n                                    editForm = $('#edit_form'),\r\n                                    newAttributeSetName = val,\r\n                                    i;\r\n\r\n                                if (!newAttributeSetName) {\r\n                                    return;\r\n                                }\r\n\r\n                                for (i = 0; i < rules.length; i++) {\r\n                                    if (!$.validator.methods[rules[i]](newAttributeSetName)) {\r\n                                        alert({\r\n                                            content: $.validator.messages[rules[i]]\r\n                                        });\r\n\r\n                                        return;\r\n                                    }\r\n                                }\r\n\r\n                                if (newAttributeSetNameInputId.length) {\r\n                                    newAttributeSetNameInputId.val(newAttributeSetName);\r\n                                } else {\r\n                                    editForm.append(new Element('input', {\r\n                                            type: 'hidden',\r\n                                            id: newAttributeSetNameInputId,\r\n                                            name: 'new_attribute_set_name',\r\n                                            value: newAttributeSetName\r\n                                        })\r\n                                    );\r\n                                }\r\n                                // Temporary solution will replaced after refactoring of attributes functionality\r\n                                editForm.triggerHandler('save');\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n        $(function () {\r\n            var editForm = $('#edit_form'),\r\n                swatchVisualPanel = $('#swatch-visual-options-panel'),\r\n                swatchTextPanel = $('#swatch-text-options-panel'),\r\n                tableBody = $(),\r\n                activePanel = $();\r\n\r\n            $('#frontend_input').bind('change', function () {\r\n                swatchProductAttributes.bindAttributeInputType();\r\n            });\r\n            $('#is_filterable').bind('change', function () {\r\n                swatchProductAttributes.switchIsFilterable();\r\n            });\r\n\r\n            swatchProductAttributes.bindAttributeInputType();\r\n\r\n            // @todo: refactor collapsible component\r\n            $('.attribute-popup .collapse, [data-role=\"advanced_fieldset-content\"]')\r\n                .collapsable()\r\n                .collapse('hide');\r\n\r\n            editForm.on('beforeSubmit', function () {\r\n                var optionContainer, optionsValues;\r\n\r\n                activePanel = swatchTextPanel.hasClass(activePanelClass) ? swatchTextPanel : swatchVisualPanel;\r\n                optionContainer = activePanel.find('table tbody');\r\n\r\n                if (activePanel.hasClass(activePanelClass)) {\r\n                    optionsValues = $.map(\r\n                        optionContainer.find('tr'),\r\n                        function (row) {\r\n                            return $(row).find('input, select, textarea').serialize();\r\n                        }\r\n                    );\r\n                    $('<input>')\r\n                        .attr({\r\n                            type: 'hidden',\r\n                            name: 'serialized_options'\r\n                        })\r\n                        .val(JSON.stringify(optionsValues))\r\n                        .prependTo(editForm);\r\n                }\r\n\r\n                tableBody = optionContainer.detach();\r\n            });\r\n\r\n            editForm.on('afterValidate.error highlight.validate', function () {\r\n                if (activePanel.hasClass(activePanelClass)) {\r\n                    activePanel.find('table').append(tableBody);\r\n                    $('input[name=\"serialized_options\"]').remove();\r\n                }\r\n            });\r\n        });\r\n\r\n        window.saveAttributeInNewSet = swatchProductAttributes.saveAttributeInNewSet;\r\n        window.toggleApplyVisibility = swatchProductAttributes.toggleApplyVisibility;\r\n    };\r\n});\r\n","Magento_Swatches/js/text.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global $break $ $$ */\r\n\r\n/**\r\n *  @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'uiRegistry',\r\n    'jquery/ui',\r\n    'prototype',\r\n    'validation'\r\n], function (jQuery, mageTemplate, rg) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var swatchOptionTextDefaultInputType = 'radio',\r\n            swatchTextOption = {\r\n                table: $('swatch-text-options-table'),\r\n                itemCount: 0,\r\n                totalItems: 0,\r\n                rendered: 0,\r\n                isReadOnly: config.isReadOnly,\r\n                template: mageTemplate('#swatch-text-row-template'),\r\n\r\n                /**\r\n                 * Add option\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Object} render\r\n                 */\r\n                add: function (data, render) {\r\n                    var isNewOption = false,\r\n                        element;\r\n\r\n                    if (typeof data.id == 'undefined') {\r\n                        data = {\r\n                            'id': 'option_' + this.itemCount,\r\n                            'sort_order': this.itemCount + 1\r\n                        };\r\n                        isNewOption = true;\r\n                    }\r\n\r\n                    if (!data.intype) {\r\n                        data.intype = swatchOptionTextDefaultInputType;\r\n                    }\r\n\r\n                    element = this.template({\r\n                        data: data\r\n                    });\r\n\r\n                    if (isNewOption && !this.isReadOnly) {\r\n                        this.enableNewOptionDeleteButton(data.id);\r\n                    }\r\n                    this.itemCount++;\r\n                    this.totalItems++;\r\n                    this.elements += element;\r\n\r\n                    if (render) {\r\n                        this.render();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Remove option\r\n                 *\r\n                 * @param {Object} event\r\n                 */\r\n                remove: function (event) {\r\n                    var element = $(Event.findElement(event, 'tr')),\r\n                        elementFlags; // !!! Button already have table parent in safari\r\n\r\n                    // Safari workaround\r\n                    element.ancestors().each(function (parentItem) {\r\n                        if (parentItem.hasClassName('option-row')) {\r\n                            element = parentItem;\r\n                            throw $break;\r\n                        } else if (parentItem.hasClassName('box')) {\r\n                            throw $break;\r\n                        }\r\n                    });\r\n\r\n                    if (element) {\r\n                        elementFlags = element.getElementsByClassName('delete-flag');\r\n\r\n                        if (elementFlags[0]) {\r\n                            elementFlags[0].value = 1;\r\n                        }\r\n\r\n                        element.addClassName('no-display');\r\n                        element.addClassName('template');\r\n                        element.hide();\r\n                        this.totalItems--;\r\n                        this.updateItemsCountField();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Update items count field\r\n                 */\r\n                updateItemsCountField: function () {\r\n                    $('swatch-text-option-count-check').value = this.totalItems > 0 ? '1' : '';\r\n                },\r\n\r\n                /**\r\n                 * Enable delete button for new option\r\n                 *\r\n                 * @param {String} id\r\n                 */\r\n                enableNewOptionDeleteButton: function (id) {\r\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\r\n                        button.enable();\r\n                        button.removeClassName('disabled');\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * Bind remove button\r\n                 */\r\n                bindRemoveButtons: function () {\r\n                    jQuery('#swatch-text-options-panel').on('click', '.delete-option', this.remove.bind(this));\r\n                },\r\n\r\n                /**\r\n                 * Render action\r\n                 */\r\n                render: function () {\r\n                    Element.insert($$('[data-role=swatch-text-options-container]')[0], this.elements);\r\n                    this.elements = '';\r\n                },\r\n\r\n                /**\r\n                 * Render action with delay (performance fix)\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Number} from\r\n                 * @param {Number} step\r\n                 * @param {Number} delay\r\n                 * @returns {Boolean}\r\n                 */\r\n                renderWithDelay: function (data, from, step, delay) {\r\n                    var arrayLength = data.length,\r\n                        len;\r\n\r\n                    for (len = from + step; from < len && from < arrayLength; from++) {\r\n                        this.add(data[from]);\r\n                    }\r\n                    this.render();\r\n\r\n                    if (from === arrayLength) {\r\n                        this.updateItemsCountField();\r\n                        this.rendered = 1;\r\n                        jQuery('body').trigger('processStop');\r\n\r\n                        return true;\r\n                    }\r\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\r\n                },\r\n\r\n                /**\r\n                 * Ignore validate action\r\n                 */\r\n                ignoreValidate: function () {\r\n                    var ignore = '.ignore-validate input, ' +\r\n                        '.ignore-validate select, ' +\r\n                        '.ignore-validate textarea';\r\n\r\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\r\n                }\r\n            };\r\n\r\n        if ($('add_new_swatch_text_option_button')) {\r\n            Event.observe(\r\n                'add_new_swatch_text_option_button',\r\n                'click',\r\n                swatchTextOption.add.bind(swatchTextOption, true)\r\n            );\r\n        }\r\n        jQuery('#swatch-text-options-panel').on('render', function () {\r\n            swatchTextOption.ignoreValidate();\r\n\r\n            if (swatchTextOption.rendered) {\r\n                return false;\r\n            }\r\n            jQuery('body').trigger('processStart');\r\n            swatchTextOption.renderWithDelay(config.attributesData, 0, 100, 300);\r\n            swatchTextOption.bindRemoveButtons();\r\n        });\r\n\r\n        if (config.isSortable) {\r\n            jQuery(function ($) {\r\n                $('[data-role=swatch-text-options-container]').sortable({\r\n                    distance: 8,\r\n                    tolerance: 'pointer',\r\n                    cancel: 'input, button',\r\n                    axis: 'y',\r\n\r\n                    /**\r\n                     * Update components\r\n                     */\r\n                    update: function () {\r\n                        $('[data-role=swatch-text-options-container] [data-role=order]').each(\r\n                            function (index, element) {\r\n                                $(element).val(index + 1);\r\n                            }\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        jQuery(document).ready(function () {\r\n            if (jQuery('#frontend_input').val() !== 'swatch_text') {\r\n                jQuery('.swatch-text-field-0').removeClass('required-option');\r\n            }\r\n        });\r\n\r\n        window.swatchTextOption = swatchTextOption;\r\n        window.swatchOptionTextDefaultInputType = swatchOptionTextDefaultInputType;\r\n\r\n        rg.set('swatch-text-options-panel', swatchTextOption);\r\n    };\r\n});\r\n","Magento_Swatches/js/visual.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global $break $ $$ FORM_KEY */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'uiRegistry',\r\n    'jquery/colorpicker/js/colorpicker',\r\n    'prototype',\r\n    'jquery/ui',\r\n    'validation'\r\n], function (jQuery, mageTemplate, rg) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var swatchOptionVisualDefaultInputType = 'radio',\r\n            swatchVisualOption = {\r\n                table: $('swatch-visual-options-table'),\r\n                itemCount: 0,\r\n                totalItems: 0,\r\n                rendered: 0,\r\n                isReadOnly: config.isReadOnly,\r\n                template: mageTemplate('#swatch-visual-row-template'),\r\n\r\n                /**\r\n                 * Add new option using template\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Object} render\r\n                 */\r\n                add: function (data, render) {\r\n                    var isNewOption = false,\r\n                        element;\r\n\r\n                    if (typeof data.id == 'undefined') {\r\n                        data = {\r\n                            'id': 'option_' + this.itemCount,\r\n                            'sort_order': this.itemCount + 1,\r\n                            'empty_class': 'unavailable'\r\n                        };\r\n                        isNewOption = true;\r\n                    } else if (data.defaultswatch0 === '') {\r\n                        data['empty_class'] = 'unavailable';\r\n                    }\r\n\r\n                    if (!data.intype) {\r\n                        data.intype = swatchOptionVisualDefaultInputType;\r\n                    }\r\n\r\n                    element = this.template({\r\n                        data: data\r\n                    });\r\n\r\n                    if (isNewOption && !this.isReadOnly) {\r\n                        this.enableNewOptionDeleteButton(data.id);\r\n                    }\r\n                    this.itemCount++;\r\n                    this.totalItems++;\r\n                    this.elements += element;\r\n\r\n                    if (render) {\r\n                        this.render();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * ColorPicker initialization process\r\n                 */\r\n                initColorPicker: function () {\r\n                    var element = this,\r\n                        hiddenColorPicker = !jQuery(element).data('colorpickerId');\r\n\r\n                    jQuery(this).ColorPicker({\r\n\r\n                        /**\r\n                         * ColorPicker onShow action\r\n                         */\r\n                        onShow: function () {\r\n                            var color = jQuery(element).parent().parent().prev().prev('input').val(),\r\n                                menu = jQuery(this).parents('.swatch_sub-menu_container');\r\n\r\n                            menu.hide();\r\n                            jQuery(element).ColorPickerSetColor(color);\r\n                        },\r\n\r\n                        /**\r\n                         * ColorPicker onSubmit action\r\n                         *\r\n                         * @param {String} hsb\r\n                         * @param {String} hex\r\n                         * @param {String} rgb\r\n                         * @param {String} el\r\n                         */\r\n                        onSubmit: function (hsb, hex, rgb, el) {\r\n                            var container = jQuery(el).parent().parent().prev();\r\n\r\n                            jQuery(el).ColorPickerHide();\r\n                            container.parent().removeClass('unavailable');\r\n                            container.prev('input').val('#' + hex);\r\n                            container.css('background', '#' + hex);\r\n                        }\r\n                    });\r\n\r\n                    if (hiddenColorPicker) {\r\n                        jQuery(this).ColorPickerShow();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Remove action\r\n                 *\r\n                 * @param {Object} event\r\n                 */\r\n                remove: function (event) {\r\n                    var element = $(Event.findElement(event, 'tr')),\r\n                        elementFlags; // !!! Button already have table parent in safari\r\n\r\n                    // Safari workaround\r\n                    element.ancestors().each(function (parentItem) {\r\n                        if (parentItem.hasClassName('option-row')) {\r\n                            element = parentItem;\r\n                            throw $break;\r\n                        } else if (parentItem.hasClassName('box')) {\r\n                            throw $break;\r\n                        }\r\n                    });\r\n\r\n                    if (element) {\r\n                        elementFlags = element.getElementsByClassName('delete-flag');\r\n\r\n                        if (elementFlags[0]) {\r\n                            elementFlags[0].value = 1;\r\n                        }\r\n\r\n                        element.addClassName('no-display');\r\n                        element.addClassName('template');\r\n                        element.hide();\r\n                        this.totalItems--;\r\n                        this.updateItemsCountField();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Update items count field\r\n                 */\r\n                updateItemsCountField: function () {\r\n                    $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\r\n                },\r\n\r\n                /**\r\n                 * Enable delete button for new option\r\n                 *\r\n                 * @param {String} id\r\n                 */\r\n                enableNewOptionDeleteButton: function (id) {\r\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\r\n                        button.enable();\r\n                        button.removeClassName('disabled');\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * Bind remove button\r\n                 */\r\n                bindRemoveButtons: function () {\r\n                    jQuery('#swatch-visual-options-panel').on('click', '.delete-option', this.remove.bind(this));\r\n                },\r\n\r\n                /**\r\n                 * Render options\r\n                 */\r\n                render: function () {\r\n                    Element.insert($$('[data-role=swatch-visual-options-container]')[0], this.elements);\r\n                    this.elements = '';\r\n                },\r\n\r\n                /**\r\n                 * Render elements with delay (performance fix)\r\n                 *\r\n                 * @param {Object} data\r\n                 * @param {Number} from\r\n                 * @param {Number} step\r\n                 * @param {Number} delay\r\n                 * @returns {Boolean}\r\n                 */\r\n                renderWithDelay: function (data, from, step, delay) {\r\n                    var arrayLength = data.length,\r\n                        len;\r\n\r\n                    for (len = from + step; from < len && from < arrayLength; from++) {\r\n                        this.add(data[from]);\r\n                    }\r\n                    this.render();\r\n\r\n                    if (from === arrayLength) {\r\n                        this.updateItemsCountField();\r\n                        this.rendered = 1;\r\n                        jQuery('body').trigger('processStop');\r\n\r\n                        return true;\r\n                    }\r\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\r\n                },\r\n\r\n                /**\r\n                 * Ignore validate action\r\n                 */\r\n                ignoreValidate: function () {\r\n                    var ignore = '.ignore-validate input, ' +\r\n                        '.ignore-validate select, ' +\r\n                        '.ignore-validate textarea';\r\n\r\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\r\n                }\r\n            };\r\n\r\n        if ($('add_new_swatch_visual_option_button')) {\r\n            Event.observe(\r\n                'add_new_swatch_visual_option_button',\r\n                'click',\r\n                swatchVisualOption.add.bind(swatchVisualOption, {}, true)\r\n            );\r\n        }\r\n\r\n        jQuery('#swatch-visual-options-panel').on('render', function () {\r\n            swatchVisualOption.ignoreValidate();\r\n\r\n            if (swatchVisualOption.rendered) {\r\n                return false;\r\n            }\r\n            jQuery('body').trigger('processStart');\r\n            swatchVisualOption.renderWithDelay(config.attributesData, 0, 100, 300);\r\n            swatchVisualOption.bindRemoveButtons();\r\n            jQuery('#swatch-visual-options-panel').on(\r\n                'click',\r\n                '.colorpicker_handler',\r\n                swatchVisualOption.initColorPicker\r\n            );\r\n        });\r\n        jQuery('body').on('click', function (event) {\r\n            var element = jQuery(event.target);\r\n\r\n            if (\r\n                element.parents('.swatch_sub-menu_container').length === 1 ||\r\n                element.next('div.swatch_sub-menu_container').length === 1\r\n            ) {\r\n                return true;\r\n            }\r\n            jQuery('.swatch_sub-menu_container').hide();\r\n        });\r\n\r\n        if (config.isSortable) {\r\n            jQuery(function ($) {\r\n                $('[data-role=swatch-visual-options-container]').sortable({\r\n                    distance: 8,\r\n                    tolerance: 'pointer',\r\n                    cancel: 'input, button',\r\n                    axis: 'y',\r\n\r\n                    /**\r\n                     * Update component\r\n                     */\r\n                    update: function () {\r\n                        $('[data-role=swatch-visual-options-container] [data-role=order]').each(\r\n                            function (index, element) {\r\n                                $(element).val(index + 1);\r\n                            }\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        window.swatchVisualOption = swatchVisualOption;\r\n        window.swatchOptionVisualDefaultInputType = swatchOptionVisualDefaultInputType;\r\n\r\n        rg.set('swatch-visual-options-panel', swatchVisualOption);\r\n\r\n        jQuery(function ($) {\r\n\r\n            var swatchComponents = {\r\n\r\n                /**\r\n                 * div wrapper for to hide all evement\r\n                 */\r\n                wrapper: null,\r\n\r\n                /**\r\n                 * iframe component to perform file upload without page reload\r\n                 */\r\n                iframe: null,\r\n\r\n                /**\r\n                 * form component for upload image\r\n                 */\r\n                form: null,\r\n\r\n                /**\r\n                 * Input file component for upload image\r\n                 */\r\n                inputFile: null,\r\n\r\n                /**\r\n                 * Create swatch component for upload files\r\n                 *\r\n                 * @this {swatchComponents}\r\n                 * @public\r\n                 */\r\n                create: function () {\r\n                    this.wrapper = $('<div>').css({\r\n                        display: 'none'\r\n                    }).appendTo($('body'));\r\n\r\n                    this.iframe = $('<iframe />', {\r\n                        id:  'upload_iframe',\r\n                        name: 'upload_iframe'\r\n                    }).appendTo(this.wrapper);\r\n\r\n                    this.form = $('<form />', {\r\n                        id: 'swatch_form_image_upload',\r\n                        name: 'swatch_form_image_upload',\r\n                        target: 'upload_iframe',\r\n                        method: 'post',\r\n                        enctype: 'multipart/form-data',\r\n                        class: 'ignore-validate',\r\n                        action: config.uploadActionUrl\r\n                    }).appendTo(this.wrapper);\r\n\r\n                    this.inputFile = $('<input />', {\r\n                        type: 'file',\r\n                        name: 'datafile',\r\n                        class: 'swatch_option_file'\r\n                    }).appendTo(this.form);\r\n\r\n                    $('<input />', {\r\n                        type: 'hidden',\r\n                        name: 'form_key',\r\n                        value: FORM_KEY\r\n                    }).appendTo(this.form);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Create swatch components\r\n             */\r\n            swatchComponents.create();\r\n\r\n            /**\r\n             * Register event for swatch input[type=file] change\r\n             */\r\n            swatchComponents.inputFile.change(function () {\r\n                var container = $('#' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\r\n\r\n                    /**\r\n                     * @this {iframe}\r\n                     */\r\n                    iframeHandler = function () {\r\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\r\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\r\n\r\n                        container.prev('input').val(imageParams['file_path']);\r\n                        container.css({\r\n                            'background-image': 'url(' + fullMediaUrl + ')',\r\n                            'background-size': 'cover'\r\n                        });\r\n                        container.parent().removeClass('unavailable');\r\n                    };\r\n\r\n                swatchComponents.iframe.off('load');\r\n                swatchComponents.iframe.load(iframeHandler);\r\n                swatchComponents.form.submit();\r\n                $(this).val('');\r\n            });\r\n\r\n            /**\r\n             * Register event for choose \"upload image\" option\r\n             */\r\n            $(document).on('click', '.btn_choose_file_upload', function () {\r\n                swatchComponents.inputFile.attr('data-called-by', $(this).attr('id'));\r\n                swatchComponents.inputFile.click();\r\n            });\r\n\r\n            /**\r\n             * Register event for remove option\r\n             */\r\n            $(document).on('click', '.btn_remove_swatch', function () {\r\n                var optionPanel = $(this).parents().eq(2);\r\n\r\n                optionPanel.children('input').val('');\r\n                optionPanel.children('.swatch_window').css('background', '');\r\n\r\n                optionPanel.addClass('unavailable');\r\n\r\n                jQuery('.swatch_sub-menu_container').hide();\r\n            });\r\n\r\n            /**\r\n             * Toggle color upload chooser\r\n             */\r\n            $(document).on('click', '.swatches-visual-col', function () {\r\n                var currentElement = $(this).find('.swatch_sub-menu_container');\r\n\r\n                jQuery('.swatch_sub-menu_container').not(currentElement).hide();\r\n                currentElement.toggle();\r\n            });\r\n        });\r\n    };\r\n});\r\n","Magento_Swatches/js/swatch-renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'mage/smart-keyboard-handler',\r\n    'mage/translate',\r\n    'priceUtils',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/jquery.parsequery',\r\n    'mage/validation/validation'\r\n], function ($, _, mageTemplate, keyboardHandler, $t, priceUtils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Extend form validation to support swatch accessibility\r\n     */\r\n    $.widget('mage.validation', $.mage.validation, {\r\n        /**\r\n         * Handle form with swatches validation. Focus on first invalid swatch block.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} validation\r\n         */\r\n        listenFormValidateHandler: function (event, validation) {\r\n            var swatchWrapper, firstActive, swatches, swatch, successList, errorList, firstSwatch;\r\n\r\n            this._superApply(arguments);\r\n\r\n            swatchWrapper = '.swatch-attribute-options';\r\n            swatches = $(event.target).find(swatchWrapper);\r\n\r\n            if (!swatches.length) {\r\n                return;\r\n            }\r\n\r\n            swatch = '.swatch-attribute';\r\n            firstActive = $(validation.errorList[0].element || []);\r\n            successList = validation.successList;\r\n            errorList = validation.errorList;\r\n            firstSwatch = $(firstActive).parent(swatch).find(swatchWrapper);\r\n\r\n            keyboardHandler.focus(swatches);\r\n\r\n            $.each(successList, function (index, item) {\r\n                $(item).parent(swatch).find(swatchWrapper).attr('aria-invalid', false);\r\n            });\r\n\r\n            $.each(errorList, function (index, item) {\r\n                $(item.element).parent(swatch).find(swatchWrapper).attr('aria-invalid', true);\r\n            });\r\n\r\n            if (firstSwatch.length) {\r\n                $(firstSwatch).focus();\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Render tooltips by attributes (only to up).\r\n     * Required element attributes:\r\n     *  - data-option-type (integer, 0-3)\r\n     *  - data-option-label (string)\r\n     *  - data-option-tooltip-thumb\r\n     *  - data-option-tooltip-value\r\n     *  - data-thumb-width\r\n     *  - data-thumb-height\r\n     */\r\n    $.widget('mage.SwatchRendererTooltip', {\r\n        options: {\r\n            delay: 200,                             //how much ms before tooltip to show\r\n            tooltipClass: 'swatch-option-tooltip'  //configurable, but remember about css\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            var $widget = this,\r\n                $this = this.element,\r\n                $element = $('.' + $widget.options.tooltipClass),\r\n                timer,\r\n                type = parseInt($this.data('option-type'), 10),\r\n                label = $this.data('option-label'),\r\n                thumb = $this.data('option-tooltip-thumb'),\r\n                value = $this.data('option-tooltip-value'),\r\n                width = $this.data('thumb-width'),\r\n                height = $this.data('thumb-height'),\r\n                $image,\r\n                $title,\r\n                $corner;\r\n\r\n            if (!$element.length) {\r\n                $element = $('<div class=\"' +\r\n                    $widget.options.tooltipClass +\r\n                    '\"><div class=\"image\"></div><div class=\"title\"></div><div class=\"corner\"></div></div>'\r\n                );\r\n                $('body').append($element);\r\n            }\r\n\r\n            $image = $element.find('.image');\r\n            $title = $element.find('.title');\r\n            $corner = $element.find('.corner');\r\n\r\n            $this.hover(function () {\r\n                if (!$this.hasClass('disabled')) {\r\n                    timer = setTimeout(\r\n                        function () {\r\n                            var leftOpt = null,\r\n                                leftCorner = 0,\r\n                                left,\r\n                                $window;\r\n\r\n                            if (type === 2) {\r\n                                // Image\r\n                                $image.css({\r\n                                    'background': 'url(\"' + thumb + '\") no-repeat center', //Background case\r\n                                    'background-size': 'initial',\r\n                                    'width': width + 'px',\r\n                                    'height': height + 'px'\r\n                                });\r\n                                $image.show();\r\n                            } else if (type === 1) {\r\n                                // Color\r\n                                $image.css({\r\n                                    background: value\r\n                                });\r\n                                $image.show();\r\n                            } else if (type === 0 || type === 3) {\r\n                                // Default\r\n                                $image.hide();\r\n                            }\r\n\r\n                            $title.text(label);\r\n\r\n                            leftOpt = $this.offset().left;\r\n                            left = leftOpt + $this.width() / 2 - $element.width() / 2;\r\n                            $window = $(window);\r\n\r\n                            // the numbers (5 and 5) is magick constants for offset from left or right page\r\n                            if (left < 0) {\r\n                                left = 5;\r\n                            } else if (left + $element.width() > $window.width()) {\r\n                                left = $window.width() - $element.width() - 5;\r\n                            }\r\n\r\n                            // the numbers (6,  3 and 18) is magick constants for offset tooltip\r\n                            leftCorner = 0;\r\n\r\n                            if ($element.width() < $this.width()) {\r\n                                leftCorner = $element.width() / 2 - 3;\r\n                            } else {\r\n                                leftCorner = (leftOpt > left ? leftOpt - left : left - leftOpt) + $this.width() / 2 - 6;\r\n                            }\r\n\r\n                            $corner.css({\r\n                                left: leftCorner\r\n                            });\r\n                            $element.css({\r\n                                left: left,\r\n                                top: $this.offset().top - $element.height() - $corner.height() - 18\r\n                            }).show();\r\n                        },\r\n                        $widget.options.delay\r\n                    );\r\n                }\r\n            }, function () {\r\n                $element.hide();\r\n                clearTimeout(timer);\r\n            });\r\n\r\n            $(document).on('tap', function () {\r\n                $element.hide();\r\n                clearTimeout(timer);\r\n            });\r\n\r\n            $this.on('tap', function (event) {\r\n                event.stopPropagation();\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Render swatch controls with options and use tooltips.\r\n     * Required two json:\r\n     *  - jsonConfig (magento's option config)\r\n     *  - jsonSwatchConfig (swatch's option config)\r\n     *\r\n     *  Tuning:\r\n     *  - numberToShow (show \"more\" button if options are more)\r\n     *  - onlySwatches (hide selectboxes)\r\n     *  - moreButtonText (text for \"more\" button)\r\n     *  - selectorProduct (selector for product container)\r\n     *  - selectorProductPrice (selector for change price)\r\n     */\r\n    $.widget('mage.SwatchRenderer', {\r\n        options: {\r\n            classes: {\r\n                attributeClass: 'swatch-attribute',\r\n                attributeLabelClass: 'swatch-attribute-label',\r\n                attributeSelectedOptionLabelClass: 'swatch-attribute-selected-option',\r\n                attributeOptionsWrapper: 'swatch-attribute-options',\r\n                attributeInput: 'swatch-input',\r\n                optionClass: 'swatch-option',\r\n                selectClass: 'swatch-select',\r\n                moreButton: 'swatch-more',\r\n                loader: 'swatch-option-loading'\r\n            },\r\n            // option's json config\r\n            jsonConfig: {},\r\n\r\n            // swatch's json config\r\n            jsonSwatchConfig: {},\r\n\r\n            // selector of parental block of prices and swatches (need to know where to seek for price block)\r\n            selectorProduct: '.product-info-main',\r\n\r\n            // selector of price wrapper (need to know where set price)\r\n            selectorProductPrice: '[data-role=priceBox]',\r\n\r\n            //selector of product images gallery wrapper\r\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\r\n\r\n            // selector of category product tile wrapper\r\n            selectorProductTile: '.product-item',\r\n\r\n            // number of controls to show (false or zero = show all)\r\n            numberToShow: false,\r\n\r\n            // show only swatch controls\r\n            onlySwatches: false,\r\n\r\n            // enable label for control\r\n            enableControlLabel: true,\r\n\r\n            // control label id\r\n            controlLabelId: '',\r\n\r\n            // text for more button\r\n            moreButtonText: $t('More'),\r\n\r\n            // Callback url for media\r\n            mediaCallback: '',\r\n\r\n            // Local media cache\r\n            mediaCache: {},\r\n\r\n            // Cache for BaseProduct images. Needed when option unset\r\n            mediaGalleryInitial: [{}],\r\n\r\n            // Use ajax to get image data\r\n            useAjax: false,\r\n\r\n            /**\r\n             * Defines the mechanism of how images of a gallery should be\r\n             * updated when user switches between configurations of a product.\r\n             *\r\n             * As for now value of this option can be either 'replace' or 'prepend'.\r\n             *\r\n             * @type {String}\r\n             */\r\n            gallerySwitchStrategy: 'replace',\r\n\r\n            // whether swatches are rendered in product list or on product page\r\n            inProductList: false,\r\n\r\n            // sly-old-price block selector\r\n            slyOldPriceSelector: '.sly-old-price',\r\n\r\n            // tier prise selectors start\r\n            tierPriceTemplateSelector: '#tier-prices-template',\r\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\r\n            tierPriceTemplate: '',\r\n            // tier prise selectors end\r\n\r\n            // A price label selector\r\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label'\r\n        },\r\n\r\n        /**\r\n         * Get chosen product\r\n         *\r\n         * @returns int|null\r\n         */\r\n        getProduct: function () {\r\n            var products = this._CalcProducts();\r\n\r\n            return _.isArray(products) ? products[0] : null;\r\n        },\r\n\r\n        /**\r\n         * Get chosen product id\r\n         *\r\n         * @returns int|null\r\n         */\r\n        getProductId: function () {\r\n            var products = this._CalcProducts();\r\n\r\n            return _.isArray(products) && products.length === 1 ? products[0] : null;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            // Don't render the same set of swatches twice\r\n            if ($(this.element).attr('data-rendered')) {\r\n                return;\r\n            }\r\n\r\n            $(this.element).attr('data-rendered', true);\r\n\r\n            if (_.isEmpty(this.options.jsonConfig.images)) {\r\n                this.options.useAjax = true;\r\n                // creates debounced variant of _LoadProductMedia()\r\n                // to use it in events handlers instead of _LoadProductMedia()\r\n                this._debouncedLoadProductMedia = _.debounce(this._LoadProductMedia.bind(this), 500);\r\n            }\r\n\r\n            this.options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\r\n\r\n            if (this.options.jsonConfig !== '' && this.options.jsonSwatchConfig !== '') {\r\n                // store unsorted attributes\r\n                this.options.jsonConfig.mappedAttributes = _.clone(this.options.jsonConfig.attributes);\r\n                this._sortAttributes();\r\n                this._RenderControls();\r\n                this._setPreSelectedGallery();\r\n                $(this.element).trigger('swatch.initialized');\r\n            } else {\r\n                console.log('SwatchRenderer: No input data received');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _sortAttributes: function () {\r\n            this.options.jsonConfig.attributes = _.sortBy(this.options.jsonConfig.attributes, function (attribute) {\r\n                return parseInt(attribute.position, 10);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var options = this.options,\r\n                gallery = $('[data-gallery-role=gallery-placeholder]', '.column.main'),\r\n                productData = this._determineProductData(),\r\n                $main = productData.isInProductView ?\r\n                    this.element.parents('.column.main') :\r\n                    this.element.parents('.product-item-info');\r\n\r\n            if (productData.isInProductView) {\r\n                gallery.data('gallery') ?\r\n                    this._onGalleryLoaded(gallery) :\r\n                    gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\r\n            } else {\r\n                options.mediaGalleryInitial = [{\r\n                    'img': $main.find('.product-image-photo').attr('src')\r\n                }];\r\n            }\r\n\r\n            this.productForm = this.element.parents(this.options.selectorProductTile).find('form:first');\r\n            this.inProductList = this.productForm.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Determine product id and related data\r\n         *\r\n         * @returns {{productId: *, isInProductView: bool}}\r\n         * @private\r\n         */\r\n        _determineProductData: function () {\r\n            // Check if product is in a list of products.\r\n            var productId,\r\n                isInProductView = false;\r\n\r\n            productId = this.element.parents('.product-item-details')\r\n                    .find('.price-box.price-final_price').attr('data-product-id');\r\n\r\n            if (!productId) {\r\n                // Check individual product.\r\n                productId = $('[name=product]').val();\r\n                isInProductView = productId > 0;\r\n            }\r\n\r\n            return {\r\n                productId: productId,\r\n                isInProductView: isInProductView\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Render controls\r\n         *\r\n         * @private\r\n         */\r\n        _RenderControls: function () {\r\n            var $widget = this,\r\n                container = this.element,\r\n                classes = this.options.classes,\r\n                chooseText = this.options.jsonConfig.chooseText,\r\n                showTooltip = this.options.showTooltip;\r\n\r\n            $widget.optionsMap = {};\r\n\r\n            $.each(this.options.jsonConfig.attributes, function () {\r\n                var item = this,\r\n                    controlLabelId = 'option-label-' + item.code + '-' + item.id,\r\n                    options = $widget._RenderSwatchOptions(item, controlLabelId),\r\n                    select = $widget._RenderSwatchSelect(item, chooseText),\r\n                    input = $widget._RenderFormInput(item),\r\n                    listLabel = '',\r\n                    label = '';\r\n\r\n                // Show only swatch controls\r\n                if ($widget.options.onlySwatches && !$widget.options.jsonSwatchConfig.hasOwnProperty(item.id)) {\r\n                    return;\r\n                }\r\n\r\n                if ($widget.options.enableControlLabel) {\r\n                    label +=\r\n                        '<span id=\"' + controlLabelId + '\" class=\"' + classes.attributeLabelClass + '\">' +\r\n                        $('<i></i>').text(item.label).html() +\r\n                        '</span>' +\r\n                        '<span class=\"' + classes.attributeSelectedOptionLabelClass + '\"></span>';\r\n                }\r\n\r\n                if ($widget.inProductList) {\r\n                    $widget.productForm.append(input);\r\n                    input = '';\r\n                    listLabel = 'aria-label=\"' + $('<i></i>').text(item.label).html() + '\"';\r\n                } else {\r\n                    listLabel = 'aria-labelledby=\"' + controlLabelId + '\"';\r\n                }\r\n\r\n                // Create new control\r\n                container.append(\r\n                    '<div class=\"' + classes.attributeClass + ' ' + item.code + '\" ' +\r\n                         'data-attribute-code=\"' + item.code + '\" ' +\r\n                         'data-attribute-id=\"' + item.id + '\">' +\r\n                        label +\r\n                        '<div aria-activedescendant=\"\" ' +\r\n                             'tabindex=\"0\" ' +\r\n                             'aria-invalid=\"false\" ' +\r\n                             'aria-required=\"true\" ' +\r\n                             'role=\"listbox\" ' + listLabel +\r\n                             'class=\"' + classes.attributeOptionsWrapper + ' clearfix\">' +\r\n                            options + select +\r\n                        '</div>' + input +\r\n                    '</div>'\r\n                );\r\n\r\n                $widget.optionsMap[item.id] = {};\r\n\r\n                // Aggregate options array to hash (key => value)\r\n                $.each(item.options, function () {\r\n                    if (this.products.length > 0) {\r\n                        $widget.optionsMap[item.id][this.id] = {\r\n                            price: parseInt(\r\n                                $widget.options.jsonConfig.optionPrices[this.products[0]].finalPrice.amount,\r\n                                10\r\n                            ),\r\n                            products: this.products\r\n                        };\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (showTooltip === 1) {\r\n                // Connect Tooltip\r\n                container\r\n                    .find('[data-option-type=\"1\"], [data-option-type=\"2\"],' +\r\n                        ' [data-option-type=\"0\"], [data-option-type=\"3\"]')\r\n                    .SwatchRendererTooltip();\r\n            }\r\n\r\n            // Hide all elements below more button\r\n            $('.' + classes.moreButton).nextAll().hide();\r\n\r\n            // Handle events like click or change\r\n            $widget._EventListener();\r\n\r\n            // Rewind options\r\n            $widget._Rewind(container);\r\n\r\n            //Emulate click on all swatches from Request\r\n            $widget._EmulateSelected($.parseQuery());\r\n            $widget._EmulateSelected($widget._getSelectedAttributes());\r\n        },\r\n\r\n        /**\r\n         * Render swatch options by part of config\r\n         *\r\n         * @param {Object} config\r\n         * @param {String} controlId\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _RenderSwatchOptions: function (config, controlId) {\r\n            var optionConfig = this.options.jsonSwatchConfig[config.id],\r\n                optionClass = this.options.classes.optionClass,\r\n                sizeConfig = this.options.jsonSwatchImageSizeConfig,\r\n                moreLimit = parseInt(this.options.numberToShow, 10),\r\n                moreClass = this.options.classes.moreButton,\r\n                moreText = this.options.moreButtonText,\r\n                countAttributes = 0,\r\n                html = '';\r\n\r\n            if (!this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\r\n                return '';\r\n            }\r\n\r\n            $.each(config.options, function (index) {\r\n                var id,\r\n                    type,\r\n                    value,\r\n                    thumb,\r\n                    label,\r\n                    width,\r\n                    height,\r\n                    attr,\r\n                    swatchImageWidth,\r\n                    swatchImageHeight;\r\n\r\n                if (!optionConfig.hasOwnProperty(this.id)) {\r\n                    return '';\r\n                }\r\n\r\n                // Add more button\r\n                if (moreLimit === countAttributes++) {\r\n                    html += '<a href=\"#\" class=\"' + moreClass + '\"><span>' + moreText + '</span></a>';\r\n                }\r\n\r\n                id = this.id;\r\n                type = parseInt(optionConfig[id].type, 10);\r\n                value = optionConfig[id].hasOwnProperty('value') ?\r\n                    $('<i></i>').text(optionConfig[id].value).html() : '';\r\n                thumb = optionConfig[id].hasOwnProperty('thumb') ? optionConfig[id].thumb : '';\r\n                width = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.width : 110;\r\n                height = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.height : 90;\r\n                label = this.label ? $('<i></i>').text(this.label).html() : '';\r\n                attr =\r\n                    ' id=\"' + controlId + '-item-' + id + '\"' +\r\n                    ' index=\"' + index + '\"' +\r\n                    ' aria-checked=\"false\"' +\r\n                    ' aria-describedby=\"' + controlId + '\"' +\r\n                    ' tabindex=\"0\"' +\r\n                    ' data-option-type=\"' + type + '\"' +\r\n                    ' data-option-id=\"' + id + '\"' +\r\n                    ' data-option-label=\"' + label + '\"' +\r\n                    ' aria-label=\"' + label + '\"' +\r\n                    ' role=\"option\"' +\r\n                    ' data-thumb-width=\"' + width + '\"' +\r\n                    ' data-thumb-height=\"' + height + '\"';\r\n\r\n                attr += thumb !== '' ? ' data-option-tooltip-thumb=\"' + thumb + '\"' : '';\r\n                attr += value !== '' ? ' data-option-tooltip-value=\"' + value + '\"' : '';\r\n\r\n                swatchImageWidth = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.width : 30;\r\n                swatchImageHeight = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.height : 20;\r\n\r\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\r\n                    attr += ' data-option-empty=\"true\"';\r\n                }\r\n\r\n                if (type === 0) {\r\n                    // Text\r\n                    html += '<div class=\"' + optionClass + ' text\" ' + attr + '>' + (value ? value : label) +\r\n                        '</div>';\r\n                } else if (type === 1) {\r\n                    // Color\r\n                    html += '<div class=\"' + optionClass + ' color\" ' + attr +\r\n                        ' style=\"background: ' + value +\r\n                        ' no-repeat center; background-size: initial;\">' + '' +\r\n                        '</div>';\r\n                } else if (type === 2) {\r\n                    // Image\r\n                    html += '<div class=\"' + optionClass + ' image\" ' + attr +\r\n                        ' style=\"background: url(' + value + ') no-repeat center; background-size: initial;width:' +\r\n                        swatchImageWidth + 'px; height:' + swatchImageHeight + 'px\">' + '' +\r\n                        '</div>';\r\n                } else if (type === 3) {\r\n                    // Clear\r\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '></div>';\r\n                } else {\r\n                    // Default\r\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '>' + label + '</div>';\r\n                }\r\n            });\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Render select by part of config\r\n         *\r\n         * @param {Object} config\r\n         * @param {String} chooseText\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _RenderSwatchSelect: function (config, chooseText) {\r\n            var html;\r\n\r\n            if (this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\r\n                return '';\r\n            }\r\n\r\n            html =\r\n                '<select class=\"' + this.options.classes.selectClass + ' ' + config.code + '\">' +\r\n                '<option value=\"0\" data-option-id=\"0\">' + chooseText + '</option>';\r\n\r\n            $.each(config.options, function () {\r\n                var label = this.label,\r\n                    attr = ' value=\"' + this.id + '\" data-option-id=\"' + this.id + '\"';\r\n\r\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\r\n                    attr += ' data-option-empty=\"true\"';\r\n                }\r\n\r\n                html += '<option ' + attr + '>' + label + '</option>';\r\n            });\r\n\r\n            html += '</select>';\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Input for submit form.\r\n         * This control shouldn't have \"type=hidden\", \"display: none\" for validation work :(\r\n         *\r\n         * @param {Object} config\r\n         * @private\r\n         */\r\n        _RenderFormInput: function (config) {\r\n            return '<input class=\"' + this.options.classes.attributeInput + ' super-attribute-select\" ' +\r\n                'name=\"super_attribute[' + config.id + ']\" ' +\r\n                'type=\"text\" ' +\r\n                'value=\"\" ' +\r\n                'data-selector=\"super_attribute[' + config.id + ']\" ' +\r\n                'data-validate=\"{required: true}\" ' +\r\n                'aria-required=\"true\" ' +\r\n                'aria-invalid=\"false\">';\r\n        },\r\n\r\n        /**\r\n         * Event listener\r\n         *\r\n         * @private\r\n         */\r\n        _EventListener: function () {\r\n            var $widget = this,\r\n                options = this.options.classes,\r\n                target;\r\n\r\n            $widget.element.on('click', '.' + options.optionClass, function () {\r\n                return $widget._OnClick($(this), $widget);\r\n            });\r\n\r\n            $widget.element.on('change', '.' + options.selectClass, function () {\r\n                return $widget._OnChange($(this), $widget);\r\n            });\r\n\r\n            $widget.element.on('click', '.' + options.moreButton, function (e) {\r\n                e.preventDefault();\r\n\r\n                return $widget._OnMoreClick($(this));\r\n            });\r\n\r\n            $widget.element.on('keydown', function (e) {\r\n                if (e.which === 13) {\r\n                    target = $(e.target);\r\n\r\n                    if (target.is('.' + options.optionClass)) {\r\n                        return $widget._OnClick(target, $widget);\r\n                    } else if (target.is('.' + options.selectClass)) {\r\n                        return $widget._OnChange(target, $widget);\r\n                    } else if (target.is('.' + options.moreButton)) {\r\n                        e.preventDefault();\r\n\r\n                        return $widget._OnMoreClick(target);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Load media gallery using ajax or json config.\r\n         *\r\n         * @private\r\n         */\r\n        _loadMedia: function () {\r\n            var $main = this.inProductList ?\r\n                    this.element.parents('.product-item-info') :\r\n                    this.element.parents('.column.main'),\r\n                images;\r\n\r\n            if (this.options.useAjax) {\r\n                this._debouncedLoadProductMedia();\r\n            }  else {\r\n                images = this.options.jsonConfig.images[this.getProduct()];\r\n\r\n                if (!images) {\r\n                    images = this.options.mediaGalleryInitial;\r\n                }\r\n                this.updateBaseImage(this._sortImages(images), $main, !this.inProductList);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sorting images array\r\n         *\r\n         * @private\r\n         */\r\n        _sortImages: function (images) {\r\n            return _.sortBy(images, function (image) {\r\n                return parseInt(image.position, 10);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Event for swatch options\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $widget\r\n         * @private\r\n         */\r\n        _OnClick: function ($this, $widget) {\r\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\r\n                $wrapper = $this.parents('.' + $widget.options.classes.attributeOptionsWrapper),\r\n                $label = $parent.find('.' + $widget.options.classes.attributeSelectedOptionLabelClass),\r\n                attributeId = $parent.data('attribute-id'),\r\n                $input = $parent.find('.' + $widget.options.classes.attributeInput),\r\n                checkAdditionalData = JSON.parse(this.options.jsonSwatchConfig[attributeId]['additional_data']),\r\n                $priceBox = $widget.element.parents($widget.options.selectorProduct)\r\n                    .find(this.options.selectorProductPrice);\r\n\r\n            if ($widget.inProductList) {\r\n                $input = $widget.productForm.find(\r\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\r\n                );\r\n            }\r\n\r\n            if ($this.hasClass('disabled')) {\r\n                return;\r\n            }\r\n\r\n            if ($this.hasClass('selected')) {\r\n                $parent.removeAttr('data-option-selected').find('.selected').removeClass('selected');\r\n                $input.val('');\r\n                $label.text('');\r\n                $this.attr('aria-checked', false);\r\n            } else {\r\n                $parent.attr('data-option-selected', $this.data('option-id')).find('.selected').removeClass('selected');\r\n                $label.text($this.data('option-label'));\r\n                $input.val($this.data('option-id'));\r\n                $input.attr('data-attr-name', this._getAttributeCodeById(attributeId));\r\n                $this.addClass('selected');\r\n                $widget._toggleCheckedAttributes($this, $wrapper);\r\n            }\r\n\r\n            $widget._Rebuild();\r\n\r\n            if ($priceBox.is(':data(mage-priceBox)')) {\r\n                $widget._UpdatePrice();\r\n            }\r\n\r\n            $(document).trigger('updateMsrpPriceBlock',\r\n                [\r\n                    this._getSelectedOptionPriceIndex(),\r\n                    $widget.options.jsonConfig.optionPrices,\r\n                    $priceBox\r\n                ]);\r\n\r\n            if (parseInt(checkAdditionalData['update_product_preview_image'], 10) === 1) {\r\n                $widget._loadMedia();\r\n            }\r\n\r\n            $input.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Get selected option price index\r\n         *\r\n         * @return {String|undefined}\r\n         * @private\r\n         */\r\n        _getSelectedOptionPriceIndex: function () {\r\n            var allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\r\n\r\n            if (_.isEmpty(allowedProduct)) {\r\n                return undefined;\r\n            }\r\n\r\n            return allowedProduct;\r\n        },\r\n\r\n        /**\r\n         * Get human readable attribute code (eg. size, color) by it ID from configuration\r\n         *\r\n         * @param {Number} attributeId\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getAttributeCodeById: function (attributeId) {\r\n            var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\r\n\r\n            return attribute ? attribute.code : attributeId;\r\n        },\r\n\r\n        /**\r\n         * Toggle accessibility attributes\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $wrapper\r\n         * @private\r\n         */\r\n        _toggleCheckedAttributes: function ($this, $wrapper) {\r\n            $wrapper.attr('aria-activedescendant', $this.attr('id'))\r\n                    .find('.' + this.options.classes.optionClass).attr('aria-checked', false);\r\n            $this.attr('aria-checked', true);\r\n        },\r\n\r\n        /**\r\n         * Event for select\r\n         *\r\n         * @param {Object} $this\r\n         * @param {Object} $widget\r\n         * @private\r\n         */\r\n        _OnChange: function ($this, $widget) {\r\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\r\n                attributeId = $parent.data('attribute-id'),\r\n                $input = $parent.find('.' + $widget.options.classes.attributeInput);\r\n\r\n            if ($widget.productForm.length > 0) {\r\n                $input = $widget.productForm.find(\r\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\r\n                );\r\n            }\r\n\r\n            if ($this.val() > 0) {\r\n                $parent.attr('data-option-selected', $this.val());\r\n                $input.val($this.val());\r\n            } else {\r\n                $parent.removeAttr('data-option-selected');\r\n                $input.val('');\r\n            }\r\n\r\n            $widget._Rebuild();\r\n            $widget._UpdatePrice();\r\n            $widget._loadMedia();\r\n            $input.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Event for more switcher\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _OnMoreClick: function ($this) {\r\n            $this.nextAll().show();\r\n            $this.blur().remove();\r\n        },\r\n\r\n        /**\r\n         * Rewind options for controls\r\n         *\r\n         * @private\r\n         */\r\n        _Rewind: function (controls) {\r\n            controls.find('div[data-option-id], option[data-option-id]').removeClass('disabled').removeAttr('disabled');\r\n            controls.find('div[data-option-empty], option[data-option-empty]')\r\n                .attr('disabled', true)\r\n                .addClass('disabled')\r\n                .attr('tabindex', '-1');\r\n        },\r\n\r\n        /**\r\n         * Rebuild container\r\n         *\r\n         * @private\r\n         */\r\n        _Rebuild: function () {\r\n            var $widget = this,\r\n                controls = $widget.element.find('.' + $widget.options.classes.attributeClass + '[data-attribute-id]'),\r\n                selected = controls.filter('[data-option-selected]');\r\n\r\n            // Enable all options\r\n            $widget._Rewind(controls);\r\n\r\n            // done if nothing selected\r\n            if (selected.length <= 0) {\r\n                return;\r\n            }\r\n\r\n            // Disable not available options\r\n            controls.each(function () {\r\n                var $this = $(this),\r\n                    id = $this.data('attribute-id'),\r\n                    products = $widget._CalcProducts(id);\r\n\r\n                if (selected.length === 1 && selected.first().data('attribute-id') === id) {\r\n                    return;\r\n                }\r\n\r\n                $this.find('[data-option-id]').each(function () {\r\n                    var $element = $(this),\r\n                        option = $element.data('option-id');\r\n\r\n                    if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option) ||\r\n                        $element.hasClass('selected') ||\r\n                        $element.is(':selected')) {\r\n                        return;\r\n                    }\r\n\r\n                    if (_.intersection(products, $widget.optionsMap[id][option].products).length <= 0) {\r\n                        $element.attr('disabled', true).addClass('disabled');\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get selected product list\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _CalcProducts: function ($skipAttributeId) {\r\n            var $widget = this,\r\n                selectedOptions = '.' + $widget.options.classes.attributeClass + '[data-option-selected]',\r\n                products = [];\r\n\r\n            // Generate intersection of products\r\n            $widget.element.find(selectedOptions).each(function () {\r\n                var id = $(this).data('attribute-id'),\r\n                    option = $(this).attr('data-option-selected');\r\n\r\n                if ($skipAttributeId !== undefined && $skipAttributeId === id) {\r\n                    return;\r\n                }\r\n\r\n                if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option)) {\r\n                    return;\r\n                }\r\n\r\n                if (products.length === 0) {\r\n                    products = $widget.optionsMap[id][option].products;\r\n                } else {\r\n                    products = _.intersection(products, $widget.optionsMap[id][option].products);\r\n                }\r\n            });\r\n\r\n            return products;\r\n        },\r\n\r\n        /**\r\n         * Update total price\r\n         *\r\n         * @private\r\n         */\r\n        _UpdatePrice: function () {\r\n            var $widget = this,\r\n                $product = $widget.element.parents($widget.options.selectorProduct),\r\n                $productPrice = $product.find(this.options.selectorProductPrice),\r\n                result = $widget._getNewPrices(),\r\n                tierPriceHtml,\r\n                isShow;\r\n\r\n            $productPrice.trigger(\r\n                'updatePrice',\r\n                {\r\n                    'prices': $widget._getPrices(result, $productPrice.priceBox('option').prices)\r\n                }\r\n            );\r\n\r\n            isShow = typeof result != 'undefined' && result.oldPrice.amount !== result.finalPrice.amount;\r\n\r\n            $productPrice.find('span:first').toggleClass('special-price', isShow);\r\n\r\n            $product.find(this.options.slyOldPriceSelector)[isShow ? 'show' : 'hide']();\r\n\r\n            if (typeof result != 'undefined' && result.tierPrices && result.tierPrices.length) {\r\n                if (this.options.tierPriceTemplate) {\r\n                    tierPriceHtml = mageTemplate(\r\n                        this.options.tierPriceTemplate,\r\n                        {\r\n                            'tierPrices': result.tierPrices,\r\n                            '$t': $t,\r\n                            'currencyFormat': this.options.jsonConfig.currencyFormat,\r\n                            'priceUtils': priceUtils\r\n                        }\r\n                    );\r\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\r\n                }\r\n            } else {\r\n                $(this.options.tierPriceBlockSelector).hide();\r\n            }\r\n\r\n            $(this.options.normalPriceLabelSelector).hide();\r\n\r\n            _.each($('.' + this.options.classes.attributeOptionsWrapper), function (attribute) {\r\n                if ($(attribute).find('.' + this.options.classes.optionClass + '.selected').length === 0) {\r\n                    if ($(attribute).find('.' + this.options.classes.selectClass).length > 0) {\r\n                        _.each($(attribute).find('.' + this.options.classes.selectClass), function (dropdown) {\r\n                            if ($(dropdown).val() === '0') {\r\n                                $(this.options.normalPriceLabelSelector).show();\r\n                            }\r\n                        }.bind(this));\r\n                    } else {\r\n                        $(this.options.normalPriceLabelSelector).show();\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Get new prices for selected options\r\n         *\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getNewPrices: function () {\r\n            var $widget = this,\r\n                newPrices = $widget.options.jsonConfig.prices,\r\n                allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\r\n\r\n            if (!_.isEmpty(allowedProduct)) {\r\n                newPrices = this.options.jsonConfig.optionPrices[allowedProduct];\r\n            }\r\n\r\n            return newPrices;\r\n        },\r\n\r\n        /**\r\n         * Get prices\r\n         *\r\n         * @param {Object} newPrices\r\n         * @param {Object} displayPrices\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getPrices: function (newPrices, displayPrices) {\r\n            var $widget = this;\r\n\r\n            if (_.isEmpty(newPrices)) {\r\n                newPrices = $widget._getNewPrices();\r\n            }\r\n            _.each(displayPrices, function (price, code) {\r\n\r\n                if (newPrices[code]) {\r\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\r\n                }\r\n            });\r\n\r\n            return displayPrices;\r\n        },\r\n\r\n        /**\r\n         * Get product with minimum price from selected options.\r\n         *\r\n         * @param {Array} allowedProducts\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\r\n            var optionPrices = this.options.jsonConfig.optionPrices,\r\n                product = {},\r\n                optionFinalPrice, optionMinPrice;\r\n\r\n            _.each(allowedProducts, function (allowedProduct) {\r\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\r\n\r\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\r\n                    optionMinPrice = optionFinalPrice;\r\n                    product = allowedProduct;\r\n                }\r\n            }, this);\r\n\r\n            return product;\r\n        },\r\n\r\n        /**\r\n         * Gets all product media and change current to the needed one\r\n         *\r\n         * @private\r\n         */\r\n        _LoadProductMedia: function () {\r\n            var $widget = this,\r\n                $this = $widget.element,\r\n                productData = this._determineProductData(),\r\n                mediaCallData,\r\n                mediaCacheKey,\r\n\r\n                /**\r\n                 * Processes product media data\r\n                 *\r\n                 * @param {Object} data\r\n                 * @returns void\r\n                 */\r\n                mediaSuccessCallback = function (data) {\r\n                    if (!(mediaCacheKey in $widget.options.mediaCache)) {\r\n                        $widget.options.mediaCache[mediaCacheKey] = data;\r\n                    }\r\n                    $widget._ProductMediaCallback($this, data, productData.isInProductView);\r\n                    setTimeout(function () {\r\n                        $widget._DisableProductMediaLoader($this);\r\n                    }, 300);\r\n                };\r\n\r\n            if (!$widget.options.mediaCallback) {\r\n                return;\r\n            }\r\n\r\n            mediaCallData = {\r\n                'product_id': this.getProduct()\r\n            };\r\n\r\n            mediaCacheKey = JSON.stringify(mediaCallData);\r\n\r\n            if (mediaCacheKey in $widget.options.mediaCache) {\r\n                $widget._XhrKiller();\r\n                $widget._EnableProductMediaLoader($this);\r\n                mediaSuccessCallback($widget.options.mediaCache[mediaCacheKey]);\r\n            } else {\r\n                mediaCallData.isAjax = true;\r\n                $widget._XhrKiller();\r\n                $widget._EnableProductMediaLoader($this);\r\n                $widget.xhr = $.ajax({\r\n                    url: $widget.options.mediaCallback,\r\n                    cache: true,\r\n                    type: 'GET',\r\n                    dataType: 'json',\r\n                    data: mediaCallData,\r\n                    success: mediaSuccessCallback\r\n                }).done(function () {\r\n                    $widget._XhrKiller();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable loader\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _EnableProductMediaLoader: function ($this) {\r\n            var $widget = this;\r\n\r\n            if ($('body.catalog-product-view').length > 0) {\r\n                $this.parents('.column.main').find('.photo.image')\r\n                    .addClass($widget.options.classes.loader);\r\n            } else {\r\n                //Category View\r\n                $this.parents('.product-item-info').find('.product-image-photo')\r\n                    .addClass($widget.options.classes.loader);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable loader\r\n         *\r\n         * @param {Object} $this\r\n         * @private\r\n         */\r\n        _DisableProductMediaLoader: function ($this) {\r\n            var $widget = this;\r\n\r\n            if ($('body.catalog-product-view').length > 0) {\r\n                $this.parents('.column.main').find('.photo.image')\r\n                    .removeClass($widget.options.classes.loader);\r\n            } else {\r\n                //Category View\r\n                $this.parents('.product-item-info').find('.product-image-photo')\r\n                    .removeClass($widget.options.classes.loader);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback for product media\r\n         *\r\n         * @param {Object} $this\r\n         * @param {String} response\r\n         * @param {Boolean} isInProductView\r\n         * @private\r\n         */\r\n        _ProductMediaCallback: function ($this, response, isInProductView) {\r\n            var $main = isInProductView ? $this.parents('.column.main') : $this.parents('.product-item-info'),\r\n                $widget = this,\r\n                images = [],\r\n\r\n                /**\r\n                 * Check whether object supported or not\r\n                 *\r\n                 * @param {Object} e\r\n                 * @returns {*|Boolean}\r\n                 */\r\n                support = function (e) {\r\n                    return e.hasOwnProperty('large') && e.hasOwnProperty('medium') && e.hasOwnProperty('small');\r\n                };\r\n\r\n            if (_.size($widget) < 1 || !support(response)) {\r\n                this.updateBaseImage(this.options.mediaGalleryInitial, $main, isInProductView);\r\n\r\n                return;\r\n            }\r\n\r\n            images.push({\r\n                full: response.large,\r\n                img: response.medium,\r\n                thumb: response.small,\r\n                isMain: true\r\n            });\r\n\r\n            if (response.hasOwnProperty('gallery')) {\r\n                $.each(response.gallery, function () {\r\n                    if (!support(this) || response.large === this.large) {\r\n                        return;\r\n                    }\r\n                    images.push({\r\n                        full: this.large,\r\n                        img: this.medium,\r\n                        thumb: this.small\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.updateBaseImage(images, $main, isInProductView);\r\n        },\r\n\r\n        /**\r\n         * Check if images to update are initial and set their type\r\n         * @param {Array} images\r\n         */\r\n        _setImageType: function (images) {\r\n            var initial = this.options.mediaGalleryInitial[0].img;\r\n\r\n            if (images[0].img === initial) {\r\n                images = $.extend(true, [], this.options.mediaGalleryInitial);\r\n            } else {\r\n                images.map(function (img) {\r\n                    if (!img.type) {\r\n                        img.type = 'image';\r\n                    }\r\n                });\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * Update [gallery-placeholder] or [product-image-photo]\r\n         * @param {Array} images\r\n         * @param {jQuery} context\r\n         * @param {Boolean} isInProductView\r\n         */\r\n        updateBaseImage: function (images, context, isInProductView) {\r\n            var justAnImage = images[0],\r\n                initialImages = this.options.mediaGalleryInitial,\r\n                imagesToUpdate,\r\n                gallery = context.find(this.options.mediaGallerySelector).data('gallery'),\r\n                isInitial;\r\n\r\n            if (isInProductView) {\r\n                if (_.isUndefined(gallery)) {\r\n                    context.find(this.options.mediaGallerySelector).on('gallery:loaded', function () {\r\n                        this.updateBaseImage(images, context, isInProductView);\r\n                    }.bind(this));\r\n\r\n                    return;\r\n                }\r\n\r\n                imagesToUpdate = images.length ? this._setImageType($.extend(true, [], images)) : [];\r\n                isInitial = _.isEqual(imagesToUpdate, initialImages);\r\n\r\n                if (this.options.gallerySwitchStrategy === 'prepend' && !isInitial) {\r\n                    imagesToUpdate = imagesToUpdate.concat(initialImages);\r\n                }\r\n\r\n                imagesToUpdate = this._setImageIndex(imagesToUpdate);\r\n\r\n                gallery.updateData(imagesToUpdate);\r\n                this._addFotoramaVideoEvents(isInitial);\r\n            } else if (justAnImage && justAnImage.img) {\r\n                context.find('.product-image-photo').attr('src', justAnImage.img);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add video events\r\n         *\r\n         * @param {Boolean} isInitial\r\n         * @private\r\n         */\r\n        _addFotoramaVideoEvents: function (isInitial) {\r\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\r\n                return;\r\n            }\r\n\r\n            if (isInitial) {\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\r\n\r\n                return;\r\n            }\r\n\r\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\r\n                selectedOption: this.getProduct(),\r\n                dataMergeStrategy: this.options.gallerySwitchStrategy\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set correct indexes for image set.\r\n         *\r\n         * @param {Array} images\r\n         * @private\r\n         */\r\n        _setImageIndex: function (images) {\r\n            var length = images.length,\r\n                i;\r\n\r\n            for (i = 0; length > i; i++) {\r\n                images[i].i = i + 1;\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * Kill doubled AJAX requests\r\n         *\r\n         * @private\r\n         */\r\n        _XhrKiller: function () {\r\n            var $widget = this;\r\n\r\n            if ($widget.xhr !== undefined && $widget.xhr !== null) {\r\n                $widget.xhr.abort();\r\n                $widget.xhr = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Emulate mouse click on all swatches that should be selected\r\n         * @param {Object} [selectedAttributes]\r\n         * @private\r\n         */\r\n        _EmulateSelected: function (selectedAttributes) {\r\n            $.each(selectedAttributes, $.proxy(function (attributeCode, optionId) {\r\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\r\n                    '[data-attribute-code=\"' + attributeCode + '\"] [data-option-id=\"' + optionId + '\"]'),\r\n                    parentInput = elem.parent();\r\n\r\n                if (elem.hasClass('selected')) {\r\n                    return;\r\n                }\r\n\r\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\r\n                    parentInput.val(optionId);\r\n                    parentInput.trigger('change');\r\n                } else {\r\n                    elem.trigger('click');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Emulate mouse click or selection change on all swatches that should be selected\r\n         * @param {Object} [selectedAttributes]\r\n         * @private\r\n         */\r\n        _EmulateSelectedByAttributeId: function (selectedAttributes) {\r\n            $.each(selectedAttributes, $.proxy(function (attributeId, optionId) {\r\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\r\n                    '[data-attribute-id=\"' + attributeId + '\"] [data-option-id=\"' + optionId + '\"]'),\r\n                    parentInput = elem.parent();\r\n\r\n                if (elem.hasClass('selected')) {\r\n                    return;\r\n                }\r\n\r\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\r\n                    parentInput.val(optionId);\r\n                    parentInput.trigger('change');\r\n                } else {\r\n                    elem.trigger('click');\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Get default options values settings with either URL query parameters\r\n         * @private\r\n         */\r\n        _getSelectedAttributes: function () {\r\n            var hashIndex = window.location.href.indexOf('#'),\r\n                selectedAttributes = {},\r\n                params;\r\n\r\n            if (hashIndex !== -1) {\r\n                params = $.parseQuery(window.location.href.substr(hashIndex + 1));\r\n\r\n                selectedAttributes = _.invert(_.mapObject(_.invert(params), function (attributeId) {\r\n                    var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\r\n\r\n                    return attribute ? attribute.code : attributeId;\r\n                }.bind(this)));\r\n            }\r\n\r\n            return selectedAttributes;\r\n        },\r\n\r\n        /**\r\n         * Callback which fired after gallery gets initialized.\r\n         *\r\n         * @param {HTMLElement} element - DOM element associated with a gallery.\r\n         */\r\n        _onGalleryLoaded: function (element) {\r\n            var galleryObject = element.data('gallery');\r\n\r\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\r\n        },\r\n\r\n        /**\r\n         * Sets mediaCache for cases when jsonConfig contains preSelectedGallery on layered navigation result pages\r\n         *\r\n         * @private\r\n         */\r\n        _setPreSelectedGallery: function () {\r\n            var mediaCallData;\r\n\r\n            if (this.options.jsonConfig.preSelectedGallery) {\r\n                mediaCallData = {\r\n                    'product_id': this.getProduct()\r\n                };\r\n\r\n                this.options.mediaCache[JSON.stringify(mediaCallData)] = this.options.jsonConfig.preSelectedGallery;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.SwatchRenderer;\r\n});\r\n","Magento_Swatches/js/form/element/swatch-visual.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global $break $ FORM_KEY */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'mage/template',\r\n    'uiRegistry',\r\n    'prototype',\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'jquery/colorpicker/js/colorpicker',\r\n    'jquery/ui'\r\n], function (_, jQuery, mageTemplate, rg, prototype, Abstract) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Former implementation.\r\n     *\r\n     * @param {*} value\r\n     * @param {Object} container\r\n     * @param {String} uploadUrl\r\n     * @param {String} elementName\r\n     */\r\n    function oldCode(value, container, uploadUrl, elementName) {\r\n        var swatchVisualOption = {\r\n            itemCount: 0,\r\n            totalItems: 0,\r\n            rendered: 0,\r\n            isReadOnly: false,\r\n\r\n            /**\r\n             * Initialize.\r\n             */\r\n            initialize: function () {\r\n                if (_.isEmpty(value)) {\r\n                    container.addClassName('unavailable');\r\n                }\r\n\r\n                jQuery(container).on(\r\n                    'click',\r\n                    '.colorpicker_handler',\r\n                    this.initColorPicker\r\n                );\r\n            },\r\n\r\n            /**\r\n             * ColorPicker initialization process\r\n             */\r\n            initColorPicker: function () {\r\n                var element = this,\r\n                    hiddenColorPicker = !jQuery(element).data('colorpickerId');\r\n\r\n                jQuery(this).ColorPicker({\r\n\r\n                    /**\r\n                     * ColorPicker onShow action\r\n                     */\r\n                    onShow: function () {\r\n                        var color = jQuery(element).parent().parent().prev().prev('input').val(),\r\n                            menu = jQuery(this).parents('.swatch_sub-menu_container');\r\n\r\n                        menu.hide();\r\n                        jQuery(element).ColorPickerSetColor(color);\r\n                    },\r\n\r\n                    /**\r\n                     * ColorPicker onSubmit action\r\n                     *\r\n                     * @param {String} hsb\r\n                     * @param {String} hex\r\n                     * @param {String} rgb\r\n                     * @param {String} el\r\n                     */\r\n                    onSubmit: function (hsb, hex, rgb, el) {\r\n                        var localContainer = jQuery(el).parent().parent().prev();\r\n\r\n                        jQuery(el).ColorPickerHide();\r\n                        localContainer.parent().removeClass('unavailable');\r\n                        localContainer.prev('input').val('#' + hex).trigger('change');\r\n                        localContainer.css('background', '#' + hex);\r\n                    }\r\n                });\r\n\r\n                if (hiddenColorPicker) {\r\n                    jQuery(this).ColorPickerShow();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove action\r\n             *\r\n             * @param {Object} event\r\n             */\r\n            remove: function (event) {\r\n                var element = $(Event.findElement(event, 'tr')),\r\n                    elementFlags; // !!! Button already have table parent in safari\r\n\r\n                // Safari workaround\r\n                element.ancestors().each(function (parentItem) {\r\n                    if (parentItem.hasClassName('option-row')) {\r\n                        element = parentItem;\r\n                        throw $break;\r\n                    } else if (parentItem.hasClassName('box')) {\r\n                        throw $break;\r\n                    }\r\n                });\r\n\r\n                if (element) {\r\n                    elementFlags = element.getElementsByClassName('delete-flag');\r\n\r\n                    if (elementFlags[0]) {\r\n                        elementFlags[0].value = 1;\r\n                    }\r\n\r\n                    element.addClassName('no-display');\r\n                    element.addClassName('template');\r\n                    element.hide();\r\n                    this.totalItems--;\r\n                    this.updateItemsCountField();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update items count field\r\n             */\r\n            updateItemsCountField: function () {\r\n                $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\r\n            }\r\n        };\r\n\r\n        //swatchVisualOption.initColorPicker();\r\n\r\n        jQuery('body').on('click', function (event) {\r\n            var element = jQuery(event.target);\r\n\r\n            if (\r\n                element.parents('.swatch_sub-menu_container').length === 1 ||\r\n                element.next('div.swatch_sub-menu_container').length === 1\r\n            ) {\r\n                return true;\r\n            }\r\n            jQuery('.swatch_sub-menu_container').hide();\r\n        });\r\n\r\n        jQuery(function ($) {\r\n\r\n            var swatchComponents = {\r\n\r\n                /**\r\n                 * div wrapper for to hide all evement\r\n                 */\r\n                wrapper: null,\r\n\r\n                /**\r\n                 * iframe component to perform file upload without page reload\r\n                 */\r\n                iframe: null,\r\n\r\n                /**\r\n                 * form component for upload image\r\n                 */\r\n                form: null,\r\n\r\n                /**\r\n                 * Input file component for upload image\r\n                 */\r\n                inputFile: null,\r\n\r\n                /**\r\n                 * Create swatch component for upload files\r\n                 *\r\n                 * @this {swatchComponents}\r\n                 * @public\r\n                 */\r\n                create: function () {\r\n                    this.wrapper = $('<div>').css({\r\n                        display: 'none'\r\n                    }).appendTo($('body'));\r\n\r\n                    this.iframe = $('<iframe />', {\r\n                        name: 'upload_iframe_' + elementName\r\n                    }).appendTo(this.wrapper);\r\n\r\n                    this.form = $('<form />', {\r\n                        name: 'swatch_form_image_upload_' + elementName,\r\n                        target: 'upload_iframe_' + elementName,\r\n                        method: 'post',\r\n                        enctype: 'multipart/form-data',\r\n                        class: 'ignore-validate',\r\n                        action: uploadUrl\r\n                    }).appendTo(this.wrapper);\r\n\r\n                    this.inputFile = $('<input />', {\r\n                        type: 'file',\r\n                        name: 'datafile',\r\n                        class: 'swatch_option_file'\r\n                    }).appendTo(this.form);\r\n\r\n                    $('<input />', {\r\n                        type: 'hidden',\r\n                        name: 'form_key',\r\n                        value: FORM_KEY\r\n                    }).appendTo(this.form);\r\n                }\r\n            };\r\n\r\n            swatchVisualOption.initialize();\r\n\r\n            /**\r\n             * Create swatch components\r\n             */\r\n            swatchComponents.create();\r\n\r\n            /**\r\n             * Register event for swatch input[type=file] change\r\n             */\r\n            swatchComponents.inputFile.change(function () {\r\n                var localContainer = $('.' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\r\n\r\n                    /**\r\n                     * @this {iframe}\r\n                     */\r\n                    iframeHandler = function () {\r\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\r\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\r\n\r\n                        localContainer.prev('input').val(imageParams['file_path']).trigger('change');\r\n                        localContainer.css({\r\n                            'background-image': 'url(' + fullMediaUrl + ')',\r\n                            'background-size': 'cover'\r\n                        });\r\n                        localContainer.parent().removeClass('unavailable');\r\n                    };\r\n\r\n                swatchComponents.iframe.off('load');\r\n                swatchComponents.iframe.load(iframeHandler);\r\n                swatchComponents.form.submit();\r\n                $(this).val('');\r\n            });\r\n\r\n            /**\r\n             * Register event for choose \"upload image\" option\r\n             */\r\n            $(container).on('click', '.btn_choose_file_upload', function () {\r\n                swatchComponents.inputFile.attr('data-called-by', $(this).data('class'));\r\n                swatchComponents.inputFile.click();\r\n            });\r\n\r\n            /**\r\n             * Register event for remove option\r\n             */\r\n            $(container).on('click', '.btn_remove_swatch', function () {\r\n                var optionPanel = $(this).parents().eq(2);\r\n\r\n                optionPanel.children('input').val('').trigger('change');\r\n                optionPanel.children('.swatch_window').css('background', '');\r\n                optionPanel.addClass('unavailable');\r\n                jQuery('.swatch_sub-menu_container').hide();\r\n            });\r\n\r\n            /**\r\n             * Toggle color upload chooser\r\n             */\r\n            $(container).on('click', '.swatch_window', function () {\r\n                jQuery('.swatch_sub-menu_container').hide();\r\n                $(this).next('div').toggle();\r\n            });\r\n        });\r\n    }\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            elementId: 0,\r\n            prefixName: '',\r\n            prefixElementName: '',\r\n            elementName: '',\r\n            value: '',\r\n            uploadUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Parses options and merges the result with instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.configureDataScope();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initOldCode()\r\n                .on('value', this.onChangeColor.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler function that execute when color changes.\r\n         *\r\n         * @param {String} data - color\r\n         */\r\n        onChangeColor: function (data) {\r\n            if (!data) {\r\n                jQuery('.' + this.elementName).parent().removeClass('unavailable');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize wrapped former implementation.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOldCode: function () {\r\n            jQuery.async('.' + this.elementName, this.name, function (elem) {\r\n                oldCode(this.value(), elem.parentElement, this.uploadUrl, this.elementName);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure data scope.\r\n         */\r\n        configureDataScope: function () {\r\n            var recordId, prefixName;\r\n\r\n            // Get recordId\r\n            recordId = this.parentName.split('.').last();\r\n\r\n            prefixName = this.dataScopeToHtmlArray(this.prefixName);\r\n            this.elementName = this.prefixElementName + recordId;\r\n\r\n            this.inputName = prefixName + '[' + this.elementName + ']';\r\n            this.exportDataLink = 'data.' + this.prefixName + '.' + this.elementName;\r\n            this.exports.value = this.provider + ':' + this.exportDataLink;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.source.remove(this.exportDataLink);\r\n        },\r\n\r\n        /**\r\n         * Get HTML array from data scope.\r\n         *\r\n         * @param {String} dataScopeString\r\n         * @returns {String}\r\n         */\r\n        dataScopeToHtmlArray: function (dataScopeString) {\r\n            var dataScopeArray, dataScope, reduceFunction;\r\n\r\n            /**\r\n             * Add new level of nesting.\r\n             *\r\n             * @param {String} prev\r\n             * @param {String} curr\r\n             * @returns {String}\r\n             */\r\n            reduceFunction = function (prev, curr) {\r\n                return prev + '[' + curr + ']';\r\n            };\r\n\r\n            dataScopeArray = dataScopeString.split('.');\r\n\r\n            dataScope = dataScopeArray.shift();\r\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\r\n\r\n            return dataScope;\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryShippingAdminUi/js/order/grid/cell/allocated-sources.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_InventoryShippingAdminUi/order/grid/cell/allocated-sources-cell.html',\r\n            itemsToDisplay: 5\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Array} record\r\n         * @returns {Array}\r\n         */\r\n        getTooltipData: function (record) {\r\n            return record[this.index];\r\n        },\r\n\r\n        /**\r\n         * @param {Object} record - Record object\r\n         * @returns {Array} Result array\r\n         */\r\n        getAllocatedSources: function (record) {\r\n            return this.getTooltipData(record).slice(0, this.itemsToDisplay);\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryShippingAdminUi/js/form/form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/form/form',\r\n    'underscore',\r\n    'mageUtils'\r\n], function ($, Form, _, utils) {\r\n    'use strict';\r\n\r\n    return Form.extend({\r\n        defaults: {\r\n            sourceSelectionUrl: '${ $.sourceSelectionUrl }'\r\n        },\r\n\r\n        /**\r\n         * Process source selection algorithm\r\n         *\r\n         * @param {String} redirect\r\n         * @param {Object} data\r\n         */\r\n        processAlgorithm: function (redirect, data) {\r\n            var formData = utils.filterFormData(this.source.get('data'));\r\n\r\n            data.requestData = [];\r\n\r\n            _.each(formData.items, function (item) {\r\n                data.requestData.push({\r\n                    orderItem: item.orderItemId,\r\n                    sku: item.sku,\r\n                    qty: item.qtyToShip\r\n                });\r\n            });\r\n\r\n            data.orderId = formData['order_id'];\r\n            data.websiteId = formData.websiteId;\r\n            data = utils.serialize(utils.filterFormData(data));\r\n            data['form_key'] = window.FORM_KEY;\r\n\r\n            if (!this.sourceSelectionUrl || this.sourceSelectionUrl === 'undefined') {\r\n                return $.Deferred.resolve();\r\n            }\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            $.ajax({\r\n                url: this.sourceSelectionUrl,\r\n                data: data,\r\n\r\n                /**\r\n                 * Success callback.\r\n                 *\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    var dataItems = this.source.get('data.items');\r\n\r\n                    _.each(dataItems, function (item) {\r\n                        if (response[item.orderItemId]) {\r\n                            this.source.set('data.items.' + item['record_id'] + '.sources', response[item.orderItemId]);\r\n                        }\r\n                    }.bind(this));\r\n                    this.source.trigger('reInitSources');\r\n                    this.source.set('data.sourceCodes', response.sourceCodes ? response.sourceCodes : []);\r\n                }.bind(this),\r\n\r\n                /**\r\n                 * Complete callback.\r\n                 */\r\n                complete: function () {\r\n                    $('body').trigger('processStop');\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryShippingAdminUi/js/form/element/source_code.js":"define([\r\n    'underscore',\r\n    'Magento_Ui/js/form/element/select'\r\n], function (_, select) {\r\n    'use strict';\r\n\r\n    return select.extend({\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setOptions: function (data) {\r\n            var result = this._super(data);\r\n\r\n            if (data.length === 1) {\r\n                this.value(data[0].value);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryShippingAdminUi/js/form/element/qty_to_deduct.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'mageUtils'\r\n], function (Abstract, utils) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            sourceCode: null,\r\n            qtyAvailable: 0\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initialize: function () {\r\n            var path,\r\n                qtyToShip,\r\n                isManageStock;\r\n\r\n            this._super();\r\n\r\n            //TODO: Is it right way?\r\n            path = utils.getPart(utils.getPart(this.parentScope, -2), -2);\r\n            qtyToShip = this.source.get(path + '.qtyToShip');\r\n            isManageStock = this.source.get(path + '.isManageStock');\r\n\r\n            this.validation['less-than-equals-to'] = isManageStock ? this.qtyAvailable : qtyToShip;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggle disabled state.\r\n         *\r\n         * @param {String} selected\r\n         */\r\n        toggleDisable: function (selected) {\r\n            this.disabled(selected ? selected.toString() !== this.sourceCode : !selected);\r\n        }\r\n    });\r\n});\r\n","Magento_Payment/js/transparent.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global FORM_KEY */\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Payment/js/model/credit-card-validation/validator'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.transparent', {\r\n        options: {\r\n            editFormSelector: '#edit_form',\r\n            hiddenFormTmpl:\r\n                '<form target=\"<%= data.target %>\" action=\"<%= data.action %>\"' +\r\n                'method=\"POST\" hidden' +\r\n                'enctype=\"application/x-www-form-urlencoded\" class=\"no-display\">' +\r\n                    '<% _.each(data.inputs, function(val, key){ %>' +\r\n                    '<input value=\"<%= val %>\" name=\"<%= key %>\" type=\"hidden\">' +\r\n                    '<% }); %>' +\r\n                '</form>',\r\n            cgiUrl: null,\r\n            orderSaveUrl: null,\r\n            controller: null,\r\n            gateway: null,\r\n            dateDelim: null,\r\n            cardFieldsMap: null,\r\n            expireYearLength: 2\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.hiddenFormTmpl = mageTemplate(this.options.hiddenFormTmpl);\r\n\r\n            $(this.options.editFormSelector).on('changePaymentMethod', this._setPlaceOrderHandler.bind(this));\r\n            $(this.options.editFormSelector).trigger('changePaymentMethod', [\r\n                $(this.options.editFormSelector).find(':radio[name=\"payment[method]\"]:checked').val()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Handler for form submit.\r\n         *\r\n         * @param {Object} event\r\n         * @param {String} method\r\n         */\r\n        _setPlaceOrderHandler: function (event, method) {\r\n            if (method === this.options.gateway) {\r\n                $(this.options.editFormSelector)\r\n                    .off('submitOrder')\r\n                    .on('submitOrder.' +  this.options.gateway, this._placeOrderHandler.bind(this));\r\n            } else {\r\n                $(this.options.editFormSelector)\r\n                    .off('submitOrder.' + this.options.gateway);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler for form submit to call gateway for credit card validation.\r\n         *\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _placeOrderHandler: function () {\r\n            if ($(this.options.editFormSelector).valid()) {\r\n                this._orderSave();\r\n            } else {\r\n                $('body').trigger('processStop');\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Handler for Place Order button to call gateway for credit card validation.\r\n         * Save order and generate post data for gateway call.\r\n         *\r\n         * @private\r\n         */\r\n        _orderSave: function () {\r\n            var postData = {\r\n                'form_key': FORM_KEY,\r\n                'cc_type': this.ccType()\r\n            };\r\n\r\n            $.ajax({\r\n                url: this.options.orderSaveUrl,\r\n                type: 'post',\r\n                context: this,\r\n                data: postData,\r\n                dataType: 'json',\r\n\r\n                /**\r\n                 * Success callback\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    if (response.success && response[this.options.gateway]) {\r\n                        this._postPaymentToGateway(response);\r\n                    } else {\r\n                        this._processErrors(response);\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function () {\r\n                    $('body').trigger('processStop');\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Post data to gateway for credit card validation.\r\n         *\r\n         * @param {Object} response\r\n         * @private\r\n         */\r\n        _postPaymentToGateway: function (response) {\r\n            var $iframeSelector = $('[data-container=\"' + this.options.gateway + '-transparent-iframe\"]'),\r\n                data,\r\n                tmpl,\r\n                iframe;\r\n\r\n            data = this._preparePaymentData(response);\r\n            tmpl = this.hiddenFormTmpl({\r\n                data: {\r\n                    target: $iframeSelector.attr('name'),\r\n                    action: this.options.cgiUrl,\r\n                    inputs: data\r\n                }\r\n            });\r\n\r\n            iframe = $iframeSelector\r\n                .on('submit', function (event) {\r\n                    event.stopPropagation();\r\n                });\r\n            $(tmpl).appendTo(iframe).submit();\r\n            iframe.html('');\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        ccType: function () {\r\n            return this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-type\"]'\r\n            ).val();\r\n        },\r\n\r\n        /**\r\n         * Add credit card fields to post data for gateway.\r\n         *\r\n         * @param {Object} response\r\n         * @private\r\n         */\r\n        _preparePaymentData: function (response) {\r\n            var ccfields,\r\n                data,\r\n                preparedata;\r\n\r\n            data = response[this.options.gateway].fields;\r\n            ccfields = this.options.cardFieldsMap;\r\n\r\n            if (this.element.find('[data-container=\"' + this.options.gateway + '-cc-cvv\"]').length) {\r\n                data[ccfields.cccvv] = this.element.find(\r\n                    '[data-container=\"' + this.options.gateway + '-cc-cvv\"]'\r\n                ).val();\r\n            }\r\n            preparedata = this._prepareExpDate();\r\n            data[ccfields.ccexpdate] = preparedata.month + this.options.dateDelim + preparedata.year;\r\n            data[ccfields.ccnum] = this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-number\"]'\r\n            ).val();\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Grab Month and Year into one\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _prepareExpDate: function () {\r\n            var year = this.element.find('[data-container=\"' + this.options.gateway + '-cc-year\"]').val(),\r\n                month = parseInt(\r\n                    this.element.find('[data-container=\"' + this.options.gateway + '-cc-month\"]').val(), 10\r\n                );\r\n\r\n            if (year.length > this.options.expireYearLength) {\r\n                year = year.substring(year.length - this.options.expireYearLength);\r\n            }\r\n\r\n            if (month < 10) {\r\n                month = '0' + month;\r\n            }\r\n\r\n            return {\r\n                month: month, year: year\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Processing errors\r\n         *\r\n         * @param {Object} response\r\n         * @private\r\n         */\r\n        _processErrors: function (response) {\r\n            var msg = response['error_messages'];\r\n\r\n            if (typeof msg === 'object') {\r\n                alert({\r\n                    content: msg.join('\\n')\r\n                });\r\n            }\r\n\r\n            if (msg) {\r\n                alert({\r\n                    content: msg\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.transparent;\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/model/credit-card-validation/cvv-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n    'mage/translate'\r\n], function ($, cvvValidator, creditCardNumberValidator, yearValidator, monthValidator, creditCardData) {\r\n    'use strict';\r\n\r\n    $('.payment-method-content input[type=\"number\"]').on('keyup', function () {\r\n        if ($(this).val() < 0) {\r\n            $(this).val($(this).val().replace(/^-/, ''));\r\n        }\r\n    });\r\n\r\n    $.each({\r\n        'validate-card-type': [\r\n            function (number, item, allowedTypes) {\r\n                var cardInfo,\r\n                    i,\r\n                    l;\r\n\r\n                if (!creditCardNumberValidator(number).isValid) {\r\n                    return false;\r\n                }\r\n\r\n                cardInfo = creditCardNumberValidator(number).card;\r\n\r\n                for (i = 0, l = allowedTypes.length; i < l; i++) {\r\n                    if (cardInfo.title == allowedTypes[i].type) { //eslint-disable-line eqeqeq\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card type number.')\r\n        ],\r\n        'validate-card-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             *\r\n             * @param {*} number - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (number) {\r\n                return creditCardNumberValidator(number).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-card-date': [\r\n\r\n            /**\r\n             * Validate credit card expiration month\r\n             *\r\n             * @param {String} date - month\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return monthValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration month.')\r\n        ],\r\n        'validate-card-cvv': [\r\n\r\n            /**\r\n             * Validate cvv\r\n             *\r\n             * @param {String} cvv - card verification value\r\n             * @return {Boolean}\r\n             */\r\n            function (cvv) {\r\n                var maxLength = creditCardData.creditCard ? creditCardData.creditCard.code.size : 3;\r\n\r\n                return cvvValidator(cvv, maxLength).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-card-year': [\r\n\r\n            /**\r\n             * Validate credit card expiration year\r\n             *\r\n             * @param {String} date - year\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return yearValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration year.')\r\n        ]\r\n\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        creditCard: null,\r\n        creditCardNumber: null,\r\n        expirationMonth: null,\r\n        expirationYear: null,\r\n        cvvCode: null\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/cvv-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    /**\r\n     * CVV number validation.\r\n     * Validate digit count for CVV code.\r\n     *\r\n     * @param {*} value\r\n     * @param {Number} maxLength\r\n     * @return {Object}\r\n     */\r\n    return function (value, maxLength) {\r\n        var DEFAULT_LENGTH = 3;\r\n\r\n        maxLength = maxLength || DEFAULT_LENGTH;\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (value.length === maxLength) {\r\n            return resultWrapper(true, true);\r\n        }\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (value.length > maxLength) {\r\n            return resultWrapper(false, false);\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type'\r\n], function (utils, luhn10, creditCardTypes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} card\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} isValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(card, isPotentiallyValid, isValid) {\r\n        return {\r\n            card: card,\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var potentialTypes,\r\n            cardType,\r\n            valid,\r\n            i,\r\n            maxLength;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        value = value.replace(/\\s+/g, '');\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        potentialTypes = creditCardTypes.getCardTypes(value);\r\n\r\n        if (potentialTypes.length === 0) {\r\n            return resultWrapper(null, false, false);\r\n        } else if (potentialTypes.length !== 1) {\r\n            return resultWrapper(null, true, false);\r\n        }\r\n\r\n        cardType = potentialTypes[0];\r\n\r\n        if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\r\n            valid = true;\r\n        } else {\r\n            valid = luhn10(value);\r\n        }\r\n\r\n        for (i = 0; i < cardType.lengths.length; i++) {\r\n            if (cardType.lengths[i] === value.length) {\r\n                return resultWrapper(cardType, valid, valid);\r\n            }\r\n        }\r\n\r\n        maxLength = Math.max.apply(null, cardType.lengths);\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(cardType, true, false);\r\n        }\r\n\r\n        return resultWrapper(cardType, false, false);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator'\r\n], function (utils, parseDate, expirationMonth, expirationYear) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} month\r\n     * @param {*} year\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid, month, year) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid,\r\n            month: month,\r\n            year: year\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var date,\r\n            monthValid,\r\n            yearValid;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(false, false, null, null);\r\n        }\r\n\r\n        value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\r\n        date = parseDate(value);\r\n        monthValid = expirationMonth(date.month);\r\n        yearValid = expirationYear(date.year);\r\n\r\n        if (monthValid.isValid && yearValid.isValid) {\r\n            return resultWrapper(true, true, date.month, date.year);\r\n        }\r\n\r\n        if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\r\n            return resultWrapper(false, true, null, null);\r\n        }\r\n\r\n        return resultWrapper(false, false, null, null);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mageUtils'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var types = [\r\n        {\r\n            title: 'Visa',\r\n            type: 'VI',\r\n            pattern: '^4\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'MasterCard',\r\n            type: 'MC',\r\n            pattern: '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'American Express',\r\n            type: 'AE',\r\n            pattern: '^3([47]\\\\d*)?$',\r\n            isAmex: true,\r\n            gaps: [4, 10],\r\n            lengths: [15],\r\n            code: {\r\n                name: 'CID',\r\n                size: 4\r\n            }\r\n        },\r\n        {\r\n            title: 'Diners',\r\n            type: 'DN',\r\n            pattern: '^(3(0[0-5]|095|6|[8-9]))\\\\d*$',\r\n            gaps: [4, 10],\r\n            lengths: [14, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Discover',\r\n            type: 'DI',\r\n            pattern: '^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CID',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'JCB',\r\n            type: 'JCB',\r\n            pattern: '^35(2[8-9]|[3-8])\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'UnionPay',\r\n            type: 'UN',\r\n            pattern: '^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVN',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro International',\r\n            type: 'MI',\r\n            pattern: '^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro Domestic',\r\n            type: 'MD',\r\n            pattern: '^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Hipercard',\r\n            type: 'HC',\r\n            pattern: '^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [13, 16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Elo',\r\n            type: 'ELO',\r\n            pattern: '^((509091)|(636368)|(636297)|(504175)|(438935)|(40117[8-9])|(45763[1-2])|' +\r\n                '(457393)|(431274)|(50990[0-2])|(5099[7-9][0-9])|(50996[4-9])|(509[1-8][0-9][0-9])|' +\r\n                '(5090(0[0-2]|0[4-9]|1[2-9]|[24589][0-9]|3[1-9]|6[0-46-9]|7[0-24-9]))|' +\r\n                '(5067(0[0-24-8]|1[0-24-9]|2[014-9]|3[0-379]|4[0-9]|5[0-3]|6[0-5]|7[0-8]))|' +\r\n                '(6504(0[5-9]|1[0-9]|2[0-9]|3[0-9]))|' +\r\n                '(6504(8[5-9]|9[0-9])|6505(0[0-9]|1[0-9]|2[0-9]|3[0-8]))|' +\r\n                '(6505(4[1-9]|5[0-9]|6[0-9]|7[0-9]|8[0-9]|9[0-8]))|' +\r\n                '(6507(0[0-9]|1[0-8]))|(65072[0-7])|(6509(0[1-9]|1[0-9]|20))|' +\r\n                '(6516(5[2-9]|6[0-9]|7[0-9]))|(6550(0[0-9]|1[0-9]))|' +\r\n                '(6550(2[1-9]|3[0-9]|4[0-9]|5[0-8])))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Aura',\r\n            type: 'AU',\r\n            pattern: '^5078\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        }\r\n    ];\r\n\r\n    return {\r\n        /**\r\n         * @param {*} cardNumber\r\n         * @return {Array}\r\n         */\r\n        getCardTypes: function (cardNumber) {\r\n            var i, value,\r\n                result = [];\r\n\r\n            if (utils.isEmpty(cardNumber)) {\r\n                return result;\r\n            }\r\n\r\n            if (cardNumber === '') {\r\n                return $.extend(true, {}, types);\r\n            }\r\n\r\n            for (i = 0; i < types.length; i++) {\r\n                value = types[i];\r\n\r\n                if (new RegExp(value.pattern).test(cardNumber)) {\r\n                    result.push($.extend(true, {}, value));\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Luhn algorithm verification\r\n     */\r\n    return function (a, b, c, d, e) {\r\n        for (d = +a[b = a.length - 1], e = 0; b--;) {\r\n            c = +a[b];\r\n            d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\r\n        }\r\n\r\n        return !(d % 10);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var month,\r\n            monthValid;\r\n\r\n        if (value.replace(/\\s/g, '') === '' || value === '0') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (isNaN(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        month = parseInt(value, 10);\r\n        monthValid = month > 0 && month < 13;\r\n\r\n        return resultWrapper(monthValid, monthValid);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return function (value) {\r\n        var month, len;\r\n\r\n        if (value.match('/')) {\r\n            value = value.split(/\\s*\\/\\s*/g);\r\n\r\n            return {\r\n                month: value[0],\r\n                year: value.slice(1).join()\r\n            };\r\n        }\r\n\r\n        len = value[0] === '0' || value.length > 5 || value.length === 4 || value.length === 3 ? 2 : 1;\r\n        month = value.substr(0, len);\r\n\r\n        return {\r\n            month: month,\r\n            year: value.substr(month.length, 4)\r\n        };\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var currentYear = new Date().getFullYear(),\r\n            len = value.length,\r\n            valid,\r\n            expMaxLifetime = 19;\r\n\r\n        if (value.replace(/\\s/g, '') === '') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (len !== 4) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        value = parseInt(value, 10);\r\n        valid = value >= currentYear && value <= currentYear + expMaxLifetime;\r\n\r\n        return resultWrapper(valid, valid);\r\n    };\r\n});\r\n","Magento_Integration/js/integration.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * jQuery plugin is added.\r\n *\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery/ui',\r\n    'mage/translate',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.integration', {\r\n        /**\r\n         * Options common to all instances of this widget.\r\n         * @type {Object}\r\n         */\r\n        options: {\r\n            /**\r\n             * URL of the integration grid.\r\n             * @type {String}\r\n             */\r\n            gridUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Bind event handler for the action when admin clicks \"Save & Activate\" button.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if ($('#save-split-button-activate').length) {\r\n                // We're on the \"New integration\" page - bind related handler\r\n                this._form = $('#edit_form');\r\n                this._form.on('saveAndActivate', $.proxy(this._saveAndActivate, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Save new integration, then kick off the activate dialog.\r\n         * @private\r\n         */\r\n        _saveAndActivate: function () {\r\n            if (this._form.validation && !this._form.validation('isValid')) {\r\n                return false;\r\n            }\r\n\r\n            $.ajax({\r\n                url: this._form.prop('action'),\r\n                type: 'post',\r\n                data: this._form.serialize(),\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    $('body').trigger('processStart');\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                success: function (data) {\r\n                    var integrationName, that;\r\n\r\n                    if (data._redirect) {\r\n                        window.location.href = data._redirect;\r\n                    } else if (data.integrationId) {\r\n                        integrationName = $('#integration_properties_name').val();\r\n                        window.integration.popup.show($('<span>').attr({\r\n                            'data-row-dialog': 'permissions',\r\n                            'data-row-id': data.integrationId,\r\n                            // We do escaping here instead of the place of actual output because _showPopup()\r\n                            // actually receives dialog window title from couple of places: from here and from the grid.\r\n                            // The issue is we always should escape values in the grid, so that value is already\r\n                            // escaped. To avoid double escaping we do it here instead of the output.\r\n                            'data-row-name': $('<div>').text(integrationName).html(),\r\n                            'data-row-is-reauthorize': '0',\r\n                            'data-row-is-token-exchange': data.isTokenExchange\r\n                        }));\r\n                        that = this;\r\n                        $('#integration-popup-container').on('dialogclose', function () {\r\n                            $('body').trigger('processStart');\r\n                            window.location.href = that.options.gridUrl;\r\n\r\n                            return false;\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function (jqXHR, status, error) {\r\n                    alert({\r\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\r\n                    });\r\n                    window.console && console.log(status + ': ' + error + '\\nResponse text:\\n' + jqXHR.responseText);\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function () {\r\n                    $('body').trigger('processStop');\r\n                }\r\n            });\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @param {*} permissionsDialogUrl\r\n     * @param {*} tokensDialogUrl\r\n     * @param {*} tokensExchangeUrl\r\n     * @param {*} gridUrl\r\n     * @param {*} successCallbackUrl\r\n     * @return {Object}\r\n     * @constructor\r\n     */\r\n    window.Integration = function (\r\n        permissionsDialogUrl,\r\n        tokensDialogUrl,\r\n        tokensExchangeUrl,\r\n        gridUrl,\r\n        successCallbackUrl\r\n    ) {\r\n        var url = {\r\n            permissions: permissionsDialogUrl,\r\n            tokens: tokensDialogUrl,\r\n            tokensExchange: tokensExchangeUrl,\r\n            grid: gridUrl\r\n        },\r\n        IdentityLogin = {\r\n            win: null,\r\n            strLocation: null,\r\n            checker: null,\r\n            isCalledBack: false,\r\n            //Info popup dialog. Should be hidden when login window is closed\r\n            jqInfoDialog: $('#integration-popup-container'),\r\n            successCallbackUrl: successCallbackUrl,\r\n            Constants: {\r\n                /*\r\n                 This interval is set such that it adjusts to the child window closing timeout of 1000 ms. This will\r\n                 give the checker function enough time to detect if the successCallback has been invoked\r\n                 */\r\n                CHECKER_INTERVAL: 500,\r\n                //Login screen size plus some buffer\r\n                WIDTH: 680,\r\n                HEIGHT: 510,\r\n                // subtract pixels(30) and width(680) from screen width to move popup from extreme left\r\n                LEFT: screen.width - 680 - 30,\r\n                // subtract pixels(300) and height(300) from screen height to move from top\r\n                TOP: screen.height - 510 - 300\r\n            },\r\n\r\n            /**\r\n             * @param {*} identityCallbackUrl\r\n             * @param {*} consumerKey\r\n             * @param {*} jqInfoDialog\r\n             */\r\n            invokePopup: function (identityCallbackUrl, consumerKey, jqInfoDialog) {\r\n                var param;\r\n\r\n                // Callback should be invoked only once. Reset callback flag on subsequent invocations.\r\n                IdentityLogin.isCalledBack = false;\r\n                IdentityLogin.jqInfoDialog = jqInfoDialog;\r\n                param = $.param({\r\n                    'oauth_consumer_key': consumerKey,\r\n                    'success_call_back': IdentityLogin.successCallbackUrl\r\n                });\r\n                IdentityLogin.win = window.open(identityCallbackUrl + '?' + param, '',\r\n                    'top=' + IdentityLogin.Constants.TOP +\r\n                        ', left=' + IdentityLogin.Constants.LEFT +\r\n                        ', width=' + IdentityLogin.Constants.WIDTH +\r\n                        ', height=' + IdentityLogin.Constants.HEIGHT + ',scrollbars=no');\r\n\r\n                if (IdentityLogin.checker != null) {\r\n                    //Clear any previous check\r\n                    clearInterval(IdentityLogin.checker);\r\n                }\r\n                //Polling to detect url of the child window.\r\n                IdentityLogin.checker = setInterval(\r\n                    IdentityLogin.fnCheckLocation, IdentityLogin.Constants.CHECKER_INTERVAL\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Function to check the location of the child popup window.\r\n             * Once detected if the callback is successful, parent window will be reloaded\r\n             */\r\n            fnCheckLocation: function () {\r\n                if (IdentityLogin.win == null) {\r\n                    return;\r\n                }\r\n                // Check to see if the location has changed.\r\n                try {\r\n                    //Is the success callback invoked\r\n                    if (IdentityLogin.win.closed ||\r\n                        IdentityLogin.win.location.href == IdentityLogin.successCallbackUrl //eslint-disable-line eqeqeq\r\n                    ) {\r\n                        //Stop the polling\r\n                        clearInterval(IdentityLogin.checker);\r\n                        $('body').trigger('processStart');\r\n                        //Check for window closed\r\n                        window.location.href = url.grid;\r\n                        IdentityLogin.jqInfoDialog.modal('closeModal');\r\n                    }\r\n                } catch (e) {\r\n                    //squash. In case Window closed without success callback, clear polling\r\n                    if (IdentityLogin.win.closed) {\r\n                        IdentityLogin.jqInfoDialog.modal('closeModal');\r\n                        clearInterval(IdentityLogin.checker);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} popupWindow\r\n         * @return {Boolean}\r\n         */\r\n        isPopupBlocked = function (popupWindow) {\r\n            try {\r\n                popupWindow.focus();\r\n            } catch (e) {\r\n                alert({\r\n                    content: $.mage.__('Popup Blocker is enabled! Please add this site to your exception list.')\r\n                });\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param {*} dialog\r\n         * @param {*} title\r\n         * @param {*} okButton\r\n         * @param {*} ajaxUrl\r\n         * @private\r\n         */\r\n        _showPopup = function (dialog, title, okButton, ajaxUrl) {\r\n            $.ajax({\r\n                url: ajaxUrl,\r\n                cache: false,\r\n                data: {\r\n                    'form_key': window.FORM_KEY\r\n                },\r\n                method: 'GET',\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    // Show the spinner\r\n                    $('body').trigger('processStart');\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                success: function (result) {\r\n                    var redirect = result._redirect,\r\n                        identityLinkUrl, consumerKey, popupHtml, popup, resultObj, buttons, dialogProperties;\r\n\r\n                    if (redirect) {\r\n                        window.location.href = redirect;\r\n\r\n                        return;\r\n                    }\r\n\r\n                    identityLinkUrl = null;\r\n                    consumerKey = null;\r\n                    popupHtml = null;\r\n                    popup = $('#integration-popup-container');\r\n\r\n                    try {\r\n                        resultObj = typeof result === 'string' ?\r\n                            JSON.parse(result) :\r\n                            result;\r\n\r\n                        identityLinkUrl = resultObj['identity_link_url'];\r\n                        consumerKey      = resultObj['oauth_consumer_key'];\r\n                        popupHtml       = resultObj['popup_content'];\r\n\r\n                    } catch (e) {\r\n                        //This is expected if result is not json. Do nothing.\r\n                    }\r\n\r\n                    if (identityLinkUrl && consumerKey && popupHtml) {\r\n                        IdentityLogin.invokePopup(identityLinkUrl, consumerKey, popup);\r\n\r\n                        if (isPopupBlocked(IdentityLogin.win)) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        popupHtml = result;\r\n                    }\r\n\r\n                    if (popup.length === 0) {\r\n                        popup = $('<div/>');\r\n                    }\r\n                    popup.html(popupHtml);\r\n\r\n                    buttons = [];\r\n                    dialogProperties = {\r\n                        title: title,\r\n                        type: 'slide',\r\n                        dialogClass: dialog == 'permissions' ? 'integration-dialog' : 'integration-dialog no-close' //eslint-disable-line\r\n                    };\r\n\r\n                    // Add confirmation button to the list of dialog buttons. okButton not set for tokenExchange dialog\r\n                    if (okButton) {\r\n                        buttons.push(okButton);\r\n                    }\r\n                    // Add button only if its not empty\r\n                    if (buttons.length > 0) {\r\n                        dialogProperties.buttons = buttons;\r\n                    }\r\n                    popup.modal(dialogProperties);\r\n                    popup.modal('openModal');\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function (jqXHR, status, error) {\r\n                    alert({\r\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\r\n                    });\r\n                    window.console && console.log(status + ': ' + error + '\\nResponse text:\\n' + jqXHR.responseText);\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function () {\r\n                    // Hide the spinner\r\n                    $('body').trigger('processStop');\r\n                }\r\n            });\r\n        };\r\n\r\n        return {\r\n            popup: {\r\n                /**\r\n                 * @param {*} ctx\r\n                 */\r\n                show: function (ctx) {\r\n                    var dialog = $(ctx).attr('data-row-dialog'),\r\n                        isReauthorize = $(ctx).attr('data-row-is-reauthorize'),\r\n                        isTokenExchange = $(ctx).attr('data-row-is-token-exchange'),\r\n                        integrationId, ajaxUrl, integrationName, okButton;\r\n\r\n                    if (!url.hasOwnProperty(dialog)) {\r\n                        throw 'Invalid dialog type';\r\n                    }\r\n\r\n                    integrationId = $(ctx).attr('data-row-id');\r\n\r\n                    if (!integrationId) {\r\n                        throw 'Unable to find integration ID';\r\n                    }\r\n\r\n                    // Replace placeholders in URL\r\n                    ajaxUrl = url[dialog].replace(':id', integrationId).replace(':isReauthorize', isReauthorize);\r\n\r\n                    try {\r\n                        // Get integration name either from current element or from neighbor column\r\n                        integrationName = $(ctx).attr('data-row-name') ||\r\n                            $(ctx).parents('tr').find('.col-name').html().trim();\r\n\r\n                        if (integrationName.indexOf('<span') > -1) {\r\n                            // Remove unsecure URL warning from popup window title if it is present\r\n                            integrationName = integrationName.substring(0, integrationName.indexOf('<span'));\r\n                        }\r\n                    } catch (e) {\r\n                        throw 'Unable to find integration name';\r\n                    }\r\n\r\n                    okButton = {\r\n                        permissions: {\r\n                            text: isReauthorize == '1' ? $.mage.__('Reauthorize') : $.mage.__('Allow'), //eslint-disable-line\r\n                            'class': 'action-primary',\r\n                            attr: {\r\n                                'data-row-id': integrationId,\r\n                                'data-row-name': integrationName,\r\n                                'data-row-dialog': isTokenExchange == '1' ? 'tokensExchange' : 'tokens', //eslint-disable-line\r\n                                'data-row-is-reauthorize': isReauthorize,\r\n                                'data-row-is-token-exchange': isTokenExchange\r\n                            },\r\n\r\n                            /**\r\n                             * Click.\r\n                             */\r\n                            click: function () {\r\n                                // Find the 'Allow' button and clone - it has all necessary data, but is going to be\r\n                                // destroyed along with the current dialog\r\n                                var context = this.modal.find('button.action-primary').clone(true);\r\n\r\n                                this.closeModal();\r\n                                this.modal.remove();\r\n                                // Make popup out of data we saved from 'Allow' button\r\n                                window.integration.popup.show(context);\r\n                            }\r\n                        },\r\n                        tokens: {\r\n                            text: $.mage.__('Done'),\r\n                            'class': 'action-primary',\r\n\r\n                            /**\r\n                             * Click.\r\n                             */\r\n                            click: function () {\r\n                                // Integration has been activated at the point of generating tokens\r\n                                window.location.href = url.grid;\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    _showPopup(dialog, integrationName, okButton[dialog], ajaxUrl);\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    return $.mage.integration;\r\n});\r\n","Magento_Bundle/js/bundle-type-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/catalog/type-events',\r\n    'Magento_Catalog/js/product/weight-handler'\r\n], function ($, productType, weight) {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Constructor component\r\n         */\r\n        'Magento_Bundle/js/bundle-type-handler': function () {\r\n            this.bindAll();\r\n            this._initType();\r\n        },\r\n\r\n        /**\r\n         * Bind all\r\n         */\r\n        bindAll: function () {\r\n            $(document).on('changeTypeProduct', this._initType.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Init type\r\n         * @private\r\n         */\r\n        _initType: function () {\r\n            if (\r\n                productType.type.init === 'bundle' &&\r\n                productType.type.current !== 'bundle' &&\r\n                !weight.isLocked()\r\n            ) {\r\n                weight.switchWeight();\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Bundle/js/price-bundle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        optionConfig: null,\r\n        productBundleSelector: 'input.bundle.option, select.bundle.option, textarea.bundle.option',\r\n        qtyFieldSelector: 'input.qty',\r\n        priceBoxSelector: '.price-box',\r\n        optionHandlers: {},\r\n        optionTemplate: '<%- data.label %>' +\r\n        '<% if (data.finalPrice.value) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd', // should be eliminated\r\n        priceFormat: {},\r\n        isFixedPrice: false,\r\n        optionTierPricesBlocksSelector: '#option-tier-prices-{1} [data-role=\"selection-tier-prices\"]',\r\n        isOptionsInitialized: false\r\n    };\r\n\r\n    $.widget('mage.priceBundle', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form);\r\n\r\n            options.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function createPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form),\r\n                qty = $(this.options.qtyFieldSelector, form);\r\n\r\n            this._updatePriceBox();\r\n            priceBox.on('price-box-initialized', this._updatePriceBox.bind(this));\r\n            options.on('change', this._onBundleOptionChanged.bind(this));\r\n            qty.on('change', this._onQtyFieldChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Update price box config with bundle option prices\r\n         * @private\r\n         */\r\n        _updatePriceBox: function () {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form);\r\n\r\n            if (!this.options.isOptionsInitialized) {\r\n                if (priceBox.data('magePriceBox') &&\r\n                    priceBox.priceBox('option') &&\r\n                    priceBox.priceBox('option').priceConfig\r\n                ) {\r\n                    if (priceBox.priceBox('option').priceConfig.optionTemplate) { //eslint-disable-line max-depth\r\n                        this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                    }\r\n                    this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n                    priceBox.priceBox('setDefault', this.options.optionConfig.prices);\r\n                    this.options.isOptionsInitialized = true;\r\n                }\r\n                this._applyOptionNodeFix(options);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle change on bundle option inputs\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onBundleOptionChanged: function onBundleOptionChanged(event) {\r\n            var changes,\r\n                bundleOption = $(event.target),\r\n                priceBox = $(this.options.priceBoxSelector, this.element),\r\n                handler = this.options.optionHandlers[bundleOption.data('role')];\r\n\r\n            bundleOption.data('optionContainer', bundleOption.closest(this.options.controlContainer));\r\n            bundleOption.data('qtyField', bundleOption.data('optionContainer').find(this.options.qtyFieldSelector));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(bundleOption, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(bundleOption, this.options.optionConfig);//eslint-disable-line\r\n            }\r\n\r\n            if (changes) {\r\n                priceBox.trigger('updatePrice', changes);\r\n            }\r\n\r\n            this._displayTierPriceBlock(bundleOption);\r\n            this.updateProductSummary();\r\n        },\r\n\r\n        /**\r\n         * Handle change on qty inputs near bundle option\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyFieldChanged: function onQtyFieldChanged(event) {\r\n            var field = $(event.target),\r\n                optionInstance,\r\n                optionConfig;\r\n\r\n            if (field.data('optionId') && field.data('optionValueId')) {\r\n                optionInstance = field.data('option');\r\n                optionConfig = this.options.optionConfig\r\n                    .options[field.data('optionId')]\r\n                    .selections[field.data('optionValueId')];\r\n                optionConfig.qty = field.val();\r\n\r\n                optionInstance.trigger('change');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix backend behavior:\r\n         *  - if default qty large than 1 then backend multiply price in config\r\n         *\r\n         * @deprecated\r\n         * @private\r\n         */\r\n        _applyQtyFix: function applyQtyFix() {\r\n            var config = this.options.optionConfig;\r\n\r\n            if (config.isFixedPrice) {\r\n                _.each(config.options, function (option) {\r\n                    _.each(option.selections, function (item) {\r\n                        if (item.qty && item.qty !== 1) {\r\n                            _.each(item.prices, function (price) {\r\n                                price.amount /= item.qty;\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionConfig = config.optionConfig && config.optionConfig.options[optionId].selections,\r\n                    value;\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue].prices;\r\n\r\n                    _.each(prices, function (price, type) {\r\n                        value = +price.amount;\r\n                        value += _.reduce(price.adjustments, function (sum, x) {//eslint-disable-line\r\n                            return sum + x;\r\n                        }, 0);\r\n                        toTemplate.data[type] = {\r\n                            value: value,\r\n                            formatted: utils.formatPrice(value, format)\r\n                        };\r\n                    });\r\n\r\n                    $option.html(template(toTemplate));\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            this._super(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show or hide option tier prices block\r\n         *\r\n         * @param {Object} optionElement\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionElement) {\r\n            var optionType = optionElement.prop('type'),\r\n                optionId,\r\n                optionValue,\r\n                optionTierPricesElements;\r\n\r\n            if (optionType === 'select-one') {\r\n                optionId = utils.findOptionId(optionElement[0]);\r\n                optionValue = optionElement.val() || null;\r\n                optionTierPricesElements = $(this.options.optionTierPricesBlocksSelector.replace('{1}', optionId));\r\n\r\n                _.each(optionTierPricesElements, function (tierPriceElement) {\r\n                    var selectionId = $(tierPriceElement).data('selection-id') + '';\r\n\r\n                    if (selectionId === optionValue) {\r\n                        $(tierPriceElement).show();\r\n                    } else {\r\n                        $(tierPriceElement).hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler to update productSummary box\r\n         */\r\n        updateProductSummary: function updateProductSummary() {\r\n            this.element.trigger('updateProductSummary', {\r\n                config: this.options.optionConfig\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBundle;\r\n\r\n    /**\r\n     * Converts option value to priceBox object\r\n     *\r\n     * @param   {jQuery} element\r\n     * @param   {Object} config\r\n     * @returns {Object|null} - priceBox object with additional prices\r\n     */\r\n    function defaultGetOptionValue(element, config) {\r\n        var changes = {},\r\n            optionHash,\r\n            tempChanges,\r\n            qtyField,\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionValue = element.val() || null,\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = config.options[optionId].selections,\r\n            optionQty = 0,\r\n            canQtyCustomize = false,\r\n            selectedIds = config.selected;\r\n\r\n        switch (optionType) {\r\n            case 'radio':\r\n            case 'select-one':\r\n\r\n                if (optionType === 'radio' && !element.is(':checked')) {\r\n                    return null;\r\n                }\r\n\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n\r\n                if (optionValue) {\r\n                    optionQty = optionConfig[optionValue].qty || 0;\r\n                    canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                    toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                    tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                    tempChanges = applyTierPrice(//eslint-disable-line\r\n                        tempChanges,\r\n                        optionQty,\r\n                        optionConfig[optionValue]\r\n                    );\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                } else {\r\n                    tempChanges = {};\r\n                    toggleQtyField(qtyField, '0', optionId, optionValue, false);//eslint-disable-line\r\n                }\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                optionValue = _.compact(optionValue);\r\n\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = 'bundle-option-' + optionName + '##' + optionValueCode;\r\n                    optionQty = row.qty || 0;\r\n                    tempChanges = utils.deepClone(row.prices);\r\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? tempChanges : {};\r\n                });\r\n\r\n                selectedIds[optionId] = optionValue || [];\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                changes[optionHash] = element.is(':checked') ? tempChanges : {};\r\n\r\n                selectedIds[optionId] = selectedIds[optionId] || [];\r\n\r\n                if (!_.contains(selectedIds[optionId], optionValue) && element.is(':checked')) {\r\n                    selectedIds[optionId].push(optionValue);\r\n                } else if (!element.is(':checked')) {\r\n                    selectedIds[optionId] = _.without(selectedIds[optionId], optionValue);\r\n                }\r\n                break;\r\n\r\n            case 'hidden':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n                toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    /**\r\n     * Helper to toggle qty field\r\n     * @param {jQuery} element\r\n     * @param {String|Number} value\r\n     * @param {String|Number} optionId\r\n     * @param {String|Number} optionValueId\r\n     * @param {Boolean} canEdit\r\n     */\r\n    function toggleQtyField(element, value, optionId, optionValueId, canEdit) {\r\n        element\r\n            .val(value)\r\n            .data('optionId', optionId)\r\n            .data('optionValueId', optionValueId)\r\n            .attr('disabled', !canEdit);\r\n\r\n        if (canEdit) {\r\n            element.removeClass('qty-disabled');\r\n        } else {\r\n            element.addClass('qty-disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper to multiply on qty\r\n     *\r\n     * @param   {Object} prices\r\n     * @param   {Number} qty\r\n     * @returns {Object}\r\n     */\r\n    function applyQty(prices, qty) {\r\n        _.each(prices, function (everyPrice) {\r\n            everyPrice.amount *= qty;\r\n            _.each(everyPrice.adjustments, function (el, index) {\r\n                everyPrice.adjustments[index] *= qty;\r\n            });\r\n        });\r\n\r\n        return prices;\r\n    }\r\n\r\n    /**\r\n     * Helper to limit price with tier price\r\n     *\r\n     * @param {Object} oneItemPrice\r\n     * @param {Number} qty\r\n     * @param {Object} optionConfig\r\n     * @returns {Object}\r\n     */\r\n    function applyTierPrice(oneItemPrice, qty, optionConfig) {\r\n        var tiers = optionConfig.tierPrice,\r\n            magicKey = _.keys(oneItemPrice)[0],\r\n            tiersFirstKey = _.keys(optionConfig)[0],\r\n            lowest = false;\r\n\r\n        if (!tiers) {//tiers is undefined when options has only one option\r\n            tiers = optionConfig[tiersFirstKey].tierPrice;\r\n        }\r\n\r\n        tiers.sort(function (a, b) {//sorting based on \"price_qty\"\r\n            return a['price_qty'] - b['price_qty'];\r\n        });\r\n\r\n        _.each(tiers, function (tier, index) {\r\n            if (tier['price_qty'] > qty) {\r\n                return;\r\n            }\r\n\r\n            if (tier.prices[magicKey].amount < oneItemPrice[magicKey].amount) {\r\n                lowest = index;\r\n            }\r\n        });\r\n\r\n        if (lowest !== false) {\r\n            oneItemPrice = utils.deepClone(tiers[lowest].prices);\r\n        }\r\n\r\n        return oneItemPrice;\r\n    }\r\n});\r\n","Magento_Bundle/js/bundle-product.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global FORM_KEY*/\r\n/*global bSelection*/\r\n/*global $H*/\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/product/weight-handler',\r\n    'Magento_Ui/js/modal/modal',\r\n    'jquery/ui',\r\n    'mage/translate',\r\n    'Magento_Theme/js/sortable',\r\n    'prototype'\r\n], function ($, weightHandler) {\r\n    'use strict';\r\n\r\n    $.widget('mage.bundleProduct', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._initOptionBoxes()\r\n                ._initSortableSelections()\r\n                ._bindCheckboxHandlers()\r\n                ._initCheckboxState()\r\n                ._bindAddSelectionDialog()\r\n                ._hideProductTypeSwitcher();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _initOptionBoxes: function () {\r\n            var syncOptionTitle;\r\n\r\n            this.element.sortable({\r\n                axis: 'y',\r\n                handle: '[data-role=draggable-handle]',\r\n                items: '.option-box',\r\n                update: this._updateOptionBoxPositions,\r\n                tolerance: 'pointer'\r\n            });\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            syncOptionTitle = function (event) {\r\n                var originalValue = $(event.target).attr('data-original-value'),\r\n                    currentValue = $(event.target).val(),\r\n                    optionBoxTitle = $('.title > span', $(event.target).closest('.option-box')),\r\n                    newOptionTitle = $.mage.__('New Option');\r\n\r\n                optionBoxTitle.text(currentValue === '' && !originalValue.length ? newOptionTitle : currentValue);\r\n            };\r\n            this._on({\r\n                'change .field-option-title input[name$=\"[title]\"]': syncOptionTitle,\r\n                'keyup .field-option-title input[name$=\"[title]\"]': syncOptionTitle,\r\n                'paste .field-option-title input[name$=\"[title]\"]': syncOptionTitle\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _initSortableSelections: function () {\r\n            this.element.find('.option-box .form-list tbody').sortable({\r\n                axis: 'y',\r\n                handle: '[data-role=draggable-handle]',\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 * @param {jQuery} ui\r\n                 * @return {jQuery}\r\n                 */\r\n                helper: function (event, ui) {\r\n                    ui.children().each(function () {\r\n                        $(this).width($(this).width());\r\n                    });\r\n\r\n                    return ui;\r\n                },\r\n                update: this._updateSelectionsPositions,\r\n                tolerance: 'pointer'\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _initCheckboxState: function () {\r\n            this.element.find('.is-required').each(function () {\r\n                $(this).prop('checked', $(this).closest('.option-box').find('[name$=\"[required]\"]').val() > 0);\r\n            });\r\n\r\n            this.element.find('.is-user-defined-qty').each(function () {\r\n                $(this).prop('checked', $(this).closest('.qty-box').find('.select').val() > 0);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _bindAddSelectionDialog: function () {\r\n            var widget = this;\r\n\r\n            this._on({\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click .add-selection': function (event) {\r\n                    var $optionBox = $(event.target).closest('.option-box'),\r\n                        $selectionGrid = $optionBox.find('.selection-search').clone(),\r\n                        optionIndex = $optionBox.attr('id').replace('bundle_option_', ''),\r\n                        productIds = [],\r\n                        productSkus = [],\r\n                        selectedProductList = {};\r\n\r\n                    $optionBox.find('[name$=\"[product_id]\"]').each(function () {\r\n                        if (!$(this).closest('tr').find('[name$=\"[delete]\"]').val()) {\r\n                            productIds.push($(this).val());\r\n                            productSkus.push($(this).closest('tr').find('.col-sku').text());\r\n                        }\r\n                    });\r\n\r\n                    bSelection.gridSelection.set(optionIndex, $H({}));\r\n                    bSelection.gridRemoval = $H({});\r\n                    bSelection.gridSelectedProductSkus = productSkus;\r\n\r\n                    $selectionGrid.on('contentUpdated', bSelection.gridUpdateCallback);\r\n                    $selectionGrid.on('change', '.col-id input', function () {\r\n                        var tr = $(this).closest('tr');\r\n\r\n                        if ($(this).is(':checked')) {\r\n                            selectedProductList[$(this).val()] = {\r\n                                name: $.trim(tr.find('.col-name').html()),\r\n                                sku: $.trim(tr.find('.col-sku').html()),\r\n                                'product_id': $(this).val(),\r\n                                'option_id': $('bundle_selection_id_' + optionIndex).val(),\r\n                                'selection_price_value': 0,\r\n                                'selection_qty': 1\r\n                            };\r\n                        } else {\r\n                            delete selectedProductList[$(this).val()];\r\n                        }\r\n                    });\r\n\r\n                    $selectionGrid.modal({\r\n                        title: $optionBox.find('input[name$=\"[title]\"]').val() === '' ?\r\n                            $.mage.__('Add Products to New Option') :\r\n                            $.mage.__('Add Products to Option \"%1\"').replace(\r\n                                '%1',\r\n                                $('<div>').text($optionBox.find('input[name$=\"[title]\"]').val()).html()\r\n                            ),\r\n                        modalClass: 'bundle',\r\n                        type: 'slide',\r\n\r\n                        /**\r\n                         * @param {jQuery.Event} e\r\n                         * @param {Object} modalWindow\r\n                         */\r\n                        closed: function (e, modalWindow) {\r\n                            modalWindow.modal.remove();\r\n                        },\r\n                        buttons: [{\r\n                            text: $.mage.__('Add Selected Products'),\r\n                            'class': 'action-primary action-add',\r\n\r\n                            /** Click action. */\r\n                            click: function () {\r\n                                $.each(selectedProductList, function () {\r\n                                    window.bSelection.addRow(optionIndex, this);\r\n                                });\r\n                                bSelection.gridRemoval.each(function (pair) {\r\n                                    $optionBox.find('.col-sku').filter(function () {\r\n                                        return $.trim($(this).text()) === pair.key; // find row by SKU\r\n                                    }).closest('tr').find('button.delete').trigger('click');\r\n                                });\r\n                                widget.refreshSortableElements();\r\n                                widget._updateSelectionsPositions.apply(widget.element);\r\n                                $selectionGrid.modal('closeModal');\r\n                            }\r\n                        }]\r\n                    });\r\n                    $.ajax({\r\n                        url: bSelection.selectionSearchUrl,\r\n                        dataType: 'html',\r\n                        data: {\r\n                            index: optionIndex,\r\n                            products: productIds,\r\n                            'selected_products': productIds,\r\n                            'form_key': FORM_KEY\r\n                        },\r\n\r\n                        /**\r\n                         * @param {*} data\r\n                         */\r\n                        success: function (data) {\r\n                            $selectionGrid.html(data).modal('openModal');\r\n                        },\r\n                        context: $('body'),\r\n                        showLoader: true\r\n                    });\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _hideProductTypeSwitcher: function () {\r\n            weightHandler.hideWeightSwitcher();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _bindCheckboxHandlers: function () {\r\n            this._on({\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'change .is-required': function (event) {\r\n                    var $this = $(event.target);\r\n\r\n                    $this.closest('.option-box').find('[name$=\"[required]\"]').val($this.is(':checked') ? 1 : 0);\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'change .is-user-defined-qty': function (event) {\r\n                    var $this = $(event.target);\r\n\r\n                    $this.closest('.qty-box').find('.select').val($this.is(':checked') ? 1 : 0);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _updateOptionBoxPositions: function () {\r\n            $(this).find('[name^=bundle_options][name$=\"[position]\"]').each(function (index) {\r\n                $(this).val(index);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _updateSelectionsPositions: function () {\r\n            $(this).find('[name^=bundle_selections][name$=\"[position]\"]').each(function (index) {\r\n                $(this).val(index);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @return {Object}\r\n         */\r\n        refreshSortableElements: function () {\r\n            this.element.sortable('refresh');\r\n            this._updateOptionBoxPositions.apply(this.element);\r\n            this._initSortableSelections();\r\n            this._initCheckboxState();\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n});\r\n","Magento_Bundle/js/components/bundle-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox',\r\n    'uiRegistry'\r\n], function (Checkbox, registry) {\r\n    'use strict';\r\n\r\n    return Checkbox.extend({\r\n        defaults: {\r\n            clearing: false,\r\n            parentContainer: '',\r\n            parentSelections: '',\r\n            changer: '',\r\n            exports: {\r\n                value: '${$.parentName}:isDefaultValue'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            this._super().\r\n                observe('elementTmpl');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this.imports.changeType = this.retrieveParentName(this.parentContainer) + '.' + this.changer + ':value';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            if (this.prefer === 'radio' && this.checked() && !this.clearing) {\r\n                this.clearValues();\r\n            }\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Checkbox to radio type changer.\r\n         *\r\n         * @param {String} type - type to change.\r\n         */\r\n        changeType: function (type) {\r\n            var typeMap = registry.get(this.retrieveParentName(this.parentContainer) + '.' + this.changer).typeMap;\r\n\r\n            this.prefer = typeMap[type];\r\n            this.elementTmpl(this.templates[typeMap[type]]);\r\n        },\r\n\r\n        /**\r\n         * Clears values in components like this.\r\n         */\r\n        clearValues: function () {\r\n            var records = registry.get(this.retrieveParentName(this.parentSelections)),\r\n                index = this.index,\r\n                uid = this.uid;\r\n\r\n            records.elems.each(function (record) {\r\n                record.elems.filter(function (comp) {\r\n                    return comp.index === index && comp.uid !== uid;\r\n                }).each(function (comp) {\r\n                    comp.clearing = true;\r\n                    comp.clear();\r\n                    comp.clearing = false;\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Retrieve name for the most global parent with provided index.\r\n         *\r\n         * @param {String} parent - parent name.\r\n         * @returns {String}\r\n         */\r\n        retrieveParentName: function (parent) {\r\n            return this.name.replace(new RegExp('^(.+?\\\\.)?' + parent + '\\\\..+'), '$1' + parent);\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-record.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/dynamic-rows/record',\r\n    'uiRegistry'\r\n], function (Record, registry) {\r\n    'use strict';\r\n\r\n    return Record.extend({\r\n        /**\r\n         * @param {String} val - type of Input Type\r\n         */\r\n        onTypeChanged: function (val) {\r\n            var columnVisibility  = !(val === 'multi' || val === 'checkbox');\r\n\r\n            registry.async(this.name + '.' + 'selection_can_change_qty')(function (elem) {\r\n                elem.visible(columnVisibility);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-dynamic-rows.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/dynamic-rows/dynamic-rows'\r\n], function (_, utils, registry, dynamicRows) {\r\n    'use strict';\r\n\r\n    return dynamicRows.extend({\r\n        defaults: {\r\n            label: '',\r\n            collapsibleHeader: true,\r\n            columnsHeader: false,\r\n            deleteProperty: false,\r\n            addButton: false\r\n        },\r\n\r\n        /**\r\n         * Set new data to dataSource,\r\n         * delete element\r\n         *\r\n         * @param {Array} data - record data\r\n         */\r\n        _updateData: function (data) {\r\n            var elems = _.clone(this.elems()),\r\n                path,\r\n                dataArr,\r\n                optionBaseData;\r\n\r\n            dataArr = this.recordData.splice(this.startIndex, this.recordData().length - this.startIndex);\r\n            dataArr.splice(0, this.pageSize);\r\n            elems = _.sortBy(this.elems(), function (elem) {\r\n                return ~~elem.index;\r\n            });\r\n\r\n            data.concat(dataArr).forEach(function (rec, idx) {\r\n                if (elems[idx]) {\r\n                    elems[idx].recordId = rec[this.identificationProperty];\r\n                }\r\n\r\n                if (!rec.position) {\r\n                    rec.position = this.maxPosition;\r\n                    this.setMaxPosition();\r\n                }\r\n\r\n                path = this.dataScope + '.' + this.index + '.' + (this.startIndex + idx);\r\n                optionBaseData = _.pick(rec, function (value) {\r\n                    return !_.isObject(value);\r\n                });\r\n                this.source.set(path, optionBaseData);\r\n                this.source.set(path + '.bundle_button_proxy', []);\r\n                this.source.set(path + '.bundle_selections', []);\r\n                this.removeBundleItemsFromOption(idx);\r\n                _.each(rec['bundle_selections'], function (obj, index) {\r\n                    this.source.set(path + '.bundle_button_proxy' + '.' + index, rec['bundle_button_proxy'][index]);\r\n                    this.source.set(path + '.bundle_selections' + '.' + index, obj);\r\n                }, this);\r\n            }, this);\r\n\r\n            this.elems(elems);\r\n        },\r\n\r\n        /**\r\n         *  Removes nested dynamic-rows-grid rendered records from option\r\n         *\r\n         * @param {Number|String} index - element index\r\n         */\r\n        removeBundleItemsFromOption: function (index) {\r\n            var bundleSelections = registry.get(this.name + '.' + index + '.' + this.bundleSelectionsName),\r\n                bundleSelectionsLength = (bundleSelections.elems() || []).length,\r\n                i;\r\n\r\n            if (bundleSelectionsLength) {\r\n                for (i = 0; i < bundleSelectionsLength; i++) {\r\n                    bundleSelections.elems()[0].destroy();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * {@inheritdoc}\r\n        */\r\n        processingAddChild: function (ctx, index, prop) {\r\n            var recordIds = _.map(this.recordData(), function (rec) {\r\n                return parseInt(rec['record_id'], 10);\r\n            }),\r\n            maxRecordId = _.max(recordIds);\r\n\r\n            prop = maxRecordId > -1 ? maxRecordId + 1 : prop;\r\n            this._super(ctx, index, prop);\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-user-defined-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Checkbox) {\r\n    'use strict';\r\n\r\n    return Checkbox.extend({\r\n        defaults: {\r\n            listens: {\r\n                inputType: 'onInputTypeChange'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler for \"inputType\" property\r\n         *\r\n         * @param {String} data\r\n         */\r\n        onInputTypeChange: function (data) {\r\n            data === 'checkbox' || data === 'multi' ?\r\n                this.clear()\r\n                    .visible(false) :\r\n                this.visible(true);\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-dynamic-rows-grid.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/dynamic-rows/dynamic-rows-grid'\r\n], function (_, dynamicRowsGrid) {\r\n    'use strict';\r\n\r\n    return dynamicRowsGrid.extend({\r\n        defaults: {\r\n            label: '',\r\n            columnsHeader: false,\r\n            columnsHeaderAfterRender: true,\r\n            addButton: false,\r\n            isDefaultFieldScope: 'is_default',\r\n            defaultRecords: {\r\n                use: [],\r\n                moreThanOne: false,\r\n                state: {}\r\n            },\r\n            listens: {\r\n                inputType: 'onInputTypeChange',\r\n                isDefaultValue: 'onIsDefaultValue'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler for type select.\r\n         *\r\n         * @param {String} inputType - changed.\r\n         */\r\n        onInputTypeChange: function (inputType) {\r\n            if (this.defaultRecords.moreThanOne && (inputType === 'radio' || inputType === 'select')) {\r\n                _.each(this.defaultRecords.use, function (index, counter) {\r\n                    this.source.set(\r\n                        this.dataScope + '.bundle_selections.' + index + '.' + this.isDefaultFieldScope,\r\n                        counter ? '0' : '1'\r\n                    );\r\n                }.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler for is_default field.\r\n         *\r\n         * @param {Object} data - changed data.\r\n         */\r\n        onIsDefaultValue: function (data) {\r\n            var cb,\r\n                use = 0;\r\n\r\n            this.defaultRecords.use = [];\r\n\r\n            cb = function (elem, key) {\r\n\r\n                if (~~elem) {\r\n                    this.defaultRecords.use.push(key);\r\n                    use++;\r\n                }\r\n\r\n                this.defaultRecords.moreThanOne = use > 1;\r\n            }.bind(this);\r\n\r\n            _.each(data, cb);\r\n        },\r\n\r\n        /**\r\n         * Initialize elements from grid\r\n         *\r\n         * @param {Array} data\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initElements: function (data) {\r\n            var newData = this.getNewData(data),\r\n                recordIndex;\r\n\r\n            this.parsePagesData(data);\r\n\r\n            if (newData.length) {\r\n                if (this.insertData().length) {\r\n                    recordIndex = data.length - newData.length - 1;\r\n\r\n                    _.each(newData, function (newRecord) {\r\n                        this.processingAddChild(newRecord, ++recordIndex, newRecord[this.identificationProperty]);\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Mapping value from grid\r\n         *\r\n         * @param {Array} data\r\n         */\r\n        mappingValue: function (data) {\r\n            if (_.isEmpty(data)) {\r\n                return;\r\n            }\r\n\r\n            this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-option-qty.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            valueUpdate: 'input',\r\n            isInteger: true,\r\n            validation: {\r\n                'validate-number': true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            this.validation['validate-digits'] = this.isInteger;\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var notEqual = this.value() !== this.initialValue.toString();\r\n\r\n            return !this.visible() ? false : notEqual;\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Bundle/js/components/bundle-input-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated Not used anymore\r\n * @see Magento_Bundle/js/components/bundle-record\r\n * @see Magento_Bundle/js/components/bundle-checkbox\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/select',\r\n    'uiRegistry'\r\n], function (Select, registry) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            previousType: '',\r\n            parentContainer: '',\r\n            selections: '',\r\n            targetIndex: '',\r\n            typeMap: {}\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            var type = this.typeMap[this.value()];\r\n\r\n            if (type !== this.previousType) {\r\n                this.previousType = type;\r\n                this.processSelections(type === 'radio');\r\n            }\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Toggle 'User Defined' column and clears values\r\n         * @param {Boolean} isRadio\r\n         */\r\n        processSelections: function (isRadio) {\r\n            var records = registry.get(this.retrieveParentName(this.parentContainer) + '.' + this.selections),\r\n                checkedFound = false;\r\n\r\n            records.elems.each(function (record) {\r\n                record.elems.filter(function (comp) {\r\n                    return comp.index === this.userDefinedIndex;\r\n                }, this).each(function (comp) {\r\n                    comp.visible(isRadio);\r\n                });\r\n\r\n                if (isRadio) {\r\n                    record.elems.filter(function (comp) {\r\n                        return comp.index === this.isDefaultIndex;\r\n                    }, this).each(function (comp) {\r\n                        if (comp.checked()) {\r\n                            if (checkedFound) {\r\n                                comp.clearing = true;\r\n                                comp.clear();\r\n                                comp.clearing = false;\r\n                            }\r\n\r\n                            checkedFound = true;\r\n                        }\r\n                    });\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Retrieve name for the most global parent with provided index.\r\n         *\r\n         * @param {String} parent - parent name.\r\n         * @returns {String}\r\n         */\r\n        retrieveParentName: function (parent) {\r\n            return this.name.replace(new RegExp('^(.+?\\\\.)?' + parent + '\\\\..+'), '$1' + parent);\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryLowQuantityNotificationAdminUi/js/components/use-config-settings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (checkbox) {\r\n    'use strict';\r\n\r\n    return checkbox.extend({\r\n        defaults: {\r\n            valueFromConfig: '',\r\n            linkedValue: ''\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe(['valueFromConfig', 'linkedValue']);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        'onCheckedChanged': function (newChecked) {\r\n            if (newChecked) {\r\n                this.linkedValue(this.valueFromConfig());\r\n            }\r\n\r\n            this._super(newChecked);\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.value(), this.default],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                value = v || !!v;\r\n\r\n                return value;\r\n            });\r\n\r\n            return this.normalizeData(value);\r\n        }\r\n    });\r\n});\r\n","Magento_InventoryLowQuantityNotificationAdminUi/js/components/notify-stock-qty.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (AbstractField) {\r\n    'use strict';\r\n\r\n    return AbstractField.extend({\r\n        defaults: {\r\n            notifyStockQtyUseDefault: '',\r\n            manageStock: '',\r\n            listens: {\r\n                notifyStockQtyUseDefault: 'onChange',\r\n                manageStock: 'onChange'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe(['notifyStockQtyUseDefault', 'manageStock']);\r\n        },\r\n\r\n        /**\r\n         * Disable input when Manage Stock switched off or Notify Quantity Use Default\r\n         */\r\n        onChange: function () {\r\n            this.disabled(\r\n                this.notifyStockQtyUseDefault() ||\r\n                this.manageStock()\r\n            );\r\n        }\r\n    });\r\n});\r\n","modernizr/modernizr.2.0.6.js":"/* Modernizr 2.0.6 (Custom Build) | MIT & BSD\r\n * Build: http://www.modernizr.com/download/#-csstransforms-csstransforms3d-cssclasses-prefixed-teststyles-testprop-testallprops-prefixes-domprefixes\r\n */\r\n;window.Modernizr=function(a,b,c){function C(a,b){var c=a.charAt(0).toUpperCase()+a.substr(1),d=(a+\" \"+o.join(c+\" \")+c).split(\" \");return B(d,b)}function B(a,b){for(var d in a)if(k[a[d]]!==c)return b==\"pfx\"?a[d]:!0;return!1}function A(a,b){return!!~(\"\"+a).indexOf(b)}function z(a,b){return typeof a===b}function y(a,b){return x(n.join(a+\";\")+(b||\"\"))}function x(a){k.cssText=a}var d=\"2.0.6\",e={},f=!0,g=b.documentElement,h=b.head||b.getElementsByTagName(\"head\")[0],i=\"modernizr\",j=b.createElement(i),k=j.style,l,m=Object.prototype.toString,n=\" -webkit- -moz- -o- -ms- -khtml- \".split(\" \"),o=\"Webkit Moz O ms Khtml\".split(\" \"),p={},q={},r={},s=[],t=function(a,c,d,e){var f,h,j,k=b.createElement(\"div\");if(parseInt(d,10))while(d--)j=b.createElement(\"div\"),j.id=e?e[d]:i+(d+1),k.appendChild(j);f=[\"&shy;\",\"<style>\",a,\"</style>\"].join(\"\"),k.id=i,k.innerHTML+=f,g.appendChild(k),h=c(k,a),k.parentNode.removeChild(k);return!!h},u,v={}.hasOwnProperty,w;!z(v,c)&&!z(v.call,c)?w=function(a,b){return v.call(a,b)}:w=function(a,b){return b in a&&z(a.constructor.prototype[b],c)};var D=function(a,c){var d=a.join(\"\"),f=c.length;t(d,function(a,c){var d=b.styleSheets[b.styleSheets.length-1],g=d.cssRules&&d.cssRules[0]?d.cssRules[0].cssText:d.cssText||\"\",h=a.childNodes,i={};while(f--)i[h[f].id]=h[f];e.csstransforms3d=i.csstransforms3d.offsetLeft===9},f,c)}([,[\"@media (\",n.join(\"transform-3d),(\"),i,\")\",\"{#csstransforms3d{left:9px;position:absolute}}\"].join(\"\")],[,\"csstransforms3d\"]);p.csstransforms=function(){return!!B([\"transformProperty\",\"WebkitTransform\",\"MozTransform\",\"OTransform\",\"msTransform\"])},p.csstransforms3d=function(){var a=!!B([\"perspectiveProperty\",\"WebkitPerspective\",\"MozPerspective\",\"OPerspective\",\"msPerspective\"]);a&&\"webkitPerspective\"in g.style&&(a=e.csstransforms3d);return a};for(var E in p)w(p,E)&&(u=E.toLowerCase(),e[u]=p[E](),s.push((e[u]?\"\":\"no-\")+u));x(\"\"),j=l=null,e._version=d,e._prefixes=n,e._domPrefixes=o,e.testProp=function(a){return B([a])},e.testAllProps=C,e.testStyles=t,e.prefixed=function(a){return C(a,\"pfx\")},g.className=g.className.replace(/\\bno-js\\b/,\"\")+(f?\" js \"+s.join(\" \"):\"\");return e}(this,this.document);","modernizr/modernizr.details.js":"// By @mathias, based on http://mths.be/axh\r\ndefine([\r\n    'modernizr/modernizr'\r\n], function(){\r\n\r\n    Modernizr.addTest('details', function() {\r\n        var doc = document,\r\n            el = doc.createElement('details'),\r\n            fake,\r\n            root,\r\n            diff;\r\n        if (!('open' in el)) { // return early if possible; thanks @aFarkas!\r\n            return false;\r\n        }\r\n        root = doc.body || (function() {\r\n            var de = doc.documentElement;\r\n            fake = true;\r\n            return de.insertBefore(doc.createElement('body'), de.firstElementChild || de.firstChild);\r\n        }());\r\n        el.innerHTML = '<summary>a</summary>b';\r\n        el.style.display = 'block';\r\n        root.appendChild(el);\r\n        diff = el.offsetHeight;\r\n        el.open = true;\r\n        diff = diff != el.offsetHeight;\r\n        root.removeChild(el);\r\n        fake && root.parentNode.removeChild(root);\r\n        return diff;\r\n    });\r\n\r\n});","modernizr/modernizr.js":"/*!\r\n * Modernizr v2.6.1\r\n * www.modernizr.com\r\n *\r\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\r\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in\r\n * the current UA and makes the results available to you in two ways:\r\n * as properties on a global Modernizr object, and as classes on the\r\n * <html> element. This information allows you to progressively enhance\r\n * your pages with a granular level of control over the experience.\r\n *\r\n * Modernizr has an optional (not included) conditional resource loader\r\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\r\n * To get a build that includes Modernizr.load(), as well as choosing\r\n * which tests to include, go to www.modernizr.com/download/\r\n *\r\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\r\n * Contributors   Ryan Seddon, Ben Alman\r\n */\r\n\r\nwindow.Modernizr = (function( window, document, undefined ) {\r\n\r\n    var version = '2.6.1',\r\n\r\n        Modernizr = {},\r\n\r\n    /*>>cssclasses*/\r\n    // option for enabling the HTML classes to be added\r\n        enableClasses = true,\r\n    /*>>cssclasses*/\r\n\r\n        docElement = document.documentElement,\r\n\r\n        /**\r\n         * Create our \"modernizr\" element that we do most feature tests on.\r\n         */\r\n            mod = 'modernizr',\r\n        modElem = document.createElement(mod),\r\n        mStyle = modElem.style,\r\n\r\n        /**\r\n         * Create the input element for various Web Forms feature tests.\r\n         */\r\n            inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\r\n\r\n    /*>>smile*/\r\n        smile = ':)',\r\n    /*>>smile*/\r\n\r\n        toString = {}.toString,\r\n\r\n    // TODO :: make the prefixes more granular\r\n    /*>>prefixes*/\r\n    // List of property values to set for css tests. See ticket #21\r\n        prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\r\n    /*>>prefixes*/\r\n\r\n    /*>>domprefixes*/\r\n    // Following spec is to expose vendor-specific style properties as:\r\n    //   elem.style.WebkitBorderRadius\r\n    // and the following would be incorrect:\r\n    //   elem.style.webkitBorderRadius\r\n\r\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\r\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n        omPrefixes = 'Webkit Moz O ms',\r\n\r\n        cssomPrefixes = omPrefixes.split(' '),\r\n\r\n        domPrefixes = omPrefixes.toLowerCase().split(' '),\r\n    /*>>domprefixes*/\r\n\r\n    /*>>ns*/\r\n        ns = {'svg': 'http://www.w3.org/2000/svg'},\r\n    /*>>ns*/\r\n\r\n        tests = {},\r\n        inputs = {},\r\n        attrs = {},\r\n\r\n        classes = [],\r\n\r\n        slice = classes.slice,\r\n\r\n        featureName, // used in testing loop\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Inject element with style element and some CSS rules\r\n        injectElementWithStyles = function( rule, callback, nodes, testnames ) {\r\n\r\n            var style, ret, node,\r\n                div = document.createElement('div'),\r\n            // After page load injecting a fake body doesn't work so check if body exists\r\n                body = document.body,\r\n            // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\r\n                fakeBody = body ? body : document.createElement('body');\r\n\r\n            if ( parseInt(nodes, 10) ) {\r\n                // In order not to give false positives we create a node for each test\r\n                // This also allows the method to scale for unspecified uses\r\n                while ( nodes-- ) {\r\n                    node = document.createElement('div');\r\n                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n                    div.appendChild(node);\r\n                }\r\n            }\r\n\r\n            // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\r\n            // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\r\n            // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\r\n            // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\r\n            // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\r\n            style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\r\n            div.id = mod;\r\n            // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n            // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n            (body ? div : fakeBody).innerHTML += style;\r\n            fakeBody.appendChild(div);\r\n            if ( !body ) {\r\n                //avoid crashing IE8, if background image is used\r\n                fakeBody.style.background = \"\";\r\n                docElement.appendChild(fakeBody);\r\n            }\r\n\r\n            ret = callback(div, rule);\r\n            // If this is done after page load we don't want to remove the body so check if body exists\r\n            !body ? fakeBody.parentNode.removeChild(fakeBody) : div.parentNode.removeChild(div);\r\n\r\n            return !!ret;\r\n\r\n        },\r\n    /*>>teststyles*/\r\n\r\n    /*>>mq*/\r\n    // adapted from matchMedia polyfill\r\n    // by Scott Jehl and Paul Irish\r\n    // gist.github.com/786768\r\n        testMediaQuery = function( mq ) {\r\n\r\n            var matchMedia = window.matchMedia || window.msMatchMedia;\r\n            if ( matchMedia ) {\r\n                return matchMedia(mq).matches;\r\n            }\r\n\r\n            var bool;\r\n\r\n            injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\r\n                bool = (window.getComputedStyle ?\r\n                    getComputedStyle(node, null) :\r\n                    node.currentStyle)['position'] == 'absolute';\r\n            });\r\n\r\n            return bool;\r\n\r\n        },\r\n    /*>>mq*/\r\n\r\n\r\n    /*>>hasevent*/\r\n    //\r\n    // isEventSupported determines if a given element supports the given event\r\n    // kangax.github.com/iseventsupported/\r\n    //\r\n    // The following results are known incorrect:\r\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\r\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\r\n    //   ...\r\n        isEventSupported = (function() {\r\n\r\n            var TAGNAMES = {\r\n                'select': 'input', 'change': 'input',\r\n                'submit': 'form', 'reset': 'form',\r\n                'error': 'img', 'load': 'img', 'abort': 'img'\r\n            };\r\n\r\n            function isEventSupported( eventName, element ) {\r\n\r\n                element = element || document.createElement(TAGNAMES[eventName] || 'div');\r\n                eventName = 'on' + eventName;\r\n\r\n                // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\r\n                var isSupported = eventName in element;\r\n\r\n                if ( !isSupported ) {\r\n                    // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\r\n                    if ( !element.setAttribute ) {\r\n                        element = document.createElement('div');\r\n                    }\r\n                    if ( element.setAttribute && element.removeAttribute ) {\r\n                        element.setAttribute(eventName, '');\r\n                        isSupported = is(element[eventName], 'function');\r\n\r\n                        // If property was created, \"remove it\" (by setting value to `undefined`)\r\n                        if ( !is(element[eventName], 'undefined') ) {\r\n                            element[eventName] = undefined;\r\n                        }\r\n                        element.removeAttribute(eventName);\r\n                    }\r\n                }\r\n\r\n                element = null;\r\n                return isSupported;\r\n            }\r\n            return isEventSupported;\r\n        })(),\r\n    /*>>hasevent*/\r\n\r\n    // TODO :: Add flag for hasownprop ? didn't last time\r\n\r\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n        _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\r\n\r\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\r\n        hasOwnProp = function (object, property) {\r\n            return _hasOwnProperty.call(object, property);\r\n        };\r\n    }\r\n    else {\r\n        hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n            return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n        };\r\n    }\r\n\r\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\r\n    // es5.github.com/#x15.3.4.5\r\n\r\n    if (!Function.prototype.bind) {\r\n        Function.prototype.bind = function bind(that) {\r\n\r\n            var target = this;\r\n\r\n            if (typeof target != \"function\") {\r\n                throw new TypeError();\r\n            }\r\n\r\n            var args = slice.call(arguments, 1),\r\n                bound = function () {\r\n\r\n                    if (this instanceof bound) {\r\n\r\n                        var F = function(){};\r\n                        F.prototype = target.prototype;\r\n                        var self = new F();\r\n\r\n                        var result = target.apply(\r\n                            self,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n                        if (Object(result) === result) {\r\n                            return result;\r\n                        }\r\n                        return self;\r\n\r\n                    } else {\r\n\r\n                        return target.apply(\r\n                            that,\r\n                            args.concat(slice.call(arguments))\r\n                        );\r\n\r\n                    }\r\n\r\n                };\r\n\r\n            return bound;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * setCss applies given styles to the Modernizr DOM node.\r\n     */\r\n    function setCss( str ) {\r\n        mStyle.cssText = str;\r\n    }\r\n\r\n    /**\r\n     * setCssAll extrapolates all vendor-specific css strings.\r\n     */\r\n    function setCssAll( str1, str2 ) {\r\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\r\n    }\r\n\r\n    /**\r\n     * is returns a boolean for if typeof obj is exactly type.\r\n     */\r\n    function is( obj, type ) {\r\n        return typeof obj === type;\r\n    }\r\n\r\n    /**\r\n     * contains returns a boolean for if substr is found within str.\r\n     */\r\n    function contains( str, substr ) {\r\n        return !!~('' + str).indexOf(substr);\r\n    }\r\n\r\n    /*>>testprop*/\r\n\r\n    // testProps is a generic CSS / DOM property test.\r\n\r\n    // In testing support for a given CSS property, it's legit to test:\r\n    //    `elem.style[styleName] !== undefined`\r\n    // If the property is supported it will return an empty string,\r\n    // if unsupported it will return undefined.\r\n\r\n    // We'll take advantage of this quick test and skip setting a style\r\n    // on our modernizr element, but instead just testing undefined vs\r\n    // empty string.\r\n\r\n    // Because the testing of the CSS property names (with \"-\", as\r\n    // opposed to the camelCase DOM properties) is non-portable and\r\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\r\n    // we explicitly reject properties with dashes so that authors\r\n    // developing in WebKit or IE first don't end up with\r\n    // browser-specific content by accident.\r\n\r\n    function testProps( props, prefixed ) {\r\n        for ( var i in props ) {\r\n            var prop = props[i];\r\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\r\n                return prefixed == 'pfx' ? prop : true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*>>testprop*/\r\n\r\n    // TODO :: add testDOMProps\r\n    /**\r\n     * testDOMProps is a generic DOM property test; if a browser supports\r\n     *   a certain property, it won't return undefined for it.\r\n     */\r\n    function testDOMProps( props, obj, elem ) {\r\n        for ( var i in props ) {\r\n            var item = obj[props[i]];\r\n            if ( item !== undefined) {\r\n\r\n                // return the property name as a string\r\n                if (elem === false) return props[i];\r\n\r\n                // let's bind a function\r\n                if (is(item, 'function')){\r\n                    // default to autobind unless override\r\n                    return item.bind(elem || obj);\r\n                }\r\n\r\n                // return the unbound function or obj or value\r\n                return item;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*>>testallprops*/\r\n    /**\r\n     * testPropsAll tests a list of DOM properties we want to check against.\r\n     *   We specify literally ALL possible (known and/or likely) properties on\r\n     *   the element including the non-vendor prefixed one, for forward-\r\n     *   compatibility.\r\n     */\r\n    function testPropsAll( prop, prefixed, elem ) {\r\n\r\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\r\n            return testProps(props, prefixed);\r\n\r\n            // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n        } else {\r\n            props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n            return testDOMProps(props, prefixed, elem);\r\n        }\r\n    }\r\n    /*>>testallprops*/\r\n\r\n\r\n    /**\r\n     * Tests\r\n     * -----\r\n     */\r\n\r\n        // The *new* flexbox\r\n        // dev.w3.org/csswg/css3-flexbox\r\n\r\n    tests['flexbox'] = function() {\r\n        return testPropsAll('flexWrap');\r\n    };\r\n\r\n    // The *old* flexbox\r\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\r\n\r\n    tests['flexboxlegacy'] = function() {\r\n        return testPropsAll('boxDirection');\r\n    };\r\n\r\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\r\n    // so we actually have to call getContext() to verify\r\n    // github.com/Modernizr/Modernizr/issues/issue/97/\r\n\r\n    tests['canvas'] = function() {\r\n        var elem = document.createElement('canvas');\r\n        return !!(elem.getContext && elem.getContext('2d'));\r\n    };\r\n\r\n    tests['canvastext'] = function() {\r\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\r\n    };\r\n\r\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\r\n\r\n    // We do a soft detect which may false positive in order to avoid\r\n    // an expensive context creation: bugzil.la/732441\r\n\r\n    tests['webgl'] = function() {\r\n        return !!window.WebGLRenderingContext;\r\n    };\r\n\r\n    /*\r\n     * The Modernizr.touch test only indicates if the browser supports\r\n     *    touch events, which does not necessarily reflect a touchscreen\r\n     *    device, as evidenced by tablets running Windows 7 or, alas,\r\n     *    the Palm Pre / WebOS (touch) phones.\r\n     *\r\n     * Additionally, Chrome (desktop) used to lie about its support on this,\r\n     *    but that has since been rectified: crbug.com/36415\r\n     *\r\n     * We also test for Firefox 4 Multitouch Support.\r\n     *\r\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\r\n     */\r\n\r\n    tests['touch'] = function() {\r\n        var bool;\r\n\r\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n            bool = true;\r\n        } else {\r\n            injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\r\n                bool = node.offsetTop === 9;\r\n            });\r\n        }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // geolocation is often considered a trivial feature detect...\r\n    // Turns out, it's quite tricky to get right:\r\n    //\r\n    // Using !!navigator.geolocation does two things we don't want. It:\r\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\r\n    //   2. Disables page caching in WebKit: webk.it/43956\r\n    //\r\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\r\n    // a false positive that would throw an exception: bugzil.la/688158\r\n\r\n    tests['geolocation'] = function() {\r\n        return 'geolocation' in navigator;\r\n    };\r\n\r\n\r\n    tests['postmessage'] = function() {\r\n        return !!window.postMessage;\r\n    };\r\n\r\n\r\n    // Chrome incognito mode used to throw an exception when using openDatabase\r\n    // It doesn't anymore.\r\n    tests['websqldatabase'] = function() {\r\n        return !!window.openDatabase;\r\n    };\r\n\r\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\r\n    // - Webkit's implementation is accessible through webkitIndexedDB\r\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\r\n    // For speed, we don't test the legacy (and beta-only) indexedDB\r\n    tests['indexedDB'] = function() {\r\n        return !!testPropsAll(\"indexedDB\", window);\r\n    };\r\n\r\n    // documentMode logic from YUI to filter out IE8 Compat Mode\r\n    //   which false positives.\r\n    tests['hashchange'] = function() {\r\n        return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\r\n    };\r\n\r\n    // Per 1.6:\r\n    // This used to be Modernizr.historymanagement but the longer\r\n    // name has been deprecated in favor of a shorter and property-matching one.\r\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\r\n    // and in the first release thereafter disappear entirely.\r\n    tests['history'] = function() {\r\n        return !!(window.history && history.pushState);\r\n    };\r\n\r\n    tests['draganddrop'] = function() {\r\n        var div = document.createElement('div');\r\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\r\n    };\r\n\r\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\r\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\r\n    // FF10 still uses prefixes, so check for it until then.\r\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\r\n    tests['websockets'] = function() {\r\n        return 'WebSocket' in window || 'MozWebSocket' in window;\r\n    };\r\n\r\n\r\n    // css-tricks.com/rgba-browser-support/\r\n    tests['rgba'] = function() {\r\n        // Set an rgba() color and check the returned value\r\n\r\n        setCss('background-color:rgba(150,255,150,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba');\r\n    };\r\n\r\n    tests['hsla'] = function() {\r\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\r\n        //   except IE9 who retains it as hsla\r\n\r\n        setCss('background-color:hsla(120,40%,100%,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\r\n    };\r\n\r\n    tests['multiplebgs'] = function() {\r\n        // Setting multiple images AND a color on the background shorthand property\r\n        //  and then querying the style.background property value for the number of\r\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\r\n\r\n        setCss('background:url(https://),url(https://),red url(https://)');\r\n\r\n        // If the UA supports multiple backgrounds, there should be three occurrences\r\n        //   of the string \"url(\" in the return value for elemStyle.background\r\n\r\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\r\n    };\r\n\r\n\r\n\r\n    // this will false positive in Opera Mini\r\n    //   github.com/Modernizr/Modernizr/issues/396\r\n\r\n    tests['backgroundsize'] = function() {\r\n        return testPropsAll('backgroundSize');\r\n    };\r\n\r\n    tests['borderimage'] = function() {\r\n        return testPropsAll('borderImage');\r\n    };\r\n\r\n\r\n    // Super comprehensive table about all the unique implementations of\r\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\r\n\r\n    tests['borderradius'] = function() {\r\n        return testPropsAll('borderRadius');\r\n    };\r\n\r\n    // WebOS unfortunately false positives on this test.\r\n    tests['boxshadow'] = function() {\r\n        return testPropsAll('boxShadow');\r\n    };\r\n\r\n    // FF3.0 will false positive on this test\r\n    tests['textshadow'] = function() {\r\n        return document.createElement('div').style.textShadow === '';\r\n    };\r\n\r\n\r\n    tests['opacity'] = function() {\r\n        // Browsers that actually have CSS Opacity implemented have done so\r\n        //  according to spec, which means their return values are within the\r\n        //  range of [0.0,1.0] - including the leading zero.\r\n\r\n        setCssAll('opacity:.55');\r\n\r\n        // The non-literal . in this regex is intentional:\r\n        //   German Chrome returns this value as 0,55\r\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\r\n        return (/^0.55$/).test(mStyle.opacity);\r\n    };\r\n\r\n\r\n    // Note, Android < 4 will pass this test, but can only animate\r\n    //   a single property at a time\r\n    //   daneden.me/2011/12/putting-up-with-androids-bullshit/\r\n    tests['cssanimations'] = function() {\r\n        return testPropsAll('animationName');\r\n    };\r\n\r\n\r\n    tests['csscolumns'] = function() {\r\n        return testPropsAll('columnCount');\r\n    };\r\n\r\n\r\n    tests['cssgradients'] = function() {\r\n        /**\r\n         * For CSS Gradients syntax, please see:\r\n         * webkit.org/blog/175/introducing-css-gradients/\r\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\r\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\r\n         * dev.w3.org/csswg/css3-images/#gradients-\r\n         */\r\n\r\n        var str1 = 'background-image:',\r\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\r\n            str3 = 'linear-gradient(left top,#9f9, white);';\r\n\r\n        setCss(\r\n            // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\r\n            (str1 + '-webkit- '.split(' ').join(str2 + str1) +\r\n                // standard syntax             // trailing 'background-image:'\r\n                prefixes.join(str3 + str1)).slice(0, -str1.length)\r\n        );\r\n\r\n        return contains(mStyle.backgroundImage, 'gradient');\r\n    };\r\n\r\n\r\n    tests['cssreflections'] = function() {\r\n        return testPropsAll('boxReflect');\r\n    };\r\n\r\n\r\n    tests['csstransforms'] = function() {\r\n        return !!testPropsAll('transform');\r\n    };\r\n\r\n\r\n    tests['csstransforms3d'] = function() {\r\n\r\n        var ret = !!testPropsAll('perspective');\r\n\r\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\r\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\r\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\r\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\r\n        if ( ret && 'webkitPerspective' in docElement.style ) {\r\n\r\n            // Webkit allows this media query to succeed only if the feature is enabled.\r\n            // `@media (transform-3d),(-webkit-transform-3d){ ... }`\r\n            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\r\n                ret = node.offsetLeft === 9 && node.offsetHeight === 3;\r\n            });\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\r\n    tests['csstransitions'] = function() {\r\n        return testPropsAll('transition');\r\n    };\r\n\r\n\r\n    /*>>fontface*/\r\n    // @font-face detection routine by Diego Perini\r\n    // javascript.nwbox.com/CSSSupport/\r\n\r\n    // false positives:\r\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\r\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\r\n    tests['fontface'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\r\n            var style = document.getElementById('smodernizr'),\r\n                sheet = style.sheet || style.styleSheet,\r\n                cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\r\n\r\n            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n    /*>>fontface*/\r\n\r\n    // CSS generated content detection\r\n    tests['generatedcontent'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles(['#modernizr:after{content:\"',smile,'\";visibility:hidden}'].join(''), function( node ) {\r\n            bool = node.offsetHeight >= 1;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n\r\n    // These tests evaluate support of the video/audio elements, as well as\r\n    // testing what types of content they support.\r\n    //\r\n    // We're using the Boolean constructor here, so that we can extend the value\r\n    // e.g.  Modernizr.video     // true\r\n    //       Modernizr.video.ogg // 'probably'\r\n    //\r\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n    //                     thx to NielsLeenheer and zcorpan\r\n\r\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n\r\n    tests['video'] = function() {\r\n        var elem = document.createElement('video'),\r\n            bool = false;\r\n\r\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\r\n\r\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\r\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\r\n\r\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\r\n            }\r\n\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n    tests['audio'] = function() {\r\n        var elem = document.createElement('audio'),\r\n            bool = false;\r\n\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\r\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\r\n\r\n                // Mimetypes accepted:\r\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n                //   bit.ly/iphoneoscodecs\r\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\r\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\r\n                    elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\r\n            }\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // In FF4, if disabled, window.localStorage should === null.\r\n\r\n    // Normally, we could not test that directly and need to do a\r\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\r\n    //   throw bugzil.la/365772 if cookies are disabled\r\n\r\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\r\n    // will throw the exception:\r\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\r\n    // Peculiarly, getItem and removeItem calls do not throw.\r\n\r\n    // Because we are forced to try/catch this, we'll go aggressive.\r\n\r\n    // Just FWIW: IE8 Compat mode supports these features completely:\r\n    //   www.quirksmode.org/dom/html5.html\r\n    // But IE8 doesn't support either with local files\r\n\r\n    tests['localstorage'] = function() {\r\n        try {\r\n            localStorage.setItem(mod, mod);\r\n            localStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    tests['sessionstorage'] = function() {\r\n        try {\r\n            sessionStorage.setItem(mod, mod);\r\n            sessionStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    tests['webworkers'] = function() {\r\n        return !!window.Worker;\r\n    };\r\n\r\n\r\n    tests['applicationcache'] = function() {\r\n        return !!window.applicationCache;\r\n    };\r\n\r\n\r\n    // Thanks to Erik Dahlstrom\r\n    tests['svg'] = function() {\r\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\r\n    };\r\n\r\n    // specifically for SVG inline in HTML, not within XHTML\r\n    // test page: paulirish.com/demo/inline-svg\r\n    tests['inlinesvg'] = function() {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = '<svg/>';\r\n        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\r\n    };\r\n\r\n    // SVG SMIL animation\r\n    tests['smil'] = function() {\r\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\r\n    };\r\n\r\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\r\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\r\n\r\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\r\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\r\n    tests['svgclippaths'] = function() {\r\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\r\n    };\r\n\r\n    /*>>webforms*/\r\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\r\n    // Hold this guy to execute in a moment.\r\n    function webforms() {\r\n        /*>>input*/\r\n        // Run through HTML5's new input attributes to see if the UA understands any.\r\n        // We're using f which is the <input> element created early on\r\n        // Mike Taylr has created a comprehensive resource for testing these attributes\r\n        //   when applied to all input types:\r\n        //   miketaylr.com/code/input-type-attr.html\r\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n\r\n        // Only input placeholder is tested while textarea's placeholder is not.\r\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\r\n        // Both tests are available in feature-detects/forms-placeholder.js\r\n        Modernizr['input'] = (function( props ) {\r\n            for ( var i = 0, len = props.length; i < len; i++ ) {\r\n                attrs[ props[i] ] = !!(props[i] in inputElem);\r\n            }\r\n            if (attrs.list){\r\n                // safari false positive's on datalist: webk.it/74252\r\n                // see also github.com/Modernizr/Modernizr/issues/146\r\n                attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\r\n            }\r\n            return attrs;\r\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\r\n        /*>>input*/\r\n\r\n        /*>>inputtypes*/\r\n        // Run through HTML5's new input types to see if the UA understands any.\r\n        //   This is put behind the tests runloop because it doesn't return a\r\n        //   true/false like all the other tests; instead, it returns an object\r\n        //   containing each input type with its corresponding true/false value\r\n\r\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\r\n        Modernizr['inputtypes'] = (function(props) {\r\n\r\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\r\n\r\n                inputElem.setAttribute('type', inputElemType = props[i]);\r\n                bool = inputElem.type !== 'text';\r\n\r\n                // We first check to see if the type we give it sticks..\r\n                // If the type does, we feed it a textual value, which shouldn't be valid.\r\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\r\n                if ( bool ) {\r\n\r\n                    inputElem.value         = smile;\r\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\r\n\r\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\r\n\r\n                        docElement.appendChild(inputElem);\r\n                        defaultView = document.defaultView;\r\n\r\n                        // Safari 2-4 allows the smiley as a value, despite making a slider\r\n                        bool =  defaultView.getComputedStyle &&\r\n                            defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\r\n                            // Mobile android web browser has false positive, so must\r\n                            // check the height to see if the widget is actually there.\r\n                            (inputElem.offsetHeight !== 0);\r\n\r\n                        docElement.removeChild(inputElem);\r\n\r\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\r\n                        // Spec doesn't define any special parsing or detectable UI\r\n                        //   behaviors so we pass these through as true\r\n\r\n                        // Interestingly, opera fails the earlier test, so it doesn't\r\n                        //  even make it here.\r\n\r\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\r\n                        // Real url and email support comes with prebaked validation.\r\n                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;\r\n\r\n                    } else {\r\n                        // If the upgraded input component rejects the :) text, we got a winner\r\n                        bool = inputElem.value != smile;\r\n                    }\r\n                }\r\n\r\n                inputs[ props[i] ] = !!bool;\r\n            }\r\n            return inputs;\r\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\r\n        /*>>inputtypes*/\r\n    }\r\n    /*>>webforms*/\r\n\r\n\r\n    // End of test definitions\r\n    // -----------------------\r\n\r\n\r\n\r\n    // Run through all tests and detect their support in the current UA.\r\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\r\n    for ( var feature in tests ) {\r\n        if ( hasOwnProp(tests, feature) ) {\r\n            // run the test, throw the return value into the Modernizr,\r\n            //   then based on that boolean, define an appropriate className\r\n            //   and push it into an array of classes we'll join later.\r\n            featureName  = feature.toLowerCase();\r\n            Modernizr[featureName] = tests[feature]();\r\n\r\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\r\n        }\r\n    }\r\n\r\n    /*>>webforms*/\r\n    // input tests need to run.\r\n    Modernizr.input || webforms();\r\n    /*>>webforms*/\r\n\r\n\r\n    /**\r\n     * addTest allows the user to define their own feature tests\r\n     * the result will be added onto the Modernizr object,\r\n     * as well as an appropriate className set on the html element\r\n     *\r\n     * @param feature - String naming the feature\r\n     * @param test - Function returning true if feature is supported, false if not\r\n     */\r\n    Modernizr.addTest = function ( feature, test ) {\r\n        if ( typeof feature == 'object' ) {\r\n            for ( var key in feature ) {\r\n                if ( hasOwnProp( feature, key ) ) {\r\n                    Modernizr.addTest( key, feature[ key ] );\r\n                }\r\n            }\r\n        } else {\r\n\r\n            feature = feature.toLowerCase();\r\n\r\n            if ( Modernizr[feature] !== undefined ) {\r\n                // we're going to quit if you're trying to overwrite an existing test\r\n                // if we were to allow it, we'd do this:\r\n                //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n                //   docElement.className = docElement.className.replace( re, '' );\r\n                // but, no rly, stuff 'em.\r\n                return Modernizr;\r\n            }\r\n\r\n            test = typeof test == 'function' ? test() : test;\r\n\r\n            if (enableClasses) {\r\n                docElement.className += ' ' + (test ? '' : 'no-') + feature;\r\n            }\r\n            Modernizr[feature] = test;\r\n\r\n        }\r\n\r\n        return Modernizr; // allow chaining.\r\n    };\r\n\r\n\r\n    // Reset modElem.cssText to nothing to reduce memory footprint.\r\n    setCss('');\r\n    modElem = inputElem = null;\r\n\r\n    /*>>shiv*/\r\n    /*! HTML5 Shiv v3.6 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\r\n    ;(function(window, document) {\r\n        /*jshint evil:true */\r\n        /** Preset options */\r\n        var options = window.html5 || {};\r\n\r\n        /** Used to skip problem elements */\r\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n        /** Not all elements can be cloned in IE (this list can be shortend) **/\r\n        var saveClones = /^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i;\r\n\r\n        /** Detect whether the browser supports default html5 styles */\r\n        var supportsHtml5Styles;\r\n\r\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n        var expando = '_html5shiv';\r\n\r\n        /** The id for the documents expando */\r\n        var expanID = 0;\r\n\r\n        /** Cached data for each document */\r\n        var expandoData = {};\r\n\r\n        /** Detect whether the browser supports unknown elements */\r\n        var supportsUnknownElements;\r\n\r\n        (function() {\r\n            try {\r\n                var a = document.createElement('a');\r\n                a.innerHTML = '<xyz></xyz>';\r\n                //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n                supportsHtml5Styles = ('hidden' in a);\r\n\r\n                supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n                    // assign a false positive if unable to shiv\r\n                    (document.createElement)('a');\r\n                    var frag = document.createDocumentFragment();\r\n                    return (\r\n                        typeof frag.cloneNode == 'undefined' ||\r\n                            typeof frag.createDocumentFragment == 'undefined' ||\r\n                            typeof frag.createElement == 'undefined'\r\n                        );\r\n                }());\r\n            } catch(e) {\r\n                supportsHtml5Styles = true;\r\n                supportsUnknownElements = true;\r\n            }\r\n\r\n        }());\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Creates a style sheet with the given CSS text and adds it to the document.\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @param {String} cssText The CSS text.\r\n         * @returns {StyleSheet} The style element.\r\n         */\r\n        function addStyleSheet(ownerDocument, cssText) {\r\n            var p = ownerDocument.createElement('p'),\r\n                parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n            p.innerHTML = 'x<style>' + cssText + '</style>';\r\n            return parent.insertBefore(p.lastChild, parent.firstChild);\r\n        }\r\n\r\n        /**\r\n         * Returns the value of `html5.elements` as an array.\r\n         * @private\r\n         * @returns {Array} An array of shived element node names.\r\n         */\r\n        function getElements() {\r\n            var elements = html5.elements;\r\n            return typeof elements == 'string' ? elements.split(' ') : elements;\r\n        }\r\n\r\n        /**\r\n         * Returns the data associated to the given document\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @returns {Object} An object of data.\r\n         */\r\n        function getExpandoData(ownerDocument) {\r\n            var data = expandoData[ownerDocument[expando]];\r\n            if (!data) {\r\n                data = {};\r\n                expanID++;\r\n                ownerDocument[expando] = expanID;\r\n                expandoData[expanID] = data;\r\n            }\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * returns a shived element for the given nodeName and document\r\n         * @memberOf html5\r\n         * @param {String} nodeName name of the element\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived element.\r\n         */\r\n        function createElement(nodeName, ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createElement(nodeName);\r\n            }\r\n            if (!data) {\r\n                data = getExpandoData(ownerDocument);\r\n            }\r\n            var node;\r\n\r\n            if (data.cache[nodeName]) {\r\n                node = data.cache[nodeName].cloneNode();\r\n            } else if (saveClones.test(nodeName)) {\r\n                node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n            } else {\r\n                node = data.createElem(nodeName);\r\n            }\r\n\r\n            // Avoid adding some elements to fragments in IE < 9 because\r\n            // * Attributes like `name` or `type` cannot be set/changed once an element\r\n            //   is inserted into a document/fragment\r\n            // * Link elements with `src` attributes that are inaccessible, as with\r\n            //   a 403 response, will cause the tab/window to crash\r\n            // * Script elements appended to fragments will execute when their `src`\r\n            //   or `text` property is set\r\n            return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node;\r\n        }\r\n\r\n        /**\r\n         * returns a shived DocumentFragment for the given document\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived DocumentFragment.\r\n         */\r\n        function createDocumentFragment(ownerDocument, data){\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            if(supportsUnknownElements){\r\n                return ownerDocument.createDocumentFragment();\r\n            }\r\n            data = data || getExpandoData(ownerDocument);\r\n            var clone = data.frag.cloneNode(),\r\n                i = 0,\r\n                elems = getElements(),\r\n                l = elems.length;\r\n            for(;i<l;i++){\r\n                clone.createElement(elems[i]);\r\n            }\r\n            return clone;\r\n        }\r\n\r\n        /**\r\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n         * @private\r\n         * @param {Document|DocumentFragment} ownerDocument The document.\r\n         * @param {Object} data of the document.\r\n         */\r\n        function shivMethods(ownerDocument, data) {\r\n            if (!data.cache) {\r\n                data.cache = {};\r\n                data.createElem = ownerDocument.createElement;\r\n                data.createFrag = ownerDocument.createDocumentFragment;\r\n                data.frag = data.createFrag();\r\n            }\r\n\r\n\r\n            ownerDocument.createElement = function(nodeName) {\r\n                //abort shiv\r\n                if (!html5.shivMethods) {\r\n                    return data.createElem(nodeName);\r\n                }\r\n                return createElement(nodeName, ownerDocument, data);\r\n            };\r\n\r\n            ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n                'var n=f.cloneNode(),c=n.createElement;' +\r\n                'h.shivMethods&&(' +\r\n                // unroll the `createElement` calls\r\n                getElements().join().replace(/\\w+/g, function(nodeName) {\r\n                    data.createElem(nodeName);\r\n                    data.frag.createElement(nodeName);\r\n                    return 'c(\"' + nodeName + '\")';\r\n                }) +\r\n                ');return n}'\r\n            )(html5, data.frag);\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Shivs the given document.\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The document to shiv.\r\n         * @returns {Document} The shived document.\r\n         */\r\n        function shivDocument(ownerDocument) {\r\n            if (!ownerDocument) {\r\n                ownerDocument = document;\r\n            }\r\n            var data = getExpandoData(ownerDocument);\r\n\r\n            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n                data.hasCSS = !!addStyleSheet(ownerDocument,\r\n                    // corrects block display not defined in IE6/7/8/9\r\n                    'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}' +\r\n                        // adds styling not present in IE6/7/8/9\r\n                        'mark{background:#FF0;color:#000}'\r\n                );\r\n            }\r\n            if (!supportsUnknownElements) {\r\n                shivMethods(ownerDocument, data);\r\n            }\r\n            return ownerDocument;\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * The `html5` object is exposed so that more elements can be shived and\r\n         * existing shiving can be detected on iframes.\r\n         * @type Object\r\n         * @example\r\n         *\r\n         * // options can be changed before the script is included\r\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n         */\r\n        var html5 = {\r\n\r\n            /**\r\n             * An array or space separated string of node names of the elements to shiv.\r\n             * @memberOf html5\r\n             * @type Array|String\r\n             */\r\n            'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\r\n\r\n            /**\r\n             * A flag to indicate that the HTML5 style sheet should be inserted.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivCSS': (options.shivCSS !== false),\r\n\r\n            /**\r\n             * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n             * @memberOf html5\r\n             * @type boolean\r\n             */\r\n            'supportsUnknownElements': supportsUnknownElements,\r\n\r\n            /**\r\n             * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n             * methods should be overwritten.\r\n             * @memberOf html5\r\n             * @type Boolean\r\n             */\r\n            'shivMethods': (options.shivMethods !== false),\r\n\r\n            /**\r\n             * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n             * @memberOf html5\r\n             * @type String\r\n             */\r\n            'type': 'default',\r\n\r\n            // shivs the document according to the specified `html5` object options\r\n            'shivDocument': shivDocument,\r\n\r\n            //creates a shived element\r\n            createElement: createElement,\r\n\r\n            //creates a shived documentFragment\r\n            createDocumentFragment: createDocumentFragment\r\n        };\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        // expose html5\r\n        window.html5 = html5;\r\n\r\n        // shiv the document\r\n        shivDocument(document);\r\n\r\n    }(this, document));\r\n    /*>>shiv*/\r\n\r\n    // Assign private properties to the return object with prefix\r\n    Modernizr._version      = version;\r\n\r\n    // expose these for the plugin API. Look in the source for how to join() them against your input\r\n    /*>>prefixes*/\r\n    Modernizr._prefixes     = prefixes;\r\n    /*>>prefixes*/\r\n    /*>>domprefixes*/\r\n    Modernizr._domPrefixes  = domPrefixes;\r\n    Modernizr._cssomPrefixes  = cssomPrefixes;\r\n    /*>>domprefixes*/\r\n\r\n    /*>>mq*/\r\n    // Modernizr.mq tests a given media query, live against the current state of the window\r\n    // A few important notes:\r\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\r\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\r\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\r\n    //       Modernizr.mq('(min-width:0)')\r\n    // usage:\r\n    // Modernizr.mq('only screen and (max-width:768)')\r\n    Modernizr.mq            = testMediaQuery;\r\n    /*>>mq*/\r\n\r\n    /*>>hasevent*/\r\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\r\n    // Modernizr.hasEvent('gesturestart', elem)\r\n    Modernizr.hasEvent      = isEventSupported;\r\n    /*>>hasevent*/\r\n\r\n    /*>>testprop*/\r\n    // Modernizr.testProp() investigates whether a given style property is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testProp('pointerEvents')\r\n    Modernizr.testProp      = function(prop){\r\n        return testProps([prop]);\r\n    };\r\n    /*>>testprop*/\r\n\r\n    /*>>testallprops*/\r\n    // Modernizr.testAllProps() investigates whether a given style property,\r\n    //   or any of its vendor-prefixed variants, is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testAllProps('boxSizing')\r\n    Modernizr.testAllProps  = testPropsAll;\r\n    /*>>testallprops*/\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\r\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\r\n    Modernizr.testStyles    = injectElementWithStyles;\r\n    /*>>teststyles*/\r\n\r\n\r\n    /*>>prefixed*/\r\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\r\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\r\n\r\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\r\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\r\n    //\r\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\r\n\r\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\r\n    //\r\n    //     var transEndEventNames = {\r\n    //       'WebkitTransition' : 'webkitTransitionEnd',\r\n    //       'MozTransition'    : 'transitionend',\r\n    //       'OTransition'      : 'oTransitionEnd',\r\n    //       'msTransition'     : 'MSTransitionEnd',\r\n    //       'transition'       : 'transitionend'\r\n    //     },\r\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n\r\n    Modernizr.prefixed      = function(prop, obj, elem){\r\n        if(!obj) {\r\n            return testPropsAll(prop, 'pfx');\r\n        } else {\r\n            // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n            return testPropsAll(prop, obj, elem);\r\n        }\r\n    };\r\n    /*>>prefixed*/\r\n\r\n\r\n    /*>>cssclasses*/\r\n    // Remove \"no-js\" class from <html> element, if it exists:\r\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\r\n\r\n        // Add the new classes to the <html> element.\r\n        (enableClasses ? ' js ' + classes.join(' ') : '');\r\n    /*>>cssclasses*/\r\n\r\n    return Modernizr;\r\n\r\n})(this, this.document);","Magento_ReleaseNotification/js/modal/component.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal-component',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/translate'\r\n], function ($, Modal, alert, $t) {\r\n    'use strict';\r\n\r\n    return Modal.extend({\r\n        defaults: {\r\n            imports: {\r\n                logAction:  '${ $.provider }:data.logAction'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Error handler.\r\n         *\r\n         * @param {Object} xhr - request result.\r\n         */\r\n        onError: function (xhr) {\r\n            if (xhr.statusText === 'abort') {\r\n                return;\r\n            }\r\n\r\n            alert({\r\n                content: xhr.message || $t('An error occurred while logging process.')\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Log release notes show\r\n         */\r\n        logReleaseNotesShow: function () {\r\n            var self = this,\r\n                data = {\r\n                    'form_key': window.FORM_KEY\r\n                };\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                url: this.logAction,\r\n                data: data,\r\n                showLoader: true\r\n            }).done(function (xhr) {\r\n                if (xhr.error) {\r\n                    self.onError(xhr);\r\n                }\r\n            }).fail(this.onError);\r\n        },\r\n\r\n        /**\r\n         * Close release notes\r\n         */\r\n        closeReleaseNotes: function () {\r\n            this.logReleaseNotesShow();\r\n            this.closeModal();\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/regions-tax-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/select'\r\n], function (Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            filterBy: {\r\n                field: 'country',\r\n                target: '${ $.parentName }.country:value'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        filter: function () {\r\n            this._super();\r\n            this.disableSelect();\r\n        },\r\n\r\n        /**\r\n         * Disables select if there's no regions/states\r\n         *\r\n         * @returns {*} instance - Chainable\r\n         */\r\n        disableSelect: function () {\r\n            var empty = !this.options().length;\r\n\r\n            this.disabled(empty);\r\n\r\n            if (empty) {\r\n                this.error('');\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/fpt-attribute.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global RegionUpdater */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui',\r\n    'mage/adminhtml/form'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.fptAttribute', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var widget = this;\r\n\r\n            this.rowTmpl = mageTemplate(this.element.find('[data-role=\"row-template\"]').html());\r\n\r\n            this._initOptionItem();\r\n\r\n            if ($(this.options.bundlePriceType).val() === '0') {\r\n                this.element.hide();\r\n            }\r\n\r\n            $.each(this.options.itemsData, function () {\r\n                widget.addItem(this);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initOptionItem: function () {\r\n            var widget = this,\r\n                isOriginalRequired = $(widget.element).hasClass('required');\r\n\r\n            this._on({\r\n                /**\r\n                 * Add new tax item.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click [data-action=add-fpt-item]': function (event) {\r\n                    this.addItem(event);\r\n                },\r\n\r\n                /**\r\n                 * Delete tax item.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click [data-action=delete-fpt-item]': function (event) {\r\n                    var parent = $(event.target).closest('[data-role=\"fpt-item-row\"]');\r\n\r\n                    parent.find('[data-role=\"delete-fpt-item\"]').val(1);\r\n                    parent.addClass('ignore-validate').hide();\r\n                },\r\n\r\n                /**\r\n                 * Change tax item country/state.\r\n                 *\r\n                 * @param {jQuery.Event} event\r\n                 * @param {Object} data\r\n                 */\r\n                'change [data-role=\"select-country\"]': function (event, data) {\r\n                    var currentElement = event.target || event.srcElement || event.currentTarget,\r\n                        parentElement = $(currentElement).closest('[data-role=\"fpt-item-row\"]'),\r\n                        updater;\r\n\r\n                    data = data || {};\r\n                    updater = new RegionUpdater(\r\n                        parentElement.find('[data-role=\"select-country\"]').attr('id'), null,\r\n                        parentElement.find('[data-role=\"select-state\"]').attr('id'),\r\n                        widget.options.region, 'disable', true\r\n                    );\r\n                    updater.update();\r\n                    //set selected state value if set\r\n                    if (data.state) {\r\n                        parentElement.find('[data-role=\"select-state\"]').val(data.state);\r\n                    }\r\n\r\n                    if (!isOriginalRequired && $(widget.element).hasClass('required')) {\r\n                        $(widget.element).removeClass('required');\r\n                    }\r\n                }\r\n            });\r\n\r\n            $(this.options.bundlePriceType).on('change', function (event) {\r\n                var attributeItems = widget.element.find('[data-role=\"delete-fpt-item\"]');\r\n\r\n                if ($(event.target).val() === '0') {\r\n                    widget.element.hide();\r\n                    attributeItems.each(function () {\r\n                        $(this).val(1);\r\n                    });\r\n                } else {\r\n                    widget.element.show();\r\n                    attributeItems.each(function () {\r\n                        if ($(this).closest('[data-role=\"fpt-item-row\"]').is(':visible')) {\r\n                            $(this).val(0);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add custom option.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         */\r\n        addItem: function (event) {\r\n            var data = {},\r\n                currentElement = event.target || event.srcElement || event.currentTarget,\r\n                tmpl;\r\n\r\n            if (typeof currentElement !== 'undefined') {\r\n                data['website_id'] = 0;\r\n            } else {\r\n                data = event;\r\n            }\r\n\r\n            data.index = this.element.find('[data-role=\"fpt-item-row\"]').length;\r\n\r\n            tmpl = this.rowTmpl({\r\n                data: data\r\n            });\r\n\r\n            $(tmpl).appendTo(this.element.find('[data-role=\"fpt-item-container\"]'));\r\n\r\n            //set selected website_id value if set\r\n            if (data['website_id']) {\r\n                this.element.find('[data-role=\"select-website\"][id$=\"_' + data.index + '_website\"]')\r\n                    .val(data['website_id']);\r\n            }\r\n\r\n            //set selected country value if set\r\n            if (data.country) {\r\n                this.element.find('[data-role=\"select-country\"][id$=\"_' + data.index + '_country\"]')\r\n                    .val(data.country).trigger('change', data);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.fptAttribute;\r\n});\r\n","Magento_Weee/js/fpt-group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/components/group',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/lib/validation/validator',\r\n    'mage/translate',\r\n    'underscore'\r\n], function (Group, uiRegistry, validation, $t, _) {\r\n    'use strict';\r\n\r\n    return Group.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            showLabel: true,\r\n            required: false,\r\n            template: 'ui/group/group',\r\n            fieldTemplate: 'ui/form/field',\r\n            breakLine: true,\r\n            validateWholeGroup: false,\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            validation.addRule('validate-fpt-group', function (value) {\r\n                if (value.indexOf('?') !== -1) {\r\n\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            }, $t(\r\n                'Set unique country-state combinations within the same fixed product tax. ' +\r\n                'Verify the combinations and try again.'\r\n            ));\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _handleOptionsAvailability: function () {\r\n            var parent,\r\n                dup;\r\n\r\n            dup = {};\r\n            parent = uiRegistry.get(uiRegistry.get(this.parentName).parentName);\r\n            _.each(parent.elems(), function (elem) {\r\n                var country,\r\n                    state,\r\n                    val,\r\n                    key;\r\n\r\n                country = uiRegistry.get(elem.name + '.countryState.country');\r\n                state = uiRegistry.get(elem.name + '.countryState.state');\r\n                val = uiRegistry.get(elem.name + '.countryState.val');\r\n\r\n                key = country.value() + (state.value() > 0 ? state.value() : 0);\r\n                dup[key]++;\r\n\r\n                if (!dup[key]) {\r\n                    dup[key] = 1;\r\n                    val.value('');\r\n                } else {\r\n                    dup[key]++;\r\n                    val.value(country.value() + '?' + country.name);\r\n                }\r\n            });\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initElement: function (elem) {\r\n            var obj;\r\n\r\n            obj = this;\r\n            this._super();\r\n            elem.on('value', function () {\r\n                obj._handleOptionsAvailability();\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/price/adjustment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Weee/price/adjustment',\r\n            dataSource: '${ $.parentName }.provider',\r\n            //Weee configuration constants can be configured from backend\r\n            inclFptWithDesc: 1,//show FPT and description\r\n            inclFpt: 0, //show FPT attribute\r\n            exclFpt: 2, //do not show FPT\r\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\r\n        },\r\n\r\n        /**\r\n         * Get Weee attributes.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeAttributes: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee without Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithoutTax: function (taxAmount) {\r\n            return taxAmount['amount_excl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee with Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithTax: function (taxAmount) {\r\n            return taxAmount['tax_amount_incl_tax'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee Tax name.\r\n         *\r\n         * @param {String} taxAmount\r\n         * @return {String} Weee name\r\n         */\r\n        getWeeTaxAttributeName: function (taxAmount) {\r\n            return taxAmount['attribute_code'];\r\n        },\r\n\r\n        /**\r\n         * Set price type.\r\n         *\r\n         * @param {String} priceType\r\n         * @return {Object}\r\n         */\r\n        setPriceType: function (priceType) {\r\n            this.taxPriceType = priceType;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if Weee Tax must be shown.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isShown: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\r\n        },\r\n\r\n        /**\r\n         * Get Weee final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee final price html\r\n         */\r\n        getWeeeAdjustment: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_adjustment'];\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including FPT only.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFpt: function () {\r\n            return +this.source.data.displayWeee === this.inclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * price including FPT and FPT description.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price\r\n         * excluding FPT but including FPT description and final price.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding FPT.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFpt: function () {\r\n            return +this.source.data.displayWeee === this.bothFptPrices;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclTax: function () {\r\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclTax: function () {\r\n            return +this.source.data.displayTaxes === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * both price including tax and price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayBothPricesTax: function () {\r\n            return +this.source.data.displayTaxes === this.bothFptPrices;\r\n        }\r\n    });\r\n});\r\n","Amazon_Core/js/simplepath.js":"/**\r\n * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'mage/translate',\r\n        'jquery/ui',\r\n        'jquery/validate'\r\n    ],\r\n    function ($, Class, $t) {\r\n        'use strict';\r\n        var pollTimer, windowOpen = false;\r\n\r\n        return Class.extend({\r\n\r\n                defaults: {\r\n                    $amazonFields: null,\r\n                    $amazonCredentialJson: null,\r\n                    $amazonSpBack: null,\r\n                    $amazonMerchantId: null,\r\n                    selector: 'amazon_payment',\r\n                    $container: null,\r\n                    pollInterval: 1500,\r\n                    $form: null,\r\n                    apSimplePathSelector: '#amazon_simplepath',\r\n                    apSimplePathBackSelector: '#amazon_simplepath_back',\r\n                },\r\n\r\n                /**\r\n                 * Set list of observable attributes\r\n                 * @returns {exports.initObservable}\r\n                 */\r\n                initObservable: function () {\r\n                    var self = this;\r\n\r\n                    self.$amazonSimplepath = $(self.apSimplePathSelector);\r\n                    self.$amazonFields = $('#payment_' + self.getCountry() + '_' + self.selector + ' .form-list');\r\n                    self.$amazonCredentialsHeader = $('#payment_' + self.getCountry() + '_' + self.selector\r\n                        + '_credentials-head');\r\n                    self.$amazonCredentialJson = $('#payment_' + self.getCountry() + '_' + self.selector\r\n                        + '_credentials_credentials_json');\r\n                    self.$amazonMerchantId = $('#payment_' + self.getCountry() + '_' + self.selector\r\n                        + '_credentials_merchant_id').val();\r\n                    self.$amazonSpBack = $(self.apSimplePathBackSelector);\r\n                    self.$container = $(self.apSimplePathSelector);\r\n\r\n                    if (this.isMultiCurrencyRegion) {\r\n                        $('#row_payment_' + self.getCountry() + '_amazon_payment_advanced_sales_options_multicurrency').show();\r\n                        $('#row_payment_other_amazon_payment_advanced_sales_options_multicurrency').show();\r\n                    }\r\n                    else {\r\n                        $('#row_payment_' + self.getCountry() + '_amazon_payment_advanced_sales_options_multicurrency').hide();\r\n                        $('#row_payment_other_amazon_payment_advanced_sales_options_multicurrency').hide();\r\n                    }\r\n                    \r\n                    if (self.$amazonMerchantId) {\r\n                        self.hideAmazonConfig();\r\n                    }\r\n                    else {\r\n                        self.showAmazonConfig();\r\n                    }\r\n\r\n                    if (!self.$form) {\r\n                        self.generateSimplePathForm();\r\n                    }\r\n\r\n                    self._super();\r\n\r\n                    self.initEventHandlers();\r\n\r\n                    return self;\r\n                },\r\n\r\n                /**\r\n                 * Init event handlers\r\n                 */\r\n                initEventHandlers: function () {\r\n                    var self = this;\r\n\r\n                    self.$amazonSpBack.click(function () {\r\n                        self.showAmazonConfig();\r\n                        return false;\r\n                    });\r\n\r\n                    $('#simplepath-skip').click(function () {\r\n                        self.hideAmazonConfig();\r\n                        return false;\r\n                    });\r\n\r\n                    $('#simplepath_form').on('submit', function () {\r\n                        // Remove the numeric indices added by Magento's form validation logic\r\n                        $('#simplepath_form :input').each(function() {\r\n                            if($(this).attr('orig-name')) {\r\n                                $(this).attr('name', $(this).attr('orig-name'));\r\n                                $(this).removeAttr('orig-name');\r\n                            }\r\n                        });\r\n                        self.setupWindowLaunch();\r\n                    });\r\n\r\n                    self.$amazonCredentialJson.on('input', function () {\r\n                        self.updateCredentials(self);\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * Detects when a properly formatted JSON block is pasted into the Credentials JSON field\r\n                 * and auto populates specified fields.\r\n                 *\r\n                 * @param self\r\n                 */\r\n                updateCredentials: function (self) {\r\n                    var elJson = self.$amazonCredentialJson.val(), obj = null, success = true, item = null;\r\n\r\n                    try {\r\n                        obj = $.parseJSON($.trim(elJson));\r\n                    }\r\n                    catch (err) {\r\n                        obj = null;\r\n                        self.$amazonCredentialJson.val('').attr(\r\n                            'placeholder',\r\n                            $t('Invalid JSON credentials entered, please try again.')\r\n                        ).focus();\r\n                    }\r\n\r\n                    if (obj && typeof obj === 'object') {\r\n\r\n                        for (var prop in obj) {\r\n                            if (obj.hasOwnProperty(prop)) {\r\n                                item = $('#payment_' + self.getCountry() + '_amazon_payment_credentials_'\r\n                                    + $.trim(prop));\r\n\r\n                                if (item && item.length) {\r\n                                    $('#payment_' + self.getCountry() + '_amazon_payment_credentials_'\r\n                                        + $.trim(prop)).val($.trim(obj[prop]));\r\n                                }\r\n                                else {\r\n                                    success = false;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (success) {\r\n                            self.$amazonCredentialJson.val('').attr(\r\n                                'placeholder',\r\n                                $t('Credential fields successfully updated and being saved.')\r\n                            ).focus();\r\n                            $('#save').click();\r\n                        }\r\n                        else {\r\n                            self.$amazonCredentialJson.val('').attr(\r\n                                'placeholder',\r\n                                $t('One or more of your credential fields did not parse correctly. ' +\r\n                                    'Please review your entry and try again.')\r\n                            ).focus();\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets up Amazon merchant key popup and polls for data update upon user completion.\r\n                 */\r\n                setupWindowLaunch: function () {\r\n                    var self = this,\r\n                        heights = [660, 720, 810, 900],\r\n                        popupWidth = this.getCountry() !== 'us' ? 768 : 1050, popupHeight = heights[0],\r\n                        region = self.region,\r\n                        elCheckDefault = $('#payment_' + self.getCountry()\r\n                            + '_amazon_payment_credentials_payment_region_inherit:checked'),\r\n                        elRegion = $('payment_' + self.getCountry() + '_amazon_payment_credentials_payment_region'),\r\n                        elJson = self.$amazonCredentialJson.val();\r\n\r\n                    for (var i in heights) {\r\n                        if (heights.hasOwnProperty(i)) {\r\n                            popupHeight = window.innerHeight >= heights[i] ? heights[i] : popupHeight;\r\n                        }\r\n                    }\r\n\r\n                    self.launchPopup(self.amazonUrl, popupWidth, popupHeight);\r\n\r\n                    // flags that popup is open and poll timer can proceed\r\n                    windowOpen = true;\r\n\r\n                    // begin polling for feedback\r\n                    pollTimer = setTimeout(self.pollForKeys(self), self.pollInterval);\r\n\r\n                    // Save JSON\r\n                    $('#save-json').click(function (e) {\r\n                        e.stop();\r\n                        var json = $('#json-import').value;\r\n\r\n                        if (!json || !json.isJSON()) {\r\n                            return;\r\n                        }\r\n                        elJson.value = json;\r\n                        $('#save').click();\r\n                    });\r\n\r\n                    // Autoset payment region (for EU/UK)\r\n                    if (self.region.indexOf('eu') !== -1) {\r\n                        region = 'de';\r\n                    }\r\n\r\n                    if (elCheckDefault && elCheckDefault.length) {\r\n                        elCheckDefault[0].click();\r\n                    }\r\n\r\n                    if (elRegion) {\r\n                        elRegion.value = region;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Perform Ajax request looking for new keys.\r\n                 */\r\n                pollForKeys: function (self) {\r\n                    clearTimeout(pollTimer);\r\n                    if (windowOpen) {\r\n                        $.ajax({\r\n                            url: self.pollUrl,\r\n                            data: {},\r\n                            type: 'GET',\r\n                            cache: true,\r\n                            dataType: 'json',\r\n                            context: this,\r\n\r\n                            /**\r\n                             * Response handler\r\n                             * @param {Object} response\r\n                             */\r\n                            success: function (response) {\r\n                                // poll controller returns a 0 if invalid and a 1 if valid\r\n                                if (response) {\r\n                                    $('#amazon_reload').show();\r\n                                    document.location.replace(document.location + '#payment_amazon_payments-head');\r\n                                    location.reload();\r\n                                }\r\n                                else {\r\n                                    pollTimer = setTimeout(self.pollForKeys(self), self.pollInterval);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets up dynamic form for capturing popup/form input for simple path setup.\r\n                 */\r\n                generateSimplePathForm: function () {\r\n\r\n                    this.$form = new Element('form', {\r\n                        method: 'post',\r\n                        action: this.amazonUrl,\r\n                        id: 'simplepath_form',\r\n                        target: 'simplepath',\r\n                        novalidate: 'novalidate',\r\n                    });\r\n\r\n                    this.$container.wrap(this.$form);\r\n\r\n                    // Convert formParams JSON to hidden inputs\r\n                    for (var key in this.formParams) {\r\n                        if ( $.isPlainObject(this.formParams[key]) || $.isArray(this.formParams[key])) {\r\n                            for (var i in this.formParams[key]) {\r\n                                if (typeof this.formParams[key][i] !== 'function') {\r\n                                    $(new Element('input', {\r\n                                        type: 'hidden',\r\n                                        name: key,\r\n                                        value: this.formParams[key][i],\r\n                                        novalidate: 'novalidate'\r\n                                    })).appendTo($(\"#simplepath_form\"));\r\n                                }\r\n                            }\r\n                        } else {\r\n                            $(new Element('input', {\r\n                                type: 'hidden',\r\n                                name: key,\r\n                                novalidate: 'novalidate',\r\n                                value: this.formParams[key]\r\n                            })).appendTo($(\"#simplepath_form\"));\r\n                        }\r\n                    }\r\n\r\n                    // unable to use this.form, had to resort to direct call\r\n                    $('#simplepath_form').validate({});\r\n                },\r\n\r\n                /**\r\n                 * display amazon simple path config section\r\n                 */\r\n                showAmazonConfig: function () {\r\n                    this.$amazonSimplepath.show();\r\n                    this.$amazonSpBack.hide();\r\n                    if (this.$amazonCredentialsHeader.hasClass('open')) {\r\n                        this.$amazonCredentialsHeader.click();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * hide amazon simple path config.\r\n                 */\r\n                hideAmazonConfig: function () {\r\n                    this.$amazonSimplepath.hide();\r\n                    this.$amazonSpBack.show();\r\n                    if (!this.$amazonCredentialsHeader.hasClass('open')) {\r\n                        this.$amazonCredentialsHeader.click();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Get payment code\r\n                 * @returns {String}\r\n                 */\r\n                getCountry: function () {\r\n                    return this.co.toLowerCase();\r\n                },\r\n\r\n                /**\r\n                 * Generate popup window for simple path process\r\n                 * @param url\r\n                 * @param requestedWidth\r\n                 * @param requestedHeight\r\n                 */\r\n                launchPopup: function (url, requestedWidth, requestedHeight) {\r\n                    var leftOffset = this.getLeftOffset(requestedWidth),\r\n                        topOffset = this.getTopOffset(requestedHeight),\r\n                        newWindow = window.open(url, 'simplepath', 'scrollbars=yes, width=' + requestedWidth\r\n                            + ', height=' + requestedHeight + ', top=' + topOffset + ', left=' + leftOffset);\r\n\r\n                    if (window.focus) {\r\n                        newWindow.focus();\r\n                    }\r\n\r\n                    // Set interval to check when this popup window is closed so timeout can be suspended.\r\n                    var winTimer = window.setInterval(function () {\r\n                        if (newWindow.closed !== false) {\r\n                            window.clearInterval(winTimer);\r\n                            windowOpen = false;\r\n                        }\r\n                    });\r\n                },\r\n\r\n                /**\r\n                 * Determine left offset for popup window\r\n                 * @param requestedWidth\r\n                 * @returns {number}\r\n                 */\r\n                getLeftOffset: function (requestedWidth) {\r\n                    var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\r\n\r\n                    return (this.windowWidth() / 2) - (requestedWidth / 2) + dualScreenLeft;\r\n                },\r\n\r\n                /**\r\n                 * Determine top offset for popup window\r\n                 * @param requestedHeight\r\n                 * @returns {number}\r\n                 */\r\n                getTopOffset: function (requestedHeight) {\r\n                    var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\r\n\r\n                    return (this.windowHeight() / 2) - (requestedHeight / 2) + dualScreenTop;\r\n                },\r\n\r\n                /**\r\n                 * Determine width of popup window\r\n                 * @returns {number}\r\n                 */\r\n                windowWidth: function () {\r\n                    return window.innerWidth\r\n                        || document.documentElement.clientWidth\r\n                        || screen.width;\r\n                },\r\n\r\n                /**\r\n                 * Determine window height of popup\r\n                 * @returns {number}\r\n                 */\r\n                windowHeight: function () {\r\n                    return window.innerHeight\r\n                        || document.documentElement.clientHeight\r\n                        || screen.height;\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n","Magento_AdminNotification/toolbar_entry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui',\r\n    'domReady!'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Mark notification as read via AJAX call.\r\n     *\r\n     * @param {String} notificationId\r\n     */\r\n    var markNotificationAsRead = function (notificationId) {\r\n            var requestUrl = $('.notifications-wrapper .admin__action-dropdown-menu').attr('data-mark-as-read-url');\r\n\r\n            $.ajax({\r\n                url: requestUrl,\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                data: {\r\n                    id: notificationId\r\n                },\r\n                showLoader: false\r\n            });\r\n        },\r\n        notificationCount = $('.notifications-wrapper').attr('data-notification-count'),\r\n\r\n        /**\r\n         * Remove notification from the list.\r\n         *\r\n         * @param {jQuery} notificationEntry\r\n         */\r\n        removeNotificationFromList = function (notificationEntry) {\r\n            var notificationIcon, actionElement;\r\n\r\n            notificationEntry.remove();\r\n            notificationCount--;\r\n            $('.notifications-wrapper').attr('data-notification-count', notificationCount);\r\n\r\n            if (notificationCount == 0) {// eslint-disable-line eqeqeq\r\n                // Change appearance of the bubble and its behavior when the last notification is removed\r\n                $('.notifications-wrapper .admin__action-dropdown-menu').remove();\r\n                notificationIcon = $('.notifications-wrapper .notifications-icon');\r\n                notificationIcon.removeAttr('data-toggle');\r\n                notificationIcon.off('click.dropdown');\r\n                $('.notifications-action .notifications-counter').text('').hide();\r\n            } else {\r\n                // Change top counter only for allowable range\r\n                if (notificationCount <= 99) {\r\n                    $('.notifications-action .notifications-counter').text(notificationCount);\r\n                }\r\n                $('.notifications-entry-last .notifications-counter').text(notificationCount);\r\n                // Modify caption of the 'See All' link\r\n                actionElement = $('.notifications-wrapper .admin__action-dropdown-menu .last .action-more');\r\n                actionElement.text(actionElement.text().replace(/\\d+/, notificationCount));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show notification details.\r\n         *\r\n         * @param {jQuery} notificationEntry\r\n         */\r\n        showNotificationDetails = function (notificationEntry) {\r\n            var notificationDescription = notificationEntry.find('.notifications-entry-description'),\r\n                notificationDescriptionEnd = notificationEntry.find('.notifications-entry-description-end');\r\n\r\n            if (notificationDescriptionEnd.length > 0) {\r\n                notificationDescriptionEnd.addClass('_show');\r\n            }\r\n\r\n            if (notificationDescription.hasClass('_cutted')) {\r\n                notificationDescription.removeClass('_cutted');\r\n            }\r\n        };\r\n\r\n    // Show notification description when corresponding item is clicked\r\n    $('.notifications-wrapper .admin__action-dropdown-menu .notifications-entry').on(\r\n        'click.showNotification',\r\n        function (event) {\r\n            // hide notification dropdown\r\n            $('.notifications-wrapper .notifications-icon').trigger('click.dropdown');\r\n\r\n            showNotificationDetails($(this));\r\n            event.stopPropagation();\r\n        }\r\n    );\r\n\r\n    // Remove corresponding notification from the list and mark it as read\r\n    $('.notifications-close').on('click.removeNotification', function (event) {\r\n        var notificationEntry = $(this).closest('.notifications-entry'),\r\n            notificationId = notificationEntry.attr('data-notification-id');\r\n\r\n        markNotificationAsRead(notificationId);\r\n        removeNotificationFromList(notificationEntry);\r\n\r\n        // Checking for last unread notification to hide dropdown\r\n        if (notificationCount == 0) {// eslint-disable-line eqeqeq\r\n            $('.notifications-wrapper').removeClass('active')\r\n                .find('.notifications-action')\r\n                .removeAttr('data-toggle')\r\n                .off('click.dropdown');\r\n        }\r\n        event.stopPropagation();\r\n    });\r\n\r\n    // Hide notifications bubble\r\n    if (notificationCount == 0) {// eslint-disable-line eqeqeq\r\n        $('.notifications-action .notifications-counter').hide();\r\n    } else {\r\n        $('.notifications-action .notifications-counter').show();\r\n    }\r\n});\r\n","Magento_AdminNotification/system/notification.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.systemMessageDialog', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'modal-system-messages',\r\n            systemMessageTemplate:\r\n                '<% _.each(data.items, function(item) { %>' +\r\n                    '<li class=\"message message-warning' +\r\n                        '<% if (item.severity == 1) { %>error<% } else { %>warning<% } %>\">' +\r\n                        '<%= item.text %>' +\r\n                    '</li>' +\r\n                '<% }); %>'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.options.title = $('#message-system-all').attr('title');\r\n            this._super();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        openModal: function (severity) {\r\n            var superMethod = $.proxy(this._super, this);\r\n\r\n            $.ajax({\r\n                url: this.options.ajaxUrl,\r\n                type: 'GET',\r\n                data: {\r\n                    severity: severity\r\n                }\r\n            }).done($.proxy(function (data) {\r\n                var tmpl = mageTemplate(this.options.systemMessageTemplate, {\r\n                    data: {\r\n                        items: data\r\n                    }\r\n                });\r\n\r\n                tmpl = $(tmpl);\r\n\r\n                this.element.html(\r\n                    $('<ul />', {\r\n                        'class': 'message-system-list'\r\n                    }).append(tmpl)\r\n                ).trigger('contentUpdated');\r\n\r\n                superMethod();\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        closeModal: function () {\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    $(document).ready(function () {\r\n        $('#system_messages .message-system-short .error').on('click', function () {\r\n            $('#message-system-all').systemMessageDialog('openModal', 1);\r\n        });\r\n\r\n        $('#system_messages .message-system-short .warning').on('click', function () {\r\n            $('#message-system-all').systemMessageDialog('openModal', 2);\r\n        });\r\n    });\r\n\r\n    return $.mage.systemMessageDialog;\r\n});\r\n","Magento_AdminNotification/js/system/messages/popup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, modal) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        if (modal.modal) {\r\n            modal.modal.html($(element).html());\r\n        } else {\r\n            modal.modal = $(element).modal({\r\n                modalClass: data.class,\r\n                type: 'popup',\r\n                buttons: []\r\n            });\r\n        }\r\n\r\n        modal.modal.modal('openModal');\r\n    };\r\n});\r\n","Magento_AdminNotification/js/grid/listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/listing',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'jquery'\r\n], function (Listing, loader, $) {\r\n    'use strict';\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            imports: {\r\n                totalRecords: '${ $.provider }:data.totalRecords'\r\n            },\r\n            selectors: {\r\n                collapsible: '.message-system-collapsible',\r\n                messages: '.message-system'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    totalRecords: 0\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        showLoader: function () {\r\n            if (!this.source.firstLoad) {\r\n                this.fixLoaderHeight();\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Calculates loader height\r\n         *\r\n         * @param {Boolean} [closed]\r\n         */\r\n        fixLoaderHeight: function (closed) {\r\n            var $messagesBlock = $(this.selectors.messages),\r\n                $collapsibleBlock = $(this.selectors.collapsible),\r\n                resultHeight = 0;\r\n\r\n            if ($messagesBlock.length) {\r\n                resultHeight += $messagesBlock.outerHeight();\r\n            }\r\n\r\n            if ($collapsibleBlock.length && $collapsibleBlock.is(':visible') && !closed) {\r\n                resultHeight += $collapsibleBlock.outerHeight();\r\n            }\r\n\r\n            loader.get(this.name).height(resultHeight);\r\n        }\r\n    });\r\n});\r\n","Magento_AdminNotification/js/grid/columns/message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'underscore'\r\n], function (Column, _) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_AdminNotification/grid/cells/message',\r\n            messageIndex: 'text',\r\n            fieldClass: {\r\n                message: true,\r\n                'message-warning': false,\r\n                'message-progress': false,\r\n                'message-success': false,\r\n                'message-error': false\r\n            },\r\n            statusMap: {\r\n                0: 'info',\r\n                1: 'progress',\r\n                2: 'success',\r\n                3: 'error'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        getLabel: function (record) {\r\n            return record[this.messageIndex];\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        getFieldClass: function ($row) {\r\n            var status = this.statusMap[$row.status] || 'warning',\r\n                result = {};\r\n\r\n            result['message-' + status] = true;\r\n            result = _.extend({}, this.fieldClass, result);\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Dotdigitalgroup_Email/js/datePickerInit.js":"require(['jquery', 'jquery/ui', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    var el = $('.ddg-datepicker');\r\n\r\n    el.datepicker({\r\n        dateFormat: 'yy-mm-dd'\r\n    });\r\n    el.addClass('datepicker');\r\n});\r\n","Dotdigitalgroup_Email/js/addressBook.js":"define(['jquery','domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Initializer\r\n     * @param {String} url\r\n     */\r\n    function init(url) {\r\n        $('#sync_settings_dynamic_addressbook_addressbook_button').click(function () {\r\n            var name = $('#sync_settings_dynamic_addressbook_addressbook_name').val(),\r\n                visibility = $('#sync_settings_dynamic_addressbook_visibility').val();\r\n\r\n            if (name && visibility) {\r\n                $.post(url, {\r\n                    name: name, visibility: visibility\r\n                }, function () {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Export/return addressBook\r\n     * @param {Object} addressBook\r\n     */\r\n    return function (addressBook) {\r\n        init(addressBook.url);\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/logUpdater.js":"define(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * scroll to the bottom of text\r\n     */\r\n    function consoleScroll() {\r\n        var logData = document.getElementById('log_data'),\r\n            dh = logData.scrollHeight,\r\n            ch = logData.clientHeight;\r\n\r\n        if (dh > ch) {\r\n            logData.scrollTop = dh - ch;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update elements\r\n     * @param {String} log\r\n     * @param {String} url\r\n     */\r\n    function doUpdate(log, url) {\r\n        $.post(url, {\r\n            log: log\r\n        }, function (json) {\r\n            $('#log_data').html(json.content);\r\n            $('#connector-log-header').html(json.header);\r\n            consoleScroll();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Export/return log updater\r\n     * @param {Object} logUpdater\r\n     */\r\n    return function (logUpdater) {\r\n        consoleScroll();\r\n\r\n        //Observer select\r\n        $('#connector-log-selector').change(function () {\r\n            doUpdate($('#connector-log-selector').val(), logUpdater.url);\r\n        });\r\n\r\n        //Observe button click for reload\r\n        $('#connector-log-reloader').click(function () {\r\n            doUpdate($('#connector-log-selector').val(), logUpdater.url);\r\n        });\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/daterange.js":"require(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    $(document).ready(function () {\r\n\r\n        /**\r\n         * Update url params\r\n         * @param {String} uri\r\n         * @param {String} key\r\n         * @param {String} value\r\n         * @returns {String}\r\n         */\r\n        function updateUrlParameter(uri, key, value) {\r\n            var re = new RegExp('([?&])' + key + '=.*?(&|$)', 'i'),\r\n                separator = uri.indexOf('?') !== -1 ? '&' : '?';\r\n\r\n            if (uri.match(re)) {\r\n                uri = uri.replace(re, '$1' + key + '=' + value + '$2');\r\n            } else {\r\n                uri = uri + separator + key + '=' + value;\r\n            }\r\n\r\n            return uri;\r\n        }\r\n\r\n        /**\r\n         * Change urls\r\n         * @param {String} value\r\n         */\r\n        function changeUrls(value) {\r\n            var elmToChange =\r\n                [\r\n                    '#row_connector_developer_settings_sync_settings_reset_orders',\r\n                    '#row_connector_developer_settings_sync_settings_reset_reviews',\r\n                    '#row_connector_developer_settings_sync_settings_reset_wishlists',\r\n                    '#row_connector_developer_settings_sync_settings_reset_catalog'\r\n                ];\r\n\r\n            if ($('#row_connector_developer_settings_sync_settings_reset_quotes').length) {\r\n                elmToChange.push('#row_connector_developer_settings_sync_settings_reset_quotes');\r\n            }\r\n\r\n            $.each(elmToChange, function (k, v) {\r\n                var button = $(v).find('button'),\r\n                    str = button.attr('onclick'),\r\n                    updatedUrl = updateUrlParameter(str, value, encodeURIComponent($('#' + value).val()));\r\n\r\n                button.attr('onclick', updatedUrl);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Observe change on given element\r\n         * @param {String} value\r\n         */\r\n        function observeChange(value) {\r\n            $('#' + value).change(function () {\r\n                changeUrls(value);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Init\r\n         */\r\n        function start() {\r\n            var elmToObserve = ['from', 'to'];\r\n\r\n            $.each(elmToObserve, function (key, value) {\r\n                observeChange(value);\r\n            });\r\n        }\r\n\r\n        start();\r\n    });\r\n});\r\n","Dotdigitalgroup_Email/js/dataFields.js":"define(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Initializer\r\n     * @param {String} url\r\n     */\r\n    function init(url) {\r\n        $('#connector_data_mapping_dynamic_datafield_datafield_button').click(function () {\r\n            var name = $('#connector_data_mapping_dynamic_datafield_datafield_name').val(),\r\n                type = $('#connector_data_mapping_dynamic_datafield_datafield_type').val(),\r\n                defaultVal = $('#connector_data_mapping_dynamic_datafield_datafield_default').val(),\r\n                access = $('#connector_data_mapping_dynamic_datafield_datafield_access').val();\r\n\r\n            if (name && type && access) {\r\n                $.post(url, {\r\n                    name: name, type: type, default: defaultVal, visibility: access\r\n                }, function () {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Export/return dataFields\r\n     * @param {Object} dataFields\r\n     */\r\n    return function (dataFields) {\r\n        init(dataFields.url);\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/rulesDatafields.js":"define(['prototype', 'domReady!'], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Do update for condition\r\n     * @param {Object} item\r\n     * @param {String} url\r\n     */\r\n    function doUpdateForCondition(item, url) {\r\n        var attribute = item.up(1).down(),\r\n            attributeValue = attribute.down().value,\r\n            value = item.up().next(),\r\n            valueName = value.down().readAttribute('name'),\r\n            condValue = item.value;\r\n\r\n        new Ajax.Request(url, {\r\n            method: 'post',\r\n            parameters: {\r\n                attributeValue: attributeValue,\r\n                value: valueName,\r\n                condValue: condValue\r\n            },\r\n\r\n            /**\r\n             * @param {Object} transport\r\n             */\r\n            onSuccess: function (transport) {\r\n                var json = transport.responseJSON;\r\n\r\n                value.update(json.cvalue);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Object} item\r\n     * @param {String} url\r\n     * @param {String} valueAjaxUrl\r\n     */\r\n    function doUpdate(item, url, valueAjaxUrl) {\r\n        var cond = item.up(1).down().next(),\r\n            condName = cond.down().readAttribute('name'),\r\n            value = item.up(1).down().next(1),\r\n            valueName = value.down().readAttribute('name'),\r\n            attribute = item.value;\r\n\r\n        new Ajax.Request(url, {\r\n            method: 'post',\r\n            parameters: {\r\n                attribute: attribute,\r\n                condition: condName,\r\n                value: valueName\r\n            },\r\n\r\n            /**\r\n             * @param {Object} transport\r\n             */\r\n            onSuccess: function (transport) {\r\n                var json = transport.responseJSON;\r\n\r\n                cond.update(json.condition);\r\n                value.update(json.cvalue);\r\n\r\n                $$('.admin__control-table tr td select').each(function (itemToObserve) {\r\n                    Event.observe(itemToObserve, 'change', function () {\r\n                        if (itemToObserve.readAttribute('title') === 'conditions') {\r\n                            doUpdateForCondition(itemToObserve, valueAjaxUrl);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Do update with values\r\n     * @param {Object} item\r\n     * @param {String} url\r\n     * @param {String} valueAjaxUrl\r\n     */\r\n    function doUpdateWithValues(item, url, valueAjaxUrl) {\r\n        var arrayKey = item.up(1).readAttribute('id'),\r\n            cond = item.up(1).down().next(),\r\n            condName = cond.down().readAttribute('name'),\r\n            value = item.up(1).down().next(1),\r\n            valueName = value.down().readAttribute('name'),\r\n            attribute = item.value,\r\n            ruleId = $('rule_id').value;\r\n\r\n        new Ajax.Request(url, {\r\n            method: 'post',\r\n            parameters: {\r\n                attribute: attribute,\r\n                condition: condName,\r\n                value: valueName,\r\n                arraykey: arrayKey,\r\n                ruleid: ruleId\r\n            },\r\n\r\n            /**\r\n             * @param {Object} transport\r\n             */\r\n            onSuccess: function (transport) {\r\n                var json = transport.responseJSON;\r\n\r\n                cond.update(json.condition);\r\n                value.update(json.cvalue);\r\n\r\n                $$('.admin__control-table tr td select').each(function (itemToObserve) {\r\n                    Event.observe(itemToObserve, 'change', function () {\r\n                        if (itemToObserve.readAttribute('title') === 'conditions') {\r\n                            doUpdateForCondition(itemToObserve, valueAjaxUrl);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Observe on click add new condition\r\n     * @param {String} ajaxUrl\r\n     * @param {String} valueAjaxUrl\r\n     */\r\n    function observeOnClickAddNewCondition(ajaxUrl, valueAjaxUrl) {\r\n        $$('.admin__control-table tr td:first-child select').each(function (item) {\r\n            Event.observe(item, 'change', function () {\r\n                doUpdate(item, ajaxUrl, valueAjaxUrl);\r\n            });\r\n        });\r\n        $$('.admin__control-table tr td select').each(function (item) {\r\n            Event.observe(item, 'change', function () {\r\n                if (item.readAttribute('title') === 'conditions') {\r\n                    doUpdateForCondition(item, valueAjaxUrl);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * init\r\n     * @param {String} ajaxUrl\r\n     * @param {String} selectAjaxUrl\r\n     * @param {String} valueAjaxUrl\r\n     */\r\n    function init(ajaxUrl, selectAjaxUrl, valueAjaxUrl) {\r\n        $$('.admin__control-table tr td:first-child select').each(function (item) {\r\n            doUpdateWithValues(item, selectAjaxUrl, valueAjaxUrl);\r\n        });\r\n\r\n        $$('.admin__control-table tr td:first-child select').each(function (item) {\r\n            Event.observe(item, 'change', function () {\r\n                doUpdate(item, ajaxUrl, valueAjaxUrl);\r\n            });\r\n        });\r\n\r\n        $$('.admin__control-table button.action-add').each(function (item) {\r\n            Event.observe(item, 'click', function () {\r\n                observeOnClickAddNewCondition(ajaxUrl, valueAjaxUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * export/return\r\n     * @param {Object} rules\r\n     */\r\n    return function (rules) {\r\n        init(\r\n            rules.ajaxUrl,\r\n            rules.selectAjaxUrl,\r\n            rules.valueAjaxUrl\r\n        );\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/clickToCopy.js":"require(['jquery',\r\n    'jquery/ui',\r\n    'domReady!',\r\n    'mage/translate'], function ($) {\r\n    'use strict';\r\n\r\n    function removeTooltip(element)\r\n    {\r\n        element.css('position','');\r\n        $('.ddg-tooltip').remove();\r\n    }\r\n\r\n    function addTooltip(toolTipText,element)\r\n    {\r\n        var $toolTip = $('<div class=\"ddg-tooltip\">' + toolTipText + '</div>');\r\n        $toolTip.css({\r\n            position: 'absolute',\r\n            top: '-15px',\r\n            backgroundColor: '#333',\r\n            color: '#fff',\r\n            padding: '5px',\r\n            borderRadius: '5px'\r\n        });\r\n\r\n        element.attr('data-title', toolTipText);\r\n        element.css('backgroundColor', '#fff')\r\n            .parent()\r\n            .css('position', 'relative')\r\n            .append($toolTip);\r\n    }\r\n\r\n    $(document).on('click', '.ddg-dynamic-content', function() {\r\n        if ($(this).val() == '') return;\r\n\r\n        var toolTipText = $.mage.__('Copied!');\r\n\r\n        $(this).select();\r\n        removeTooltip($(this));\r\n        addTooltip(toolTipText,$(this));\r\n\r\n        setTimeout(function() {\r\n            removeTooltip($(this));\r\n        }.bind(this), 850);\r\n\r\n        document.execCommand(\"copy\");\r\n    });\r\n\r\n    $(document).on('mouseenter', '.ddg-dynamic-content', function() {\r\n        if ($(this).val() == '') return;\r\n\r\n        var toolTipText = $.mage.__('Click to copy URL');\r\n        addTooltip(toolTipText,$(this));\r\n    });\r\n    $(document).on('mouseleave', '.ddg-dynamic-content', function() {\r\n        removeTooltip($(this));\r\n    });\r\n});\r\n\r\n","Dotdigitalgroup_Email/js/engagementCloudTrial.js":"define(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var eventMethod;\r\n        var eventMessage;\r\n\r\n        if (window.addEventListener) {\r\n            eventMethod = 'addEventListener';\r\n            eventMessage = 'message';\r\n        } else {\r\n            eventMethod = 'attachEvent';\r\n            eventMessage = 'onmessage';\r\n        }\r\n\r\n        window[eventMethod](eventMessage, function (e) {\r\n            if (e.origin !== config.micrositeUrl) return;\r\n\r\n            $.post({\r\n                url: config.callback,\r\n                data: {\r\n                    origin: e.origin,\r\n                    code: e.data.code,\r\n                    apispaceid: e.data.apispaceid || null,\r\n                    token: e.data.token || null,\r\n                    apiendpoint: e.data.apiendpoint || null,\r\n                    apiusername: e.data.apiusername || null,\r\n                    apipassword: e.data.apipassword || null\r\n                },\r\n                success: function (data) {\r\n                    document.getElementById('ddg-iframe')\r\n                        .contentWindow\r\n                        .postMessage({\r\n                            'accepted': true\r\n                        }, e.origin);\r\n                }\r\n            });\r\n        }, true);\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/colorPickerInit.js":"require(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    $('.ddg-colpicker').colpick({\r\n        /**\r\n         * @param {String} hsb\r\n         * @param {String} hex\r\n         * @param {String} rgb\r\n         * @param {String} el\r\n         */\r\n        onChange: function (hsb, hex, rgb, el) {\r\n            $(el).val('#' + hex);\r\n        }\r\n    });\r\n});\r\n","Dotdigitalgroup_Email/js/dashboard.js":"define(['jquery', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} id\r\n     * @param {String} link\r\n     */\r\n    function bind(id, link) {\r\n        $('#' + id).click(function () {\r\n            window.location.assign(link);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * export/return\r\n     */\r\n    return function (dashboard) {\r\n        bind('contact_sync', dashboard.contactLink);\r\n        bind('importer_sync', dashboard.importerLink);\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/engagementCloudEmbed.js":"define(['domReady!'], function() {\r\n    'use strict';\r\n\r\n    return function(config) {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.id = 'ddg-iframe';\r\n        iframe.src = config.iframeSrc;\r\n\r\n        document.getElementById('container').appendChild(iframe);\r\n\r\n        function sizeIframe() {\r\n            var body = document.body;\r\n            var html = document.documentElement;\r\n            var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n            iframe.style.height = height + 'px';\r\n        }\r\n\r\n        window.onresize = function() {\r\n            sizeIframe();\r\n        };\r\n        sizeIframe();\r\n    }\r\n});\r\n","Dotdigitalgroup_Email/js/switcher.js":"define([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'domReady!'\r\n], function (jQuery, confirm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Init\r\n     * @param {Int} useConfirm\r\n     * @param {String} getContent\r\n     * @param {Int} objVal\r\n     * @param {Boolean} isIframe\r\n     * @param {String} switchUrl\r\n     */\r\n    function init(useConfirm, getContent, objVal, isIframe, switchUrl) {\r\n        var scopeSwitcherHandler;\r\n\r\n        (function ($) {\r\n            var $storesList = $('[data-role=stores-list]');\r\n\r\n            $storesList.on('click', '[data-value]', function (event) {\r\n                var val = $(event.target).data('value'),\r\n                    role = $(event.target).data('role'),\r\n                    switcher = $('[data-role=' + role + ']');\r\n\r\n                event.preventDefault();\r\n\r\n                if (!switcher.val() || val !== switcher.val()) {\r\n                    switcher.val(val).trigger('change'); // Set the value & trigger event\r\n                }\r\n            });\r\n        })(jQuery);\r\n\r\n        /**\r\n         * Switch scope\r\n         * @param {Object} obj\r\n         */\r\n        function switchScope(obj) {\r\n            var switcher = jQuery(obj),\r\n                scopeId = switcher.val(),\r\n                scopeParams = '',\r\n                switcherParams;\r\n\r\n            /**\r\n             * Reload\r\n             */\r\n            function reload() {\r\n                var url;\r\n\r\n                if (!isIframe) {\r\n                    url = switchUrl + scopeParams;\r\n                    window.location.href = url;\r\n                } else {\r\n                    jQuery('#preview_selected_store').val(scopeId);\r\n                    jQuery('#preview_form').submit();\r\n\r\n                    jQuery('.store-switcher .dropdown-menu li a').each(function () {\r\n                        var $this = jQuery(this);\r\n\r\n                        if ($this.data('role') === 'store-view-id' && $this.data('value') === scopeId) {\r\n                            jQuery('#store-change-button').html($this.text());\r\n                        }\r\n                    });\r\n\r\n                    jQuery('#store-change-button').click();\r\n                }\r\n            }\r\n\r\n            if (scopeId) {\r\n                scopeParams = switcher.data('param') + '/' + scopeId + '/';\r\n            }\r\n\r\n            if (obj.switchParams) {\r\n                scopeParams += obj.switchParams;\r\n            }\r\n\r\n            if (typeof scopeSwitcherHandler !== 'undefined') {\r\n                switcherParams = {\r\n                    scopeId: scopeId,\r\n                    scopeParams: scopeParams,\r\n                    useConfirm: useConfirm\r\n                };\r\n                scopeSwitcherHandler(switcherParams);\r\n            } else if (useConfirm) {\r\n                confirm({\r\n                    content: getContent,\r\n                    actions: {\r\n\r\n                        /**\r\n                         * Confirm\r\n                         */\r\n                        confirm: function () {\r\n                            reload();\r\n                        },\r\n\r\n                        /**\r\n                         * Cancel\r\n                         */\r\n                        cancel: function () {\r\n                            obj.value = objVal;\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                reload();\r\n            }\r\n        }\r\n\r\n        window.scopeSwitcherHandler = scopeSwitcherHandler;\r\n        window.switchScope = switchScope;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} switcher\r\n     */\r\n    return function (switcher) {\r\n        init(\r\n            switcher.getUseConfirm,\r\n            switcher.getContent,\r\n            switcher.objVal,\r\n            switcher.isUsingIframe,\r\n            switcher.getSwitchUrl\r\n        );\r\n    };\r\n});\r\n","Dotdigitalgroup_Email/js/fancyBoxInit.js":"require(['jquery', 'fancybox', 'domReady!'], function ($) {\r\n    'use strict';\r\n\r\n    var fb = $('.ddg-fancyBox');\r\n\r\n    if (fb && fb !== null) {\r\n        fb.fancybox({\r\n            width: 508,\r\n            height: 670,\r\n            scrolling: 'no',\r\n            hideOnOverlayClick: false,\r\n            helpers: {\r\n                overlay: {\r\n                    closeClick: false\r\n                }\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'a.fancybox-close', function () {\r\n            location.reload();\r\n        });\r\n\r\n        window.addEventListener('message', function (event) {\r\n            if (event.origin !== 'https://magentosignup.dotmailer.com') {\r\n                return;\r\n            }\r\n\r\n            if (event.data === 'close') {\r\n                location.reload();\r\n            }\r\n        });\r\n    }\r\n});\r\n","Dotdigitalgroup_Email/js/confirm.js":"require([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate',\r\n    'domReady!'\r\n], function ($, confirmation, $t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Show confirmation widget\r\n     * @param {Object} element\r\n     */\r\n    function showConfirmation(element) {\r\n        var content;\r\n\r\n        if (element.attr('id') === 'sync_settings_addressbook_allow_non_subscribers') {\r\n            content = $t('You are about to allow dotdigital to import customers that haven\\'t explicitly opted into your emails. This means the Customers and Guests address books will contain contacts that you might not be able to reach out to, depending on the applicable regulations. Do you wish to continue?');\r\n        } else {\r\n            content = $t('You are about to enable this feature for customers that haven\\'t explicitly opted into your emails. Do you wish to continue?');\r\n        }\r\n\r\n        confirmation({\r\n            title: $('label[for=' + element.attr('id') + '] span').text(),\r\n            content: content,\r\n            actions: {\r\n                /**\r\n                 * Confirm.\r\n                 */\r\n                confirm: function () {\r\n                    element.val(1);\r\n                },\r\n                /**\r\n                 * Reset.\r\n                 */\r\n                cancel: function () {\r\n                    element.val(0);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Init function\r\n     */\r\n    function init() {\r\n        var elements = [\r\n            $('#connector_automation_review_settings_allow_non_subscribers'),\r\n            $('#connector_configuration_abandoned_carts_allow_non_subscribers'),\r\n            $('#sync_settings_addressbook_allow_non_subscribers')\r\n        ];\r\n\r\n        $.each(elements, function (index, element) {\r\n            $(element).on('change', function () {\r\n                if (element.val() === '1') {\r\n                    showConfirmation(element);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //initialise\r\n    init();\r\n});\r\n","Dotdigitalgroup_Email/js/preview.js":"require(['jquery', 'domReady!'], function ($j) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Apply styles\r\n     * @param {String} styles\r\n     * @param {Object} element\r\n     */\r\n    function applyStyle(styles, element) {\r\n        element.css({\r\n            'font-weight': 'normal', 'font-style': 'normal', 'text-decoration': 'none'\r\n        });\r\n        $j.each(styles, function (index, style) {\r\n            switch (style) {\r\n                case 'nostyle':\r\n                    element.css({\r\n                        'font-weight': 'normal', 'font-style': 'normal', 'text-decoration': 'none'\r\n                    });\r\n                    break;\r\n\r\n                case 'bold':\r\n                    element.css('font-weight', 'bold');\r\n                    break;\r\n\r\n                case 'italic':\r\n                    element.css('font-style', 'italic');\r\n                    break;\r\n\r\n                case 'underline':\r\n                    element.css('text-decoration', 'underline');\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Filter styles\r\n     * @param {String} id\r\n     * @param {String} value\r\n     */\r\n    function updateStyle(id, value) {\r\n        var link = $j('#' + 'connector_configuration_dynamic_content_style_link-preview'),\r\n            name = $j('#' + 'connector_configuration_dynamic_content_style_name-preview'),\r\n            doc = $j('#' + 'connector_configuration_dynamic_content_style_doc-preview'),\r\n            price = $j('#' + 'connector_configuration_dynamic_content_style_price-preview'),\r\n            coupon = $j('#' + 'connector_configuration_dynamic_content_style_coupon-preview');\r\n\r\n        switch (id) {\r\n            case 'connector_configuration_dynamic_content_style_font_color':\r\n                name.css('color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_font_size':\r\n                name.css('font-size', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_font_style':\r\n                applyStyle(value, name);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_price_color':\r\n                price.css('color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_price_font_size':\r\n                price.css('font-size', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_price_font_style':\r\n                applyStyle(value, price);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_product_link_color':\r\n                link.css('color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_product_link_font_size':\r\n                link.css('font-size', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_product_link_style':\r\n                applyStyle(value, link);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_font':\r\n                doc.css('font-family', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_color':\r\n                doc.css('background-color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_coupon_font_color':\r\n                coupon.css('color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_coupon_font_size':\r\n                coupon.css('font-size', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_coupon_font_picker':\r\n                coupon.css('font-family', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_coupon_background_color':\r\n                coupon.css('background-color', value);\r\n                break;\r\n\r\n            case 'connector_configuration_dynamic_content_style_coupon_font_style':\r\n                applyStyle(value, coupon);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initial function\r\n     */\r\n    function init() {\r\n        var s = $j('#ddg-edc-preview'),\r\n            pos = s.position(),\r\n            elementsA = [\r\n                $j('#connector_configuration_dynamic_content_style_font_color'),\r\n                $j('#connector_configuration_dynamic_content_style_font_size'),\r\n                $j('#connector_configuration_dynamic_content_style_price_color'),\r\n                $j('#connector_configuration_dynamic_content_style_price_font_size'),\r\n                $j('#connector_configuration_dynamic_content_style_product_link_color'),\r\n                $j('#connector_configuration_dynamic_content_style_product_link_font_size'),\r\n                $j('#connector_configuration_dynamic_content_style_font'),\r\n                $j('#connector_configuration_dynamic_content_style_color'),\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_color'),\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_size'),\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_picker'),\r\n                $j('#connector_configuration_dynamic_content_style_coupon_background_color')\r\n            ],\r\n            elementsB = [\r\n                $j('#connector_configuration_dynamic_content_style_font_style'),\r\n                $j('#connector_configuration_dynamic_content_style_price_font_style'),\r\n                $j('#connector_configuration_dynamic_content_style_product_link_style'),\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_style')\r\n            ];\r\n\r\n        $j(window).scroll(function () {\r\n            var windowpos = $j(window).scrollTop();\r\n\r\n            if (windowpos >= pos.top &&\r\n                windowpos <\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_style').position().top - 350) {\r\n                s.attr('style', ''); //kill absolute positioning\r\n                s.css({\r\n                    position: 'fixed', top: '80px', left: $j(document).innerWidth() - 250\r\n                });\r\n            } else if (windowpos >=\r\n                $j('#connector_configuration_dynamic_content_style_coupon_font_style').position().top - 350) {\r\n                s.css({\r\n                    position: 'absolute',\r\n                    top:\r\n                    $j('#connector_configuration_dynamic_content_style_coupon_font_style').position().top - 350 + 'px',\r\n                    left: $j(document).innerWidth() - 250\r\n                });\r\n            } else {\r\n                s.css({\r\n                    position: 'absolute',\r\n                    top: pos.top + 'px',\r\n                    left: $j(document).innerWidth() - 250\r\n                });\r\n            }\r\n        });\r\n\r\n        $j(window).resize(function () {\r\n            $j('#ddg-edc-preview').css({\r\n                left: $j(document).innerWidth() - 250\r\n            });\r\n        });\r\n\r\n        $j.each(elementsA, function (index, element) {\r\n            var id = element.attr('id'),\r\n                value = element.val();\r\n\r\n            updateStyle(id, value);\r\n            $j(element).on('change keyup blur input', function () {\r\n                id = element.attr('id');\r\n                value = element.val();\r\n                updateStyle(id, value);\r\n            });\r\n        });\r\n        $j.each(elementsB, function (index, element) {\r\n            var id = element.attr('id'),\r\n                value = element.val();\r\n\r\n            updateStyle(id, value);\r\n            $j(element).on('change', function () {\r\n                id = element.attr('id');\r\n                value = element.val();\r\n                updateStyle(id, value);\r\n            });\r\n        });\r\n    }\r\n\r\n    //initialise\r\n    init();\r\n});\r\n","Dotdigitalgroup_Email/js/node_modules/colpick/colpick.js":"/*!\r\n * colpick Color Picker\r\n * https://github.com/mrgrain/colpick\r\n *\r\n * Copyright 2013, 2015 Moritz Kornher, Jose Vargas, Stefan Petre\r\n * Released under the MIT license and GPLv2 license\r\n * https://github.com/mrgrain/colpick/blob/master/LICENSE\r\n */\r\nrequire(['jquery'], (function ($) {\r\n    var colpick = function () {\r\n        var\r\n            tpl = '<div class=\"colpick\"><div class=\"colpick_color\"><div class=\"colpick_color_overlay1\"><div class=\"colpick_color_overlay2\"><div class=\"colpick_selector_outer\"><div class=\"colpick_selector_inner\"></div></div></div></div></div><div class=\"colpick_hue\"><div class=\"colpick_hue_arrs\"><div class=\"colpick_hue_larr\"></div><div class=\"colpick_hue_rarr\"></div></div></div><div class=\"colpick_new_color\"></div><div class=\"colpick_current_color\"></div><div class=\"colpick_hex_field\"><div class=\"colpick_field_letter\">#</div><input type=\"text\" maxlength=\"6\" size=\"6\" /></div><div class=\"colpick_rgb_r colpick_field\"><div class=\"colpick_field_letter\">R</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_rgb_g colpick_field\"><div class=\"colpick_field_letter\">G</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_rgb_b colpick_field\"><div class=\"colpick_field_letter\">B</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_hsb_h colpick_field\"><div class=\"colpick_field_letter\">H</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_hsb_s colpick_field\"><div class=\"colpick_field_letter\">S</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_hsb_b colpick_field\"><div class=\"colpick_field_letter\">B</div><input type=\"text\" maxlength=\"3\" size=\"3\" /><div class=\"colpick_field_arrs\"><div class=\"colpick_field_uarr\"></div><div class=\"colpick_field_darr\"></div></div></div><div class=\"colpick_submit\"></div></div>',\r\n            defaults = {\r\n                showEvent: 'click',\r\n                onShow: function () {\r\n                },\r\n                onBeforeShow: function () {\r\n                },\r\n                onHide: function () {\r\n                },\r\n                onChange: function () {\r\n                },\r\n                onSubmit: function () {\r\n                },\r\n                colorScheme: 'light',\r\n                color: 'auto',\r\n                livePreview: true,\r\n                flat: false,\r\n                layout: 'full',\r\n                submit: 1,\r\n                submitText: 'OK',\r\n                height: 156,\r\n                polyfill: false,\r\n                styles: false\r\n            },\r\n        //Fill the inputs of the plugin\r\n            fillRGBFields = function (hsb, cal) {\r\n                var rgb = hsbToRgb(hsb);\r\n                $(cal).data('colpick').fields\r\n                    .eq(1).val(rgb.r).end()\r\n                    .eq(2).val(rgb.g).end()\r\n                    .eq(3).val(rgb.b).end();\r\n            },\r\n            fillHSBFields = function (hsb, cal) {\r\n                $(cal).data('colpick').fields\r\n                    .eq(4).val(Math.round(hsb.h)).end()\r\n                    .eq(5).val(Math.round(hsb.s)).end()\r\n                    .eq(6).val(Math.round(hsb.b)).end();\r\n            },\r\n            fillHexFields = function (hsb, cal) {\r\n                $(cal).data('colpick').fields.eq(0).val(hsbToHex(hsb));\r\n            },\r\n        //Set the round selector position\r\n            setSelector = function (hsb, cal) {\r\n                $(cal).data('colpick').selector.css('backgroundColor', '#' + hsbToHex({h: hsb.h, s: 100, b: 100}));\r\n                $(cal).data('colpick').selectorIndic.css({\r\n                    left: parseInt($(cal).data('colpick').height * hsb.s / 100, 10),\r\n                    top: parseInt($(cal).data('colpick').height * (100 - hsb.b) / 100, 10)\r\n                });\r\n            },\r\n        //Set the hue selector position\r\n            setHue = function (hsb, cal) {\r\n                $(cal).data('colpick').hue.css('top', parseInt($(cal).data('colpick').height - $(cal).data('colpick').height * hsb.h / 360, 10));\r\n            },\r\n        //Set current and new colors\r\n            setCurrentColor = function (hsb, cal) {\r\n                $(cal).data('colpick').currentColor.css('backgroundColor', '#' + hsbToHex(hsb));\r\n            },\r\n            setNewColor = function (hsb, cal) {\r\n                $(cal).data('colpick').newColor.css('backgroundColor', '#' + hsbToHex(hsb));\r\n            },\r\n        //Called when the new color is changed\r\n            change = function () {\r\n                var cal = $(this).parent().parent(), col;\r\n                if (this.parentNode.className.indexOf('_hex') > 0) {\r\n                    cal.data('colpick').color = col = hexToHsb(fixHex(this.value));\r\n                    fillRGBFields(col, cal.get(0));\r\n                    fillHSBFields(col, cal.get(0));\r\n                } else if (this.parentNode.className.indexOf('_hsb') > 0) {\r\n                    cal.data('colpick').color = col = fixHSB({\r\n                        h: parseInt(cal.data('colpick').fields.eq(4).val(), 10),\r\n                        s: parseInt(cal.data('colpick').fields.eq(5).val(), 10),\r\n                        b: parseInt(cal.data('colpick').fields.eq(6).val(), 10)\r\n                    });\r\n                    fillRGBFields(col, cal.get(0));\r\n                    fillHexFields(col, cal.get(0));\r\n                } else {\r\n                    cal.data('colpick').color = col = rgbToHsb(fixRGB({\r\n                        r: parseInt(cal.data('colpick').fields.eq(1).val(), 10),\r\n                        g: parseInt(cal.data('colpick').fields.eq(2).val(), 10),\r\n                        b: parseInt(cal.data('colpick').fields.eq(3).val(), 10)\r\n                    }));\r\n                    fillHexFields(col, cal.get(0));\r\n                    fillHSBFields(col, cal.get(0));\r\n                }\r\n                setSelector(col, cal.get(0));\r\n                setHue(col, cal.get(0));\r\n                setNewColor(col, cal.get(0));\r\n                cal.data('colpick').onChange.apply(cal.parent(), [col, hsbToHex(col), hsbToRgb(col), cal.data('colpick').el, 0]);\r\n            },\r\n        //Change style on blur and on focus of inputs\r\n            blur = function () {\r\n                $(this).parent().removeClass('colpick_focus');\r\n            },\r\n            focus = function () {\r\n                $(this).parent().parent().data('colpick').fields.parent().removeClass('colpick_focus');\r\n                $(this).parent().addClass('colpick_focus');\r\n            },\r\n        //Increment/decrement arrows functions\r\n            downIncrement = function (ev) {\r\n                ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n                var field = $(this).parent().find('input').focus();\r\n                var current = {\r\n                    el: $(this).parent().addClass('colpick_slider'),\r\n                    max: this.parentNode.className.indexOf('_hsb_h') > 0 ? 360 : (this.parentNode.className.indexOf('_hsb') > 0 ? 100 : 255),\r\n                    y: ev.pageY,\r\n                    field: field,\r\n                    val: parseInt(field.val(), 10),\r\n                    preview: $(this).parent().parent().data('colpick').livePreview\r\n                };\r\n                $(document).mouseup(current, upIncrement);\r\n                $(document).mousemove(current, moveIncrement);\r\n            },\r\n            moveIncrement = function (ev) {\r\n                ev.data.field.val(Math.max(0, Math.min(ev.data.max, parseInt(ev.data.val - ev.pageY + ev.data.y, 10))));\r\n                if (ev.data.preview) {\r\n                    change.apply(ev.data.field.get(0), [true]);\r\n                }\r\n                return false;\r\n            },\r\n            upIncrement = function (ev) {\r\n                change.apply(ev.data.field.get(0), [true]);\r\n                ev.data.el.removeClass('colpick_slider').find('input').focus();\r\n                $(document).off('mouseup', upIncrement);\r\n                $(document).off('mousemove', moveIncrement);\r\n                return false;\r\n            },\r\n        //Hue slider functions\r\n            downHue = function (ev) {\r\n                ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n                var current = {\r\n                    cal: $(this).parent(),\r\n                    y: $(this).offset().top\r\n                };\r\n                $(document).on('mouseup touchend', current, upHue);\r\n                $(document).on('mousemove touchmove', current, moveHue);\r\n\r\n                var pageY = ((ev.type == 'touchstart') ? ev.originalEvent.changedTouches[0].pageY : ev.pageY );\r\n                change.apply(\r\n                    current.cal.data('colpick')\r\n                        .fields.eq(4).val(parseInt(360 * (current.cal.data('colpick').height - (pageY - current.y)) / current.cal.data('colpick').height, 10))\r\n                        .get(0),\r\n                    [current.cal.data('colpick').livePreview]\r\n                );\r\n                return false;\r\n            },\r\n            moveHue = function (ev) {\r\n                var pageY = ((ev.type == 'touchmove') ? ev.originalEvent.changedTouches[0].pageY : ev.pageY );\r\n                change.apply(\r\n                    ev.data.cal.data('colpick')\r\n                        .fields.eq(4).val(parseInt(360 * (ev.data.cal.data('colpick').height - Math.max(0, Math.min(ev.data.cal.data('colpick').height, (pageY - ev.data.y)))) / ev.data.cal.data('colpick').height, 10))\r\n                        .get(0),\r\n                    [ev.data.preview]\r\n                );\r\n                return false;\r\n            },\r\n            upHue = function (ev) {\r\n                fillRGBFields(ev.data.cal.data('colpick').color, ev.data.cal.get(0));\r\n                fillHexFields(ev.data.cal.data('colpick').color, ev.data.cal.get(0));\r\n                $(document).off('mouseup touchend', upHue);\r\n                $(document).off('mousemove touchmove', moveHue);\r\n                return false;\r\n            },\r\n        //Color selector functions\r\n            downSelector = function (ev) {\r\n                ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n                var current = {\r\n                    cal: $(this).parent(),\r\n                    pos: $(this).offset()\r\n                };\r\n                current.preview = current.cal.data('colpick').livePreview;\r\n\r\n                $(document).on('mouseup touchend', current, upSelector);\r\n                $(document).on('mousemove touchmove', current, moveSelector);\r\n\r\n                var pageX, pageY;\r\n                if (ev.type == 'touchstart') {\r\n                    pageX = ev.originalEvent.changedTouches[0].pageX;\r\n                    pageY = ev.originalEvent.changedTouches[0].pageY;\r\n                } else {\r\n                    pageX = ev.pageX;\r\n                    pageY = ev.pageY;\r\n                }\r\n\r\n                change.apply(\r\n                    current.cal.data('colpick').fields\r\n                        .eq(6).val(parseInt(100 * (current.cal.data('colpick').height - (pageY - current.pos.top)) / current.cal.data('colpick').height, 10)).end()\r\n                        .eq(5).val(parseInt(100 * (pageX - current.pos.left) / current.cal.data('colpick').height, 10))\r\n                        .get(0),\r\n                    [current.preview]\r\n                );\r\n                return false;\r\n            },\r\n            moveSelector = function (ev) {\r\n                var pageX, pageY;\r\n                if (ev.type == 'touchmove') {\r\n                    pageX = ev.originalEvent.changedTouches[0].pageX;\r\n                    pageY = ev.originalEvent.changedTouches[0].pageY;\r\n                } else {\r\n                    pageX = ev.pageX;\r\n                    pageY = ev.pageY;\r\n                }\r\n\r\n                change.apply(\r\n                    ev.data.cal.data('colpick').fields\r\n                        .eq(6).val(parseInt(100 * (ev.data.cal.data('colpick').height - Math.max(0, Math.min(ev.data.cal.data('colpick').height, (pageY - ev.data.pos.top)))) / ev.data.cal.data('colpick').height, 10)).end()\r\n                        .eq(5).val(parseInt(100 * (Math.max(0, Math.min(ev.data.cal.data('colpick').height, (pageX - ev.data.pos.left)))) / ev.data.cal.data('colpick').height, 10))\r\n                        .get(0),\r\n                    [ev.data.preview]\r\n                );\r\n                return false;\r\n            },\r\n            upSelector = function (ev) {\r\n                fillRGBFields(ev.data.cal.data('colpick').color, ev.data.cal.get(0));\r\n                fillHexFields(ev.data.cal.data('colpick').color, ev.data.cal.get(0));\r\n                $(document).off('mouseup touchend', upSelector);\r\n                $(document).off('mousemove touchmove', moveSelector);\r\n                return false;\r\n            },\r\n        //Submit button\r\n            clickSubmit = function () {\r\n                var cal = $(this).parent();\r\n                var col = cal.data('colpick').color;\r\n                cal.data('colpick').origColor = col;\r\n                setCurrentColor(col, cal.get(0));\r\n                cal.data('colpick').onSubmit(col, hsbToHex(col), hsbToRgb(col), cal.data('colpick').el);\r\n            },\r\n        //Show/hide the color picker\r\n            show = function (ev) {\r\n                if (ev) {\r\n                    // Prevent the trigger of any direct parent\r\n                    ev.stopPropagation();\r\n                }\r\n                var cal = $('#' + $(this).data('colpickId'));\r\n                if (ev && !cal.data('colpick').polyfill) {\r\n                    ev.preventDefault();\r\n                }\r\n                cal.data('colpick').onBeforeShow.apply(this, [cal.get(0)]);\r\n                var pos = $(this).offset();\r\n                var top = pos.top + this.offsetHeight;\r\n                var left = pos.left;\r\n                var viewPort = getViewport();\r\n                var calW = cal.width();\r\n                if (left + calW > viewPort.l + viewPort.w) {\r\n                    left -= calW;\r\n                }\r\n                cal.css({left: left + 'px', top: top + 'px'});\r\n                if (cal.data('colpick').onShow.apply(this, [cal.get(0)]) != false) {\r\n                    cal.show();\r\n                }\r\n                //Hide when user clicks outside\r\n                $('html').mousedown({cal: cal}, hide);\r\n                cal.mousedown(function (ev) {\r\n                    ev.stopPropagation();\r\n                })\r\n            },\r\n            hide = function (ev) {\r\n                var cal = $('#' + $(this).data('colpickId'));\r\n                if (ev) {\r\n                    cal = ev.data.cal;\r\n                }\r\n                if (cal.data('colpick').onHide.apply(this, [cal.get(0)]) != false) {\r\n                    cal.hide();\r\n                }\r\n                $('html').off('mousedown', hide);\r\n            },\r\n            getViewport = function () {\r\n                var m = document.compatMode == 'CSS1Compat';\r\n                return {\r\n                    l: window.pageXOffset || (m ? document.documentElement.scrollLeft : document.body.scrollLeft),\r\n                    w: window.innerWidth || (m ? document.documentElement.clientWidth : document.body.clientWidth)\r\n                };\r\n            },\r\n        //Fix the values if the user enters a negative or high value\r\n            fixHSB = function (hsb) {\r\n                return {\r\n                    h: Math.min(360, Math.max(0, hsb.h)),\r\n                    s: Math.min(100, Math.max(0, hsb.s)),\r\n                    b: Math.min(100, Math.max(0, hsb.b))\r\n                };\r\n            },\r\n            fixRGB = function (rgb) {\r\n                return {\r\n                    r: Math.min(255, Math.max(0, rgb.r)),\r\n                    g: Math.min(255, Math.max(0, rgb.g)),\r\n                    b: Math.min(255, Math.max(0, rgb.b))\r\n                };\r\n            },\r\n            fixHex = function (hex) {\r\n                var len = 6 - hex.length;\r\n                if (len == 3) {\r\n                    var e = [];\r\n                    for (var j = 0; j < len; j++) {\r\n                        e.push(hex[j]);\r\n                        e.push(hex[j]);\r\n                    }\r\n                    hex = e.join('');\r\n                } else {\r\n                    if (len > 0) {\r\n                        var o = [];\r\n                        for (var i = 0; i < len; i++) {\r\n                            o.push('0');\r\n                        }\r\n                        o.push(hex);\r\n                        hex = o.join('');\r\n                    }\r\n                }\r\n                return hex;\r\n            },\r\n            restoreOriginal = function () {\r\n                var cal = $(this).parent();\r\n                var col = cal.data('colpick').origColor;\r\n                cal.data('colpick').color = col;\r\n                fillRGBFields(col, cal.get(0));\r\n                fillHexFields(col, cal.get(0));\r\n                fillHSBFields(col, cal.get(0));\r\n                setSelector(col, cal.get(0));\r\n                setHue(col, cal.get(0));\r\n                setNewColor(col, cal.get(0));\r\n            };\r\n        return {\r\n            init: function (opt) {\r\n                opt = $.extend({}, defaults, opt || {});\r\n                //Set color\r\n                if (opt.color === 'auto') {\r\n                } else if (typeof opt.color == 'string') {\r\n                    opt.color = hexToHsb(opt.color);\r\n                } else if (opt.color.r != undefined && opt.color.g != undefined && opt.color.b != undefined) {\r\n                    opt.color = rgbToHsb(opt.color);\r\n                } else if (opt.color.h != undefined && opt.color.s != undefined && opt.color.b != undefined) {\r\n                    opt.color = fixHSB(opt.color);\r\n                } else {\r\n                    return this;\r\n                }\r\n\r\n                //For each selected DOM element\r\n                return this.each(function () {\r\n                    //If the element does not have an ID\r\n                    if (!$(this).data('colpickId')) {\r\n                        var options = $.extend({}, opt);\r\n                        //Color\r\n                        if (opt.color === 'auto') {\r\n                            options.color = $(this).val() ? hexToHsb($(this).val()) : {h: 0, s: 0, b: 0};\r\n                        }\r\n                        options.origColor = options.color;\r\n\r\n                        //Polyfill\r\n                        if (typeof opt.polyfill == 'function') {\r\n                            options.polyfill = opt.polyfill(this);\r\n                        }\r\n                        if (options.polyfill && $(this).is('input') && this.type === \"color\") {\r\n                            return;\r\n                        }\r\n\r\n                        //Generate and assign a random ID\r\n                        var id = 'collorpicker_' + parseInt(Math.random() * 1000);\r\n                        $(this).data('colpickId', id);\r\n                        //Set the tpl's ID and get the HTML\r\n                        var cal = $(tpl).attr('id', id);\r\n                        //Add class according to layout\r\n                        cal.addClass('colpick_' + options.layout + (options.submit ? '' : ' colpick_' + options.layout + '_ns'));\r\n                        //Add class if the color scheme is not default\r\n                        if (options.colorScheme != 'light') {\r\n                            cal.addClass('colpick_' + options.colorScheme);\r\n                        }\r\n                        //Setup submit button\r\n                        cal.find('div.colpick_submit').html(options.submitText).click(clickSubmit);\r\n                        //Setup input fields\r\n                        options.fields = cal.find('input').change(change).blur(blur).focus(focus);\r\n                        cal.find('div.colpick_field_arrs').mousedown(downIncrement).end().find('div.colpick_current_color').click(restoreOriginal);\r\n                        //Setup hue selector\r\n                        options.selector = cal.find('div.colpick_color').on('mousedown touchstart', downSelector);\r\n                        options.selectorIndic = options.selector.find('div.colpick_selector_outer');\r\n                        //Store parts of the plugin\r\n                        options.el = this;\r\n                        options.hue = cal.find('div.colpick_hue_arrs');\r\n                        var huebar = options.hue.parent();\r\n                        //Paint the hue bar\r\n                        var UA = navigator.userAgent.toLowerCase();\r\n                        var isIE = navigator.appName === 'Microsoft Internet Explorer';\r\n                        var IEver = isIE ? parseFloat(UA.match(/msie ([0-9]*[\\.0-9]+)/)[1]) : 0;\r\n                        var ngIE = ( isIE && IEver < 10 );\r\n                        var stops = ['#ff0000', '#ff0080', '#ff00ff', '#8000ff', '#0000ff', '#0080ff', '#00ffff', '#00ff80', '#00ff00', '#80ff00', '#ffff00', '#ff8000', '#ff0000'];\r\n                        if (ngIE) {\r\n                            var i, div;\r\n                            for (i = 0; i <= 11; i++) {\r\n                                div = $('<div></div>').attr('style', 'height:8.333333%; filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=' + stops[i] + ', endColorstr=' + stops[i + 1] + '); -ms-filter: \"progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=' + stops[i] + ', endColorstr=' + stops[i + 1] + ')\";');\r\n                                huebar.append(div);\r\n                            }\r\n                        } else {\r\n                            var stopList = stops.join(',');\r\n                            huebar.attr('style', 'background:-webkit-linear-gradient(top,' + stopList + '); background: -o-linear-gradient(top,' + stopList + '); background: -ms-linear-gradient(top,' + stopList + '); background:-moz-linear-gradient(top,' + stopList + '); -webkit-linear-gradient(top,' + stopList + '); background:linear-gradient(to bottom,' + stopList + '); ');\r\n                        }\r\n                        cal.find('div.colpick_hue').on('mousedown touchstart', downHue);\r\n                        options.newColor = cal.find('div.colpick_new_color');\r\n                        options.currentColor = cal.find('div.colpick_current_color');\r\n                        //Store options and fill with default color\r\n                        cal.data('colpick', options);\r\n                        fillRGBFields(options.color, cal.get(0));\r\n                        fillHSBFields(options.color, cal.get(0));\r\n                        fillHexFields(options.color, cal.get(0));\r\n                        setHue(options.color, cal.get(0));\r\n                        setSelector(options.color, cal.get(0));\r\n                        setCurrentColor(options.color, cal.get(0));\r\n                        setNewColor(options.color, cal.get(0));\r\n                        //Append to body if flat=false, else show in place\r\n                        if (options.flat) {\r\n                            cal.appendTo(options.appendTo || this).show();\r\n                            cal.css(options.styles || {\r\n                                position: 'relative',\r\n                                display: 'block'\r\n                            });\r\n                        } else {\r\n                            cal.appendTo(options.appendTo || document.body);\r\n                            $(this).on(options.showEvent, show);\r\n                            cal.css(options.styles || {\r\n                                position: 'absolute'\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            //Shows the picker\r\n            showPicker: function () {\r\n                return this.each(function () {\r\n                    if ($(this).data('colpickId')) {\r\n                        show.apply(this);\r\n                    }\r\n                });\r\n            },\r\n            //Hides the picker\r\n            hidePicker: function () {\r\n                return this.each(function () {\r\n                    if ($(this).data('colpickId')) {\r\n                        hide.apply(this);\r\n                    }\r\n                });\r\n            },\r\n            //Sets a color as new and current (default)\r\n            setColor: function (col, setCurrent) {\r\n                setCurrent = (typeof setCurrent === \"undefined\") ? 1 : setCurrent;\r\n                if (typeof col == 'string') {\r\n                    col = hexToHsb(col);\r\n                } else if (col.r != undefined && col.g != undefined && col.b != undefined) {\r\n                    col = rgbToHsb(col);\r\n                } else if (col.h != undefined && col.s != undefined && col.b != undefined) {\r\n                    col = fixHSB(col);\r\n                } else {\r\n                    return this;\r\n                }\r\n                return this.each(function () {\r\n                    if ($(this).data('colpickId')) {\r\n                        var cal = $('#' + $(this).data('colpickId'));\r\n                        cal.data('colpick').color = col;\r\n                        cal.data('colpick').origColor = col;\r\n                        fillRGBFields(col, cal.get(0));\r\n                        fillHSBFields(col, cal.get(0));\r\n                        fillHexFields(col, cal.get(0));\r\n                        setHue(col, cal.get(0));\r\n                        setSelector(col, cal.get(0));\r\n\r\n                        setNewColor(col, cal.get(0));\r\n                        cal.data('colpick').onChange.apply(cal.parent(), [col, hsbToHex(col), hsbToRgb(col), cal.data('colpick').el, 1]);\r\n                        if (setCurrent) {\r\n                            setCurrentColor(col, cal.get(0));\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            destroy: function () {\r\n                $('#' + $(this).data('colpickId')).remove();\r\n            }\r\n        };\r\n    }();\r\n    //Color space conversions\r\n    var hexToRgb = function (hex) {\r\n        hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n        return {r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF)};\r\n    };\r\n    var hexToHsb = function (hex) {\r\n        return rgbToHsb(hexToRgb(hex));\r\n    };\r\n    var rgbToHsb = function (rgb) {\r\n        var hsb = {h: 0, s: 0, b: 0};\r\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\r\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\r\n        var delta = max - min;\r\n        hsb.b = max;\r\n        hsb.s = max != 0 ? 255 * delta / max : 0;\r\n        if (hsb.s != 0) {\r\n            if (rgb.r == max) {\r\nhsb.h = (rgb.g - rgb.b) / delta;\r\n            } else if (rgb.g == max) {\r\nhsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n            } else {\r\nhsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n            }\r\n        } else {\r\nhsb.h = -1;\r\n        }\r\n        hsb.h *= 60;\r\n        if (hsb.h < 0) {\r\nhsb.h += 360;\r\n        }\r\n        hsb.s *= 100 / 255;\r\n        hsb.b *= 100 / 255;\r\n        return hsb;\r\n    };\r\n    var hsbToRgb = function (hsb) {\r\n        var rgb = {};\r\n        var h = hsb.h;\r\n        var s = hsb.s * 255 / 100;\r\n        var v = hsb.b * 255 / 100;\r\n        if (s == 0) {\r\n            rgb.r = rgb.g = rgb.b = v;\r\n        } else {\r\n            var t1 = v;\r\n            var t2 = (255 - s) * v / 255;\r\n            var t3 = (t1 - t2) * (h % 60) / 60;\r\n            if (h == 360) {\r\nh = 0;\r\n            }\r\n            if (h < 60) {\r\n                rgb.r = t1;\r\n                rgb.b = t2;\r\n                rgb.g = t2 + t3\r\n            } else if (h < 120) {\r\n                rgb.g = t1;\r\n                rgb.b = t2;\r\n                rgb.r = t1 - t3\r\n            } else if (h < 180) {\r\n                rgb.g = t1;\r\n                rgb.r = t2;\r\n                rgb.b = t2 + t3\r\n            } else if (h < 240) {\r\n                rgb.b = t1;\r\n                rgb.r = t2;\r\n                rgb.g = t1 - t3\r\n            } else if (h < 300) {\r\n                rgb.b = t1;\r\n                rgb.g = t2;\r\n                rgb.r = t2 + t3\r\n            } else if (h < 360) {\r\n                rgb.r = t1;\r\n                rgb.g = t2;\r\n                rgb.b = t1 - t3\r\n            } else {\r\n                rgb.r = 0;\r\n                rgb.g = 0;\r\n                rgb.b = 0\r\n            }\r\n        }\r\n        return {r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b)};\r\n    };\r\n    var rgbToHex = function (rgb) {\r\n        var hex = [\r\n            rgb.r.toString(16),\r\n            rgb.g.toString(16),\r\n            rgb.b.toString(16)\r\n        ];\r\n        $.each(hex, function (nr, val) {\r\n            if (val.length == 1) {\r\n                hex[nr] = '0' + val;\r\n            }\r\n        });\r\n        return hex.join('');\r\n    };\r\n    var hsbToHex = function (hsb) {\r\n        return rgbToHex(hsbToRgb(hsb));\r\n    };\r\n    $.fn.extend({\r\n        colpick: colpick.init,\r\n        colpickHide: colpick.hidePicker,\r\n        colpickShow: colpick.showPicker,\r\n        colpickSetColor: colpick.setColor,\r\n        colpickDestroy: colpick.destroy\r\n    });\r\n    $.extend({\r\n        colpick: {\r\n            rgbToHex: rgbToHex,\r\n            rgbToHsb: rgbToHsb,\r\n            hsbToHex: hsbToHex,\r\n            hsbToRgb: hsbToRgb,\r\n            hexToHsb: hexToHsb,\r\n            hexToRgb: hexToRgb\r\n        }\r\n    });\r\n}));\r\n","Dotdigitalgroup_Email/js/node_modules/fancybox/jquery.fancybox.pack.js":"/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */\r\n(function (r, G, f, v) {\r\n    var J = f(\"html\"), n = f(r), p = f(G), b = f.fancybox = function () {\r\n        b.open.apply(this, arguments)\r\n    }, I = navigator.userAgent.match(/msie/i), B = null, s = G.createTouch !== v, t = function (a) {\r\n        return a && a.hasOwnProperty && a instanceof f\r\n    }, q = function (a) {\r\n        return a && \"string\" === f.type(a)\r\n    }, E = function (a) {\r\n        return q(a) && 0 < a.indexOf(\"%\")\r\n    }, l = function (a, d) {\r\n        var e = parseInt(a, 10) || 0;\r\n        d && E(a) && (e *= b.getViewport()[d] / 100);\r\n        return Math.ceil(e)\r\n    }, w = function (a, b) {\r\n        return l(a, b) + \"px\"\r\n    };\r\n    f.extend(b, {\r\n        version: \"2.1.5\",\r\n        defaults: {\r\n            padding: 15,\r\n            margin: 20,\r\n            width: 800,\r\n            height: 600,\r\n            minWidth: 100,\r\n            minHeight: 100,\r\n            maxWidth: 9999,\r\n            maxHeight: 9999,\r\n            pixelRatio: 1,\r\n            autoSize: !0,\r\n            autoHeight: !1,\r\n            autoWidth: !1,\r\n            autoResize: !0,\r\n            autoCenter: !s,\r\n            fitToView: !0,\r\n            aspectRatio: !1,\r\n            topRatio: 0.5,\r\n            leftRatio: 0.5,\r\n            scrolling: \"auto\",\r\n            wrapCSS: \"\",\r\n            arrows: !0,\r\n            closeBtn: !0,\r\n            closeClick: !1,\r\n            nextClick: !1,\r\n            mouseWheel: !0,\r\n            autoPlay: !1,\r\n            playSpeed: 3E3,\r\n            preload: 3,\r\n            modal: !1,\r\n            loop: !0,\r\n            ajax: {dataType: \"html\", headers: {\"X-fancyBox\": !0}},\r\n            iframe: {scrolling: \"auto\", preload: !0},\r\n            swf: {wmode: \"transparent\", allowfullscreen: \"true\", allowscriptaccess: \"always\"},\r\n            keys: {\r\n                next: {13: \"left\", 34: \"up\", 39: \"left\", 40: \"up\"},\r\n                prev: {8: \"right\", 33: \"down\", 37: \"right\", 38: \"down\"},\r\n                close: [27],\r\n                play: [32],\r\n                toggle: [70]\r\n            },\r\n            direction: {next: \"left\", prev: \"right\"},\r\n            scrollOutside: !0,\r\n            index: 0,\r\n            type: null,\r\n            href: null,\r\n            content: null,\r\n            title: null,\r\n            tpl: {\r\n                wrap: '<div class=\"fancybox-wrap\" tabIndex=\"-1\"><div class=\"fancybox-skin\"><div class=\"fancybox-outer\"><div class=\"fancybox-inner\"></div></div></div></div>',\r\n                image: '<img class=\"fancybox-image\" src=\"{href}\" alt=\"\" />',\r\n                iframe: '<iframe id=\"fancybox-frame{rnd}\" name=\"fancybox-frame{rnd}\" class=\"fancybox-iframe\" frameborder=\"0\" vspace=\"0\" hspace=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen' +\r\n                (I ? ' allowtransparency=\"true\"' : \"\") + \"></iframe>\",\r\n                error: '<p class=\"fancybox-error\">The requested content cannot be loaded.<br/>Please try again later.</p>',\r\n                closeBtn: '<a title=\"Close\" class=\"fancybox-item fancybox-close\" href=\"javascript:;\"></a>',\r\n                next: '<a title=\"Next\" class=\"fancybox-nav fancybox-next\" href=\"javascript:;\"><span></span></a>',\r\n                prev: '<a title=\"Previous\" class=\"fancybox-nav fancybox-prev\" href=\"javascript:;\"><span></span></a>'\r\n            },\r\n            openEffect: \"fade\",\r\n            openSpeed: 250,\r\n            openEasing: \"swing\",\r\n            openOpacity: !0,\r\n            openMethod: \"zoomIn\",\r\n            closeEffect: \"fade\",\r\n            closeSpeed: 250,\r\n            closeEasing: \"swing\",\r\n            closeOpacity: !0,\r\n            closeMethod: \"zoomOut\",\r\n            nextEffect: \"elastic\",\r\n            nextSpeed: 250,\r\n            nextEasing: \"swing\",\r\n            nextMethod: \"changeIn\",\r\n            prevEffect: \"elastic\",\r\n            prevSpeed: 250,\r\n            prevEasing: \"swing\",\r\n            prevMethod: \"changeOut\",\r\n            helpers: {overlay: !0, title: !0},\r\n            onCancel: f.noop,\r\n            beforeLoad: f.noop,\r\n            afterLoad: f.noop,\r\n            beforeShow: f.noop,\r\n            afterShow: f.noop,\r\n            beforeChange: f.noop,\r\n            beforeClose: f.noop,\r\n            afterClose: f.noop\r\n        },\r\n        group: {},\r\n        opts: {},\r\n        previous: null,\r\n        coming: null,\r\n        current: null,\r\n        isActive: !1,\r\n        isOpen: !1,\r\n        isOpened: !1,\r\n        wrap: null,\r\n        skin: null,\r\n        outer: null,\r\n        inner: null,\r\n        player: {timer: null, isActive: !1},\r\n        ajaxLoad: null,\r\n        imgPreload: null,\r\n        transitions: {},\r\n        helpers: {},\r\n        open: function (a, d) {\r\n            if (a && (f.isPlainObject(d) || (d = {}), !1 !== b.close(!0)))return f.isArray(a) || (a = t(a) ? f(a).get() : [a]), f.each(a, function (e, c) {\r\n                var k = {}, g, h, j, m, l;\r\n                \"object\" === f.type(c) && (c.nodeType && (c = f(c)), t(c) ? (k = {\r\n                    href: c.data(\"fancybox-href\") || c.attr(\"href\"),\r\n                    title: c.data(\"fancybox-title\") || c.attr(\"title\"),\r\n                    isDom: !0,\r\n                    element: c\r\n                }, f.metadata && f.extend(!0, k,\r\n                    c.metadata())) : k = c);\r\n                g = d.href || k.href || (q(c) ? c : null);\r\n                h = d.title !== v ? d.title : k.title || \"\";\r\n                m = (j = d.content || k.content) ? \"html\" : d.type || k.type;\r\n                !m && k.isDom && (m = c.data(\"fancybox-type\"), m || (m = (m = c.prop(\"class\").match(/fancybox\\.(\\w+)/)) ? m[1] : null));\r\n                q(g) && (m || (b.isImage(g) ? m = \"image\" : b.isSWF(g) ? m = \"swf\" : \"#\" === g.charAt(0) ? m = \"inline\" : q(c) && (m = \"html\", j = c)), \"ajax\" === m && (l = g.split(/\\s+/, 2), g = l.shift(), l = l.shift()));\r\n                j || (\"inline\" === m ? g ? j = f(q(g) ? g.replace(/.*(?=#[^\\s]+$)/, \"\") : g) : k.isDom && (j = c) : \"html\" === m ? j = g : !m && (!g &&\r\n                k.isDom) && (m = \"inline\", j = c));\r\n                f.extend(k, {href: g, type: m, content: j, title: h, selector: l});\r\n                a[e] = k\r\n            }), b.opts = f.extend(!0, {}, b.defaults, d), d.keys !== v && (b.opts.keys = d.keys ? f.extend({}, b.defaults.keys, d.keys) : !1), b.group = a, b._start(b.opts.index)\r\n        },\r\n        cancel: function () {\r\n            var a = b.coming;\r\n            a && !1 !== b.trigger(\"onCancel\") && (b.hideLoading(), b.ajaxLoad && b.ajaxLoad.abort(), b.ajaxLoad = null, b.imgPreload && (b.imgPreload.onload = b.imgPreload.onerror = null), a.wrap && a.wrap.stop(!0, !0).trigger(\"onReset\").remove(), b.coming = null, b.current ||\r\n            b._afterZoomOut(a))\r\n        },\r\n        close: function (a) {\r\n            b.cancel();\r\n            !1 !== b.trigger(\"beforeClose\") && (b.unbindEvents(), b.isActive && (!b.isOpen || !0 === a ? (f(\".fancybox-wrap\").stop(!0).trigger(\"onReset\").remove(), b._afterZoomOut()) : (b.isOpen = b.isOpened = !1, b.isClosing = !0, f(\".fancybox-item, .fancybox-nav\").remove(), b.wrap.stop(!0, !0).removeClass(\"fancybox-opened\"), b.transitions[b.current.closeMethod]())))\r\n        },\r\n        play: function (a) {\r\n            var d = function () {\r\n                clearTimeout(b.player.timer)\r\n            }, e = function () {\r\n                d();\r\n                b.current && b.player.isActive && (b.player.timer =\r\n                    setTimeout(b.next, b.current.playSpeed))\r\n            }, c = function () {\r\n                d();\r\n                p.unbind(\".player\");\r\n                b.player.isActive = !1;\r\n                b.trigger(\"onPlayEnd\")\r\n            };\r\n            if (!0 === a || !b.player.isActive && !1 !== a) {\r\n                if (b.current && (b.current.loop || b.current.index < b.group.length - 1))b.player.isActive = !0, p.bind({\r\n                    \"onCancel.player beforeClose.player\": c,\r\n                    \"onUpdate.player\": e,\r\n                    \"beforeLoad.player\": d\r\n                }), e(), b.trigger(\"onPlayStart\")\r\n            } else c()\r\n        },\r\n        next: function (a) {\r\n            var d = b.current;\r\n            d && (q(a) || (a = d.direction.next), b.jumpto(d.index + 1, a, \"next\"))\r\n        },\r\n        prev: function (a) {\r\n            var d = b.current;\r\n            d && (q(a) || (a = d.direction.prev), b.jumpto(d.index - 1, a, \"prev\"))\r\n        },\r\n        jumpto: function (a, d, e) {\r\n            var c = b.current;\r\n            c && (a = l(a), b.direction = d || c.direction[a >= c.index ? \"next\" : \"prev\"], b.router = e || \"jumpto\", c.loop && (0 > a && (a = c.group.length + a % c.group.length), a %= c.group.length), c.group[a] !== v && (b.cancel(), b._start(a)))\r\n        },\r\n        reposition: function (a, d) {\r\n            var e = b.current, c = e ? e.wrap : null, k;\r\n            c && (k = b._getPosition(d), a && \"scroll\" === a.type ? (delete k.position, c.stop(!0, !0).animate(k, 200)) : (c.css(k), e.pos = f.extend({}, e.dim, k)))\r\n        },\r\n        update: function (a) {\r\n            var d =\r\n                a && a.type, e = !d || \"orientationchange\" === d;\r\n            e && (clearTimeout(B), B = null);\r\n            b.isOpen && !B && (B = setTimeout(function () {\r\n                var c = b.current;\r\n                c && !b.isClosing && (b.wrap.removeClass(\"fancybox-tmp\"), (e || \"load\" === d || \"resize\" === d && c.autoResize) && b._setDimension(), \"scroll\" === d && c.canShrink || b.reposition(a), b.trigger(\"onUpdate\"), B = null)\r\n            }, e && !s ? 0 : 300))\r\n        },\r\n        toggle: function (a) {\r\n            b.isOpen && (b.current.fitToView = \"boolean\" === f.type(a) ? a : !b.current.fitToView, s && (b.wrap.removeAttr(\"style\").addClass(\"fancybox-tmp\"), b.trigger(\"onUpdate\")),\r\n                b.update())\r\n        },\r\n        hideLoading: function () {\r\n            p.unbind(\".loading\");\r\n            f(\"#fancybox-loading\").remove()\r\n        },\r\n        showLoading: function () {\r\n            var a, d;\r\n            b.hideLoading();\r\n            a = f('<div id=\"fancybox-loading\"><div></div></div>').click(b.cancel).appendTo(\"body\");\r\n            p.bind(\"keydown.loading\", function (a) {\r\n                if (27 === (a.which || a.keyCode))a.preventDefault(), b.cancel()\r\n            });\r\n            b.defaults.fixed || (d = b.getViewport(), a.css({\r\n                position: \"absolute\",\r\n                top: 0.5 * d.h + d.y,\r\n                left: 0.5 * d.w + d.x\r\n            }))\r\n        },\r\n        getViewport: function () {\r\n            var a = b.current && b.current.locked || !1, d = {\r\n                x: n.scrollLeft(),\r\n                y: n.scrollTop()\r\n            };\r\n            a ? (d.w = a[0].clientWidth, d.h = a[0].clientHeight) : (d.w = s && r.innerWidth ? r.innerWidth : n.width(), d.h = s && r.innerHeight ? r.innerHeight : n.height());\r\n            return d\r\n        },\r\n        unbindEvents: function () {\r\n            b.wrap && t(b.wrap) && b.wrap.unbind(\".fb\");\r\n            p.unbind(\".fb\");\r\n            n.unbind(\".fb\")\r\n        },\r\n        bindEvents: function () {\r\n            var a = b.current, d;\r\n            a && (n.bind(\"orientationchange.fb\" + (s ? \"\" : \" resize.fb\") + (a.autoCenter && !a.locked ? \" scroll.fb\" : \"\"), b.update), (d = a.keys) && p.bind(\"keydown.fb\", function (e) {\r\n                var c = e.which || e.keyCode, k = e.target || e.srcElement;\r\n                if (27 === c && b.coming)return !1;\r\n                !e.ctrlKey && (!e.altKey && !e.shiftKey && !e.metaKey && (!k || !k.type && !f(k).is(\"[contenteditable]\"))) && f.each(d, function (d, k) {\r\n                    if (1 < a.group.length && k[c] !== v)return b[d](k[c]), e.preventDefault(), !1;\r\n                    if (-1 < f.inArray(c, k))return b[d](), e.preventDefault(), !1\r\n                })\r\n            }), f.fn.mousewheel && a.mouseWheel && b.wrap.bind(\"mousewheel.fb\", function (d, c, k, g) {\r\n                for (var h = f(d.target || null), j = !1; h.length && !j && !h.is(\".fancybox-skin\") && !h.is(\".fancybox-wrap\");)j = h[0] && !(h[0].style.overflow && \"hidden\" === h[0].style.overflow) &&\r\n                    (h[0].clientWidth && h[0].scrollWidth > h[0].clientWidth || h[0].clientHeight && h[0].scrollHeight > h[0].clientHeight), h = f(h).parent();\r\n                if (0 !== c && !j && 1 < b.group.length && !a.canShrink) {\r\n                    if (0 < g || 0 < k)b.prev(0 < g ? \"down\" : \"left\"); else if (0 > g || 0 > k)b.next(0 > g ? \"up\" : \"right\");\r\n                    d.preventDefault()\r\n                }\r\n            }))\r\n        },\r\n        trigger: function (a, d) {\r\n            var e, c = d || b.coming || b.current;\r\n            if (c) {\r\n                f.isFunction(c[a]) && (e = c[a].apply(c, Array.prototype.slice.call(arguments, 1)));\r\n                if (!1 === e)return !1;\r\n                c.helpers && f.each(c.helpers, function (d, e) {\r\n                    if (e && b.helpers[d] && f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0,\r\n                        {}, b.helpers[d].defaults, e), c)\r\n                });\r\n                p.trigger(a)\r\n            }\r\n        },\r\n        isImage: function (a) {\r\n            return q(a) && a.match(/(^data:image\\/.*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\\?|#).*)?$)/i)\r\n        },\r\n        isSWF: function (a) {\r\n            return q(a) && a.match(/\\.(swf)((\\?|#).*)?$/i)\r\n        },\r\n        _start: function (a) {\r\n            var d = {}, e, c;\r\n            a = l(a);\r\n            e = b.group[a] || null;\r\n            if (!e)return !1;\r\n            d = f.extend(!0, {}, b.opts, e);\r\n            e = d.margin;\r\n            c = d.padding;\r\n            \"number\" === f.type(e) && (d.margin = [e, e, e, e]);\r\n            \"number\" === f.type(c) && (d.padding = [c, c, c, c]);\r\n            d.modal && f.extend(!0, d, {\r\n                closeBtn: !1, closeClick: !1, nextClick: !1, arrows: !1,\r\n                mouseWheel: !1, keys: null, helpers: {overlay: {closeClick: !1}}\r\n            });\r\n            d.autoSize && (d.autoWidth = d.autoHeight = !0);\r\n            \"auto\" === d.width && (d.autoWidth = !0);\r\n            \"auto\" === d.height && (d.autoHeight = !0);\r\n            d.group = b.group;\r\n            d.index = a;\r\n            b.coming = d;\r\n            if (!1 === b.trigger(\"beforeLoad\"))b.coming = null; else {\r\n                c = d.type;\r\n                e = d.href;\r\n                if (!c)return b.coming = null, b.current && b.router && \"jumpto\" !== b.router ? (b.current.index = a, b[b.router](b.direction)) : !1;\r\n                b.isActive = !0;\r\n                if (\"image\" === c || \"swf\" === c)d.autoHeight = d.autoWidth = !1, d.scrolling = \"visible\";\r\n                \"image\" === c && (d.aspectRatio = !0);\r\n                \"iframe\" === c && s && (d.scrolling = \"scroll\");\r\n                d.wrap = f(d.tpl.wrap).addClass(\"fancybox-\" + (s ? \"mobile\" : \"desktop\") + \" fancybox-type-\" + c + \" fancybox-tmp \" + d.wrapCSS).appendTo(d.parent || \"body\");\r\n                f.extend(d, {\r\n                    skin: f(\".fancybox-skin\", d.wrap),\r\n                    outer: f(\".fancybox-outer\", d.wrap),\r\n                    inner: f(\".fancybox-inner\", d.wrap)\r\n                });\r\n                f.each([\"Top\", \"Right\", \"Bottom\", \"Left\"], function (a, b) {\r\n                    d.skin.css(\"padding\" + b, w(d.padding[a]))\r\n                });\r\n                b.trigger(\"onReady\");\r\n                if (\"inline\" === c || \"html\" === c) {\r\n                    if (!d.content || !d.content.length)return b._error(\"content\")\r\n                } else if (!e)return b._error(\"href\");\r\n                \"image\" === c ? b._loadImage() : \"ajax\" === c ? b._loadAjax() : \"iframe\" === c ? b._loadIframe() : b._afterLoad()\r\n            }\r\n        },\r\n        _error: function (a) {\r\n            f.extend(b.coming, {\r\n                type: \"html\",\r\n                autoWidth: !0,\r\n                autoHeight: !0,\r\n                minWidth: 0,\r\n                minHeight: 0,\r\n                scrolling: \"no\",\r\n                hasError: a,\r\n                content: b.coming.tpl.error\r\n            });\r\n            b._afterLoad()\r\n        },\r\n        _loadImage: function () {\r\n            var a = b.imgPreload = new Image;\r\n            a.onload = function () {\r\n                this.onload = this.onerror = null;\r\n                b.coming.width = this.width / b.opts.pixelRatio;\r\n                b.coming.height = this.height / b.opts.pixelRatio;\r\n                b._afterLoad()\r\n            };\r\n            a.onerror = function () {\r\n                this.onload =\r\n                    this.onerror = null;\r\n                b._error(\"image\")\r\n            };\r\n            a.src = b.coming.href;\r\n            !0 !== a.complete && b.showLoading()\r\n        },\r\n        _loadAjax: function () {\r\n            var a = b.coming;\r\n            b.showLoading();\r\n            b.ajaxLoad = f.ajax(f.extend({}, a.ajax, {\r\n                url: a.href, error: function (a, e) {\r\n                    b.coming && \"abort\" !== e ? b._error(\"ajax\", a) : b.hideLoading()\r\n                }, success: function (d, e) {\r\n                    \"success\" === e && (a.content = d, b._afterLoad())\r\n                }\r\n            }))\r\n        },\r\n        _loadIframe: function () {\r\n            var a = b.coming, d = f(a.tpl.iframe.replace(/\\{rnd\\}/g, (new Date).getTime())).attr(\"scrolling\", s ? \"auto\" : a.iframe.scrolling).attr(\"src\", a.href);\r\n            f(a.wrap).bind(\"onReset\", function () {\r\n                try {\r\n                    f(this).find(\"iframe\").hide().attr(\"src\", \"//about:blank\").end().empty()\r\n                } catch (a) {\r\n                }\r\n            });\r\n            a.iframe.preload && (b.showLoading(), d.one(\"load\", function () {\r\n                f(this).data(\"ready\", 1);\r\n                s || f(this).bind(\"load.fb\", b.update);\r\n                f(this).parents(\".fancybox-wrap\").width(\"100%\").removeClass(\"fancybox-tmp\").show();\r\n                b._afterLoad()\r\n            }));\r\n            a.content = d.appendTo(a.inner);\r\n            a.iframe.preload || b._afterLoad()\r\n        },\r\n        _preloadImages: function () {\r\n            var a = b.group, d = b.current, e = a.length, c = d.preload ? Math.min(d.preload,\r\n                e - 1) : 0, f, g;\r\n            for (g = 1; g <= c; g += 1)f = a[(d.index + g) % e], \"image\" === f.type && f.href && ((new Image).src = f.href)\r\n        },\r\n        _afterLoad: function () {\r\n            var a = b.coming, d = b.current, e, c, k, g, h;\r\n            b.hideLoading();\r\n            if (a && !1 !== b.isActive)if (!1 === b.trigger(\"afterLoad\", a, d))a.wrap.stop(!0).trigger(\"onReset\").remove(), b.coming = null; else {\r\n                d && (b.trigger(\"beforeChange\", d), d.wrap.stop(!0).removeClass(\"fancybox-opened\").find(\".fancybox-item, .fancybox-nav\").remove());\r\n                b.unbindEvents();\r\n                e = a.content;\r\n                c = a.type;\r\n                k = a.scrolling;\r\n                f.extend(b, {\r\n                    wrap: a.wrap, skin: a.skin,\r\n                    outer: a.outer, inner: a.inner, current: a, previous: d\r\n                });\r\n                g = a.href;\r\n                switch (c) {\r\n                    case \"inline\":\r\n                    case \"ajax\":\r\n                    case \"html\":\r\n                        a.selector ? e = f(\"<div>\").html(e).find(a.selector) : t(e) && (e.data(\"fancybox-placeholder\") || e.data(\"fancybox-placeholder\", f('<div class=\"fancybox-placeholder\"></div>').insertAfter(e).hide()), e = e.show().detach(), a.wrap.bind(\"onReset\", function () {\r\n                            f(this).find(e).length && e.hide().replaceAll(e.data(\"fancybox-placeholder\")).data(\"fancybox-placeholder\", !1)\r\n                        }));\r\n                        break;\r\n                    case \"image\":\r\n                        e = a.tpl.image.replace(\"{href}\",\r\n                            g);\r\n                        break;\r\n                    case \"swf\":\r\n                        e = '<object id=\"fancybox-swf\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"100%\" height=\"100%\"><param name=\"movie\" value=\"' + g + '\"></param>', h = \"\", f.each(a.swf, function (a, b) {\r\n                            e += '<param name=\"' + a + '\" value=\"' + b + '\"></param>';\r\n                            h += \" \" + a + '=\"' + b + '\"'\r\n                        }), e += '<embed src=\"' + g + '\" type=\"application/x-shockwave-flash\" width=\"100%\" height=\"100%\"' + h + \"></embed></object>\"\r\n                }\r\n                (!t(e) || !e.parent().is(a.inner)) && a.inner.append(e);\r\n                b.trigger(\"beforeShow\");\r\n                a.inner.css(\"overflow\", \"yes\" === k ? \"scroll\" :\r\n                    \"no\" === k ? \"hidden\" : k);\r\n                b._setDimension();\r\n                b.reposition();\r\n                b.isOpen = !1;\r\n                b.coming = null;\r\n                b.bindEvents();\r\n                if (b.isOpened) {\r\n                    if (d.prevMethod)b.transitions[d.prevMethod]()\r\n                } else f(\".fancybox-wrap\").not(a.wrap).stop(!0).trigger(\"onReset\").remove();\r\n                b.transitions[b.isOpened ? a.nextMethod : a.openMethod]();\r\n                b._preloadImages()\r\n            }\r\n        },\r\n        _setDimension: function () {\r\n            var a = b.getViewport(), d = 0, e = !1, c = !1, e = b.wrap, k = b.skin, g = b.inner, h = b.current, c = h.width, j = h.height, m = h.minWidth, u = h.minHeight, n = h.maxWidth, p = h.maxHeight, s = h.scrolling, q = h.scrollOutside ?\r\n                h.scrollbarWidth : 0, x = h.margin, y = l(x[1] + x[3]), r = l(x[0] + x[2]), v, z, t, C, A, F, B, D, H;\r\n            e.add(k).add(g).width(\"auto\").height(\"auto\").removeClass(\"fancybox-tmp\");\r\n            x = l(k.outerWidth(!0) - k.width());\r\n            v = l(k.outerHeight(!0) - k.height());\r\n            z = y + x;\r\n            t = r + v;\r\n            C = E(c) ? (a.w - z) * l(c) / 100 : c;\r\n            A = E(j) ? (a.h - t) * l(j) / 100 : j;\r\n            if (\"iframe\" === h.type) {\r\n                if (H = h.content, h.autoHeight && 1 === H.data(\"ready\"))try {\r\n                    H[0].contentWindow.document.location && (g.width(C).height(9999), F = H.contents().find(\"body\"), q && F.css(\"overflow-x\", \"hidden\"), A = F.outerHeight(!0))\r\n                } catch (G) {\r\n                }\r\n            } else if (h.autoWidth ||\r\n                h.autoHeight)g.addClass(\"fancybox-tmp\"), h.autoWidth || g.width(C), h.autoHeight || g.height(A), h.autoWidth && (C = g.width()), h.autoHeight && (A = g.height()), g.removeClass(\"fancybox-tmp\");\r\n            c = l(C);\r\n            j = l(A);\r\n            D = C / A;\r\n            m = l(E(m) ? l(m, \"w\") - z : m);\r\n            n = l(E(n) ? l(n, \"w\") - z : n);\r\n            u = l(E(u) ? l(u, \"h\") - t : u);\r\n            p = l(E(p) ? l(p, \"h\") - t : p);\r\n            F = n;\r\n            B = p;\r\n            h.fitToView && (n = Math.min(a.w - z, n), p = Math.min(a.h - t, p));\r\n            z = a.w - y;\r\n            r = a.h - r;\r\n            h.aspectRatio ? (c > n && (c = n, j = l(c / D)), j > p && (j = p, c = l(j * D)), c < m && (c = m, j = l(c / D)), j < u && (j = u, c = l(j * D))) : (c = Math.max(m, Math.min(c, n)), h.autoHeight &&\r\n            \"iframe\" !== h.type && (g.width(c), j = g.height()), j = Math.max(u, Math.min(j, p)));\r\n            if (h.fitToView)if (g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height(), h.aspectRatio)for (; (a > z || y > r) && (c > m && j > u) && !(19 < d++);)j = Math.max(u, Math.min(p, j - 10)), c = l(j * D), c < m && (c = m, j = l(c / D)), c > n && (c = n, j = l(c / D)), g.width(c).height(j), e.width(c + x), a = e.width(), y = e.height(); else c = Math.max(m, Math.min(c, c - (a - z))), j = Math.max(u, Math.min(j, j - (y - r)));\r\n            q && (\"auto\" === s && j < A && c + x + q < z) && (c += q);\r\n            g.width(c).height(j);\r\n            e.width(c + x);\r\n            a = e.width();\r\n            y = e.height();\r\n            e = (a > z || y > r) && c > m && j > u;\r\n            c = h.aspectRatio ? c < F && j < B && c < C && j < A : (c < F || j < B) && (c < C || j < A);\r\n            f.extend(h, {\r\n                dim: {width: w(a), height: w(y)},\r\n                origWidth: C,\r\n                origHeight: A,\r\n                canShrink: e,\r\n                canExpand: c,\r\n                wPadding: x,\r\n                hPadding: v,\r\n                wrapSpace: y - k.outerHeight(!0),\r\n                skinSpace: k.height() - j\r\n            });\r\n            !H && (h.autoHeight && j > u && j < p && !c) && g.height(\"auto\")\r\n        },\r\n        _getPosition: function (a) {\r\n            var d = b.current, e = b.getViewport(), c = d.margin, f = b.wrap.width() + c[1] + c[3], g = b.wrap.height() + c[0] + c[2], c = {\r\n                position: \"absolute\",\r\n                top: c[0],\r\n                left: c[3]\r\n            };\r\n            d.autoCenter && d.fixed && !a && g <= e.h && f <= e.w ? c.position = \"fixed\" : d.locked || (c.top += e.y, c.left += e.x);\r\n            c.top = w(Math.max(c.top, c.top + (e.h - g) * d.topRatio));\r\n            c.left = w(Math.max(c.left, c.left + (e.w - f) * d.leftRatio));\r\n            return c\r\n        },\r\n        _afterZoomIn: function () {\r\n            var a = b.current;\r\n            a && (b.isOpen = b.isOpened = !0, b.wrap.css(\"overflow\", \"visible\").addClass(\"fancybox-opened\"), b.update(), (a.closeClick || a.nextClick && 1 < b.group.length) && b.inner.css(\"cursor\", \"pointer\").bind(\"click.fb\", function (d) {\r\n                !f(d.target).is(\"a\") && !f(d.target).parent().is(\"a\") && (d.preventDefault(),\r\n                    b[a.closeClick ? \"close\" : \"next\"]())\r\n            }), a.closeBtn && f(a.tpl.closeBtn).appendTo(b.skin).bind(\"click.fb\", function (a) {\r\n                a.preventDefault();\r\n                b.close()\r\n            }), a.arrows && 1 < b.group.length && ((a.loop || 0 < a.index) && f(a.tpl.prev).appendTo(b.outer).bind(\"click.fb\", b.prev), (a.loop || a.index < b.group.length - 1) && f(a.tpl.next).appendTo(b.outer).bind(\"click.fb\", b.next)), b.trigger(\"afterShow\"), !a.loop && a.index === a.group.length - 1 ? b.play(!1) : b.opts.autoPlay && !b.player.isActive && (b.opts.autoPlay = !1, b.play()))\r\n        },\r\n        _afterZoomOut: function (a) {\r\n            a =\r\n                a || b.current;\r\n            f(\".fancybox-wrap\").trigger(\"onReset\").remove();\r\n            f.extend(b, {\r\n                group: {},\r\n                opts: {},\r\n                router: !1,\r\n                current: null,\r\n                isActive: !1,\r\n                isOpened: !1,\r\n                isOpen: !1,\r\n                isClosing: !1,\r\n                wrap: null,\r\n                skin: null,\r\n                outer: null,\r\n                inner: null\r\n            });\r\n            b.trigger(\"afterClose\", a)\r\n        }\r\n    });\r\n    b.transitions = {\r\n        getOrigPosition: function () {\r\n            var a = b.current, d = a.element, e = a.orig, c = {}, f = 50, g = 50, h = a.hPadding, j = a.wPadding, m = b.getViewport();\r\n            !e && (a.isDom && d.is(\":visible\")) && (e = d.find(\"img:first\"), e.length || (e = d));\r\n            t(e) ? (c = e.offset(), e.is(\"img\") && (f = e.outerWidth(), g = e.outerHeight())) :\r\n                (c.top = m.y + (m.h - g) * a.topRatio, c.left = m.x + (m.w - f) * a.leftRatio);\r\n            if (\"fixed\" === b.wrap.css(\"position\") || a.locked)c.top -= m.y, c.left -= m.x;\r\n            return c = {\r\n                top: w(c.top - h * a.topRatio),\r\n                left: w(c.left - j * a.leftRatio),\r\n                width: w(f + j),\r\n                height: w(g + h)\r\n            }\r\n        }, step: function (a, d) {\r\n            var e, c, f = d.prop;\r\n            c = b.current;\r\n            var g = c.wrapSpace, h = c.skinSpace;\r\n            if (\"width\" === f || \"height\" === f)e = d.end === d.start ? 1 : (a - d.start) / (d.end - d.start), b.isClosing && (e = 1 - e), c = \"width\" === f ? c.wPadding : c.hPadding, c = a - c, b.skin[f](l(\"width\" === f ? c : c - g * e)), b.inner[f](l(\"width\" ===\r\n            f ? c : c - g * e - h * e))\r\n        }, zoomIn: function () {\r\n            var a = b.current, d = a.pos, e = a.openEffect, c = \"elastic\" === e, k = f.extend({opacity: 1}, d);\r\n            delete k.position;\r\n            c ? (d = this.getOrigPosition(), a.openOpacity && (d.opacity = 0.1)) : \"fade\" === e && (d.opacity = 0.1);\r\n            b.wrap.css(d).animate(k, {\r\n                duration: \"none\" === e ? 0 : a.openSpeed,\r\n                easing: a.openEasing,\r\n                step: c ? this.step : null,\r\n                complete: b._afterZoomIn\r\n            })\r\n        }, zoomOut: function () {\r\n            var a = b.current, d = a.closeEffect, e = \"elastic\" === d, c = {opacity: 0.1};\r\n            e && (c = this.getOrigPosition(), a.closeOpacity && (c.opacity = 0.1));\r\n            b.wrap.animate(c,\r\n                {\r\n                    duration: \"none\" === d ? 0 : a.closeSpeed,\r\n                    easing: a.closeEasing,\r\n                    step: e ? this.step : null,\r\n                    complete: b._afterZoomOut\r\n                })\r\n        }, changeIn: function () {\r\n            var a = b.current, d = a.nextEffect, e = a.pos, c = {opacity: 1}, f = b.direction, g;\r\n            e.opacity = 0.1;\r\n            \"elastic\" === d && (g = \"down\" === f || \"up\" === f ? \"top\" : \"left\", \"down\" === f || \"right\" === f ? (e[g] = w(l(e[g]) - 200), c[g] = \"+=200px\") : (e[g] = w(l(e[g]) + 200), c[g] = \"-=200px\"));\r\n            \"none\" === d ? b._afterZoomIn() : b.wrap.css(e).animate(c, {\r\n                duration: a.nextSpeed,\r\n                easing: a.nextEasing,\r\n                complete: b._afterZoomIn\r\n            })\r\n        }, changeOut: function () {\r\n            var a =\r\n                b.previous, d = a.prevEffect, e = {opacity: 0.1}, c = b.direction;\r\n            \"elastic\" === d && (e[\"down\" === c || \"up\" === c ? \"top\" : \"left\"] = (\"up\" === c || \"left\" === c ? \"-\" : \"+\") + \"=200px\");\r\n            a.wrap.animate(e, {\r\n                duration: \"none\" === d ? 0 : a.prevSpeed, easing: a.prevEasing, complete: function () {\r\n                    f(this).trigger(\"onReset\").remove()\r\n                }\r\n            })\r\n        }\r\n    };\r\n    b.helpers.overlay = {\r\n        defaults: {closeClick: !0, speedOut: 200, showEarly: !0, css: {}, locked: !s, fixed: !0},\r\n        overlay: null,\r\n        fixed: !1,\r\n        el: f(\"html\"),\r\n        create: function (a) {\r\n            a = f.extend({}, this.defaults, a);\r\n            this.overlay && this.close();\r\n            this.overlay =\r\n                f('<div class=\"fancybox-overlay\"></div>').appendTo(b.coming ? b.coming.parent : a.parent);\r\n            this.fixed = !1;\r\n            a.fixed && b.defaults.fixed && (this.overlay.addClass(\"fancybox-overlay-fixed\"), this.fixed = !0)\r\n        },\r\n        open: function (a) {\r\n            var d = this;\r\n            a = f.extend({}, this.defaults, a);\r\n            this.overlay ? this.overlay.unbind(\".overlay\").width(\"auto\").height(\"auto\") : this.create(a);\r\n            this.fixed || (n.bind(\"resize.overlay\", f.proxy(this.update, this)), this.update());\r\n            a.closeClick && this.overlay.bind(\"click.overlay\", function (a) {\r\n                if (f(a.target).hasClass(\"fancybox-overlay\"))return b.isActive ?\r\n                    b.close() : d.close(), !1\r\n            });\r\n            this.overlay.css(a.css).show()\r\n        },\r\n        close: function () {\r\n            var a, b;\r\n            n.unbind(\"resize.overlay\");\r\n            this.el.hasClass(\"fancybox-lock\") && (f(\".fancybox-margin\").removeClass(\"fancybox-margin\"), a = n.scrollTop(), b = n.scrollLeft(), this.el.removeClass(\"fancybox-lock\"), n.scrollTop(a).scrollLeft(b));\r\n            f(\".fancybox-overlay\").remove().hide();\r\n            f.extend(this, {overlay: null, fixed: !1})\r\n        },\r\n        update: function () {\r\n            var a = \"100%\", b;\r\n            this.overlay.width(a).height(\"100%\");\r\n            I ? (b = Math.max(G.documentElement.offsetWidth, G.body.offsetWidth),\r\n            p.width() > b && (a = p.width())) : p.width() > n.width() && (a = p.width());\r\n            this.overlay.width(a).height(p.height())\r\n        },\r\n        onReady: function (a, b) {\r\n            var e = this.overlay;\r\n            f(\".fancybox-overlay\").stop(!0, !0);\r\n            e || this.create(a);\r\n            a.locked && (this.fixed && b.fixed) && (e || (this.margin = p.height() > n.height() ? f(\"html\").css(\"margin-right\").replace(\"px\", \"\") : !1), b.locked = this.overlay.append(b.wrap), b.fixed = !1);\r\n            !0 === a.showEarly && this.beforeShow.apply(this, arguments)\r\n        },\r\n        beforeShow: function (a, b) {\r\n            var e, c;\r\n            b.locked && (!1 !== this.margin && (f(\"*\").filter(function () {\r\n                return \"fixed\" ===\r\n                    f(this).css(\"position\") && !f(this).hasClass(\"fancybox-overlay\") && !f(this).hasClass(\"fancybox-wrap\")\r\n            }).addClass(\"fancybox-margin\"), this.el.addClass(\"fancybox-margin\")), e = n.scrollTop(), c = n.scrollLeft(), this.el.addClass(\"fancybox-lock\"), n.scrollTop(e).scrollLeft(c));\r\n            this.open(a)\r\n        },\r\n        onUpdate: function () {\r\n            this.fixed || this.update()\r\n        },\r\n        afterClose: function (a) {\r\n            this.overlay && !b.coming && this.overlay.fadeOut(a.speedOut, f.proxy(this.close, this))\r\n        }\r\n    };\r\n    b.helpers.title = {\r\n        defaults: {type: \"float\", position: \"bottom\"}, beforeShow: function (a) {\r\n            var d =\r\n                b.current, e = d.title, c = a.type;\r\n            f.isFunction(e) && (e = e.call(d.element, d));\r\n            if (q(e) && \"\" !== f.trim(e)) {\r\n                d = f('<div class=\"fancybox-title fancybox-title-' + c + '-wrap\">' + e + \"</div>\");\r\n                switch (c) {\r\n                    case \"inside\":\r\n                        c = b.skin;\r\n                        break;\r\n                    case \"outside\":\r\n                        c = b.wrap;\r\n                        break;\r\n                    case \"over\":\r\n                        c = b.inner;\r\n                        break;\r\n                    default:\r\n                        c = b.skin, d.appendTo(\"body\"), I && d.width(d.width()), d.wrapInner('<span class=\"child\"></span>'), b.current.margin[2] += Math.abs(l(d.css(\"margin-bottom\")))\r\n                }\r\n                d[\"top\" === a.position ? \"prependTo\" : \"appendTo\"](c)\r\n            }\r\n        }\r\n    };\r\n    f.fn.fancybox = function (a) {\r\n        var d,\r\n            e = f(this), c = this.selector || \"\", k = function (g) {\r\n                var h = f(this).blur(), j = d, k, l;\r\n                !g.ctrlKey && (!g.altKey && !g.shiftKey && !g.metaKey) && !h.is(\".fancybox-wrap\") && (k = a.groupAttr || \"data-fancybox-group\", l = h.attr(k), l || (k = \"rel\", l = h.get(0)[k]), l && (\"\" !== l && \"nofollow\" !== l) && (h = c.length ? f(c) : e, h = h.filter(\"[\" + k + '=\"' + l + '\"]'), j = h.index(this)), a.index = j, !1 !== b.open(h, a) && g.preventDefault())\r\n            };\r\n        a = a || {};\r\n        d = a.index || 0;\r\n        !c || !1 === a.live ? e.unbind(\"click.fb-start\").bind(\"click.fb-start\", k) : p.undelegate(c, \"click.fb-start\").delegate(c +\r\n            \":not('.fancybox-item, .fancybox-nav')\", \"click.fb-start\", k);\r\n        this.filter(\"[data-fancybox-start=1]\").trigger(\"click\");\r\n        return this\r\n    };\r\n    p.ready(function () {\r\n        var a, d;\r\n        f.scrollbarWidth === v && (f.scrollbarWidth = function () {\r\n            var a = f('<div style=\"width:50px;height:50px;overflow:auto\"><div/></div>').appendTo(\"body\"), b = a.children(), b = b.innerWidth() - b.height(99).innerWidth();\r\n            a.remove();\r\n            return b\r\n        });\r\n        if (f.support.fixedPosition === v) {\r\n            a = f.support;\r\n            d = f('<div style=\"position:fixed;top:20px;\"></div>').appendTo(\"body\");\r\n            var e = 20 ===\r\n                d[0].offsetTop || 15 === d[0].offsetTop;\r\n            d.remove();\r\n            a.fixedPosition = e\r\n        }\r\n        f.extend(b.defaults, {\r\n            scrollbarWidth: f.scrollbarWidth(),\r\n            fixed: f.support.fixedPosition,\r\n            parent: f(\"body\")\r\n        });\r\n        a = f(r).width();\r\n        J.addClass(\"fancybox-lock-test\");\r\n        d = f(r).width();\r\n        J.removeClass(\"fancybox-lock-test\");\r\n        f(\"<style type='text/css'>.fancybox-margin{margin-right:\" + (d - a) + \"px;}</style>\").appendTo(\"head\")\r\n    })\r\n})(window, document, jQuery);","Dotdigitalgroup_Email/js/form/element/manage-coupon-codes.js":"define([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/form/components/fieldset',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'jquery',\r\n], function (_, uiRegistry, fieldset, async, $) {\r\n    'use strict';\r\n\r\n    return fieldset.extend({\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Initialize element\r\n         *\r\n         * @returns {Abstract} Chainable\r\n         */\r\n        initialize: function (elems, position) {\r\n            this._super();\r\n            let obj = this;\r\n\r\n            async.async('#ddg-sales-rule-form-tab-coupons', document.getElementById('container'), function (node) {\r\n                uiRegistry\r\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                    .on('checked', function () {\r\n                        obj.enableDisableFields();\r\n                    });\r\n\r\n                this.enableDisableFields();\r\n            }.bind(this));\r\n\r\n            // bind to window\r\n            window.updateEdcCouponUrl = this.updateEdcCouponUrl;\r\n\r\n            return this;\r\n        },\r\n\r\n        updateEdcCouponUrl: function () {\r\n            var couponAttributes = [];\r\n            var ddgEnabled = document.getElementById('ddg_coupons_enabled').getValue();\r\n            var inputCouponUrl = document.getElementById('ddg_coupons_edc_url');\r\n            var allowResend = parseInt(document.getElementById('ddg_coupons_allow_resend').getValue());\r\n            var cancelSendField = document.getElementById('ddg_coupons_cancel_send');\r\n            var couponUrl = inputCouponUrl.getAttribute('data-baseurl') + '/';\r\n            var expiresAfter = document.getElementById('ddg_coupons_expires_after');\r\n            var expireDays = expiresAfter.getValue();\r\n\r\n            if (!parseInt(expireDays) || parseInt(expireDays) < 1) {\r\n                expiresAfter.value = '';\r\n            }\r\n\r\n            if (allowResend === 0 && ddgEnabled) {\r\n                cancelSendField.setAttribute('disabled', 'disabled');\r\n            } else {\r\n                cancelSendField.removeAttribute('disabled');\r\n            }\r\n\r\n            ['prefix', 'suffix', 'format', 'allow_resend', 'cancel_send', 'expires_after']\r\n                .forEach(function (field) {\r\n                    var inputField = document.getElementById('ddg_coupons_' + field);\r\n                    if (!!inputField.getValue() && !inputField.hasAttribute('disabled')) {\r\n                        couponAttributes.push('code_' + field + '/' + inputField.getValue());\r\n                    }\r\n                });\r\n\r\n            couponAttributes.push(inputCouponUrl.getAttribute('data-email-merge-field'));\r\n            inputCouponUrl.setValue(couponUrl + couponAttributes.join('/'));\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n        /*eslint-disable lines-around-comment*/\r\n\r\n        /**\r\n         * Enable/disable fields on Coupons tab\r\n         */\r\n        enableDisableFields: function () {\r\n            var ddgEnabled = document.getElementById('ddg_coupons_enabled').getValue();\r\n            var isExistingRule = !!document.querySelector('#ddg_coupons_rule_id').getValue();\r\n            var disableAuto;\r\n            var isUseAutoGenerationChecked = uiRegistry\r\n                .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                .checked();\r\n\r\n            if (isExistingRule) {\r\n                this.updateEdcCouponUrl();\r\n            }\r\n\r\n            disableAuto = (isUseAutoGenerationChecked && isExistingRule && ddgEnabled);\r\n            this.disableFields(!disableAuto);\r\n        },\r\n\r\n        disableFields : function(toDisable) {\r\n            var selector = '#ddg-sales-rule-form-tab-coupons input,' +\r\n                '#ddg-sales-rule-form-tab-coupons select,' +\r\n                '#ddg-sales-rule-form-tab-coupons textarea';\r\n\r\n            _.each(\r\n                document.querySelectorAll(selector),\r\n                function (element) {\r\n                    element.disabled = toDisable;\r\n                }\r\n            );\r\n\r\n            if (uiRegistry.get('sales_rule_form.sales_rule_form.rule_information.to_date').value() !== '') {\r\n                document.querySelector('#ddg-sales-rule-form-tab-coupons #ddg_coupons_expires_after').disabled = true;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_User/app-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\nrequire.config({\r\n    'waitSeconds': 0,\r\n    'shim': {\r\n        'jquery/jstree/jquery.hotkeys': ['jquery'],\r\n        'jquery/hover-intent': ['jquery'],\r\n        'mage/adminhtml/backup': ['prototype'],\r\n        'mage/captcha': ['prototype'],\r\n        'mage/common': ['jquery'],\r\n        'mage/webapi': ['jquery'],\r\n        'ko': {\r\n            exports: 'ko'\r\n        },\r\n        'moment': {\r\n            exports: 'moment'\r\n        }\r\n    },\r\n    'paths': {\r\n        'jquery/ui': 'jquery/jquery-ui-1.9.2',\r\n        'jquery/validate': 'jquery/jquery.validate',\r\n        'jquery/hover-intent': 'jquery/jquery.hoverIntent',\r\n        'jquery/file-uploader': 'jquery/fileUploader/jquery.fileuploader',\r\n        'prototype': 'prototype/prototype-amd',\r\n        'text': 'requirejs/text',\r\n        'domReady': 'requirejs/domReady',\r\n        'ko': 'ko/ko'\r\n    }\r\n});\r\n\r\nrequire(['jquery'], function (jQuery) {\r\n    'use strict';\r\n\r\n    jQuery.noConflict();\r\n});\r\n","Magento_User/js/delete-user-account.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var postData;\r\n\r\n    return function (params, elem) {\r\n\r\n        elem.on('click', function () {\r\n\r\n            postData = {\r\n                'data': {\r\n                    'user_id': params.objId,\r\n                    'current_password': $('[name=\"current_password\"]').val()\r\n                }\r\n            };\r\n\r\n            if ($.validator.validateElement($('[name=\"current_password\"]'))) {\r\n                window.deleteConfirm(params.message, params.url, postData);\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_User/js/roles-tree.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui',\r\n    'jquery/jstree/jquery.jstree'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.rolesTree', {\r\n        options: {\r\n            treeInitData: {},\r\n            treeInitSelectedData: {}\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.element.jstree({\r\n                plugins: ['themes', 'json_data', 'ui', 'crrm', 'types', 'vcheckbox', 'hotkeys'],\r\n                vcheckbox: {\r\n                    'two_state': true,\r\n                    'real_checkboxes': true,\r\n\r\n                    /**\r\n                     * @param {*} n\r\n                     * @return {Array}\r\n                     */\r\n                    'real_checkboxes_names': function (n) {\r\n                        return ['resource[]', $(n).data('id')];\r\n                    }\r\n                },\r\n                'json_data': {\r\n                    data: this.options.treeInitData\r\n                },\r\n                ui: {\r\n                    'select_limit': 0\r\n                },\r\n                hotkeys: {\r\n                    space: this._changeState,\r\n                    'return': this._changeState\r\n                },\r\n                types: {\r\n                    'types': {\r\n                        'disabled': {\r\n                            'check_node': false,\r\n                            'uncheck_node': false\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            this.element.jstree('destroy');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this.element.on('loaded.jstree', $.proxy(this._checkNodes, this));\r\n            this.element.on('click.jstree', 'a', $.proxy(this._checkNode, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _checkNode: function (event) {\r\n            event.stopPropagation();\r\n            this.element.jstree(\r\n                'change_state',\r\n                event.currentTarget,\r\n                this.element.jstree('is_checked', event.currentTarget)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _checkNodes: function () {\r\n            var $items = $('[data-id=\"' + this.options.treeInitSelectedData.join('\"],[data-id=\"') + '\"]');\r\n\r\n            $items.removeClass('jstree-unchecked').addClass('jstree-checked');\r\n            $items.children(':checkbox').prop('checked', true);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _changeState: function () {\r\n            var element;\r\n\r\n            if (this.data.ui.hovered) {\r\n                element = this.data.ui.hovered;\r\n                this['change_state'](element, this['is_checked'](element));\r\n            }\r\n\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return $.mage.rolesTree;\r\n});\r\n","PayPal_Braintree/js/validator.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return {\r\n        config: {},\r\n\r\n        /**\r\n         * Set configuration\r\n         * @param {Object} config\r\n         */\r\n        setConfig: function (config) {\r\n            this.config = config;\r\n        },\r\n\r\n        /**\r\n         * Get List of available card types\r\n         * @returns {*|exports.defaults.availableCardTypes|{}}\r\n         */\r\n        getAvailableCardTypes: function () {\r\n            return this.config.availableCardTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types\r\n         * @returns {Object}\r\n         */\r\n        getCcTypesMapper: function () {\r\n            return this.config.ccTypesMapper;\r\n        },\r\n\r\n        /**\r\n         * Find mage card type by Braintree type\r\n         * @param {String} type\r\n         * @param {Object} availableTypes\r\n         * @returns {*}\r\n         */\r\n        getMageCardType: function (type, availableTypes) {\r\n            var storedCardType = null,\r\n                mapper = this.getCcTypesMapper();\r\n\r\n            if (type && typeof mapper[type] !== 'undefined') {\r\n                storedCardType = mapper[type];\r\n\r\n                if (_.indexOf(availableTypes, storedCardType) !== -1) {\r\n                    return storedCardType;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Filter list of available card types\r\n         * @param {Object} availableTypes\r\n         * @param {Object} countrySpecificCardTypes\r\n         * @returns {Object}\r\n         */\r\n        collectTypes: function (availableTypes, countrySpecificCardTypes) {\r\n            var key,\r\n                filteredTypes = [];\r\n\r\n            for (key in availableTypes) {\r\n                if (_.indexOf(countrySpecificCardTypes, availableTypes[key]) !== -1) {\r\n                    filteredTypes.push(availableTypes[key]);\r\n                }\r\n            }\r\n\r\n            return filteredTypes;\r\n        },\r\n\r\n        /**\r\n         * Get list of card types for country\r\n         * @param {String} countryId\r\n         * @returns {*}\r\n         */\r\n        getCountrySpecificCardTypes: function (countryId) {\r\n            if (typeof this.config.countrySpecificCardTypes[countryId] !== 'undefined') {\r\n                return this.config.countrySpecificCardTypes[countryId];\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","PayPal_Braintree/js/vault.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert'\r\n], function ($, Class, alert) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            $container: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            self.$container =  $('#' + self.container);\r\n            self.$selector.on(\r\n                'setVaultNotActive.' + self.getCode(),\r\n                function () {\r\n                    self.$selector.off('submitOrder.' + self.getCode());\r\n                }\r\n            );\r\n            self._super();\r\n\r\n            self.initEventHandlers();\r\n\r\n            return self;\r\n        },\r\n\r\n        /**\r\n         * Get payment code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return this.code;\r\n        },\r\n\r\n        /**\r\n         * Init event handlers\r\n         */\r\n        initEventHandlers: function () {\r\n            $(this.$container).find('[name=\"payment[token_switcher]\"]')\r\n                .on('click', this.selectPaymentMethod.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Select current payment token\r\n         */\r\n        selectPaymentMethod: function () {\r\n            this.disableEventListeners();\r\n            this.enableEventListeners();\r\n        },\r\n\r\n        /**\r\n         * Enable form event listeners\r\n         */\r\n        enableEventListeners: function () {\r\n            this.$selector.on('submitOrder.' + this.getCode(), this.submitOrder.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Disable form event listeners\r\n         */\r\n        disableEventListeners: function () {\r\n            this.$selector.off('submitOrder');\r\n        },\r\n\r\n        /**\r\n         * Pre submit for order\r\n         * @returns {Boolean}\r\n         */\r\n        submitOrder: function () {\r\n            this.$selector.validate().form();\r\n            this.$selector.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$selector.validate().errorList.length) {\r\n                return false;\r\n            }\r\n            this.getPaymentMethodNonce();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            this.$selector.trigger('realOrder');\r\n        },\r\n\r\n        /**\r\n         * Send request to get payment method nonce\r\n         */\r\n        getPaymentMethodNonce: function () {\r\n            var self = this;\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            $.getJSON(self.nonceUrl, {\r\n                'public_hash': self.publicHash\r\n            }).done(function (response) {\r\n                self.setPaymentDetails(response.paymentMethodNonce);\r\n                self.placeOrder();\r\n            }).fail(function (response) {\r\n                var failed = JSON.parse(response.responseText);\r\n\r\n                self.error(failed.message);\r\n            }).always(function () {\r\n                $('body').trigger('processStop');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            this.createPublicHashSelector();\r\n\r\n            this.$selector.find('[name=\"payment[public_hash]\"]').val(this.publicHash);\r\n            this.$selector.find('[name=\"payment[payment_method_nonce]\"]').val(nonce).prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * Creates public hash selector\r\n         */\r\n        createPublicHashSelector: function () {\r\n            var $input;\r\n\r\n            if (this.$selector.find('[name=\"payment[payment_method_nonce]\"]').size() === 0) {\r\n                $input = $('<input>').attr(\r\n                    {\r\n                        type: 'hidden',\r\n                        id: this.getNonceSelectorName(),\r\n                        name: 'payment[payment_method_nonce]'\r\n                    }\r\n                );\r\n\r\n                $input.appendTo(this.$selector);\r\n                $input.prop('disabled', false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get selector name for nonce input\r\n         * @returns {String}\r\n         */\r\n        getNonceSelectorName: function () {\r\n            return 'nonce_' + this.getCode();\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/virtual.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/view/utils/dom-observer',\r\n    'mage/translate',\r\n    'PayPal_Braintree/js/validator',\r\n    'braintree',\r\n    'braintreeHostedFields'\r\n], function ($, Class, alert, domObserver, $t, validator, client, hostedFields) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            $container: null,\r\n            container: 'payment_form_braintree',\r\n            braintree: null,\r\n            selectedCardType: null,\r\n            hostedFieldsInstance: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            validator.setConfig(this);\r\n\r\n            self.$container = $('#' + self.container);\r\n            this._super()\r\n                .observe([\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            domObserver.get('#' + self.container, function () {\r\n                self.initBraintree();\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Setup Braintree SDK\r\n         */\r\n        initBraintree: function () {\r\n            var self = this;\r\n\r\n            try {\r\n                $('body').trigger('processStart');\r\n\r\n                client.create({\r\n                    authorization: self.clientToken\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        alert({\r\n                            content: $t('Please configure your Braintree Payments account in order to use the virtual terminal.')\r\n                        });\r\n                        console.error('Error!', clientErr);\r\n                        return self.error(response.clientErr);\r\n                    }\r\n\r\n                    hostedFields.create({\r\n                        client: clientInstance,\r\n                        fields: self.getHostedFields()\r\n                    }, function (createErr, hostedFieldsInstance) {\r\n                        if (createErr) {\r\n                            self.error($t(createErr));\r\n                            console.error('Error!', createErr);\r\n                            return;\r\n                        }\r\n\r\n                        self.hostedFieldsInstance = hostedFieldsInstance;\r\n                        self.$container.on('takePayment', self.submitOrder.bind(self));\r\n\r\n                        $('body').trigger('processStop');\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            } catch (e) {\r\n                $('body').trigger('processStop');\r\n                self.error(e.message);\r\n                console.log(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get hosted fields configuration\r\n         * @returns {Object}\r\n         */\r\n        getHostedFields: function () {\r\n            return {\r\n                number: {\r\n                    selector: this.getSelector('cc_number'),\r\n                    placeholder: $t('4111 1111 1111 1111')\r\n                },\r\n                expirationMonth: {\r\n                    selector: this.getSelector('cc_exp_month'),\r\n                    placeholder: $t('MM')\r\n                },\r\n                expirationYear: {\r\n                    selector: this.getSelector('cc_exp_year'),\r\n                    placeholder: $t('YY')\r\n                },\r\n                cvv: {\r\n                    selector: this.getSelector('cc_cid'),\r\n                    placeholder: $t('123')\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            var $container = $('#' + this.container);\r\n            $container.find('[name=\"payment_method_nonce\"]').val(nonce);\r\n        },\r\n\r\n        /**\r\n         * Trigger order submit\r\n         */\r\n        submitOrder: function (event) {\r\n            event.preventDefault();\r\n\r\n            this.$container.validate().form();\r\n            this.$container.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$container.validate().errorList.length) {\r\n                return false;\r\n            }\r\n\r\n            $('body').trigger('processStart');\r\n            this.tokenizeHostedFields();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            this.$container.submit();\r\n        },\r\n\r\n        /**\r\n         * Get list of currently available card types\r\n         * @returns {Array}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            var types = [],\r\n                $options = $(this.getSelector('cc_type')).find('option');\r\n\r\n            $.map($options, function (option) {\r\n                types.push($(option).val());\r\n            });\r\n\r\n            return types;\r\n        },\r\n\r\n        /**\r\n         * Get jQuery selector\r\n         * @param {String} field\r\n         * @returns {String}\r\n         */\r\n        getSelector: function (field) {\r\n            return '#' + this.code + '_' + field;\r\n        },\r\n\r\n        tokenizeHostedFields: function () {\r\n            this.hostedFieldsInstance.tokenize({\r\n                vault: false // vault or no?\r\n            }, function (tokenizeErr, payload) {\r\n                if (tokenizeErr) {\r\n                    $('body').trigger('processStop');\r\n                    switch (tokenizeErr.code) {\r\n                        case 'HOSTED_FIELDS_FIELDS_EMPTY':\r\n                            // occurs when none of the fields are filled in\r\n                            this.error($t('Please enter a card number, expiration date and CVV'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FIELDS_INVALID':\r\n                            // occurs when certain fields do not pass client side validation\r\n                            this.error($t('Please correct the problems with the Credit Card fields.'));\r\n                            console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the fail on duplicate payment method\r\n                            //     option is set to true\r\n                            //   * the card being tokenized has previously been vaulted (with any customer)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.fail_on_duplicate_payment_method\r\n                            this.error($t('The payment method used, already exists in the user\\'s vault. Please use the vault option instead.'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the verify card option is set to true\r\n                            //     and you have credit card verification turned on in the Braintree\r\n                            //     control panel\r\n                            //   * the cvv does not pass verfication (https://developers.braintreepayments.com/reference/general/testing/#avs-and-cvv/cid-responses)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.verify_card\r\n                            this.error($t('CVV did not pass verification'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\r\n                            // occurs for any other tokenization error on the server\r\n                            this.error($t('There was an issue tokenizing the card. Please check the card is valid.'));\r\n                            console.error('Tokenization failed server side. Is the card valid?');\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\r\n                            // occurs when the Braintree gateway cannot be contacted\r\n                            this.error($t('There was an error connecting to Braintree. Please try again.'));\r\n                            break;\r\n                        default:\r\n                            this.error($t('There was an issue processing the payment. Please try again.'));\r\n                            console.error('Braintree error', tokenizeErr);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.setPaymentDetails(payload.nonce);\r\n                    this.placeOrder();\r\n                }\r\n            }.bind(this));\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/braintree.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/view/utils/dom-observer',\r\n    'mage/translate',\r\n    'PayPal_Braintree/js/validator',\r\n    'braintree',\r\n    'braintreeHostedFields'\r\n], function ($, Class, alert, domObserver, $t, validator, client, hostedFields) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            $selector: null,\r\n            selector: 'edit_form',\r\n            container: 'payment_form_braintree',\r\n            active: false,\r\n            scriptLoaded: false,\r\n            braintree: null,\r\n            selectedCardType: null,\r\n            imports: {\r\n                onActiveChange: 'active'\r\n            },\r\n            hostedFieldsInstance: null\r\n        },\r\n\r\n        /**\r\n         * Set list of observable attributes\r\n         * @returns {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            validator.setConfig(this);\r\n\r\n            self.$selector = $('#' + self.selector);\r\n            this._super()\r\n                .observe([\r\n                    'active',\r\n                    'scriptLoaded',\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            // re-init payment method events\r\n            self.$selector.off('changePaymentMethod.' + this.code)\r\n                .on('changePaymentMethod.' + this.code, this.changePaymentMethod.bind(this));\r\n\r\n            // listen block changes\r\n            domObserver.get('#' + self.container, function () {\r\n                if (self.scriptLoaded()) {\r\n                    self.$selector.off('submit');\r\n                    self.initBraintree();\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable/disable current payment method\r\n         * @param {Object} event\r\n         * @param {String} method\r\n         * @returns {exports.changePaymentMethod}\r\n         */\r\n        changePaymentMethod: function (event, method) {\r\n            this.active(method === this.code);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggered when payment changed\r\n         * @param {Boolean} isActive\r\n         */\r\n        onActiveChange: function (isActive) {\r\n            if (!isActive) {\r\n                this.$selector.off('submitOrder.braintree');\r\n\r\n                return;\r\n            }\r\n            this.disableEventListeners();\r\n\r\n            if (typeof window.order !== 'undefined') {\r\n                window.order.addExcludedPaymentMethod(this.code);\r\n            }\r\n\r\n            if (!this.clientToken) {\r\n                this.error($.mage.__('This payment is not available'));\r\n\r\n                return;\r\n            }\r\n\r\n            this.enableEventListeners();\r\n\r\n            if (!this.scriptLoaded()) {\r\n                this.initBraintree();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup Braintree SDK\r\n         */\r\n        initBraintree: function () {\r\n            var self = this;\r\n            this.scriptLoaded(true);\r\n\r\n            self.disableEventListeners();\r\n\r\n            try {\r\n                $('body').trigger('processStart');\r\n\r\n                client.create({\r\n                    authorization: self.clientToken\r\n                }, function (clientErr, clientInstance) {\r\n                    if (clientErr) {\r\n                        console.error('Error!', clientErr);\r\n                        return self.error(response.clientErr);\r\n                    }\r\n\r\n                    hostedFields.create({\r\n                        client: clientInstance,\r\n                        fields: self.getHostedFields()\r\n                    }, function (createErr, hostedFieldsInstance) {\r\n                        if (createErr) {\r\n                            self.error($t(createErr));\r\n                            console.error('Error!', createErr);\r\n                            return;\r\n                        }\r\n\r\n                        self.hostedFieldsInstance = hostedFieldsInstance;\r\n                        self.enableEventListeners();\r\n\r\n                        $('body').trigger('processStop');\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            } catch (e) {\r\n                $('body').trigger('processStop');\r\n                self.error(e.message);\r\n                console.log(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get hosted fields configuration\r\n         * @returns {Object}\r\n         */\r\n        getHostedFields: function () {\r\n            var self = this,\r\n                fields = {\r\n                    number: {\r\n                        selector: self.getSelector('cc_number'),\r\n                        placeholder: $t('4111 1111 1111 1111')\r\n                    },\r\n                    expirationMonth: {\r\n                        selector: self.getSelector('cc_exp_month'),\r\n                        placeholder: $t('MM')\r\n                    },\r\n                    expirationYear: {\r\n                        selector: self.getSelector('cc_exp_year'),\r\n                        placeholder: $t('YY')\r\n                    }\r\n                };\r\n\r\n            if (self.useCvv) {\r\n                fields.cvv = {\r\n                    selector: self.getSelector('cc_cid'),\r\n                    placeholder: $t('123')\r\n                };\r\n            }\r\n\r\n            return fields;\r\n        },\r\n\r\n        /**\r\n         * Show alert message\r\n         * @param {String} message\r\n         */\r\n        error: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Enable form event listeners\r\n         */\r\n        enableEventListeners: function () {\r\n            this.$selector.on('submitOrder.braintree', this.submitOrder.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Disable form event listeners\r\n         */\r\n        disableEventListeners: function () {\r\n            this.$selector.off('submitOrder');\r\n            this.$selector.off('submit');\r\n        },\r\n\r\n        /**\r\n         * Store payment details\r\n         * @param {String} nonce\r\n         */\r\n        setPaymentDetails: function (nonce) {\r\n            var $container = $('#' + this.container);\r\n\r\n            $container.find('[name=\"payment[payment_method_nonce]\"]').val(nonce);\r\n        },\r\n\r\n        /**\r\n         * Trigger order submit\r\n         */\r\n        submitOrder: function () {\r\n            this.$selector.validate().form();\r\n            this.$selector.trigger('afterValidate.beforeSubmit');\r\n            $('body').trigger('processStop');\r\n\r\n            // validate parent form\r\n            if (this.$selector.validate().errorList.length) {\r\n                return false;\r\n            }\r\n\r\n            $('body').trigger('processStart');\r\n            this.tokenizeHostedFields();\r\n        },\r\n\r\n        /**\r\n         * Place order\r\n         */\r\n        placeOrder: function () {\r\n            $('#' + this.selector).trigger('realOrder');\r\n        },\r\n\r\n        /**\r\n         * Get list of currently available card types\r\n         * @returns {Array}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            var types = [],\r\n                $options = $(this.getSelector('cc_type')).find('option');\r\n\r\n            $.map($options, function (option) {\r\n                types.push($(option).val());\r\n            });\r\n\r\n            return types;\r\n        },\r\n\r\n        /**\r\n         * Get jQuery selector\r\n         * @param {String} field\r\n         * @returns {String}\r\n         */\r\n        getSelector: function (field) {\r\n            return '#' + this.code + '_' + field;\r\n        },\r\n\r\n        tokenizeHostedFields: function () {\r\n            this.hostedFieldsInstance.tokenize({\r\n                vault: false // vault or no?\r\n            }, function (tokenizeErr, payload) {\r\n                if (tokenizeErr) {\r\n                    $('body').trigger('processStop');\r\n                    switch (tokenizeErr.code) {\r\n                        case 'HOSTED_FIELDS_FIELDS_EMPTY':\r\n                            // occurs when none of the fields are filled in\r\n                            this.error($t('Please enter a card number, expiration date and CVV'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FIELDS_INVALID':\r\n                            // occurs when certain fields do not pass client side validation\r\n                            this.error($t('Please correct the problems with the Credit Card fields.'));\r\n                            console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the fail on duplicate payment method\r\n                            //     option is set to true\r\n                            //   * the card being tokenized has previously been vaulted (with any customer)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.fail_on_duplicate_payment_method\r\n                            this.error($t('The payment method used, already exists in the user\\'s vault. Please use the vault option instead.'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\r\n                            // occurs when:\r\n                            //   * the client token used for client authorization was generated\r\n                            //     with a customer ID and the verify card option is set to true\r\n                            //     and you have credit card verification turned on in the Braintree\r\n                            //     control panel\r\n                            //   * the cvv does not pass verfication (https://developers.braintreepayments.com/reference/general/testing/#avs-and-cvv/cid-responses)\r\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.verify_card\r\n                            this.error($t('CVV did not pass verification'));\r\n                            break;\r\n                        case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\r\n                            // occurs for any other tokenization error on the server\r\n                            this.error($t('There was an issue tokenizing the card. Please check the card is valid.'));\r\n                            console.error('Tokenization failed server side. Is the card valid?');\r\n                            break;\r\n                        case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\r\n                            // occurs when the Braintree gateway cannot be contacted\r\n                            this.error($t('There was an error connecting to Braintree. Please try again.'));\r\n                            break;\r\n                        default:\r\n                            this.error($t('There was an issue processing the payment. Please try again.'));\r\n                            console.error('Braintree error', tokenizeErr);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.setPaymentDetails(payload.nonce);\r\n                    $('#' + this.container).find('[type=\"submit\"]').trigger('click');\r\n                }\r\n            }.bind(this));\r\n        }\r\n    });\r\n});\r\n","PayPal_Braintree/js/system.js":"require(['jquery', 'Magento_Ui/js/modal/alert', 'mage/translate'], function ($, alert, $t) {\r\n    window.braintreeValidator = function (endpoint, env_id) {\r\n        env_id = $('[data-ui-id=\"' + env_id + '\"]').val();\r\n\r\n        var merch_id = '', public_id = '', private_id = '';\r\n\r\n        if (env_id === 'sandbox') {\r\n            merch_id = $('[data-ui-id=\"text-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-merchant-id-value\"]').val();\r\n            public_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-public-key-value\"]').val();\r\n            private_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-sandbox-private-key-value\"]').val();\r\n        } else {\r\n            merch_id = $('[data-ui-id=\"text-groups-braintree-section-groups-braintree-groups-braintree-required-fields-merchant-id-value\"]').val();\r\n            public_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-public-key-value\"]').val();\r\n            private_id = $('[data-ui-id=\"password-groups-braintree-section-groups-braintree-groups-braintree-required-fields-private-key-value\"]').val();\r\n        }\r\n\r\n        /* Remove previous success message if present */\r\n        if ($(\".braintree-credentials-success-message\")) {\r\n            $(\".braintree-credentials-success-message\").remove();\r\n        }\r\n\r\n        /* Basic field validation */\r\n        var errors = [];\r\n\r\n        if (!env_id || env_id !== 'sandbox' && env_id !== 'production') {\r\n            errors.push($t(\"Please select an Environment\"));\r\n        }\r\n\r\n        if (!merch_id) {\r\n            errors.push($t(\"Please enter a Merchant ID\"));\r\n        }\r\n\r\n        if (!public_id) {\r\n            errors.push($t('Please enter a Public Key'));\r\n        }\r\n\r\n        if (!private_id) {\r\n            errors.push($t('Please enter a Private Key'));\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n            alert({\r\n                title: $t('Braintree Credential Validation Failed'),\r\n                content:  errors.join('<br />')\r\n            });\r\n            return false;\r\n        }\r\n\r\n        $(this).text($t(\"We're validating your credentials...\")).attr('disabled', true);\r\n\r\n        var self = this;\r\n        $.post(endpoint, {\r\n            environment: env_id,\r\n            merchant_id: merch_id,\r\n            public_key: public_id,\r\n            private_key: private_id\r\n        }).done(function () {\r\n            $('<div class=\"message message-success braintree-credentials-success-message\">' + $t(\"Your credentials are valid.\") + '</div>').insertAfter(self);\r\n        }).fail(function () {\r\n            alert({\r\n                title: $t('Braintree Credential Validation Failed'),\r\n                content: $t('Your Braintree Credentials could not be validated. Please ensure you have selected the correct environment and entered a valid Merchant ID, Public Key and Private Key.')\r\n            });\r\n        }).always(function () {\r\n            $(self).text($t(\"Validate Credentials\")).attr('disabled', false);\r\n        });\r\n    }\r\n});","PayPal_Braintree/js/grid/provider.js":"/**\r\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/grid/provider'\r\n], function (_, Provider) {\r\n    'use strict';\r\n\r\n    return Provider.extend({\r\n\r\n        /**\r\n         * Reload grid\r\n         * @returns {exports}\r\n         */\r\n        reload: function () {\r\n            if (this.hasFilters()) {\r\n                this._super();\r\n\r\n                return this;\r\n            }\r\n\r\n            this.trigger('reload');\r\n\r\n            this.onReload({\r\n                items: [],\r\n                totalRecords: 0\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Has filters checker\r\n         * @returns {Boolean}\r\n         */\r\n        hasFilters: function () {\r\n            var params = this.params,\r\n                filters = params.filters || {};\r\n\r\n            return _.keys(filters).length > 1;\r\n        }\r\n    });\r\n});\r\n","requirejs/domReady.js":"/**\r\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/domReady for details\r\n */\r\n/*jslint */\r\n/*global require: false, define: false, requirejs: false,\r\n  window: false, clearInterval: false, document: false,\r\n  self: false, setInterval: false */\r\n\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var isTop, testDiv, scrollIntervalId,\r\n        isBrowser = typeof window !== \"undefined\" && window.document,\r\n        isPageLoaded = !isBrowser,\r\n        doc = isBrowser ? document : null,\r\n        readyCalls = [];\r\n\r\n    function runCallbacks(callbacks) {\r\n        var i;\r\n        for (i = 0; i < callbacks.length; i += 1) {\r\n            callbacks[i](doc);\r\n        }\r\n    }\r\n\r\n    function callReady() {\r\n        var callbacks = readyCalls;\r\n\r\n        if (isPageLoaded) {\r\n            //Call the DOM ready callbacks\r\n            if (callbacks.length) {\r\n                readyCalls = [];\r\n                runCallbacks(callbacks);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the page as loaded.\r\n     */\r\n    function pageLoaded() {\r\n        if (!isPageLoaded) {\r\n            isPageLoaded = true;\r\n            if (scrollIntervalId) {\r\n                clearInterval(scrollIntervalId);\r\n            }\r\n\r\n            callReady();\r\n        }\r\n    }\r\n\r\n    if (isBrowser) {\r\n        if (document.addEventListener) {\r\n            //Standards. Hooray! Assumption here that if standards based,\r\n            //it knows about DOMContentLoaded.\r\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\r\n            window.addEventListener(\"load\", pageLoaded, false);\r\n        } else if (window.attachEvent) {\r\n            window.attachEvent(\"onload\", pageLoaded);\r\n\r\n            testDiv = document.createElement('div');\r\n            try {\r\n                isTop = window.frameElement === null;\r\n            } catch (e) {}\r\n\r\n            //DOMContentLoaded approximation that uses a doScroll, as found by\r\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\r\n            //but modified by other contributors, including jdalton\r\n            if (testDiv.doScroll && isTop && window.external) {\r\n                scrollIntervalId = setInterval(function () {\r\n                    try {\r\n                        testDiv.doScroll();\r\n                        pageLoaded();\r\n                    } catch (e) {}\r\n                }, 30);\r\n            }\r\n        }\r\n\r\n        //Check if document is no longer loading, and if so, just trigger page load\r\n        //listeners. Latest webkit browsers also use \"interactive\", and\r\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\r\n        //entering \"interactive\" or \"complete\". More details:\r\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\r\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\r\n        //Hmm, this is more complicated on further use, see \"firing too early\"\r\n        //bug: https://github.com/requirejs/domReady/issues/1\r\n        //so removing the || document.readyState === \"interactive\" test.\r\n        //There is still a window.onload binding that should get fired if\r\n        //DOMContentLoaded is missed.\r\n        if (document.readyState !== \"loading\") {\r\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\r\n            setTimeout(pageLoaded);\r\n        }\r\n    }\r\n\r\n    /** START OF PUBLIC API **/\r\n\r\n    /**\r\n     * Registers a callback for DOM ready. If DOM is already ready, the\r\n     * callback is called immediately.\r\n     * @param {Function} callback\r\n     */\r\n    function domReady(callback) {\r\n        if (isPageLoaded) {\r\n            callback(doc);\r\n        } else {\r\n            readyCalls.push(callback);\r\n        }\r\n        return domReady;\r\n    }\r\n\r\n    domReady.version = '2.0.1';\r\n\r\n    /**\r\n     * Loader Plugin API method\r\n     */\r\n    domReady.load = function (name, req, onLoad, config) {\r\n        if (config.isBuild) {\r\n            onLoad(null);\r\n        } else {\r\n            domReady(onLoad);\r\n        }\r\n    };\r\n\r\n    /** END OF PUBLIC API **/\r\n\r\n    return domReady;\r\n});\r\n","Magento_Email/js/variables.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global Variables, updateElementAtCursor */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Ui/js/modal/modal',\r\n    'jquery/ui',\r\n    'prototype'\r\n], function (jQuery, $t) {\r\n    'use strict';\r\n\r\n    window.Variables = {\r\n        textareaElementId: null,\r\n        variablesContent: null,\r\n        dialogWindow: null,\r\n        dialogWindowId: 'variables-chooser',\r\n        overlayShowEffectOptions: null,\r\n        overlayHideEffectOptions: null,\r\n        insertFunction: 'Variables.insertVariable',\r\n        variablesValue: [],\r\n\r\n        /**\r\n         * @param {*} textareaElementId\r\n         * @param {Function} insertFunction\r\n         */\r\n        init: function (textareaElementId, insertFunction) {\r\n            if ($(textareaElementId)) {\r\n                this.textareaElementId = textareaElementId;\r\n            }\r\n\r\n            if (insertFunction) {\r\n                this.insertFunction = insertFunction;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * reset data.\r\n         */\r\n        resetData: function () {\r\n            this.variablesContent = null;\r\n            this.dialogWindow = null;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} variables\r\n         */\r\n        openVariableChooser: function (variables) {\r\n            if (this.variablesContent == null && variables) {\r\n                this.variablesContent = '<ul class=\"insert-variable\">';\r\n                variables.each(function (variableGroup) {\r\n                    if (variableGroup.label && variableGroup.value) {\r\n                        this.variablesContent += '<li><b>' + variableGroup.label.escapeHTML() + '</b></li>';\r\n                        variableGroup.value.each(function (variable) {\r\n                            if (variable.value && variable.label) {\r\n                                this.variablesValue.push(variable.value);\r\n                                this.variablesContent += '<li>' +\r\n                                    this.prepareVariableRow(this.variablesValue.length, variable.label) + '</li>';\r\n                            }\r\n                        }.bind(this));\r\n                    }\r\n                }.bind(this));\r\n                this.variablesContent += '</ul>';\r\n            }\r\n\r\n            if (this.variablesContent) {\r\n                this.openDialogWindow(this.variablesContent);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} variablesContent\r\n         */\r\n        openDialogWindow: function (variablesContent) {\r\n            var windowId = this.dialogWindowId;\r\n\r\n            jQuery('<div id=\"' + windowId + '\">' + variablesContent + '</div>').modal({\r\n                title: $t('Insert Variable...'),\r\n                type: 'slide',\r\n                buttons: [],\r\n\r\n                /** @inheritdoc */\r\n                closed: function (e, modal) {\r\n                    modal.modal.remove();\r\n                }\r\n            });\r\n\r\n            jQuery('#' + windowId).modal('openModal');\r\n        },\r\n\r\n        /**\r\n         * Close dialog window.\r\n         */\r\n        closeDialogWindow: function () {\r\n            jQuery('#' + this.dialogWindowId).modal('closeModal');\r\n        },\r\n\r\n        /**\r\n         * @param {Number} index\r\n         * @param {*} varLabel\r\n         * @return {String}\r\n         */\r\n        prepareVariableRow: function (index, varLabel) {\r\n            return '<a href=\"#\" onclick=\"' +\r\n                this.insertFunction +\r\n                '(' +\r\n                index +\r\n                ');return false;\">' +\r\n                varLabel.escapeHTML() +\r\n                '</a>';\r\n        },\r\n\r\n        /**\r\n         * @param {*} variable\r\n         */\r\n        insertVariable: function (variable) {\r\n            var windowId = this.dialogWindowId,\r\n                textareaElm, scrollPos;\r\n\r\n            jQuery('#' + windowId).modal('closeModal');\r\n            textareaElm = $(this.textareaElementId);\r\n\r\n            if (textareaElm) {\r\n                scrollPos = textareaElm.scrollTop;\r\n\r\n                if (!isNaN(variable)) {\r\n                    updateElementAtCursor(textareaElm, Variables.variablesValue[variable - 1]);\r\n                } else {\r\n                    updateElementAtCursor(textareaElm, variable);\r\n                }\r\n                textareaElm.focus();\r\n                textareaElm.scrollTop = scrollPos;\r\n                jQuery(textareaElm).change();\r\n                textareaElm = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    window.MagentovariablePlugin = {\r\n        editor: null,\r\n        variables: null,\r\n        textareaId: null,\r\n\r\n        /**\r\n         * @param {*} editor\r\n         */\r\n        setEditor: function (editor) {\r\n            this.editor = editor;\r\n        },\r\n\r\n        /**\r\n         * @param {String} url\r\n         * @param {*} textareaId\r\n         */\r\n        loadChooser: function (url, textareaId) {\r\n            this.textareaId = textareaId;\r\n\r\n            if (this.variables == null) {\r\n                new Ajax.Request(url, {\r\n                    parameters: {},\r\n                    onComplete: function (transport) {\r\n                        if (transport.responseText.isJSON()) {\r\n                            Variables.init(null, 'MagentovariablePlugin.insertVariable');\r\n                            this.variables = transport.responseText.evalJSON();\r\n                            this.openChooser(this.variables);\r\n                        }\r\n                    }.bind(this)\r\n                });\r\n            } else {\r\n                this.openChooser(this.variables);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} variables\r\n         */\r\n        openChooser: function (variables) {\r\n            Variables.openVariableChooser(variables);\r\n        },\r\n\r\n        /**\r\n         * @param {*} value\r\n         */\r\n        insertVariable: function (value) {\r\n            if (this.textareaId) {\r\n                Variables.init(this.textareaId);\r\n                Variables.insertVariable(value);\r\n            } else {\r\n                Variables.closeDialogWindow();\r\n                this.editor.execCommand('mceInsertContent', false, value);\r\n            }\r\n        }\r\n    };\r\n});\r\n","jquery/jquery.cookie.js":"/*jshint eqnull:true */\r\n/*!\r\n * jQuery Cookie Plugin v1.1\r\n * https://github.com/carhartl/jquery-cookie\r\n *\r\n * Copyright 2011, Klaus Hartl\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * http://www.opensource.org/licenses/GPL-2.0\r\n */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\"jquery\"], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n\r\n    var pluses = /\\+/g;\r\n    function raw(s) {\r\n        return s;\r\n    }\r\n    function decoded(s) {\r\n        return decodeURIComponent(s.replace(pluses, ' '));\r\n    }\r\n\r\n    $.cookie = function(key, value, options) {\r\n\r\n        // key and at least value given, set cookie...\r\n        if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(value)) || value == null)) {\r\n            options = $.extend({}, $.cookie.defaults, options);\r\n\r\n            if (value == null) {\r\n                options.expires = -1;\r\n            }\r\n\r\n            if (typeof options.expires === 'number') {\r\n                var days = options.expires, t = options.expires = new Date();\r\n                t.setDate(t.getDate() + days);\r\n            }\r\n\r\n            value = String(value);\r\n\r\n            return (document.cookie = [\r\n                encodeURIComponent(key), '=', options.raw ? value : encodeURIComponent(value),\r\n                options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\r\n                options.path    ? '; path=' + options.path : '',\r\n                options.domain  ? '; domain=' + options.domain : '',\r\n                options.secure  ? '; secure' : ''\r\n            ].join(''));\r\n        }\r\n\r\n        // key and possibly options given, get cookie...\r\n        options = value || $.cookie.defaults || {};\r\n        var decode = options.raw ? raw : decoded;\r\n        var cookies = document.cookie.split('; ');\r\n        for (var i = 0, parts; (parts = cookies[i] && cookies[i].split('=')); i++) {\r\n            if (decode(parts.shift()) === key) {\r\n                return decode(parts.join('='));\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    $.cookie.defaults = {};\r\n\r\n}));\r\n","jquery/jquery.tabs.js":"/* ========================================================\r\n * bootstrap-tab.js v2.0.4\r\n * http://twitter.github.com/bootstrap/javascript.html#tabs\r\n * ========================================================\r\n * Copyright 2012 Twitter, Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ======================================================== */\r\n\r\ndefine([\r\n  \"jquery\"\r\n], function(jQuery){\r\n\r\n\r\n!function ($) {\r\n\r\n  \"use strict\"; // jshint ;_;\r\n\r\n\r\n /* TAB CLASS DEFINITION\r\n  * ==================== */\r\n\r\n  var Tab = function ( element ) {\r\n    this.element = $(element)\r\n  };\r\n\r\n  Tab.prototype = {\r\n\r\n    constructor: Tab\r\n\r\n  , show: function () {\r\n      var $this = this.element\r\n        , $ul = $this.closest('ul:not(.dropdown-menu)')\r\n        , selector = $this.attr('data-target')\r\n        , previous\r\n        , $target\r\n        , e;\r\n\r\n      if (!selector) {\r\n        selector = $this.attr('href');\r\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); //strip for ie7\r\n      }\r\n\r\n      if ( $this.parent('li').hasClass('active') ) return;\r\n\r\n      previous = $ul.find('.active a').last()[0];\r\n\r\n      e = $.Event('show', {\r\n        relatedTarget: previous\r\n      });\r\n\r\n      $this.trigger(e);\r\n\r\n      if (e.isDefaultPrevented()) return;\r\n\r\n      $target = $(selector);\r\n\r\n      this.activate($this.parent('li'), $ul);\r\n      this.activate($target, $target.parent(), function () {\r\n        $this.trigger({\r\n          type: 'shown'\r\n        , relatedTarget: previous\r\n        })\r\n      })\r\n    }\r\n\r\n  , activate: function ( element, container, callback) {\r\n      var $active = container.find('> .active')\r\n        , transition = callback\r\n            && $.support.transition\r\n            && $active.hasClass('fade');\r\n\r\n      function next() {\r\n        $active\r\n          .removeClass('active')\r\n          .find('> .dropdown-menu > .active')\r\n          .removeClass('active');\r\n\r\n        element.addClass('active');\r\n\r\n        if (transition) {\r\n          element[0].offsetWidth; // reflow for transition\r\n          element.addClass('in');\r\n        } else {\r\n          element.removeClass('fade')\r\n        }\r\n\r\n        if ( element.parent('.dropdown-menu') ) {\r\n          element.closest('li.dropdown').addClass('active')\r\n        }\r\n\r\n        callback && callback()\r\n      }\r\n\r\n      transition ?\r\n        $active.one($.support.transition.end, next) :\r\n        next();\r\n\r\n      $active.removeClass('in')\r\n    }\r\n  };\r\n\r\n\r\n /* TAB PLUGIN DEFINITION\r\n  * ===================== */\r\n\r\n  $.fn.tab = function ( option ) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n        , data = $this.data('tab');\r\n      if (!data) $this.data('tab', (data = new Tab(this)));\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  };\r\n\r\n  $.fn.tab.Constructor = Tab;\r\n\r\n\r\n /* TAB DATA-API\r\n  * ============ */\r\n\r\n  $(function () {\r\n    $('body').on('click.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {\r\n      e.preventDefault();\r\n      $(this).tab('show')\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* =============================================================\r\n * bootstrap-collapse.js v2.0.4\r\n * http://twitter.github.com/bootstrap/javascript.html#collapse\r\n * =============================================================\r\n * Copyright 2012 Twitter, Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ============================================================ */\r\n\r\n\r\n!function ($) {\r\n\r\n  \"use strict\"; // jshint ;_;\r\n\r\n\r\n /* COLLAPSE PUBLIC CLASS DEFINITION\r\n  * ================================ */\r\n\r\n  var Collapse = function (element, options) {\r\n    this.$element = $(element);\r\n    this.options = $.extend({}, $.fn.collapse.defaults, options);\r\n\r\n    if (this.options.parent) {\r\n      this.$parent = $(this.options.parent)\r\n    }\r\n\r\n    this.options.toggle && this.toggle()\r\n  };\r\n\r\n  Collapse.prototype = {\r\n\r\n    constructor: Collapse\r\n\r\n  , dimension: function () {\r\n      var hasWidth = this.$element.hasClass('width');\r\n      return hasWidth ? 'width' : 'height'\r\n    }\r\n\r\n  , show: function () {\r\n      var dimension\r\n        , scroll\r\n        , actives\r\n        , hasData;\r\n\r\n      if (this.transitioning) return;\r\n\r\n      dimension = this.dimension();\r\n      scroll = $.camelCase(['scroll', dimension].join('-'));\r\n      actives = this.$parent && this.$parent.find('> .accordion-group > .in');\r\n\r\n      if (actives && actives.length) {\r\n        hasData = actives.data('collapse');\r\n        if (hasData && hasData.transitioning) return;\r\n        actives.collapse('hide');\r\n        hasData || actives.data('collapse', null)\r\n      }\r\n\r\n      this.$element[dimension](0);\r\n      this.transition('addClass', $.Event('show'), 'shown');\r\n      this.$element[dimension](this.$element[0][scroll]);\r\n    }\r\n\r\n  , hide: function () {\r\n      var dimension;\r\n      if (this.transitioning) return;\r\n      dimension = this.dimension();\r\n      this.reset(this.$element[dimension]());\r\n      this.transition('removeClass', $.Event('hide'), 'hidden');\r\n      this.$element[dimension](0)\r\n    }\r\n\r\n  , reset: function (size) {\r\n      var dimension = this.dimension();\r\n\r\n      this.$element\r\n        .removeClass('collapse')\r\n        [dimension](size || 'auto')\r\n        [0].offsetWidth;\r\n\r\n      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse');\r\n\r\n      return this\r\n    }\r\n\r\n  , transition: function (method, startEvent, completeEvent) {\r\n      var that = this\r\n        , complete = function () {\r\n            if (startEvent.type == 'show') that.reset();\r\n            that.transitioning = 0;\r\n            that.$element.trigger(completeEvent)\r\n          };\r\n\r\n      this.$element.trigger(startEvent);\r\n\r\n      if (startEvent.isDefaultPrevented()) return;\r\n\r\n      this.transitioning = 1;\r\n\r\n      this.$element[method]('in');\r\n\r\n      $.support.transition && this.$element.hasClass('collapse') ?\r\n        this.$element.one($.support.transition.end, complete) :\r\n        complete()\r\n    }\r\n\r\n  , toggle: function () {\r\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\r\n    }\r\n\r\n  };\r\n\r\n\r\n /* COLLAPSIBLE PLUGIN DEFINITION\r\n  * ============================== */\r\n\r\n  $.fn.collapse = function (option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n        , data = $this.data('collapse')\r\n        , options = typeof option == 'object' && option;\r\n      if (!data) $this.data('collapse', (data = new Collapse(this, options)));\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  };\r\n\r\n  $.fn.collapse.defaults = {\r\n    toggle: true\r\n  };\r\n\r\n  $.fn.collapse.Constructor = Collapse;\r\n\r\n\r\n /* COLLAPSIBLE DATA-API\r\n  * ==================== */\r\n\r\n  $(function () {\r\n    $('body').on('click.collapse.data-api', '[data-toggle=collapse]', function ( e ) {\r\n      var $this = $(this), href\r\n        , target = $this.attr('data-target')\r\n          || e.preventDefault()\r\n          || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') //strip for ie7\r\n        , option = $(target).data('collapse') ? 'toggle' : $this.data();\r\n      $(target).collapse(option);\r\n        $(this).toggleClass('active');\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n\r\n});","jquery/jquery.details.js":"/*! http://mths.be/details v0.0.6 by @mathias | includes http://mths.be/noselect v1.0.3 */\r\ndefine([\r\n    \"jquery\",\r\n    \"modernizr/modernizr.details\"\r\n], function($){\r\n\r\n    var proto = $.fn,\r\n        details,\r\n        // :'(\r\n        isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]',\r\n        // Feature test for native `<details>` support\r\n        isDetailsSupported = $('html').hasClass('details'),\r\n        toggleOpen = function($details, $detailsSummary, $detailsNotSummary, toggle) {\r\n            var isOpen = typeof $details.attr('open') == 'string',\r\n                close = isOpen && toggle || !isOpen && !toggle;\r\n            if (close) {\r\n                $details.removeClass('open').prop('open', false).triggerHandler('close.details');\r\n                $detailsSummary.attr('aria-expanded', false);\r\n                $detailsNotSummary.hide();\r\n            } else {\r\n                $details.addClass('open').prop('open', true).triggerHandler('open.details');\r\n                $detailsSummary.attr('aria-expanded', true);\r\n                $detailsNotSummary.show();\r\n            }\r\n        };\r\n\r\n    /* http://mths.be/noselect v1.0.3 */\r\n    proto.noSelect = function() {\r\n\r\n        // Since the string 'none' is used three times, storing it in a variable gives better results after minification\r\n        var none = 'none';\r\n\r\n        // onselectstart and ondragstart for WebKit & IE\r\n        // onmousedown for WebKit & Opera\r\n        return this.bind('selectstart dragstart mousedown', function() {\r\n            return false;\r\n        }).css({\r\n            'MozUserSelect': none,\r\n            'msUserSelect': none,\r\n            'webkitUserSelect': none,\r\n            'userSelect': none\r\n        });\r\n\r\n    };\r\n\r\n    // Execute the fallback only if there\u2019s no native `details` support\r\n    if (isDetailsSupported) {\r\n        details = proto.details = function() {\r\n\r\n            return this.each(function() {\r\n                var $details = $(this),\r\n                    $summary = $('summary', $details).first();\r\n                $summary.attr({\r\n                    'role': 'button',\r\n                    'aria-expanded': $details.prop('open')\r\n                }).on('click.xxx', function() {\r\n                    // the value of the `open` property is the old value\r\n                    var close = $details.prop('open');\r\n                    $summary.attr('aria-expanded', !close);\r\n                    $details.triggerHandler((close ? 'close' : 'open') + '.details');\r\n                });\r\n            });\r\n\r\n        };\r\n\r\n        details.support = isDetailsSupported;\r\n\r\n    } else {\r\n        details = proto.details = function() {\r\n\r\n            // Loop through all `details` elements\r\n            return this.each(function() {\r\n\r\n                // Store a reference to the current `details` element in a variable\r\n                var $details = $(this),\r\n                    // Store a reference to the `summary` element of the current `details` element (if any) in a variable\r\n                    $detailsSummary = $('summary', $details).first(),\r\n                    // Do the same for the info within the `details` element\r\n                    $detailsNotSummary = $details.children(':not(summary)'),\r\n                    // This will be used later to look for direct child text nodes\r\n                    $detailsNotSummaryContents = $details.contents(':not(summary)');\r\n\r\n                // If there is no `summary` in the current `details` element\u2026\r\n                if (!$detailsSummary.length) {\r\n                    // \u2026create one with default text\r\n                    $detailsSummary = $('<summary>').text($.mage.__('Details')).prependTo($details);\r\n                }\r\n\r\n                // Look for direct child text nodes\r\n                if ($detailsNotSummary.length != $detailsNotSummaryContents.length) {\r\n                    // Wrap child text nodes in a `span` element\r\n                    $detailsNotSummaryContents.filter(function() {\r\n                        // Only keep the node in the collection if it\u2019s a text node containing more than only whitespace\r\n                        // http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#space-character\r\n                        return this.nodeType == 3 && /[^ \\t\\n\\f\\r]/.test(this.data);\r\n                    }).wrap('<span>');\r\n                    // There are now no direct child text nodes anymore \u2014 they\u2019re wrapped in `span` elements\r\n                    $detailsNotSummary = $details.children(':not(summary)');\r\n                }\r\n\r\n                // Hide content unless there\u2019s an `open` attribute\r\n                toggleOpen($details, $detailsSummary, $detailsNotSummary);\r\n\r\n                // Add `role=button` and set the `tabindex` of the `summary` element to `0` to make it keyboard accessible\r\n                $detailsSummary.attr('role', 'button').noSelect().prop('tabIndex', 0).off('click').on('click.details', function() {\r\n                    // Focus on the `summary` element\r\n                    $detailsSummary.focus();\r\n                    // Toggle the `open` and `aria-expanded` attributes and the `open` property of the `details` element and display the additional info\r\n                    toggleOpen($details, $detailsSummary, $detailsNotSummary, true);\r\n                }).keyup(function(event) {\r\n                    if (32 == event.keyCode || (13 == event.keyCode && !isOpera)) {\r\n                        // Space or Enter is pressed \u2014 trigger the `click` event on the `summary` element\r\n                        // Opera already seems to trigger the `click` event when Enter is pressed\r\n                        event.preventDefault();\r\n                        $detailsSummary.click();\r\n                    }\r\n                });\r\n\r\n            });\r\n\r\n        };\r\n\r\n        details.support = isDetailsSupported;\r\n\r\n    }\r\n\r\n});\r\n","jquery/jquery.validate.js":"/**\r\n * jQuery Validation Plugin @VERSION\r\n *\r\n * http://bassistance.de/jquery-plugins/jquery-plugin-validation/\r\n * http://docs.jquery.com/Plugins/Validation\r\n *\r\n * Copyright (c) 2012 J\u00f6rn Zaefferer\r\n *\r\n * Dual licensed under the MIT and GPL licenses:\r\n *   http://www.opensource.org/licenses/mit-license.php\r\n *   http://www.gnu.org/licenses/gpl.html\r\n */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            \"jquery\",\r\n            \"jquery/jquery.metadata\"\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function (jQuery) {\r\n\r\n(function ($) {\r\n\r\n    $.extend($.fn, {\r\n        // http://docs.jquery.com/Plugins/Validation/validate\r\n        validate: function (options) {\r\n\r\n            // if nothing is selected, return nothing; can't chain anyway\r\n            if (!this.length) {\r\n                if (options && options.debug && window.console) {\r\n                    console.warn(\"nothing selected, can't validate, returning nothing\");\r\n                }\r\n                return;\r\n            }\r\n\r\n            // check if a validator for this form was already created\r\n            var validator = $.data(this[0], 'validator');\r\n            if (validator) {\r\n                return validator;\r\n            }\r\n\r\n            // Add novalidate tag if HTML5.\r\n            this.attr('novalidate', 'novalidate');\r\n\r\n            validator = new $.validator(options, this[0]);\r\n            $.data(this[0], 'validator', validator);\r\n\r\n            if (validator.settings.onsubmit) {\r\n\r\n                this.validateDelegate(\":submit\", \"click\", function (ev) {\r\n                    if (validator.settings.submitHandler) {\r\n                        validator.submitButton = ev.target;\r\n                    }\r\n                    // allow suppressing validation by adding a cancel class to the submit button\r\n                    if ($(ev.target).hasClass('cancel')) {\r\n                        validator.cancelSubmit = true;\r\n                    }\r\n                });\r\n\r\n                // validate the form on submit\r\n                this.submit(function (event) {\r\n                    if (validator.settings.debug) {\r\n                        // prevent form submit to be able to see console output\r\n                        event.preventDefault();\r\n                    }\r\n                    function handle() {\r\n                        var hidden;\r\n                        if (validator.settings.submitHandler) {\r\n                            if (validator.submitButton) {\r\n                                // insert a hidden input as a replacement for the missing submit button\r\n                                hidden = $(\"<input type='hidden'/>\").attr(\"name\", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);\r\n                            }\r\n                            validator.settings.submitHandler.call(validator, validator.currentForm, event);\r\n                            if (validator.submitButton) {\r\n                                // and clean up afterwards; thanks to no-block-scope, hidden can be referenced\r\n                                hidden.remove();\r\n                            }\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n\r\n                    // prevent submit for invalid forms or custom submit handlers\r\n                    if (validator.cancelSubmit) {\r\n                        validator.cancelSubmit = false;\r\n                        return handle();\r\n                    }\r\n                    if (validator.form()) {\r\n                        if (validator.pendingRequest) {\r\n                            validator.formSubmitted = true;\r\n                            return false;\r\n                        }\r\n                        return handle();\r\n                    } else {\r\n                        validator.focusInvalid();\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return validator;\r\n        },\r\n        // http://docs.jquery.com/Plugins/Validation/valid\r\n        valid: function () {\r\n            if ($(this[0]).is('form')) {\r\n                return this.validate().form();\r\n            } else {\r\n                var valid = true;\r\n                var validator = $(this[0].form).validate();\r\n                this.each(function () {\r\n                    valid &= validator.element(this);\r\n                });\r\n                return valid;\r\n            }\r\n        },\r\n        // attributes: space seperated list of attributes to retrieve and remove\r\n        removeAttrs: function (attributes) {\r\n            var result = {},\r\n                $element = this;\r\n            $.each(attributes.split(/\\s/), function (index, value) {\r\n                result[value] = $element.attr(value);\r\n                $element.removeAttr(value);\r\n            });\r\n            return result;\r\n        },\r\n        // http://docs.jquery.com/Plugins/Validation/rules\r\n        rules: function (command, argument) {\r\n            var element = this[0];\r\n\r\n            if (command) {\r\n                var settings = $.data(element.form, 'validator').settings;\r\n                var staticRules = settings.rules;\r\n                var existingRules = $.validator.staticRules(element);\r\n                switch (command) {\r\n                    case \"add\":\r\n                        $.extend(existingRules, $.validator.normalizeRule(argument));\r\n                        staticRules[element.name] = existingRules;\r\n                        if (argument.messages) {\r\n                            settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);\r\n                        }\r\n                        break;\r\n                    case \"remove\":\r\n                        if (!argument) {\r\n                            delete staticRules[element.name];\r\n                            return existingRules;\r\n                        }\r\n                        var filtered = {};\r\n                        $.each(argument.split(/\\s/), function (index, method) {\r\n                            filtered[method] = existingRules[method];\r\n                            delete existingRules[method];\r\n                        });\r\n                        return filtered;\r\n                }\r\n            }\r\n\r\n            var data = $.validator.normalizeRules(\r\n                $.extend(\r\n                    {},\r\n                    $.validator.metadataRules(element),\r\n                    $.validator.classRules(element),\r\n                    $.validator.attributeRules(element),\r\n                    $.validator.staticRules(element)\r\n                ), element);\r\n\r\n            // make sure required is at front\r\n            if (data.required) {\r\n                var param = data.required;\r\n                delete data.required;\r\n                data = $.extend({required: param}, data);\r\n            }\r\n\r\n            return data;\r\n        }\r\n    });\r\n\r\n// Custom selectors\r\n    $.extend($.expr[\":\"], {\r\n        // http://docs.jquery.com/Plugins/Validation/blank\r\n        blank: function (a) {\r\n            return !$.trim(\"\" + a.value);\r\n        },\r\n        // http://docs.jquery.com/Plugins/Validation/filled\r\n        filled: function (a) {\r\n            return !!$.trim(\"\" + a.value);\r\n        },\r\n        // http://docs.jquery.com/Plugins/Validation/unchecked\r\n        unchecked: function (a) {\r\n            return !a.checked;\r\n        }\r\n    });\r\n\r\n// constructor for validator\r\n    $.validator = function (options, form) {\r\n        this.settings = $.extend(true, {}, $.validator.defaults, options);\r\n        this.currentForm = form;\r\n        this.init();\r\n    };\r\n\r\n    $.validator.format = function (source, params) {\r\n        if (arguments.length === 1) {\r\n            return function () {\r\n                var args = $.makeArray(arguments);\r\n                args.unshift(source);\r\n                return $.validator.format.apply(this, args);\r\n            };\r\n        }\r\n        if (arguments.length > 2 && params.constructor !== Array) {\r\n            params = $.makeArray(arguments).slice(1);\r\n        }\r\n        if (params.constructor !== Array) {\r\n            params = [ params ];\r\n        }\r\n        $.each(params, function (i, n) {\r\n            source = source.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), n);\r\n        });\r\n        return source;\r\n    };\r\n\r\n    $.extend($.validator, {\r\n\r\n        defaults: {\r\n            messages: {},\r\n            groups: {},\r\n            rules: {},\r\n            errorClass: \"error\",\r\n            validClass: \"valid\",\r\n            errorElement: \"label\",\r\n            focusInvalid: true,\r\n            errorContainer: $([]),\r\n            errorLabelContainer: $([]),\r\n            onsubmit: true,\r\n            ignore: \":hidden\",\r\n            ignoreTitle: false,\r\n            onfocusin: function (element, event) {\r\n                this.lastActive = element;\r\n\r\n                // hide error label and remove error class on focus if enabled\r\n                if (this.settings.focusCleanup && !this.blockFocusCleanup) {\r\n                    if (this.settings.unhighlight) {\r\n                        this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);\r\n                    }\r\n                    this.addWrapper(this.errorsFor(element)).hide();\r\n                }\r\n            },\r\n            onfocusout: function (element, event) {\r\n                if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {\r\n                    this.element(element);\r\n                }\r\n            },\r\n            onkeyup: function (element, event) {\r\n                if (event.which == 9 && this.elementValue(element) === '') {\r\n                    return;\r\n                } else if (element.name in this.submitted || element === this.lastActive) {\r\n                    this.element(element);\r\n                }\r\n            },\r\n            onclick: function (element, event) {\r\n                // click on selects, radiobuttons and checkboxes\r\n                if (element.name in this.submitted) {\r\n                    this.element(element);\r\n                }\r\n                // or option elements, check parent select in that case\r\n                else if (element.parentNode.name in this.submitted) {\r\n                    this.element(element.parentNode);\r\n                }\r\n            },\r\n            highlight: function (element, errorClass, validClass) {\r\n                if (element.type === 'radio') {\r\n                    this.findByName(element.name).addClass(errorClass).removeClass(validClass);\r\n                } else {\r\n                    $(element).addClass(errorClass).removeClass(validClass);\r\n                }\r\n            },\r\n            unhighlight: function (element, errorClass, validClass) {\r\n                if (element.type === 'radio') {\r\n                    this.findByName(element.name).removeClass(errorClass).addClass(validClass);\r\n                } else {\r\n                    $(element).removeClass(errorClass).addClass(validClass);\r\n                }\r\n            }\r\n        },\r\n\r\n        // http://docs.jquery.com/Plugins/Validation/Validator/setDefaults\r\n        setDefaults: function (settings) {\r\n            $.extend($.validator.defaults, settings);\r\n        },\r\n\r\n        messages: {\r\n            required: \"This field is required.\",\r\n            remote: \"Please fix this field.\",\r\n            email: \"Please enter a valid email address.\",\r\n            url: \"Please enter a valid URL.\",\r\n            date: \"Please enter a valid date.\",\r\n            dateISO: \"Please enter a valid date (ISO).\",\r\n            number: \"Please enter a valid number.\",\r\n            digits: \"Please enter only digits.\",\r\n            creditcard: \"Please enter a valid credit card number.\",\r\n            equalTo: \"Please enter the same value again.\",\r\n            maxlength: $.validator.format(\"Please enter no more than {0} characters.\"),\r\n            minlength: $.validator.format(\"Please enter at least {0} characters.\"),\r\n            rangelength: $.validator.format(\"Please enter a value between {0} and {1} characters long.\"),\r\n            range: $.validator.format(\"Please enter a value between {0} and {1}.\"),\r\n            max: $.validator.format(\"Please enter a value less than or equal to {0}.\"),\r\n            min: $.validator.format(\"Please enter a value greater than or equal to {0}.\")\r\n        },\r\n\r\n        autoCreateRanges: false,\r\n\r\n        prototype: {\r\n\r\n            init: function () {\r\n                this.labelContainer = $(this.settings.errorLabelContainer);\r\n                this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);\r\n                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);\r\n                this.submitted = {};\r\n                this.valueCache = {};\r\n                this.pendingRequest = 0;\r\n                this.pending = {};\r\n                this.invalid = {};\r\n                this.reset();\r\n\r\n                var groups = (this.groups = {});\r\n                $.each(this.settings.groups, function (key, value) {\r\n                    $.each(value.split(/\\s/), function (index, name) {\r\n                        groups[name] = key;\r\n                    });\r\n                });\r\n                var rules = this.settings.rules;\r\n                $.each(rules, function (key, value) {\r\n                    rules[key] = $.validator.normalizeRule(value);\r\n                });\r\n\r\n                function delegate(event) {\r\n                    var validator = $.data(this[0].form, \"validator\"),\r\n                        eventType = \"on\" + event.type.replace(/^validate/, \"\");\r\n                    if (validator.settings[eventType]) {\r\n                        validator.settings[eventType].call(validator, this[0], event);\r\n                    }\r\n                }\r\n\r\n                $(this.currentForm)\r\n                    .validateDelegate(\":text, [type='password'], [type='file'], select, textarea, \" +\r\n                    \"[type='number'], [type='search'], input.search, [type='tel'], [type='url'], \" +\r\n                    \"[type='email'], [type='datetime'], [type='date'], [type='month'], \" +\r\n                    \"[type='week'], [type='time'], [type='datetime-local'], \" +\r\n                    \"[type='range'], [type='color'] \",\r\n                    \"focusin focusout keyup\", delegate)\r\n                    .validateDelegate(\"[type='radio'], [type='checkbox'], select, option\", \"click\", delegate);\r\n\r\n                if (this.settings.invalidHandler) {\r\n                    $(this.currentForm).bind(\"invalid-form.validate\", this.settings.invalidHandler);\r\n                }\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Validator/form\r\n            form: function () {\r\n                this.checkForm();\r\n                $.extend(this.submitted, this.errorMap);\r\n                this.invalid = $.extend({}, this.errorMap);\r\n                if (!this.valid()) {\r\n                    $(this.currentForm).triggerHandler(\"invalid-form\", [this]);\r\n                }\r\n                this.showErrors();\r\n                return this.valid();\r\n            },\r\n\r\n            checkForm: function () {\r\n                this.prepareForm();\r\n                for (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) {\r\n                    this.check(elements[i]);\r\n                }\r\n                return this.valid();\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Validator/element\r\n            element: function (element) {\r\n                element = this.validationTargetFor(this.clean(element));\r\n                this.lastElement = element;\r\n                this.prepareElement(element);\r\n                this.currentElements = $(element);\r\n                var result = this.check(element) !== false;\r\n                if (result) {\r\n                    delete this.invalid[element.name];\r\n                } else {\r\n                    this.invalid[element.name] = true;\r\n                }\r\n                if (!this.numberOfInvalids()) {\r\n                    // Hide error containers on last error\r\n                    this.toHide = this.toHide.add(this.containers);\r\n                }\r\n                this.showErrors();\r\n                return result;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Validator/showErrors\r\n            showErrors: function (errors) {\r\n                if (errors) {\r\n                    // add items to error list and map\r\n                    $.extend(this.errorMap, errors);\r\n                    this.errorList = [];\r\n                    for (var name in errors) {\r\n                        this.errorList.push({\r\n                            message: errors[name],\r\n                            element: this.findByName(name)[0]\r\n                        });\r\n                    }\r\n                    // remove items from success list\r\n                    this.successList = $.grep(this.successList, function (element) {\r\n                        return !(element.name in errors);\r\n                    });\r\n                }\r\n                if (this.settings.showErrors) {\r\n                    this.settings.showErrors.call(this, this.errorMap, this.errorList);\r\n                } else {\r\n                    this.defaultShowErrors();\r\n                }\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Validator/resetForm\r\n            resetForm: function () {\r\n                if ($.fn.resetForm) {\r\n                    $(this.currentForm).resetForm();\r\n                }\r\n                this.submitted = {};\r\n                this.lastElement = null;\r\n                this.prepareForm();\r\n                this.hideErrors();\r\n                this.elements().removeClass(this.settings.errorClass).removeData(\"previousValue\");\r\n            },\r\n\r\n            numberOfInvalids: function () {\r\n                return this.objectLength(this.invalid);\r\n            },\r\n\r\n            objectLength: function (obj) {\r\n                var count = 0;\r\n                for (var i in obj) {\r\n                    count++;\r\n                }\r\n                return count;\r\n            },\r\n\r\n            hideErrors: function () {\r\n                this.addWrapper(this.toHide).hide();\r\n            },\r\n\r\n            valid: function () {\r\n                return this.size() === 0;\r\n            },\r\n\r\n            size: function () {\r\n                return this.errorList.length;\r\n            },\r\n\r\n            focusInvalid: function () {\r\n                if (this.settings.focusInvalid) {\r\n                    try {\r\n                        $(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])\r\n                            .filter(\":visible\")\r\n                            .focus()\r\n                            // manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\r\n                            .trigger(\"focusin\");\r\n                    } catch (e) {\r\n                        // ignore IE throwing errors when focusing hidden elements\r\n                    }\r\n                }\r\n            },\r\n\r\n            findLastActive: function () {\r\n                var lastActive = this.lastActive;\r\n                return lastActive && $.grep(this.errorList,function (n) {\r\n                    return n.element.name === lastActive.name;\r\n                }).length === 1 && lastActive;\r\n            },\r\n\r\n            elements: function () {\r\n                var validator = this,\r\n                    rulesCache = {};\r\n\r\n                // select all valid inputs inside the form (no submit or reset buttons)\r\n                return $(this.currentForm)\r\n                    .find(\"input, select, textarea\")\r\n                    .not(\":submit, :reset, :image, [disabled]\")\r\n                    .not(this.settings.ignore)\r\n                    .filter(function () {\r\n                        if (!this.name && validator.settings.debug && window.console) {\r\n                            console.error(\"%o has no name assigned\", this);\r\n                        }\r\n\r\n                        // select only the first element for each name, and only those with rules specified\r\n                        if (this.name in rulesCache || !validator.objectLength($(this).rules())) {\r\n                            return false;\r\n                        }\r\n\r\n                        rulesCache[this.name] = true;\r\n                        return true;\r\n                    });\r\n            },\r\n\r\n            clean: function (selector) {\r\n                return $(selector)[0];\r\n            },\r\n\r\n            errors: function () {\r\n                var errorClass = this.settings.errorClass.replace(' ', '.');\r\n                return $(this.settings.errorElement + \".\" + errorClass, this.errorContext);\r\n            },\r\n\r\n            reset: function () {\r\n                this.successList = [];\r\n                this.errorList = [];\r\n                this.errorMap = {};\r\n                this.toShow = $([]);\r\n                this.toHide = $([]);\r\n                this.currentElements = $([]);\r\n            },\r\n\r\n            prepareForm: function () {\r\n                this.reset();\r\n                this.toHide = this.errors().add(this.containers);\r\n            },\r\n\r\n            prepareElement: function (element) {\r\n                this.reset();\r\n                this.toHide = this.errorsFor(element);\r\n            },\r\n\r\n            elementValue: function (element) {\r\n                var type = $(element).attr('type'),\r\n                    val = $(element).val();\r\n\r\n                if (type === 'radio' || type === 'checkbox') {\r\n                    return $('input[name=\"' + $(element).attr('name') + '\"]:checked').val();\r\n                }\r\n\r\n                if (typeof val === 'string') {\r\n                    return val.replace(/\\r/g, \"\");\r\n                }\r\n                return val;\r\n            },\r\n\r\n            check: function (element) {\r\n                element = this.validationTargetFor(this.clean(element));\r\n\r\n                var rules = $(element).rules();\r\n                var dependencyMismatch = false;\r\n                var val = this.elementValue(element);\r\n                var result;\r\n\r\n                for (var method in rules) {\r\n                    var rule = { method: method, parameters: rules[method] };\r\n                    try {\r\n\r\n                        result = $.validator.methods[method].call(this, val, element, rule.parameters);\r\n\r\n                        // if a method indicates that the field is optional and therefore valid,\r\n                        // don't mark it as valid when there are no other rules\r\n                        if (result === \"dependency-mismatch\") {\r\n                            dependencyMismatch = true;\r\n                            continue;\r\n                        }\r\n                        dependencyMismatch = false;\r\n\r\n                        if (result === \"pending\") {\r\n                            this.toHide = this.toHide.not(this.errorsFor(element));\r\n                            return;\r\n                        }\r\n\r\n                        if (!result) {\r\n                            this.formatAndAdd(element, rule);\r\n                            return false;\r\n                        }\r\n                    } catch (e) {\r\n                        if (this.settings.debug && window.console) {\r\n                            console.log(\"exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method\", e);\r\n                        }\r\n                        throw e;\r\n                    }\r\n                }\r\n                if (dependencyMismatch) {\r\n                    return;\r\n                }\r\n                if (this.objectLength(rules)) {\r\n                    this.successList.push(element);\r\n                }\r\n                return true;\r\n            },\r\n\r\n            // return the custom message for the given element and validation method\r\n            // specified in the element's \"messages\" metadata\r\n            customMetaMessage: function (element, method) {\r\n                if (!$.metadata) {\r\n                    return;\r\n                }\r\n                var meta = this.settings.meta ? $(element).metadata()[this.settings.meta] : $(element).metadata();\r\n                return meta && meta.messages && meta.messages[method];\r\n            },\r\n\r\n            // return the custom message for the given element and validation method\r\n            // specified in the element's HTML5 data attribute\r\n            customDataMessage: function (element, method) {\r\n                return $(element).data('msg-' + method.toLowerCase()) || (element.attributes && $(element).attr('data-msg-' + method.toLowerCase()));\r\n            },\r\n\r\n            // return the custom message for the given element name and validation method\r\n            customMessage: function (name, method) {\r\n                var m = this.settings.messages[name];\r\n                return m && (m.constructor === String ? m : m[method]);\r\n            },\r\n\r\n            // return the first defined argument, allowing empty strings\r\n            findDefined: function () {\r\n                for (var i = 0; i < arguments.length; i++) {\r\n                    if (arguments[i] !== undefined) {\r\n                        return arguments[i];\r\n                    }\r\n                }\r\n                return undefined;\r\n            },\r\n\r\n            defaultMessage: function (element, method) {\r\n                var noMessage = $.mage.__(\"Warning: No message defined for %s\");\r\n                return this.findDefined(\r\n                    this.customMessage(element.name, method),\r\n                    this.customDataMessage(element, method),\r\n                    this.customMetaMessage(element, method),\r\n                    // title is never undefined, so handle empty string as undefined\r\n                    !this.settings.ignoreTitle && element.title || undefined,\r\n                    $.validator.messages[method],\r\n                    \"<strong>\" + noMessage.replace('%s', element.name) + \"</strong>\"\r\n                );\r\n            },\r\n\r\n            formatAndAdd: function (element, rule) {\r\n                var message = this.defaultMessage(element, rule.method),\r\n                    theregex = /\\$?\\{(\\d+)\\}/g;\r\n                if (typeof message === \"function\") {\r\n                    message = message.call(this, rule.parameters, element);\r\n                } else if (theregex.test(message)) {\r\n                    message = $.validator.format(message.replace(theregex, '{$1}'), rule.parameters);\r\n                }\r\n                this.errorList.push({\r\n                    message: message,\r\n                    element: element\r\n                });\r\n\r\n                this.errorMap[element.name] = message;\r\n                this.submitted[element.name] = message;\r\n            },\r\n\r\n            addWrapper: function (toToggle) {\r\n                if (this.settings.wrapper) {\r\n                    toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));\r\n                }\r\n                return toToggle;\r\n            },\r\n\r\n            defaultShowErrors: function () {\r\n                var i, elements;\r\n                for (i = 0; this.errorList[i]; i++) {\r\n                    var error = this.errorList[i];\r\n                    if (this.settings.highlight) {\r\n                        this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);\r\n                    }\r\n                    this.showLabel(error.element, error.message);\r\n                }\r\n                if (this.errorList.length) {\r\n                    this.toShow = this.toShow.add(this.containers);\r\n                }\r\n                if (this.settings.success) {\r\n                    for (i = 0; this.successList[i]; i++) {\r\n                        this.showLabel(this.successList[i]);\r\n                    }\r\n                }\r\n                if (this.settings.unhighlight) {\r\n                    for (i = 0, elements = this.validElements(); elements[i]; i++) {\r\n                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);\r\n                    }\r\n                }\r\n                this.toHide = this.toHide.not(this.toShow);\r\n                this.hideErrors();\r\n                this.addWrapper(this.toShow).show();\r\n            },\r\n\r\n            validElements: function () {\r\n                return this.currentElements.not(this.invalidElements());\r\n            },\r\n\r\n            invalidElements: function () {\r\n                return $(this.errorList).map(function () {\r\n                    return this.element;\r\n                });\r\n            },\r\n\r\n            showLabel: function (element, message) {\r\n                var label = this.errorsFor(element);\r\n                if (label.length) {\r\n                    // refresh error/success class\r\n                    label.removeClass(this.settings.validClass).addClass(this.settings.errorClass);\r\n\r\n                    // check if we have a generated label, replace the message then\r\n                    if (label.attr(\"generated\")) {\r\n                        label.hide().html(message);\r\n                    }\r\n                } else {\r\n                    // create label\r\n                    label = $(\"<\" + this.settings.errorElement + \"/>\")\r\n                        .attr({\"for\": this.idOrName(element), generated: true})\r\n                        .addClass(this.settings.errorClass)\r\n                        .html(message || \"\");\r\n                    if (this.settings.wrapper) {\r\n                        // make sure the element is visible, even in IE\r\n                        // actually showing the wrapped element is handled elsewhere\r\n                        label = label.hide().show().wrap(\"<\" + this.settings.wrapper + \"/>\").parent();\r\n                    }\r\n                    if (!this.labelContainer.append(label).length) {\r\n                        if (this.settings.errorPlacement) {\r\n                            this.settings.errorPlacement(label, $(element));\r\n                        } else {\r\n                            label.insertAfter(element);\r\n                        }\r\n                    }\r\n                }\r\n                if (!message && this.settings.success) {\r\n                    label.text(\"\");\r\n                    if (typeof this.settings.success === \"string\") {\r\n                        label.addClass(this.settings.success);\r\n                    } else {\r\n                        this.settings.success(label, element);\r\n                    }\r\n                }\r\n                this.toShow = this.toShow.add(label);\r\n            },\r\n\r\n            errorsFor: function (element) {\r\n                var name = this.idOrName(element);\r\n                return this.errors().filter(function () {\r\n                    return $(this).attr('for') === name;\r\n                });\r\n            },\r\n\r\n            idOrName: function (element) {\r\n                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);\r\n            },\r\n\r\n            validationTargetFor: function (element) {\r\n                // if radio/checkbox, validate first element in group instead\r\n                if (this.checkable(element)) {\r\n                    element = this.findByName(element.name).not(this.settings.ignore)[0];\r\n                }\r\n                return element;\r\n            },\r\n\r\n            checkable: function (element) {\r\n                return (/radio|checkbox/i).test(element.type);\r\n            },\r\n\r\n            findByName: function (name) {\r\n                return $(this.currentForm).find('[name=\"' + name + '\"]');\r\n            },\r\n\r\n            getLength: function (value, element) {\r\n                switch (element.nodeName.toLowerCase()) {\r\n                    case 'select':\r\n                        return $(\"option:selected\", element).length;\r\n                    case 'input':\r\n                        if (this.checkable(element)) {\r\n                            return this.findByName(element.name).filter(':checked').length;\r\n                        }\r\n                }\r\n                return value.length;\r\n            },\r\n\r\n            depend: function (param, element) {\r\n                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;\r\n            },\r\n\r\n            dependTypes: {\r\n                \"boolean\": function (param, element) {\r\n                    return param;\r\n                },\r\n                \"string\": function (param, element) {\r\n                    return !!$(param, element.form).length;\r\n                },\r\n                \"function\": function (param, element) {\r\n                    return param(element);\r\n                }\r\n            },\r\n\r\n            optional: function (element) {\r\n                var val = this.elementValue(element);\r\n                return !$.validator.methods.required.call(this, val, element) && \"dependency-mismatch\";\r\n            },\r\n\r\n            startRequest: function (element) {\r\n                if (!this.pending[element.name]) {\r\n                    this.pendingRequest++;\r\n                    this.pending[element.name] = true;\r\n                }\r\n            },\r\n\r\n            stopRequest: function (element, valid) {\r\n                this.pendingRequest--;\r\n                // sometimes synchronization fails, make sure pendingRequest is never < 0\r\n                if (this.pendingRequest < 0) {\r\n                    this.pendingRequest = 0;\r\n                }\r\n                delete this.pending[element.name];\r\n                if (valid && this.pendingRequest === 0 && this.formSubmitted && this.form()) {\r\n                    $(this.currentForm).submit();\r\n                    this.formSubmitted = false;\r\n                } else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {\r\n                    $(this.currentForm).triggerHandler(\"invalid-form\", [this]);\r\n                    this.formSubmitted = false;\r\n                }\r\n            },\r\n\r\n            previousValue: function (element) {\r\n                return $.data(element, \"previousValue\") || $.data(element, \"previousValue\", {\r\n                    old: null,\r\n                    valid: true,\r\n                    message: this.defaultMessage(element, \"remote\")\r\n                });\r\n            }\r\n\r\n        },\r\n\r\n        classRuleSettings: {\r\n            required: {required: true},\r\n            email: {email: true},\r\n            url: {url: true},\r\n            date: {date: true},\r\n            dateISO: {dateISO: true},\r\n            number: {number: true},\r\n            digits: {digits: true},\r\n            creditcard: {creditcard: true}\r\n        },\r\n\r\n        addClassRules: function (className, rules) {\r\n            if (className.constructor === String) {\r\n                this.classRuleSettings[className] = rules;\r\n            } else {\r\n                $.extend(this.classRuleSettings, className);\r\n            }\r\n        },\r\n\r\n        classRules: function (element) {\r\n            var rules = {};\r\n            var classes = $(element).attr('class');\r\n            if (classes) {\r\n                $.each(classes.split(' '), function () {\r\n                    if (this in $.validator.classRuleSettings) {\r\n                        $.extend(rules, $.validator.classRuleSettings[this]);\r\n                    }\r\n                });\r\n            }\r\n            return rules;\r\n        },\r\n\r\n        attributeRules: function (element) {\r\n            var rules = {};\r\n            var $element = $(element);\r\n\r\n            for (var method in $.validator.methods) {\r\n                var value;\r\n\r\n                // support for <input required> in both html5 and older browsers\r\n                if (method === 'required') {\r\n                    value = $element.get(0).getAttribute(method);\r\n                    // Some browsers return an empty string for the required attribute\r\n                    // and non-HTML5 browsers might have required=\"\" markup\r\n                    if (value === \"\") {\r\n                        value = true;\r\n                    }\r\n                    // force non-HTML5 browsers to return bool\r\n                    value = !!value;\r\n                } else {\r\n                    value = $element.attr(method);\r\n                }\r\n\r\n                if (value) {\r\n                    rules[method] = value;\r\n                } else if ($element[0].getAttribute(\"type\") === method) {\r\n                    rules[method] = true;\r\n                }\r\n            }\r\n\r\n            // maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text inputs\r\n            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {\r\n                delete rules.maxlength;\r\n            }\r\n\r\n            return rules;\r\n        },\r\n\r\n        metadataRules: function (element) {\r\n            if (!$.metadata) {\r\n                return {};\r\n            }\r\n\r\n            var meta = $.data(element.form, 'validator').settings.meta;\r\n            return meta ?\r\n                $(element).metadata()[meta] :\r\n                $(element).metadata();\r\n        },\r\n\r\n        staticRules: function (element) {\r\n            var rules = {};\r\n            var validator = $.data(element.form, 'validator');\r\n            if (validator.settings.rules) {\r\n                rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};\r\n            }\r\n            return rules;\r\n        },\r\n\r\n        normalizeRules: function (rules, element) {\r\n            // handle dependency check\r\n            $.each(rules, function (prop, val) {\r\n                // ignore rule when param is explicitly false, eg. required:false\r\n                if (val === false) {\r\n                    delete rules[prop];\r\n                    return;\r\n                }\r\n                if (val.param || val.depends) {\r\n                    var keepRule = true;\r\n                    switch (typeof val.depends) {\r\n                        case \"string\":\r\n                            keepRule = !!$(val.depends, element.form).length;\r\n                            break;\r\n                        case \"function\":\r\n                            keepRule = val.depends.call(element, element);\r\n                            break;\r\n                    }\r\n                    if (keepRule) {\r\n                        rules[prop] = val.param !== undefined ? val.param : true;\r\n                    } else {\r\n                        delete rules[prop];\r\n                    }\r\n                }\r\n            });\r\n\r\n            // evaluate parameters\r\n            $.each(rules, function (rule, parameter) {\r\n                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;\r\n            });\r\n\r\n            // clean number parameters\r\n            $.each(['minlength', 'maxlength', 'min', 'max'], function () {\r\n                if (rules[this]) {\r\n                    rules[this] = Number(rules[this]);\r\n                }\r\n            });\r\n            $.each(['rangelength', 'range'], function () {\r\n                if (rules[this]) {\r\n                    rules[this] = [Number(rules[this][0]), Number(rules[this][1])];\r\n                }\r\n            });\r\n\r\n            if ($.validator.autoCreateRanges) {\r\n                // auto-create ranges\r\n                if (rules.min && rules.max) {\r\n                    rules.range = [rules.min, rules.max];\r\n                    delete rules.min;\r\n                    delete rules.max;\r\n                }\r\n                if (rules.minlength && rules.maxlength) {\r\n                    rules.rangelength = [rules.minlength, rules.maxlength];\r\n                    delete rules.minlength;\r\n                    delete rules.maxlength;\r\n                }\r\n            }\r\n\r\n            // To support custom messages in metadata ignore rule methods titled \"messages\"\r\n            if (rules.messages) {\r\n                delete rules.messages;\r\n            }\r\n\r\n            return rules;\r\n        },\r\n\r\n        // Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\r\n        normalizeRule: function (data) {\r\n            if (typeof data === \"string\") {\r\n                var transformed = {};\r\n                $.each(data.split(/\\s/), function () {\r\n                    transformed[this] = true;\r\n                });\r\n                data = transformed;\r\n            }\r\n            return data;\r\n        },\r\n\r\n        // http://docs.jquery.com/Plugins/Validation/Validator/addMethod\r\n        addMethod: function (name, method, message) {\r\n            $.validator.methods[name] = method;\r\n            $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\r\n            if (method.length < 3) {\r\n                $.validator.addClassRules(name, $.validator.normalizeRule(name));\r\n            }\r\n        },\r\n\r\n        methods: {\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/required\r\n            required: function (value, element, param) {\r\n                // check if dependency is met\r\n                if (!this.depend(param, element)) {\r\n                    return \"dependency-mismatch\";\r\n                }\r\n                if (element.nodeName.toLowerCase() === \"select\") {\r\n                    // could be an array for select-multiple or a string, both are fine this way\r\n                    var val = $(element).val();\r\n                    return val && val.length > 0;\r\n                }\r\n                if (this.checkable(element)) {\r\n                    return this.getLength(value, element) > 0;\r\n                }\r\n                return $.trim(value).length > 0;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/remote\r\n            remote: function (value, element, param) {\r\n                if (this.optional(element)) {\r\n                    return \"dependency-mismatch\";\r\n                }\r\n\r\n                var previous = this.previousValue(element);\r\n                if (!this.settings.messages[element.name]) {\r\n                    this.settings.messages[element.name] = {};\r\n                }\r\n                previous.originalMessage = this.settings.messages[element.name].remote;\r\n                this.settings.messages[element.name].remote = previous.message;\r\n\r\n                param = typeof param === \"string\" && {url: param} || param;\r\n\r\n                if (this.pending[element.name]) {\r\n                    return \"pending\";\r\n                }\r\n                if (previous.old === value) {\r\n                    return previous.valid;\r\n                }\r\n\r\n                previous.old = value;\r\n                var validator = this;\r\n                this.startRequest(element);\r\n                var data = {};\r\n                data[element.name] = value;\r\n                $.ajax($.extend(true, {\r\n                    url: param,\r\n                    mode: \"abort\",\r\n                    port: \"validate\" + element.name,\r\n                    dataType: \"json\",\r\n                    data: data,\r\n                    success: function (response) {\r\n                        validator.settings.messages[element.name].remote = previous.originalMessage;\r\n                        var valid = response === true || response === \"true\";\r\n                        if (valid) {\r\n                            var submitted = validator.formSubmitted;\r\n                            validator.prepareElement(element);\r\n                            validator.formSubmitted = submitted;\r\n                            validator.successList.push(element);\r\n                            delete validator.invalid[element.name];\r\n                            validator.showErrors();\r\n                        } else {\r\n                            var errors = {};\r\n                            var message = response || validator.defaultMessage(element, \"remote\");\r\n                            errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;\r\n                            validator.invalid[element.name] = true;\r\n                            validator.showErrors(errors);\r\n                        }\r\n                        previous.valid = valid;\r\n                        validator.stopRequest(element, valid);\r\n                    }\r\n                }, param));\r\n                return \"pending\";\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/minlength\r\n            minlength: function (value, element, param) {\r\n                var length = $.isArray(value) ? value.length : this.getLength($.trim(value), element);\r\n                return this.optional(element) || length >= param;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/maxlength\r\n            maxlength: function (value, element, param) {\r\n                var length = $.isArray(value) ? value.length : this.getLength($.trim(value), element);\r\n                return this.optional(element) || length <= param;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/rangelength\r\n            rangelength: function (value, element, param) {\r\n                var length = $.isArray(value) ? value.length : this.getLength($.trim(value), element);\r\n                return this.optional(element) || ( length >= param[0] && length <= param[1] );\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/min\r\n            min: function (value, element, param) {\r\n                return this.optional(element) || value >= param;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/max\r\n            max: function (value, element, param) {\r\n                return this.optional(element) || value <= param;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/range\r\n            range: function (value, element, param) {\r\n                return this.optional(element) || ( value >= param[0] && value <= param[1] );\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/email\r\n            email: function (value, element) {\r\n                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/\r\n                return this.optional(element) || /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i.test(value);\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/url\r\n            url: function (value, element) {\r\n                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/\r\n                return this.optional(element) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/date\r\n            date: function (value, element) {\r\n                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/dateISO\r\n            dateISO: function (value, element) {\r\n                return this.optional(element) || /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/.test(value);\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/number\r\n            number: function (value, element) {\r\n                return this.optional(element) || /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(value);\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/digits\r\n            digits: function (value, element) {\r\n                return this.optional(element) || /^\\d+$/.test(value);\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/creditcard\r\n            // based on http://en.wikipedia.org/wiki/Luhn\r\n            creditcard: function (value, element) {\r\n                if (this.optional(element)) {\r\n                    return \"dependency-mismatch\";\r\n                }\r\n                // accept only spaces, digits and dashes\r\n                if (/[^0-9 \\-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                var nCheck = 0,\r\n                    nDigit = 0,\r\n                    bEven = false;\r\n\r\n                value = value.replace(/\\D/g, \"\");\r\n\r\n                for (var n = value.length - 1; n >= 0; n--) {\r\n                    var cDigit = value.charAt(n);\r\n                    nDigit = parseInt(cDigit, 10);\r\n                    if (bEven) {\r\n                        if ((nDigit *= 2) > 9) {\r\n                            nDigit -= 9;\r\n                        }\r\n                    }\r\n                    nCheck += nDigit;\r\n                    bEven = !bEven;\r\n                }\r\n\r\n                return (nCheck % 10) === 0;\r\n            },\r\n\r\n            // http://docs.jquery.com/Plugins/Validation/Methods/equalTo\r\n            equalTo: function (value, element, param) {\r\n                // bind to the blur event of the target in order to revalidate whenever the target field is updated\r\n                // TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\r\n                var target = $(param);\r\n                if (this.settings.onfocusout) {\r\n                    target.unbind(\".validate-equalTo\").bind(\"blur.validate-equalTo\", function () {\r\n                        $(element).valid();\r\n                    });\r\n                }\r\n                return value === target.val();\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n// deprecated, use $.validator.format instead\r\n    $.format = $.validator.format;\r\n\r\n}(jQuery));\r\n\r\n// ajax mode: abort\r\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\r\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\r\n(function ($) {\r\n    var pendingRequests = {};\r\n    // Use a prefilter if available (1.5+)\r\n    if ($.ajaxPrefilter) {\r\n        $.ajaxPrefilter(function (settings, _, xhr) {\r\n            var port = settings.port;\r\n            if (settings.mode === \"abort\") {\r\n                if (pendingRequests[port]) {\r\n                    pendingRequests[port].abort();\r\n                }\r\n                pendingRequests[port] = xhr;\r\n            }\r\n        });\r\n    } else {\r\n        // Proxy ajax\r\n        var ajax = $.ajax;\r\n        $.ajax = function (settings) {\r\n            var mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\r\n                port = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\r\n            if (mode === \"abort\") {\r\n                if (pendingRequests[port]) {\r\n                    pendingRequests[port].abort();\r\n                }\r\n                return (pendingRequests[port] = ajax.apply(this, arguments));\r\n            }\r\n            return ajax.apply(this, arguments);\r\n        };\r\n    }\r\n}(jQuery));\r\n\r\n// provides cross-browser focusin and focusout events\r\n// IE has native support, in other browsers, use event caputuring (neither bubbles)\r\n\r\n// provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation\r\n// handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target\r\n(function ($) {\r\n    // only implement if not provided by jQuery core (since 1.4)\r\n    // TODO verify if jQuery 1.4's implementation is compatible with older jQuery special-event APIs\r\n    if (!jQuery.event.special.focusin && !jQuery.event.special.focusout && document.addEventListener) {\r\n        $.each({\r\n            focus: 'focusin',\r\n            blur: 'focusout'\r\n        }, function (original, fix) {\r\n            $.event.special[fix] = {\r\n                setup: function () {\r\n                    this.addEventListener(original, handler, true);\r\n                },\r\n                teardown: function () {\r\n                    this.removeEventListener(original, handler, true);\r\n                },\r\n                handler: function (e) {\r\n                    var args = arguments;\r\n                    args[0] = $.event.fix(e);\r\n                    args[0].type = fix;\r\n                    return $.event.handle.apply(this, args);\r\n                }\r\n            };\r\n            function handler(e) {\r\n                e = $.event.fix(e);\r\n                e.type = fix;\r\n                return $.event.handle.call(this, e);\r\n            }\r\n        });\r\n    }\r\n    $.extend($.fn, {\r\n        validateDelegate: function (delegate, type, handler) {\r\n            return this.bind(type, function (event) {\r\n                var target = $(event.target);\r\n                if (target.is(delegate)) {\r\n                    return handler.apply(target, arguments);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}(jQuery));\r\n\r\n}));"}
}});
